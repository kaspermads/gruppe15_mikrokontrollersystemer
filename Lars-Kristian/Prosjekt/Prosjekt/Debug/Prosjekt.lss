
Prosjekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00804000  00000dd8  00000e6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dd8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00804078  00804078  00000ee4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000f80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004f74  00000000  00000000  00001020  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000300e  00000000  00000000  00005f94  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ce  00000000  00000000  00008fa2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000238  00000000  00000000  00009670  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003ba3  00000000  00000000  000098a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000413  00000000  00000000  0000d44b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  0000d85e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  10:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  14:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  18:	0c 94 34 01 	jmp	0x268	; 0x268 <__vector_6>
  1c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  20:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  24:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  28:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  2c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  30:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  34:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  38:	0c 94 5f 01 	jmp	0x2be	; 0x2be <__vector_14>
  3c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__vector_15>
  40:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  44:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  48:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  4c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  50:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  54:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  58:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  5c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  60:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  64:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  68:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  6c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  70:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  74:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  78:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  7c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  80:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  84:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  88:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  8c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  90:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  94:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  98:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  9c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ac:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  bc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  cc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  dc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ec:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  f0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62

00000100 <__do_copy_data>:
 100:	10 e4       	ldi	r17, 0x40	; 64
 102:	a0 e0       	ldi	r26, 0x00	; 0
 104:	b0 e4       	ldi	r27, 0x40	; 64
 106:	e8 ed       	ldi	r30, 0xD8	; 216
 108:	fd e0       	ldi	r31, 0x0D	; 13
 10a:	00 e0       	ldi	r16, 0x00	; 0
 10c:	0b bf       	out	0x3b, r16	; 59
 10e:	02 c0       	rjmp	.+4      	; 0x114 <__do_copy_data+0x14>
 110:	07 90       	elpm	r0, Z+
 112:	0d 92       	st	X+, r0
 114:	a8 37       	cpi	r26, 0x78	; 120
 116:	b1 07       	cpc	r27, r17
 118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x10>

0000011a <__do_clear_bss>:
 11a:	20 e4       	ldi	r18, 0x40	; 64
 11c:	a8 e7       	ldi	r26, 0x78	; 120
 11e:	b0 e4       	ldi	r27, 0x40	; 64
 120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
 122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
 124:	a4 38       	cpi	r26, 0x84	; 132
 126:	b2 07       	cpc	r27, r18
 128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
 12a:	0e 94 47 02 	call	0x48e	; 0x48e <main>
 12e:	0c 94 ea 06 	jmp	0xdd4	; 0xdd4 <_exit>

00000132 <__bad_interrupt>:
 132:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000136 <USART3_printChar>:
	USART3.CTRLB |= USART_TXEN_bm;	// Aktiverer USART3-senderen i kontrollregister B med bitmasken til TX
}
void USART3_printChar(char c, FILE *stream)
{
	// Sjekker om bufferet er tomt før ny sending
	while (!(USART3.STATUS & USART_DREIF_bm))
 136:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
 13a:	95 ff       	sbrs	r25, 5
 13c:	fc cf       	rjmp	.-8      	; 0x136 <USART3_printChar>
	{
		;
	}
	USART3.TXDATAL = c;	// Sender en karakter
 13e:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
 142:	08 95       	ret

00000144 <TCA0_init>:


void TCA0_init(void)
{
	// PORTD pins for output PWM-signals.
	PORTD.DIRSET = PIN0_bm | PIN1_bm | PIN4_bm | PIN3_bm;
 144:	8b e1       	ldi	r24, 0x1B	; 27
 146:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x7e0461>
	
	//set waveform output on PORT D
	PORTMUX.TCAROUTEA = PORTMUX_TCA0_PORTD_gc;
 14a:	83 e0       	ldi	r24, 0x03	; 3
 14c:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
	
	// enable compare channel 0, 1 and set single-slope PWM mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_CMP0EN_bm | TCA_SINGLE_CMP1EN_bm | TCA_SINGLE_WGMODE_SINGLESLOPE_gc;
 150:	e0 e0       	ldi	r30, 0x00	; 0
 152:	fa e0       	ldi	r31, 0x0A	; 10
 154:	83 e3       	ldi	r24, 0x33	; 51
 156:	81 83       	std	Z+1, r24	; 0x01
	
	 // enable split mode
    TCA0.SPLIT.CTRLD = TCA_SPLIT_SPLITM_bm; 
 158:	91 e0       	ldi	r25, 0x01	; 1
 15a:	93 83       	std	Z+3, r25	; 0x03
	
	// enable compare channel 0 for the higher byte, enable compare channel 0 for the lower byte
	TCA0.SPLIT.CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_LCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm | TCA_SPLIT_LCMP1EN_bm;    
 15c:	81 83       	std	Z+1, r24	; 0x01
	
	
	// L0 = PIN0, L1=PIN1, H0=PIN3, H1=PIN4
	// set the PWM frequencies and duty cycles
    TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
 15e:	87 e2       	ldi	r24, 0x27	; 39
 160:	86 a3       	std	Z+38, r24	; 0x26
    TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MIN_VALUE;                           
 162:	10 a6       	std	Z+40, r1	; 0x28
    TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
 164:	87 a3       	std	Z+39, r24	; 0x27
    TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MIN_VALUE;
 166:	11 a6       	std	Z+41, r1	; 0x29
	
	//TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
    TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;                           
 168:	12 a6       	std	Z+42, r1	; 0x2a
    //TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
    TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MIN_VALUE; 
 16a:	13 a6       	std	Z+43, r1	; 0x2b
	
	TCA0.SPLIT.CTRLA = TCA_SPLIT_CLKSEL_DIV4_gc | TCA_SPLIT_ENABLE_bm;   // set clock source (sys_clk/4), and start timer         
 16c:	85 e0       	ldi	r24, 0x05	; 5
 16e:	80 83       	st	Z, r24
 170:	08 95       	ret

00000172 <TCB0_init>:
}


void TCB0_init(void)
{
	PORTB.DIR &= ~PIN4_bm;
 172:	e0 e2       	ldi	r30, 0x20	; 32
 174:	f4 e0       	ldi	r31, 0x04	; 4
 176:	80 81       	ld	r24, Z
 178:	8f 7e       	andi	r24, 0xEF	; 239
 17a:	80 83       	st	Z, r24
	PORTB.PIN4CTRL |= PORT_PULLUPEN_bm;
 17c:	84 89       	ldd	r24, Z+20	; 0x14
 17e:	88 60       	ori	r24, 0x08	; 8
 180:	84 8b       	std	Z+20, r24	; 0x14
	
	TCB0.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
 182:	e0 e0       	ldi	r30, 0x00	; 0
 184:	fb e0       	ldi	r31, 0x0B	; 11
 186:	85 e0       	ldi	r24, 0x05	; 5
 188:	80 83       	st	Z, r24
	TCB0.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
 18a:	84 e0       	ldi	r24, 0x04	; 4
 18c:	81 83       	std	Z+1, r24	; 0x01
	
	TCB0.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	85 83       	std	Z+5, r24	; 0x05
	
	TCB0.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm; // Capture event input enable
 192:	91 e4       	ldi	r25, 0x41	; 65
 194:	94 83       	std	Z+4, r25	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL0 = EVSYS_CHANNEL0_PORTB_PIN4_gc; //	input event channel 0, port b on pin 4
 196:	e0 e0       	ldi	r30, 0x00	; 0
 198:	f2 e0       	ldi	r31, 0x02	; 2
 19a:	9c e4       	ldi	r25, 0x4C	; 76
 19c:	90 8b       	std	Z+16, r25	; 0x10
	EVSYS.USERTCB0CAPT = EVSYS_USER_CHANNEL0_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
 19e:	86 af       	std	Z+62, r24	; 0x3e
 1a0:	08 95       	ret

000001a2 <TCB1_init>:
}


void TCB1_init(void)
{
	PORTB.DIR &= ~PIN5_bm;
 1a2:	e0 e2       	ldi	r30, 0x20	; 32
 1a4:	f4 e0       	ldi	r31, 0x04	; 4
 1a6:	80 81       	ld	r24, Z
 1a8:	8f 7d       	andi	r24, 0xDF	; 223
 1aa:	80 83       	st	Z, r24
	PORTB.PIN5CTRL |= PORT_PULLUPEN_bm;
 1ac:	85 89       	ldd	r24, Z+21	; 0x15
 1ae:	88 60       	ori	r24, 0x08	; 8
 1b0:	85 8b       	std	Z+21, r24	; 0x15
	
	
	TCB1.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
 1b2:	e0 e1       	ldi	r30, 0x10	; 16
 1b4:	fb e0       	ldi	r31, 0x0B	; 11
 1b6:	85 e0       	ldi	r24, 0x05	; 5
 1b8:	80 83       	st	Z, r24
	TCB1.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
 1ba:	84 e0       	ldi	r24, 0x04	; 4
 1bc:	81 83       	std	Z+1, r24	; 0x01
	
	TCB1.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	85 83       	std	Z+5, r24	; 0x05
	
	TCB1.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm ; // Capture event input enable
 1c2:	81 e4       	ldi	r24, 0x41	; 65
 1c4:	84 83       	std	Z+4, r24	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL1 = EVSYS_CHANNEL1_PORTB_PIN5_gc; //	input event channel 1, port b on pin 5
 1c6:	8d e4       	ldi	r24, 0x4D	; 77
 1c8:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <__TEXT_REGION_LENGTH__+0x7e0211>
	EVSYS.USERTCB1CAPT = EVSYS_USER_CHANNEL1_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
 1cc:	82 e0       	ldi	r24, 0x02	; 2
 1ce:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__TEXT_REGION_LENGTH__+0x7e0240>
 1d2:	08 95       	ret

000001d4 <ADC0_init>:
bool ADC0_conersionDone(void);

void ADC0_init(void)
{
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
 1d4:	e0 e6       	ldi	r30, 0x60	; 96
 1d6:	f4 e0       	ldi	r31, 0x04	; 4
 1d8:	86 89       	ldd	r24, Z+22	; 0x16
 1da:	88 7f       	andi	r24, 0xF8	; 248
 1dc:	86 8b       	std	Z+22, r24	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
 1de:	86 89       	ldd	r24, Z+22	; 0x16
 1e0:	84 60       	ori	r24, 0x04	; 4
 1e2:	86 8b       	std	Z+22, r24	; 0x16

	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
 1e4:	86 89       	ldd	r24, Z+22	; 0x16
 1e6:	87 7f       	andi	r24, 0xF7	; 247
 1e8:	86 8b       	std	Z+22, r24	; 0x16

	ADC0.CTRLC = ADC_PRESC_DIV4_gc; /* CLK_PER divided by 4 */
 1ea:	e0 e0       	ldi	r30, 0x00	; 0
 1ec:	f6 e0       	ldi	r31, 0x06	; 6
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	82 83       	std	Z+2, r24	; 0x02
	
	VREF.ADC0REF = VREF_REFSEL_VDD_gc ; /* VDD as reference */
 1f2:	85 e0       	ldi	r24, 0x05	; 5
 1f4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>

	ADC0.CTRLA = ADC_ENABLE_bm | ADC_RESSEL_10BIT_gc; /* 10-bit mode */
 1f8:	80 83       	st	Z, r24

	/* Select ADC channel */
	ADC0.MUXPOS = ADC_MUXPOS_AIN6_gc;
 1fa:	86 e0       	ldi	r24, 0x06	; 6
 1fc:	80 87       	std	Z+8, r24	; 0x08

	/* Enable FreeRun mode */
	ADC0.CTRLA |= ADC_FREERUN_bm;
 1fe:	80 81       	ld	r24, Z
 200:	82 60       	ori	r24, 0x02	; 2
 202:	80 83       	st	Z, r24
 204:	08 95       	ret

00000206 <ADC0_read>:
}
uint16_t ADC0_read(void)
{
	/* Clear the interrupt flag by writing 1: */
	ADC0.INTFLAGS = ADC_RESRDY_bm;
 206:	e0 e0       	ldi	r30, 0x00	; 0
 208:	f6 e0       	ldi	r31, 0x06	; 6
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	85 87       	std	Z+13, r24	; 0x0d

	return ADC0.RES;
 20e:	80 89       	ldd	r24, Z+16	; 0x10
 210:	91 89       	ldd	r25, Z+17	; 0x11
}
 212:	08 95       	ret

00000214 <ADC0_start>:
void ADC0_start(void)
{
	/* Start conversion */
	ADC0.COMMAND = ADC_STCONV_bm;
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
 21a:	08 95       	ret

0000021c <ADC0_conersionDone>:
}
bool ADC0_conersionDone(void)
{
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
 21c:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
}
 220:	81 70       	andi	r24, 0x01	; 1
 222:	08 95       	ret

00000224 <file_stream>:

void file_stream(void)
{
	// Lager en egendefinert output stream som skal håndteres av funksjonen USART3_printChar
	static FILE USART3_stream = FDEV_SETUP_STREAM(USART3_printChar, NULL, _FDEV_SETUP_WRITE);
	stdout = &USART3_stream;	// Erstatter standard output stream med den egen definerte
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	90 e4       	ldi	r25, 0x40	; 64
 228:	80 93 80 40 	sts	0x4080, r24	; 0x804080 <__iob+0x2>
 22c:	90 93 81 40 	sts	0x4081, r25	; 0x804081 <__iob+0x3>
 230:	08 95       	ret

00000232 <USART3_init>:
}

void USART3_init(void)
{
	// RX input and TX output
	PORTB.DIR &= ~PIN1_bm;
 232:	e0 e2       	ldi	r30, 0x20	; 32
 234:	f4 e0       	ldi	r31, 0x04	; 4
 236:	80 81       	ld	r24, Z
 238:	8d 7f       	andi	r24, 0xFD	; 253
 23a:	80 83       	st	Z, r24
	PORTB.DIR |= PIN0_bm;
 23c:	80 81       	ld	r24, Z
 23e:	81 60       	ori	r24, 0x01	; 1
 240:	80 83       	st	Z, r24

	USART3.BAUD = (uint16_t)USART3_BAUD_RATE(9600);	// Baud rate for USART3
 242:	e0 e6       	ldi	r30, 0x60	; 96
 244:	f8 e0       	ldi	r31, 0x08	; 8
 246:	83 e8       	ldi	r24, 0x83	; 131
 248:	96 e0       	ldi	r25, 0x06	; 6
 24a:	80 87       	std	Z+8, r24	; 0x08
 24c:	91 87       	std	Z+9, r25	; 0x09
	USART3.CTRLB |= USART_TXEN_bm;	// Aktiverer USART3-senderen i kontrollregister B med bitmasken til TX
 24e:	86 81       	ldd	r24, Z+6	; 0x06
 250:	80 64       	ori	r24, 0x40	; 64
 252:	86 83       	std	Z+6, r24	; 0x06
 254:	08 95       	ret

00000256 <RTC_init>:


void RTC_init(void)
{
	// Enables the source clock for the RTC counter
	RTC.CTRLA = RTC_RTCEN_bm | RTC_PRESCALER_DIV1_gc; // Enable RTC, select presaler
 256:	e0 e4       	ldi	r30, 0x40	; 64
 258:	f1 e0       	ldi	r31, 0x01	; 1
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	80 83       	st	Z, r24
	//RTC.INTCTRL = RTC_OVF_bm;
	RTC.CLKSEL = RTC_CLKSEL_OSC1K_gc; // Select source for the RTC clock
 25e:	87 83       	std	Z+7, r24	; 0x07
	
	// Enables the PIT (Periodic Interrupt Timer)
	RTC.PITCTRLA = RTC_PITEN_bm | RTC_PERIOD_CYC1024_gc; // Enable PIT and select number of clock cycles between interrupt
 260:	99 e4       	ldi	r25, 0x49	; 73
 262:	90 8b       	std	Z+16, r25	; 0x10
	RTC.PITINTCTRL = RTC_PI_bm;	// Enable interrupt
 264:	82 8b       	std	Z+18, r24	; 0x12
 266:	08 95       	ret

00000268 <__vector_6>:
}

// RTC interrupt
ISR(RTC_PIT_vect)
{
 268:	1f 92       	push	r1
 26a:	0f 92       	push	r0
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	0f 92       	push	r0
 270:	11 24       	eor	r1, r1
 272:	8f 93       	push	r24
 274:	9f 93       	push	r25
	
	counter ++;
 276:	80 91 7c 40 	lds	r24, 0x407C	; 0x80407c <counter>
 27a:	90 91 7d 40 	lds	r25, 0x407D	; 0x80407d <counter+0x1>
 27e:	01 96       	adiw	r24, 0x01	; 1
 280:	80 93 7c 40 	sts	0x407C, r24	; 0x80407c <counter>
 284:	90 93 7d 40 	sts	0x407D, r25	; 0x80407d <counter+0x1>
	
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x7e0153>
}
 28e:	9f 91       	pop	r25
 290:	8f 91       	pop	r24
 292:	0f 90       	pop	r0
 294:	0f be       	out	0x3f, r0	; 63
 296:	0f 90       	pop	r0
 298:	1f 90       	pop	r1
 29a:	18 95       	reti

0000029c <PWM_freq_to_RPM>:
	}
}

uint16_t PWM_freq_to_RPM(uint16_t PWM_onperiode)
{
	return ((F_CPU * 60)/(4 * 4 * PWM_onperiode));
 29c:	82 95       	swap	r24
 29e:	92 95       	swap	r25
 2a0:	90 7f       	andi	r25, 0xF0	; 240
 2a2:	98 27       	eor	r25, r24
 2a4:	80 7f       	andi	r24, 0xF0	; 240
 2a6:	98 27       	eor	r25, r24
 2a8:	9c 01       	movw	r18, r24
 2aa:	40 e0       	ldi	r20, 0x00	; 0
 2ac:	50 e0       	ldi	r21, 0x00	; 0
 2ae:	60 e0       	ldi	r22, 0x00	; 0
 2b0:	7c e1       	ldi	r23, 0x1C	; 28
 2b2:	8e e4       	ldi	r24, 0x4E	; 78
 2b4:	9e e0       	ldi	r25, 0x0E	; 14
 2b6:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__udivmodsi4>
}
 2ba:	c9 01       	movw	r24, r18
 2bc:	08 95       	ret

000002be <__vector_14>:
	
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
}
// TCB0 interrupt function
ISR(TCB0_INT_vect)
{
 2be:	1f 92       	push	r1
 2c0:	0f 92       	push	r0
 2c2:	0f b6       	in	r0, 0x3f	; 63
 2c4:	0f 92       	push	r0
 2c6:	11 24       	eor	r1, r1
 2c8:	0b b6       	in	r0, 0x3b	; 59
 2ca:	0f 92       	push	r0
 2cc:	2f 93       	push	r18
 2ce:	3f 93       	push	r19
 2d0:	4f 93       	push	r20
 2d2:	5f 93       	push	r21
 2d4:	6f 93       	push	r22
 2d6:	7f 93       	push	r23
 2d8:	8f 93       	push	r24
 2da:	9f 93       	push	r25
 2dc:	af 93       	push	r26
 2de:	bf 93       	push	r27
 2e0:	cf 93       	push	r28
 2e2:	df 93       	push	r29
 2e4:	ef 93       	push	r30
 2e6:	ff 93       	push	r31
	//TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	RPM_fan1= PWM_freq_to_RPM(TCB0.CCMP);
 2e8:	c0 e0       	ldi	r28, 0x00	; 0
 2ea:	db e0       	ldi	r29, 0x0B	; 11
 2ec:	8c 85       	ldd	r24, Y+12	; 0x0c
 2ee:	9d 85       	ldd	r25, Y+13	; 0x0d
 2f0:	0e 94 4e 01 	call	0x29c	; 0x29c <PWM_freq_to_RPM>
 2f4:	80 93 78 40 	sts	0x4078, r24	; 0x804078 <__data_end>
 2f8:	90 93 79 40 	sts	0x4079, r25	; 0x804079 <__data_end+0x1>
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	8e 83       	std	Y+6, r24	; 0x06
	
}
 300:	ff 91       	pop	r31
 302:	ef 91       	pop	r30
 304:	df 91       	pop	r29
 306:	cf 91       	pop	r28
 308:	bf 91       	pop	r27
 30a:	af 91       	pop	r26
 30c:	9f 91       	pop	r25
 30e:	8f 91       	pop	r24
 310:	7f 91       	pop	r23
 312:	6f 91       	pop	r22
 314:	5f 91       	pop	r21
 316:	4f 91       	pop	r20
 318:	3f 91       	pop	r19
 31a:	2f 91       	pop	r18
 31c:	0f 90       	pop	r0
 31e:	0b be       	out	0x3b, r0	; 59
 320:	0f 90       	pop	r0
 322:	0f be       	out	0x3f, r0	; 63
 324:	0f 90       	pop	r0
 326:	1f 90       	pop	r1
 328:	18 95       	reti

0000032a <__vector_15>:

ISR(TCB1_INT_vect)
{
 32a:	1f 92       	push	r1
 32c:	0f 92       	push	r0
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	0f 92       	push	r0
 332:	11 24       	eor	r1, r1
 334:	0b b6       	in	r0, 0x3b	; 59
 336:	0f 92       	push	r0
 338:	2f 93       	push	r18
 33a:	3f 93       	push	r19
 33c:	4f 93       	push	r20
 33e:	5f 93       	push	r21
 340:	6f 93       	push	r22
 342:	7f 93       	push	r23
 344:	8f 93       	push	r24
 346:	9f 93       	push	r25
 348:	af 93       	push	r26
 34a:	bf 93       	push	r27
 34c:	cf 93       	push	r28
 34e:	df 93       	push	r29
 350:	ef 93       	push	r30
 352:	ff 93       	push	r31
	//TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
	RPM_fan2= PWM_freq_to_RPM(TCB1.CCMP);
 354:	c0 e1       	ldi	r28, 0x10	; 16
 356:	db e0       	ldi	r29, 0x0B	; 11
 358:	8c 85       	ldd	r24, Y+12	; 0x0c
 35a:	9d 85       	ldd	r25, Y+13	; 0x0d
 35c:	0e 94 4e 01 	call	0x29c	; 0x29c <PWM_freq_to_RPM>
 360:	80 93 7a 40 	sts	0x407A, r24	; 0x80407a <RPM_fan2>
 364:	90 93 7b 40 	sts	0x407B, r25	; 0x80407b <RPM_fan2+0x1>
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	8e 83       	std	Y+6, r24	; 0x06
}
 36c:	ff 91       	pop	r31
 36e:	ef 91       	pop	r30
 370:	df 91       	pop	r29
 372:	cf 91       	pop	r28
 374:	bf 91       	pop	r27
 376:	af 91       	pop	r26
 378:	9f 91       	pop	r25
 37a:	8f 91       	pop	r24
 37c:	7f 91       	pop	r23
 37e:	6f 91       	pop	r22
 380:	5f 91       	pop	r21
 382:	4f 91       	pop	r20
 384:	3f 91       	pop	r19
 386:	2f 91       	pop	r18
 388:	0f 90       	pop	r0
 38a:	0b be       	out	0x3b, r0	; 59
 38c:	0f 90       	pop	r0
 38e:	0f be       	out	0x3f, r0	; 63
 390:	0f 90       	pop	r0
 392:	1f 90       	pop	r1
 394:	18 95       	reti

00000396 <values_for_tach>:
	return ((F_CPU * 60)/(4 * 4 * PWM_onperiode));
}

// Rewrite for multiple fans, with fannr, max fan speed as parameter and return average
void values_for_tach()
{
 396:	8f 92       	push	r8
 398:	9f 92       	push	r9
 39a:	af 92       	push	r10
 39c:	bf 92       	push	r11
 39e:	cf 92       	push	r12
 3a0:	df 92       	push	r13
 3a2:	ef 92       	push	r14
 3a4:	ff 92       	push	r15
 3a6:	cf 93       	push	r28
 3a8:	df 93       	push	r29
 3aa:	00 d0       	rcall	.+0      	; 0x3ac <values_for_tach+0x16>
 3ac:	cd b7       	in	r28, 0x3d	; 61
 3ae:	de b7       	in	r29, 0x3e	; 62
	// SETT DETTE I IF MED FLAGG
	
	// Set value to all fans
	TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MAX_VALUE;
 3b0:	e0 e0       	ldi	r30, 0x00	; 0
 3b2:	fa e0       	ldi	r31, 0x0A	; 10
 3b4:	87 e2       	ldi	r24, 0x27	; 39
 3b6:	80 a7       	std	Z+40, r24	; 0x28
	TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MAX_VALUE;
 3b8:	82 a7       	std	Z+42, r24	; 0x2a
	TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MAX_VALUE;
 3ba:	81 a7       	std	Z+41, r24	; 0x29
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
 3bc:	83 a7       	std	Z+43, r24	; 0x2b
	
	printf("Satt vifter! \r\n");
 3be:	8e e0       	ldi	r24, 0x0E	; 14
 3c0:	90 e4       	ldi	r25, 0x40	; 64
 3c2:	0e 94 06 04 	call	0x80c	; 0x80c <puts>
	
	uint32_t sum_RPM = 0;
	uint16_t average_read_value;
	uint32_t num_of_readings = 0;
	
	volatile uint16_t compare_counter_time = counter;
 3c6:	80 91 7c 40 	lds	r24, 0x407C	; 0x80407c <counter>
 3ca:	90 91 7d 40 	lds	r25, 0x407D	; 0x80407d <counter+0x1>
 3ce:	89 83       	std	Y+1, r24	; 0x01
 3d0:	9a 83       	std	Y+2, r25	; 0x02
	
	printf("Satt vifter! \r\n");
	
	uint32_t sum_RPM = 0;
	uint16_t average_read_value;
	uint32_t num_of_readings = 0;
 3d2:	81 2c       	mov	r8, r1
 3d4:	91 2c       	mov	r9, r1
 3d6:	54 01       	movw	r10, r8
	TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MAX_VALUE;
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
	
	printf("Satt vifter! \r\n");
	
	uint32_t sum_RPM = 0;
 3d8:	c1 2c       	mov	r12, r1
 3da:	d1 2c       	mov	r13, r1
 3dc:	76 01       	movw	r14, r12
	volatile uint16_t compare_counter_time = counter;
	
	while (1)
	{
		//sum_RPM += PWM_freq_to_RPM(TCB0.CCMP);
		sum_RPM += RPM_fan1;
 3de:	80 91 78 40 	lds	r24, 0x4078	; 0x804078 <__data_end>
 3e2:	90 91 79 40 	lds	r25, 0x4079	; 0x804079 <__data_end+0x1>
 3e6:	c8 0e       	add	r12, r24
 3e8:	d9 1e       	adc	r13, r25
 3ea:	e1 1c       	adc	r14, r1
 3ec:	f1 1c       	adc	r15, r1
		printf("PWM read: %d\r\n", RPM_fan1);
 3ee:	80 91 78 40 	lds	r24, 0x4078	; 0x804078 <__data_end>
 3f2:	90 91 79 40 	lds	r25, 0x4079	; 0x804079 <__data_end+0x1>
 3f6:	9f 93       	push	r25
 3f8:	8f 93       	push	r24
 3fa:	8d e1       	ldi	r24, 0x1D	; 29
 3fc:	90 e4       	ldi	r25, 0x40	; 64
 3fe:	9f 93       	push	r25
 400:	8f 93       	push	r24
 402:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <printf>
		num_of_readings ++;
 406:	8f ef       	ldi	r24, 0xFF	; 255
 408:	88 1a       	sub	r8, r24
 40a:	98 0a       	sbc	r9, r24
 40c:	a8 0a       	sbc	r10, r24
 40e:	b8 0a       	sbc	r11, r24
		
		if (counter - compare_counter_time >= 10)
 410:	80 91 7c 40 	lds	r24, 0x407C	; 0x80407c <counter>
 414:	90 91 7d 40 	lds	r25, 0x407D	; 0x80407d <counter+0x1>
 418:	29 81       	ldd	r18, Y+1	; 0x01
 41a:	3a 81       	ldd	r19, Y+2	; 0x02
 41c:	82 1b       	sub	r24, r18
 41e:	93 0b       	sbc	r25, r19
 420:	0f 90       	pop	r0
 422:	0f 90       	pop	r0
 424:	0f 90       	pop	r0
 426:	0f 90       	pop	r0
 428:	0a 97       	sbiw	r24, 0x0a	; 10
 42a:	c8 f2       	brcs	.-78     	; 0x3de <values_for_tach+0x48>
		{
			break;
		}
	}
		
	average_read_value = sum_RPM / num_of_readings;
 42c:	c7 01       	movw	r24, r14
 42e:	b6 01       	movw	r22, r12
 430:	a5 01       	movw	r20, r10
 432:	94 01       	movw	r18, r8
 434:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__udivmodsi4>
 438:	f2 2e       	mov	r15, r18
 43a:	e3 2e       	mov	r14, r19
	
	printf("Number of readings: %d\r\n", num_of_readings);
 43c:	bf 92       	push	r11
 43e:	af 92       	push	r10
 440:	9f 92       	push	r9
 442:	8f 92       	push	r8
 444:	8c e2       	ldi	r24, 0x2C	; 44
 446:	90 e4       	ldi	r25, 0x40	; 64
 448:	9f 93       	push	r25
 44a:	8f 93       	push	r24
 44c:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <printf>
	printf("Gjennomsnitt: %d\r\n", average_read_value);
 450:	ef 92       	push	r14
 452:	ff 92       	push	r15
 454:	85 e4       	ldi	r24, 0x45	; 69
 456:	90 e4       	ldi	r25, 0x40	; 64
 458:	9f 93       	push	r25
 45a:	8f 93       	push	r24
 45c:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <printf>
	
	printf("\r\n");
 460:	8b e1       	ldi	r24, 0x1B	; 27
 462:	90 e4       	ldi	r25, 0x40	; 64
 464:	0e 94 06 04 	call	0x80c	; 0x80c <puts>
	printf("\r\n");
 468:	8b e1       	ldi	r24, 0x1B	; 27
 46a:	90 e4       	ldi	r25, 0x40	; 64
 46c:	0e 94 06 04 	call	0x80c	; 0x80c <puts>

	// Maybe return a value
	
 470:	cd bf       	out	0x3d, r28	; 61
 472:	de bf       	out	0x3e, r29	; 62
 474:	0f 90       	pop	r0
 476:	0f 90       	pop	r0
 478:	df 91       	pop	r29
 47a:	cf 91       	pop	r28
 47c:	ff 90       	pop	r15
 47e:	ef 90       	pop	r14
 480:	df 90       	pop	r13
 482:	cf 90       	pop	r12
 484:	bf 90       	pop	r11
 486:	af 90       	pop	r10
 488:	9f 90       	pop	r9
 48a:	8f 90       	pop	r8
 48c:	08 95       	ret

0000048e <main>:
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
}

int main(void)
{
	file_stream();  // Create file stream for USART
 48e:	0e 94 12 01 	call	0x224	; 0x224 <file_stream>
	USART3_init();	// USART3 initialize
 492:	0e 94 19 01 	call	0x232	; 0x232 <USART3_init>
	
	// PWM initialize
	TCA0_init();
 496:	0e 94 a2 00 	call	0x144	; 0x144 <TCA0_init>
	TCB0_init();
 49a:	0e 94 b9 00 	call	0x172	; 0x172 <TCB0_init>
	TCB1_init();
 49e:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <TCB1_init>
	
	// ADC initialize
	ADC0_init();
 4a2:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <ADC0_init>
	ADC0_start();
 4a6:	0e 94 0a 01 	call	0x214	; 0x214 <ADC0_start>
	
	// RTC initialize
	RTC_init();
 4aa:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_init>
	
	sei(); // Enable Global Interrupts
 4ae:	78 94       	sei
	
	while (1)
	{
		if(counter == 20)
 4b0:	80 91 7c 40 	lds	r24, 0x407C	; 0x80407c <counter>
 4b4:	90 91 7d 40 	lds	r25, 0x407D	; 0x80407d <counter+0x1>
 4b8:	44 97       	sbiw	r24, 0x14	; 20
 4ba:	31 f4       	brne	.+12     	; 0x4c8 <main+0x3a>
		{
			values_for_tach();
 4bc:	0e 94 cb 01 	call	0x396	; 0x396 <values_for_tach>
			counter = 0;
 4c0:	10 92 7c 40 	sts	0x407C, r1	; 0x80407c <counter>
 4c4:	10 92 7d 40 	sts	0x407D, r1	; 0x80407d <counter+0x1>
		}
		if (ADC0_conersionDone())
 4c8:	0e 94 0e 01 	call	0x21c	; 0x21c <ADC0_conersionDone>
 4cc:	88 23       	and	r24, r24
 4ce:	81 f3       	breq	.-32     	; 0x4b0 <main+0x22>
		{
			// Read potentiometer
			uint16_t adc_value = ADC0_read();
 4d0:	0e 94 03 01 	call	0x206	; 0x206 <ADC0_read>
 4d4:	ec 01       	movw	r28, r24
			// Convert ADC-value to PWM signal
			uint16_t fanSpeed = ((39.0/1023.0)*adc_value);
 4d6:	bc 01       	movw	r22, r24
 4d8:	80 e0       	ldi	r24, 0x00	; 0
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__floatunsisf>
 4e0:	2a e0       	ldi	r18, 0x0A	; 10
 4e2:	37 e2       	ldi	r19, 0x27	; 39
 4e4:	4c e1       	ldi	r20, 0x1C	; 28
 4e6:	5d e3       	ldi	r21, 0x3D	; 61
 4e8:	0e 94 3b 03 	call	0x676	; 0x676 <__mulsf3>
 4ec:	0e 94 a6 02 	call	0x54c	; 0x54c <__fixunssfsi>
 4f0:	16 2f       	mov	r17, r22
 4f2:	07 2f       	mov	r16, r23
			printf("ADC Value: %d\r\n", adc_value);
 4f4:	df 93       	push	r29
 4f6:	cf 93       	push	r28
 4f8:	88 e5       	ldi	r24, 0x58	; 88
 4fa:	90 e4       	ldi	r25, 0x40	; 64
 4fc:	9f 93       	push	r25
 4fe:	8f 93       	push	r24
 500:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <printf>
			printf("Fan speed: %d\r\n", fanSpeed);
 504:	0f 93       	push	r16
 506:	1f 93       	push	r17
 508:	88 e6       	ldi	r24, 0x68	; 104
 50a:	90 e4       	ldi	r25, 0x40	; 64
 50c:	9f 93       	push	r25
 50e:	8f 93       	push	r24
 510:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <printf>
			printf("PWM read: %d\r\n", RPM_fan1);
 514:	80 91 78 40 	lds	r24, 0x4078	; 0x804078 <__data_end>
 518:	90 91 79 40 	lds	r25, 0x4079	; 0x804079 <__data_end+0x1>
 51c:	9f 93       	push	r25
 51e:	8f 93       	push	r24
 520:	8d e1       	ldi	r24, 0x1D	; 29
 522:	90 e4       	ldi	r25, 0x40	; 64
 524:	9f 93       	push	r25
 526:	8f 93       	push	r24
 528:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <printf>
			printf("\r\n");
 52c:	8b e1       	ldi	r24, 0x1B	; 27
 52e:	90 e4       	ldi	r25, 0x40	; 64
 530:	0e 94 06 04 	call	0x80c	; 0x80c <puts>
			printf("\r\n");
 534:	8b e1       	ldi	r24, 0x1B	; 27
 536:	90 e4       	ldi	r25, 0x40	; 64
 538:	0e 94 06 04 	call	0x80c	; 0x80c <puts>
			//TCA0.SINGLE.CMP0BUF = fanSpeed; // Controls width PWM-signal
			TCA0.SPLIT.LCMP0 = fanSpeed;
 53c:	10 93 28 0a 	sts	0x0A28, r17	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
 540:	8d b7       	in	r24, 0x3d	; 61
 542:	9e b7       	in	r25, 0x3e	; 62
 544:	0c 96       	adiw	r24, 0x0c	; 12
 546:	8d bf       	out	0x3d, r24	; 61
 548:	9e bf       	out	0x3e, r25	; 62
 54a:	b2 cf       	rjmp	.-156    	; 0x4b0 <main+0x22>

0000054c <__fixunssfsi>:
 54c:	0e 94 1a 03 	call	0x634	; 0x634 <__fp_splitA>
 550:	88 f0       	brcs	.+34     	; 0x574 <__fixunssfsi+0x28>
 552:	9f 57       	subi	r25, 0x7F	; 127
 554:	98 f0       	brcs	.+38     	; 0x57c <__fixunssfsi+0x30>
 556:	b9 2f       	mov	r27, r25
 558:	99 27       	eor	r25, r25
 55a:	b7 51       	subi	r27, 0x17	; 23
 55c:	b0 f0       	brcs	.+44     	; 0x58a <__fixunssfsi+0x3e>
 55e:	e1 f0       	breq	.+56     	; 0x598 <__fixunssfsi+0x4c>
 560:	66 0f       	add	r22, r22
 562:	77 1f       	adc	r23, r23
 564:	88 1f       	adc	r24, r24
 566:	99 1f       	adc	r25, r25
 568:	1a f0       	brmi	.+6      	; 0x570 <__fixunssfsi+0x24>
 56a:	ba 95       	dec	r27
 56c:	c9 f7       	brne	.-14     	; 0x560 <__fixunssfsi+0x14>
 56e:	14 c0       	rjmp	.+40     	; 0x598 <__fixunssfsi+0x4c>
 570:	b1 30       	cpi	r27, 0x01	; 1
 572:	91 f0       	breq	.+36     	; 0x598 <__fixunssfsi+0x4c>
 574:	0e 94 34 03 	call	0x668	; 0x668 <__fp_zero>
 578:	b1 e0       	ldi	r27, 0x01	; 1
 57a:	08 95       	ret
 57c:	0c 94 34 03 	jmp	0x668	; 0x668 <__fp_zero>
 580:	67 2f       	mov	r22, r23
 582:	78 2f       	mov	r23, r24
 584:	88 27       	eor	r24, r24
 586:	b8 5f       	subi	r27, 0xF8	; 248
 588:	39 f0       	breq	.+14     	; 0x598 <__fixunssfsi+0x4c>
 58a:	b9 3f       	cpi	r27, 0xF9	; 249
 58c:	cc f3       	brlt	.-14     	; 0x580 <__fixunssfsi+0x34>
 58e:	86 95       	lsr	r24
 590:	77 95       	ror	r23
 592:	67 95       	ror	r22
 594:	b3 95       	inc	r27
 596:	d9 f7       	brne	.-10     	; 0x58e <__fixunssfsi+0x42>
 598:	3e f4       	brtc	.+14     	; 0x5a8 <__fixunssfsi+0x5c>
 59a:	90 95       	com	r25
 59c:	80 95       	com	r24
 59e:	70 95       	com	r23
 5a0:	61 95       	neg	r22
 5a2:	7f 4f       	sbci	r23, 0xFF	; 255
 5a4:	8f 4f       	sbci	r24, 0xFF	; 255
 5a6:	9f 4f       	sbci	r25, 0xFF	; 255
 5a8:	08 95       	ret

000005aa <__floatunsisf>:
 5aa:	e8 94       	clt
 5ac:	09 c0       	rjmp	.+18     	; 0x5c0 <__floatsisf+0x12>

000005ae <__floatsisf>:
 5ae:	97 fb       	bst	r25, 7
 5b0:	3e f4       	brtc	.+14     	; 0x5c0 <__floatsisf+0x12>
 5b2:	90 95       	com	r25
 5b4:	80 95       	com	r24
 5b6:	70 95       	com	r23
 5b8:	61 95       	neg	r22
 5ba:	7f 4f       	sbci	r23, 0xFF	; 255
 5bc:	8f 4f       	sbci	r24, 0xFF	; 255
 5be:	9f 4f       	sbci	r25, 0xFF	; 255
 5c0:	99 23       	and	r25, r25
 5c2:	a9 f0       	breq	.+42     	; 0x5ee <__floatsisf+0x40>
 5c4:	f9 2f       	mov	r31, r25
 5c6:	96 e9       	ldi	r25, 0x96	; 150
 5c8:	bb 27       	eor	r27, r27
 5ca:	93 95       	inc	r25
 5cc:	f6 95       	lsr	r31
 5ce:	87 95       	ror	r24
 5d0:	77 95       	ror	r23
 5d2:	67 95       	ror	r22
 5d4:	b7 95       	ror	r27
 5d6:	f1 11       	cpse	r31, r1
 5d8:	f8 cf       	rjmp	.-16     	; 0x5ca <__floatsisf+0x1c>
 5da:	fa f4       	brpl	.+62     	; 0x61a <__floatsisf+0x6c>
 5dc:	bb 0f       	add	r27, r27
 5de:	11 f4       	brne	.+4      	; 0x5e4 <__floatsisf+0x36>
 5e0:	60 ff       	sbrs	r22, 0
 5e2:	1b c0       	rjmp	.+54     	; 0x61a <__floatsisf+0x6c>
 5e4:	6f 5f       	subi	r22, 0xFF	; 255
 5e6:	7f 4f       	sbci	r23, 0xFF	; 255
 5e8:	8f 4f       	sbci	r24, 0xFF	; 255
 5ea:	9f 4f       	sbci	r25, 0xFF	; 255
 5ec:	16 c0       	rjmp	.+44     	; 0x61a <__floatsisf+0x6c>
 5ee:	88 23       	and	r24, r24
 5f0:	11 f0       	breq	.+4      	; 0x5f6 <__floatsisf+0x48>
 5f2:	96 e9       	ldi	r25, 0x96	; 150
 5f4:	11 c0       	rjmp	.+34     	; 0x618 <__floatsisf+0x6a>
 5f6:	77 23       	and	r23, r23
 5f8:	21 f0       	breq	.+8      	; 0x602 <__floatsisf+0x54>
 5fa:	9e e8       	ldi	r25, 0x8E	; 142
 5fc:	87 2f       	mov	r24, r23
 5fe:	76 2f       	mov	r23, r22
 600:	05 c0       	rjmp	.+10     	; 0x60c <__floatsisf+0x5e>
 602:	66 23       	and	r22, r22
 604:	71 f0       	breq	.+28     	; 0x622 <__floatsisf+0x74>
 606:	96 e8       	ldi	r25, 0x86	; 134
 608:	86 2f       	mov	r24, r22
 60a:	70 e0       	ldi	r23, 0x00	; 0
 60c:	60 e0       	ldi	r22, 0x00	; 0
 60e:	2a f0       	brmi	.+10     	; 0x61a <__floatsisf+0x6c>
 610:	9a 95       	dec	r25
 612:	66 0f       	add	r22, r22
 614:	77 1f       	adc	r23, r23
 616:	88 1f       	adc	r24, r24
 618:	da f7       	brpl	.-10     	; 0x610 <__floatsisf+0x62>
 61a:	88 0f       	add	r24, r24
 61c:	96 95       	lsr	r25
 61e:	87 95       	ror	r24
 620:	97 f9       	bld	r25, 7
 622:	08 95       	ret

00000624 <__fp_split3>:
 624:	57 fd       	sbrc	r21, 7
 626:	90 58       	subi	r25, 0x80	; 128
 628:	44 0f       	add	r20, r20
 62a:	55 1f       	adc	r21, r21
 62c:	59 f0       	breq	.+22     	; 0x644 <__fp_splitA+0x10>
 62e:	5f 3f       	cpi	r21, 0xFF	; 255
 630:	71 f0       	breq	.+28     	; 0x64e <__fp_splitA+0x1a>
 632:	47 95       	ror	r20

00000634 <__fp_splitA>:
 634:	88 0f       	add	r24, r24
 636:	97 fb       	bst	r25, 7
 638:	99 1f       	adc	r25, r25
 63a:	61 f0       	breq	.+24     	; 0x654 <__fp_splitA+0x20>
 63c:	9f 3f       	cpi	r25, 0xFF	; 255
 63e:	79 f0       	breq	.+30     	; 0x65e <__fp_splitA+0x2a>
 640:	87 95       	ror	r24
 642:	08 95       	ret
 644:	12 16       	cp	r1, r18
 646:	13 06       	cpc	r1, r19
 648:	14 06       	cpc	r1, r20
 64a:	55 1f       	adc	r21, r21
 64c:	f2 cf       	rjmp	.-28     	; 0x632 <__fp_split3+0xe>
 64e:	46 95       	lsr	r20
 650:	f1 df       	rcall	.-30     	; 0x634 <__fp_splitA>
 652:	08 c0       	rjmp	.+16     	; 0x664 <__fp_splitA+0x30>
 654:	16 16       	cp	r1, r22
 656:	17 06       	cpc	r1, r23
 658:	18 06       	cpc	r1, r24
 65a:	99 1f       	adc	r25, r25
 65c:	f1 cf       	rjmp	.-30     	; 0x640 <__fp_splitA+0xc>
 65e:	86 95       	lsr	r24
 660:	71 05       	cpc	r23, r1
 662:	61 05       	cpc	r22, r1
 664:	08 94       	sec
 666:	08 95       	ret

00000668 <__fp_zero>:
 668:	e8 94       	clt

0000066a <__fp_szero>:
 66a:	bb 27       	eor	r27, r27
 66c:	66 27       	eor	r22, r22
 66e:	77 27       	eor	r23, r23
 670:	cb 01       	movw	r24, r22
 672:	97 f9       	bld	r25, 7
 674:	08 95       	ret

00000676 <__mulsf3>:
 676:	0e 94 4e 03 	call	0x69c	; 0x69c <__mulsf3x>
 67a:	0c 94 bf 03 	jmp	0x77e	; 0x77e <__fp_round>
 67e:	0e 94 b1 03 	call	0x762	; 0x762 <__fp_pscA>
 682:	38 f0       	brcs	.+14     	; 0x692 <__mulsf3+0x1c>
 684:	0e 94 b8 03 	call	0x770	; 0x770 <__fp_pscB>
 688:	20 f0       	brcs	.+8      	; 0x692 <__mulsf3+0x1c>
 68a:	95 23       	and	r25, r21
 68c:	11 f0       	breq	.+4      	; 0x692 <__mulsf3+0x1c>
 68e:	0c 94 a8 03 	jmp	0x750	; 0x750 <__fp_inf>
 692:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_nan>
 696:	11 24       	eor	r1, r1
 698:	0c 94 35 03 	jmp	0x66a	; 0x66a <__fp_szero>

0000069c <__mulsf3x>:
 69c:	0e 94 12 03 	call	0x624	; 0x624 <__fp_split3>
 6a0:	70 f3       	brcs	.-36     	; 0x67e <__mulsf3+0x8>

000006a2 <__mulsf3_pse>:
 6a2:	95 9f       	mul	r25, r21
 6a4:	c1 f3       	breq	.-16     	; 0x696 <__mulsf3+0x20>
 6a6:	95 0f       	add	r25, r21
 6a8:	50 e0       	ldi	r21, 0x00	; 0
 6aa:	55 1f       	adc	r21, r21
 6ac:	62 9f       	mul	r22, r18
 6ae:	f0 01       	movw	r30, r0
 6b0:	72 9f       	mul	r23, r18
 6b2:	bb 27       	eor	r27, r27
 6b4:	f0 0d       	add	r31, r0
 6b6:	b1 1d       	adc	r27, r1
 6b8:	63 9f       	mul	r22, r19
 6ba:	aa 27       	eor	r26, r26
 6bc:	f0 0d       	add	r31, r0
 6be:	b1 1d       	adc	r27, r1
 6c0:	aa 1f       	adc	r26, r26
 6c2:	64 9f       	mul	r22, r20
 6c4:	66 27       	eor	r22, r22
 6c6:	b0 0d       	add	r27, r0
 6c8:	a1 1d       	adc	r26, r1
 6ca:	66 1f       	adc	r22, r22
 6cc:	82 9f       	mul	r24, r18
 6ce:	22 27       	eor	r18, r18
 6d0:	b0 0d       	add	r27, r0
 6d2:	a1 1d       	adc	r26, r1
 6d4:	62 1f       	adc	r22, r18
 6d6:	73 9f       	mul	r23, r19
 6d8:	b0 0d       	add	r27, r0
 6da:	a1 1d       	adc	r26, r1
 6dc:	62 1f       	adc	r22, r18
 6de:	83 9f       	mul	r24, r19
 6e0:	a0 0d       	add	r26, r0
 6e2:	61 1d       	adc	r22, r1
 6e4:	22 1f       	adc	r18, r18
 6e6:	74 9f       	mul	r23, r20
 6e8:	33 27       	eor	r19, r19
 6ea:	a0 0d       	add	r26, r0
 6ec:	61 1d       	adc	r22, r1
 6ee:	23 1f       	adc	r18, r19
 6f0:	84 9f       	mul	r24, r20
 6f2:	60 0d       	add	r22, r0
 6f4:	21 1d       	adc	r18, r1
 6f6:	82 2f       	mov	r24, r18
 6f8:	76 2f       	mov	r23, r22
 6fa:	6a 2f       	mov	r22, r26
 6fc:	11 24       	eor	r1, r1
 6fe:	9f 57       	subi	r25, 0x7F	; 127
 700:	50 40       	sbci	r21, 0x00	; 0
 702:	9a f0       	brmi	.+38     	; 0x72a <__mulsf3_pse+0x88>
 704:	f1 f0       	breq	.+60     	; 0x742 <__mulsf3_pse+0xa0>
 706:	88 23       	and	r24, r24
 708:	4a f0       	brmi	.+18     	; 0x71c <__mulsf3_pse+0x7a>
 70a:	ee 0f       	add	r30, r30
 70c:	ff 1f       	adc	r31, r31
 70e:	bb 1f       	adc	r27, r27
 710:	66 1f       	adc	r22, r22
 712:	77 1f       	adc	r23, r23
 714:	88 1f       	adc	r24, r24
 716:	91 50       	subi	r25, 0x01	; 1
 718:	50 40       	sbci	r21, 0x00	; 0
 71a:	a9 f7       	brne	.-22     	; 0x706 <__mulsf3_pse+0x64>
 71c:	9e 3f       	cpi	r25, 0xFE	; 254
 71e:	51 05       	cpc	r21, r1
 720:	80 f0       	brcs	.+32     	; 0x742 <__mulsf3_pse+0xa0>
 722:	0c 94 a8 03 	jmp	0x750	; 0x750 <__fp_inf>
 726:	0c 94 35 03 	jmp	0x66a	; 0x66a <__fp_szero>
 72a:	5f 3f       	cpi	r21, 0xFF	; 255
 72c:	e4 f3       	brlt	.-8      	; 0x726 <__mulsf3_pse+0x84>
 72e:	98 3e       	cpi	r25, 0xE8	; 232
 730:	d4 f3       	brlt	.-12     	; 0x726 <__mulsf3_pse+0x84>
 732:	86 95       	lsr	r24
 734:	77 95       	ror	r23
 736:	67 95       	ror	r22
 738:	b7 95       	ror	r27
 73a:	f7 95       	ror	r31
 73c:	e7 95       	ror	r30
 73e:	9f 5f       	subi	r25, 0xFF	; 255
 740:	c1 f7       	brne	.-16     	; 0x732 <__mulsf3_pse+0x90>
 742:	fe 2b       	or	r31, r30
 744:	88 0f       	add	r24, r24
 746:	91 1d       	adc	r25, r1
 748:	96 95       	lsr	r25
 74a:	87 95       	ror	r24
 74c:	97 f9       	bld	r25, 7
 74e:	08 95       	ret

00000750 <__fp_inf>:
 750:	97 f9       	bld	r25, 7
 752:	9f 67       	ori	r25, 0x7F	; 127
 754:	80 e8       	ldi	r24, 0x80	; 128
 756:	70 e0       	ldi	r23, 0x00	; 0
 758:	60 e0       	ldi	r22, 0x00	; 0
 75a:	08 95       	ret

0000075c <__fp_nan>:
 75c:	9f ef       	ldi	r25, 0xFF	; 255
 75e:	80 ec       	ldi	r24, 0xC0	; 192
 760:	08 95       	ret

00000762 <__fp_pscA>:
 762:	00 24       	eor	r0, r0
 764:	0a 94       	dec	r0
 766:	16 16       	cp	r1, r22
 768:	17 06       	cpc	r1, r23
 76a:	18 06       	cpc	r1, r24
 76c:	09 06       	cpc	r0, r25
 76e:	08 95       	ret

00000770 <__fp_pscB>:
 770:	00 24       	eor	r0, r0
 772:	0a 94       	dec	r0
 774:	12 16       	cp	r1, r18
 776:	13 06       	cpc	r1, r19
 778:	14 06       	cpc	r1, r20
 77a:	05 06       	cpc	r0, r21
 77c:	08 95       	ret

0000077e <__fp_round>:
 77e:	09 2e       	mov	r0, r25
 780:	03 94       	inc	r0
 782:	00 0c       	add	r0, r0
 784:	11 f4       	brne	.+4      	; 0x78a <__fp_round+0xc>
 786:	88 23       	and	r24, r24
 788:	52 f0       	brmi	.+20     	; 0x79e <__fp_round+0x20>
 78a:	bb 0f       	add	r27, r27
 78c:	40 f4       	brcc	.+16     	; 0x79e <__fp_round+0x20>
 78e:	bf 2b       	or	r27, r31
 790:	11 f4       	brne	.+4      	; 0x796 <__fp_round+0x18>
 792:	60 ff       	sbrs	r22, 0
 794:	04 c0       	rjmp	.+8      	; 0x79e <__fp_round+0x20>
 796:	6f 5f       	subi	r22, 0xFF	; 255
 798:	7f 4f       	sbci	r23, 0xFF	; 255
 79a:	8f 4f       	sbci	r24, 0xFF	; 255
 79c:	9f 4f       	sbci	r25, 0xFF	; 255
 79e:	08 95       	ret

000007a0 <__udivmodsi4>:
 7a0:	a1 e2       	ldi	r26, 0x21	; 33
 7a2:	1a 2e       	mov	r1, r26
 7a4:	aa 1b       	sub	r26, r26
 7a6:	bb 1b       	sub	r27, r27
 7a8:	fd 01       	movw	r30, r26
 7aa:	0d c0       	rjmp	.+26     	; 0x7c6 <__udivmodsi4_ep>

000007ac <__udivmodsi4_loop>:
 7ac:	aa 1f       	adc	r26, r26
 7ae:	bb 1f       	adc	r27, r27
 7b0:	ee 1f       	adc	r30, r30
 7b2:	ff 1f       	adc	r31, r31
 7b4:	a2 17       	cp	r26, r18
 7b6:	b3 07       	cpc	r27, r19
 7b8:	e4 07       	cpc	r30, r20
 7ba:	f5 07       	cpc	r31, r21
 7bc:	20 f0       	brcs	.+8      	; 0x7c6 <__udivmodsi4_ep>
 7be:	a2 1b       	sub	r26, r18
 7c0:	b3 0b       	sbc	r27, r19
 7c2:	e4 0b       	sbc	r30, r20
 7c4:	f5 0b       	sbc	r31, r21

000007c6 <__udivmodsi4_ep>:
 7c6:	66 1f       	adc	r22, r22
 7c8:	77 1f       	adc	r23, r23
 7ca:	88 1f       	adc	r24, r24
 7cc:	99 1f       	adc	r25, r25
 7ce:	1a 94       	dec	r1
 7d0:	69 f7       	brne	.-38     	; 0x7ac <__udivmodsi4_loop>
 7d2:	60 95       	com	r22
 7d4:	70 95       	com	r23
 7d6:	80 95       	com	r24
 7d8:	90 95       	com	r25
 7da:	9b 01       	movw	r18, r22
 7dc:	ac 01       	movw	r20, r24
 7de:	bd 01       	movw	r22, r26
 7e0:	cf 01       	movw	r24, r30
 7e2:	08 95       	ret

000007e4 <printf>:
 7e4:	cf 93       	push	r28
 7e6:	df 93       	push	r29
 7e8:	cd b7       	in	r28, 0x3d	; 61
 7ea:	de b7       	in	r29, 0x3e	; 62
 7ec:	ae 01       	movw	r20, r28
 7ee:	4b 5f       	subi	r20, 0xFB	; 251
 7f0:	5f 4f       	sbci	r21, 0xFF	; 255
 7f2:	fa 01       	movw	r30, r20
 7f4:	61 91       	ld	r22, Z+
 7f6:	71 91       	ld	r23, Z+
 7f8:	af 01       	movw	r20, r30
 7fa:	80 91 80 40 	lds	r24, 0x4080	; 0x804080 <__iob+0x2>
 7fe:	90 91 81 40 	lds	r25, 0x4081	; 0x804081 <__iob+0x3>
 802:	0e 94 36 04 	call	0x86c	; 0x86c <vfprintf>
 806:	df 91       	pop	r29
 808:	cf 91       	pop	r28
 80a:	08 95       	ret

0000080c <puts>:
 80c:	0f 93       	push	r16
 80e:	1f 93       	push	r17
 810:	cf 93       	push	r28
 812:	df 93       	push	r29
 814:	e0 91 80 40 	lds	r30, 0x4080	; 0x804080 <__iob+0x2>
 818:	f0 91 81 40 	lds	r31, 0x4081	; 0x804081 <__iob+0x3>
 81c:	23 81       	ldd	r18, Z+3	; 0x03
 81e:	21 ff       	sbrs	r18, 1
 820:	1b c0       	rjmp	.+54     	; 0x858 <puts+0x4c>
 822:	8c 01       	movw	r16, r24
 824:	d0 e0       	ldi	r29, 0x00	; 0
 826:	c0 e0       	ldi	r28, 0x00	; 0
 828:	f8 01       	movw	r30, r16
 82a:	81 91       	ld	r24, Z+
 82c:	8f 01       	movw	r16, r30
 82e:	60 91 80 40 	lds	r22, 0x4080	; 0x804080 <__iob+0x2>
 832:	70 91 81 40 	lds	r23, 0x4081	; 0x804081 <__iob+0x3>
 836:	db 01       	movw	r26, r22
 838:	18 96       	adiw	r26, 0x08	; 8
 83a:	ed 91       	ld	r30, X+
 83c:	fc 91       	ld	r31, X
 83e:	19 97       	sbiw	r26, 0x09	; 9
 840:	88 23       	and	r24, r24
 842:	31 f0       	breq	.+12     	; 0x850 <puts+0x44>
 844:	09 95       	icall
 846:	89 2b       	or	r24, r25
 848:	79 f3       	breq	.-34     	; 0x828 <puts+0x1c>
 84a:	df ef       	ldi	r29, 0xFF	; 255
 84c:	cf ef       	ldi	r28, 0xFF	; 255
 84e:	ec cf       	rjmp	.-40     	; 0x828 <puts+0x1c>
 850:	8a e0       	ldi	r24, 0x0A	; 10
 852:	09 95       	icall
 854:	89 2b       	or	r24, r25
 856:	19 f0       	breq	.+6      	; 0x85e <puts+0x52>
 858:	8f ef       	ldi	r24, 0xFF	; 255
 85a:	9f ef       	ldi	r25, 0xFF	; 255
 85c:	02 c0       	rjmp	.+4      	; 0x862 <puts+0x56>
 85e:	8d 2f       	mov	r24, r29
 860:	9c 2f       	mov	r25, r28
 862:	df 91       	pop	r29
 864:	cf 91       	pop	r28
 866:	1f 91       	pop	r17
 868:	0f 91       	pop	r16
 86a:	08 95       	ret

0000086c <vfprintf>:
 86c:	2f 92       	push	r2
 86e:	3f 92       	push	r3
 870:	4f 92       	push	r4
 872:	5f 92       	push	r5
 874:	6f 92       	push	r6
 876:	7f 92       	push	r7
 878:	8f 92       	push	r8
 87a:	9f 92       	push	r9
 87c:	af 92       	push	r10
 87e:	bf 92       	push	r11
 880:	cf 92       	push	r12
 882:	df 92       	push	r13
 884:	ef 92       	push	r14
 886:	ff 92       	push	r15
 888:	0f 93       	push	r16
 88a:	1f 93       	push	r17
 88c:	cf 93       	push	r28
 88e:	df 93       	push	r29
 890:	cd b7       	in	r28, 0x3d	; 61
 892:	de b7       	in	r29, 0x3e	; 62
 894:	2b 97       	sbiw	r28, 0x0b	; 11
 896:	cd bf       	out	0x3d, r28	; 61
 898:	de bf       	out	0x3e, r29	; 62
 89a:	6c 01       	movw	r12, r24
 89c:	7b 01       	movw	r14, r22
 89e:	8a 01       	movw	r16, r20
 8a0:	fc 01       	movw	r30, r24
 8a2:	16 82       	std	Z+6, r1	; 0x06
 8a4:	17 82       	std	Z+7, r1	; 0x07
 8a6:	83 81       	ldd	r24, Z+3	; 0x03
 8a8:	81 ff       	sbrs	r24, 1
 8aa:	cc c1       	rjmp	.+920    	; 0xc44 <vfprintf+0x3d8>
 8ac:	ce 01       	movw	r24, r28
 8ae:	01 96       	adiw	r24, 0x01	; 1
 8b0:	3c 01       	movw	r6, r24
 8b2:	f6 01       	movw	r30, r12
 8b4:	93 81       	ldd	r25, Z+3	; 0x03
 8b6:	f7 01       	movw	r30, r14
 8b8:	93 fd       	sbrc	r25, 3
 8ba:	85 91       	lpm	r24, Z+
 8bc:	93 ff       	sbrs	r25, 3
 8be:	81 91       	ld	r24, Z+
 8c0:	7f 01       	movw	r14, r30
 8c2:	88 23       	and	r24, r24
 8c4:	09 f4       	brne	.+2      	; 0x8c8 <vfprintf+0x5c>
 8c6:	ba c1       	rjmp	.+884    	; 0xc3c <vfprintf+0x3d0>
 8c8:	85 32       	cpi	r24, 0x25	; 37
 8ca:	39 f4       	brne	.+14     	; 0x8da <vfprintf+0x6e>
 8cc:	93 fd       	sbrc	r25, 3
 8ce:	85 91       	lpm	r24, Z+
 8d0:	93 ff       	sbrs	r25, 3
 8d2:	81 91       	ld	r24, Z+
 8d4:	7f 01       	movw	r14, r30
 8d6:	85 32       	cpi	r24, 0x25	; 37
 8d8:	29 f4       	brne	.+10     	; 0x8e4 <vfprintf+0x78>
 8da:	b6 01       	movw	r22, r12
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	0e 94 50 06 	call	0xca0	; 0xca0 <fputc>
 8e2:	e7 cf       	rjmp	.-50     	; 0x8b2 <vfprintf+0x46>
 8e4:	91 2c       	mov	r9, r1
 8e6:	21 2c       	mov	r2, r1
 8e8:	31 2c       	mov	r3, r1
 8ea:	ff e1       	ldi	r31, 0x1F	; 31
 8ec:	f3 15       	cp	r31, r3
 8ee:	d8 f0       	brcs	.+54     	; 0x926 <vfprintf+0xba>
 8f0:	8b 32       	cpi	r24, 0x2B	; 43
 8f2:	79 f0       	breq	.+30     	; 0x912 <vfprintf+0xa6>
 8f4:	38 f4       	brcc	.+14     	; 0x904 <vfprintf+0x98>
 8f6:	80 32       	cpi	r24, 0x20	; 32
 8f8:	79 f0       	breq	.+30     	; 0x918 <vfprintf+0xac>
 8fa:	83 32       	cpi	r24, 0x23	; 35
 8fc:	a1 f4       	brne	.+40     	; 0x926 <vfprintf+0xba>
 8fe:	23 2d       	mov	r18, r3
 900:	20 61       	ori	r18, 0x10	; 16
 902:	1d c0       	rjmp	.+58     	; 0x93e <vfprintf+0xd2>
 904:	8d 32       	cpi	r24, 0x2D	; 45
 906:	61 f0       	breq	.+24     	; 0x920 <vfprintf+0xb4>
 908:	80 33       	cpi	r24, 0x30	; 48
 90a:	69 f4       	brne	.+26     	; 0x926 <vfprintf+0xba>
 90c:	23 2d       	mov	r18, r3
 90e:	21 60       	ori	r18, 0x01	; 1
 910:	16 c0       	rjmp	.+44     	; 0x93e <vfprintf+0xd2>
 912:	83 2d       	mov	r24, r3
 914:	82 60       	ori	r24, 0x02	; 2
 916:	38 2e       	mov	r3, r24
 918:	e3 2d       	mov	r30, r3
 91a:	e4 60       	ori	r30, 0x04	; 4
 91c:	3e 2e       	mov	r3, r30
 91e:	2a c0       	rjmp	.+84     	; 0x974 <vfprintf+0x108>
 920:	f3 2d       	mov	r31, r3
 922:	f8 60       	ori	r31, 0x08	; 8
 924:	1d c0       	rjmp	.+58     	; 0x960 <vfprintf+0xf4>
 926:	37 fc       	sbrc	r3, 7
 928:	2d c0       	rjmp	.+90     	; 0x984 <vfprintf+0x118>
 92a:	20 ed       	ldi	r18, 0xD0	; 208
 92c:	28 0f       	add	r18, r24
 92e:	2a 30       	cpi	r18, 0x0A	; 10
 930:	40 f0       	brcs	.+16     	; 0x942 <vfprintf+0xd6>
 932:	8e 32       	cpi	r24, 0x2E	; 46
 934:	b9 f4       	brne	.+46     	; 0x964 <vfprintf+0xf8>
 936:	36 fc       	sbrc	r3, 6
 938:	81 c1       	rjmp	.+770    	; 0xc3c <vfprintf+0x3d0>
 93a:	23 2d       	mov	r18, r3
 93c:	20 64       	ori	r18, 0x40	; 64
 93e:	32 2e       	mov	r3, r18
 940:	19 c0       	rjmp	.+50     	; 0x974 <vfprintf+0x108>
 942:	36 fe       	sbrs	r3, 6
 944:	06 c0       	rjmp	.+12     	; 0x952 <vfprintf+0xe6>
 946:	8a e0       	ldi	r24, 0x0A	; 10
 948:	98 9e       	mul	r9, r24
 94a:	20 0d       	add	r18, r0
 94c:	11 24       	eor	r1, r1
 94e:	92 2e       	mov	r9, r18
 950:	11 c0       	rjmp	.+34     	; 0x974 <vfprintf+0x108>
 952:	ea e0       	ldi	r30, 0x0A	; 10
 954:	2e 9e       	mul	r2, r30
 956:	20 0d       	add	r18, r0
 958:	11 24       	eor	r1, r1
 95a:	22 2e       	mov	r2, r18
 95c:	f3 2d       	mov	r31, r3
 95e:	f0 62       	ori	r31, 0x20	; 32
 960:	3f 2e       	mov	r3, r31
 962:	08 c0       	rjmp	.+16     	; 0x974 <vfprintf+0x108>
 964:	8c 36       	cpi	r24, 0x6C	; 108
 966:	21 f4       	brne	.+8      	; 0x970 <vfprintf+0x104>
 968:	83 2d       	mov	r24, r3
 96a:	80 68       	ori	r24, 0x80	; 128
 96c:	38 2e       	mov	r3, r24
 96e:	02 c0       	rjmp	.+4      	; 0x974 <vfprintf+0x108>
 970:	88 36       	cpi	r24, 0x68	; 104
 972:	41 f4       	brne	.+16     	; 0x984 <vfprintf+0x118>
 974:	f7 01       	movw	r30, r14
 976:	93 fd       	sbrc	r25, 3
 978:	85 91       	lpm	r24, Z+
 97a:	93 ff       	sbrs	r25, 3
 97c:	81 91       	ld	r24, Z+
 97e:	7f 01       	movw	r14, r30
 980:	81 11       	cpse	r24, r1
 982:	b3 cf       	rjmp	.-154    	; 0x8ea <vfprintf+0x7e>
 984:	98 2f       	mov	r25, r24
 986:	9f 7d       	andi	r25, 0xDF	; 223
 988:	95 54       	subi	r25, 0x45	; 69
 98a:	93 30       	cpi	r25, 0x03	; 3
 98c:	28 f4       	brcc	.+10     	; 0x998 <vfprintf+0x12c>
 98e:	0c 5f       	subi	r16, 0xFC	; 252
 990:	1f 4f       	sbci	r17, 0xFF	; 255
 992:	9f e3       	ldi	r25, 0x3F	; 63
 994:	99 83       	std	Y+1, r25	; 0x01
 996:	0d c0       	rjmp	.+26     	; 0x9b2 <vfprintf+0x146>
 998:	83 36       	cpi	r24, 0x63	; 99
 99a:	31 f0       	breq	.+12     	; 0x9a8 <vfprintf+0x13c>
 99c:	83 37       	cpi	r24, 0x73	; 115
 99e:	71 f0       	breq	.+28     	; 0x9bc <vfprintf+0x150>
 9a0:	83 35       	cpi	r24, 0x53	; 83
 9a2:	09 f0       	breq	.+2      	; 0x9a6 <vfprintf+0x13a>
 9a4:	59 c0       	rjmp	.+178    	; 0xa58 <vfprintf+0x1ec>
 9a6:	21 c0       	rjmp	.+66     	; 0x9ea <vfprintf+0x17e>
 9a8:	f8 01       	movw	r30, r16
 9aa:	80 81       	ld	r24, Z
 9ac:	89 83       	std	Y+1, r24	; 0x01
 9ae:	0e 5f       	subi	r16, 0xFE	; 254
 9b0:	1f 4f       	sbci	r17, 0xFF	; 255
 9b2:	88 24       	eor	r8, r8
 9b4:	83 94       	inc	r8
 9b6:	91 2c       	mov	r9, r1
 9b8:	53 01       	movw	r10, r6
 9ba:	13 c0       	rjmp	.+38     	; 0x9e2 <vfprintf+0x176>
 9bc:	28 01       	movw	r4, r16
 9be:	f2 e0       	ldi	r31, 0x02	; 2
 9c0:	4f 0e       	add	r4, r31
 9c2:	51 1c       	adc	r5, r1
 9c4:	f8 01       	movw	r30, r16
 9c6:	a0 80       	ld	r10, Z
 9c8:	b1 80       	ldd	r11, Z+1	; 0x01
 9ca:	36 fe       	sbrs	r3, 6
 9cc:	03 c0       	rjmp	.+6      	; 0x9d4 <vfprintf+0x168>
 9ce:	69 2d       	mov	r22, r9
 9d0:	70 e0       	ldi	r23, 0x00	; 0
 9d2:	02 c0       	rjmp	.+4      	; 0x9d8 <vfprintf+0x16c>
 9d4:	6f ef       	ldi	r22, 0xFF	; 255
 9d6:	7f ef       	ldi	r23, 0xFF	; 255
 9d8:	c5 01       	movw	r24, r10
 9da:	0e 94 45 06 	call	0xc8a	; 0xc8a <strnlen>
 9de:	4c 01       	movw	r8, r24
 9e0:	82 01       	movw	r16, r4
 9e2:	f3 2d       	mov	r31, r3
 9e4:	ff 77       	andi	r31, 0x7F	; 127
 9e6:	3f 2e       	mov	r3, r31
 9e8:	16 c0       	rjmp	.+44     	; 0xa16 <vfprintf+0x1aa>
 9ea:	28 01       	movw	r4, r16
 9ec:	22 e0       	ldi	r18, 0x02	; 2
 9ee:	42 0e       	add	r4, r18
 9f0:	51 1c       	adc	r5, r1
 9f2:	f8 01       	movw	r30, r16
 9f4:	a0 80       	ld	r10, Z
 9f6:	b1 80       	ldd	r11, Z+1	; 0x01
 9f8:	36 fe       	sbrs	r3, 6
 9fa:	03 c0       	rjmp	.+6      	; 0xa02 <vfprintf+0x196>
 9fc:	69 2d       	mov	r22, r9
 9fe:	70 e0       	ldi	r23, 0x00	; 0
 a00:	02 c0       	rjmp	.+4      	; 0xa06 <vfprintf+0x19a>
 a02:	6f ef       	ldi	r22, 0xFF	; 255
 a04:	7f ef       	ldi	r23, 0xFF	; 255
 a06:	c5 01       	movw	r24, r10
 a08:	0e 94 3a 06 	call	0xc74	; 0xc74 <strnlen_P>
 a0c:	4c 01       	movw	r8, r24
 a0e:	f3 2d       	mov	r31, r3
 a10:	f0 68       	ori	r31, 0x80	; 128
 a12:	3f 2e       	mov	r3, r31
 a14:	82 01       	movw	r16, r4
 a16:	33 fc       	sbrc	r3, 3
 a18:	1b c0       	rjmp	.+54     	; 0xa50 <vfprintf+0x1e4>
 a1a:	82 2d       	mov	r24, r2
 a1c:	90 e0       	ldi	r25, 0x00	; 0
 a1e:	88 16       	cp	r8, r24
 a20:	99 06       	cpc	r9, r25
 a22:	b0 f4       	brcc	.+44     	; 0xa50 <vfprintf+0x1e4>
 a24:	b6 01       	movw	r22, r12
 a26:	80 e2       	ldi	r24, 0x20	; 32
 a28:	90 e0       	ldi	r25, 0x00	; 0
 a2a:	0e 94 50 06 	call	0xca0	; 0xca0 <fputc>
 a2e:	2a 94       	dec	r2
 a30:	f4 cf       	rjmp	.-24     	; 0xa1a <vfprintf+0x1ae>
 a32:	f5 01       	movw	r30, r10
 a34:	37 fc       	sbrc	r3, 7
 a36:	85 91       	lpm	r24, Z+
 a38:	37 fe       	sbrs	r3, 7
 a3a:	81 91       	ld	r24, Z+
 a3c:	5f 01       	movw	r10, r30
 a3e:	b6 01       	movw	r22, r12
 a40:	90 e0       	ldi	r25, 0x00	; 0
 a42:	0e 94 50 06 	call	0xca0	; 0xca0 <fputc>
 a46:	21 10       	cpse	r2, r1
 a48:	2a 94       	dec	r2
 a4a:	21 e0       	ldi	r18, 0x01	; 1
 a4c:	82 1a       	sub	r8, r18
 a4e:	91 08       	sbc	r9, r1
 a50:	81 14       	cp	r8, r1
 a52:	91 04       	cpc	r9, r1
 a54:	71 f7       	brne	.-36     	; 0xa32 <vfprintf+0x1c6>
 a56:	e8 c0       	rjmp	.+464    	; 0xc28 <vfprintf+0x3bc>
 a58:	84 36       	cpi	r24, 0x64	; 100
 a5a:	11 f0       	breq	.+4      	; 0xa60 <vfprintf+0x1f4>
 a5c:	89 36       	cpi	r24, 0x69	; 105
 a5e:	41 f5       	brne	.+80     	; 0xab0 <vfprintf+0x244>
 a60:	f8 01       	movw	r30, r16
 a62:	37 fe       	sbrs	r3, 7
 a64:	07 c0       	rjmp	.+14     	; 0xa74 <vfprintf+0x208>
 a66:	60 81       	ld	r22, Z
 a68:	71 81       	ldd	r23, Z+1	; 0x01
 a6a:	82 81       	ldd	r24, Z+2	; 0x02
 a6c:	93 81       	ldd	r25, Z+3	; 0x03
 a6e:	0c 5f       	subi	r16, 0xFC	; 252
 a70:	1f 4f       	sbci	r17, 0xFF	; 255
 a72:	08 c0       	rjmp	.+16     	; 0xa84 <vfprintf+0x218>
 a74:	60 81       	ld	r22, Z
 a76:	71 81       	ldd	r23, Z+1	; 0x01
 a78:	07 2e       	mov	r0, r23
 a7a:	00 0c       	add	r0, r0
 a7c:	88 0b       	sbc	r24, r24
 a7e:	99 0b       	sbc	r25, r25
 a80:	0e 5f       	subi	r16, 0xFE	; 254
 a82:	1f 4f       	sbci	r17, 0xFF	; 255
 a84:	f3 2d       	mov	r31, r3
 a86:	ff 76       	andi	r31, 0x6F	; 111
 a88:	3f 2e       	mov	r3, r31
 a8a:	97 ff       	sbrs	r25, 7
 a8c:	09 c0       	rjmp	.+18     	; 0xaa0 <vfprintf+0x234>
 a8e:	90 95       	com	r25
 a90:	80 95       	com	r24
 a92:	70 95       	com	r23
 a94:	61 95       	neg	r22
 a96:	7f 4f       	sbci	r23, 0xFF	; 255
 a98:	8f 4f       	sbci	r24, 0xFF	; 255
 a9a:	9f 4f       	sbci	r25, 0xFF	; 255
 a9c:	f0 68       	ori	r31, 0x80	; 128
 a9e:	3f 2e       	mov	r3, r31
 aa0:	2a e0       	ldi	r18, 0x0A	; 10
 aa2:	30 e0       	ldi	r19, 0x00	; 0
 aa4:	a3 01       	movw	r20, r6
 aa6:	0e 94 8c 06 	call	0xd18	; 0xd18 <__ultoa_invert>
 aaa:	88 2e       	mov	r8, r24
 aac:	86 18       	sub	r8, r6
 aae:	45 c0       	rjmp	.+138    	; 0xb3a <vfprintf+0x2ce>
 ab0:	85 37       	cpi	r24, 0x75	; 117
 ab2:	31 f4       	brne	.+12     	; 0xac0 <vfprintf+0x254>
 ab4:	23 2d       	mov	r18, r3
 ab6:	2f 7e       	andi	r18, 0xEF	; 239
 ab8:	b2 2e       	mov	r11, r18
 aba:	2a e0       	ldi	r18, 0x0A	; 10
 abc:	30 e0       	ldi	r19, 0x00	; 0
 abe:	25 c0       	rjmp	.+74     	; 0xb0a <vfprintf+0x29e>
 ac0:	93 2d       	mov	r25, r3
 ac2:	99 7f       	andi	r25, 0xF9	; 249
 ac4:	b9 2e       	mov	r11, r25
 ac6:	8f 36       	cpi	r24, 0x6F	; 111
 ac8:	c1 f0       	breq	.+48     	; 0xafa <vfprintf+0x28e>
 aca:	18 f4       	brcc	.+6      	; 0xad2 <vfprintf+0x266>
 acc:	88 35       	cpi	r24, 0x58	; 88
 ace:	79 f0       	breq	.+30     	; 0xaee <vfprintf+0x282>
 ad0:	b5 c0       	rjmp	.+362    	; 0xc3c <vfprintf+0x3d0>
 ad2:	80 37       	cpi	r24, 0x70	; 112
 ad4:	19 f0       	breq	.+6      	; 0xadc <vfprintf+0x270>
 ad6:	88 37       	cpi	r24, 0x78	; 120
 ad8:	21 f0       	breq	.+8      	; 0xae2 <vfprintf+0x276>
 ada:	b0 c0       	rjmp	.+352    	; 0xc3c <vfprintf+0x3d0>
 adc:	e9 2f       	mov	r30, r25
 ade:	e0 61       	ori	r30, 0x10	; 16
 ae0:	be 2e       	mov	r11, r30
 ae2:	b4 fe       	sbrs	r11, 4
 ae4:	0d c0       	rjmp	.+26     	; 0xb00 <vfprintf+0x294>
 ae6:	fb 2d       	mov	r31, r11
 ae8:	f4 60       	ori	r31, 0x04	; 4
 aea:	bf 2e       	mov	r11, r31
 aec:	09 c0       	rjmp	.+18     	; 0xb00 <vfprintf+0x294>
 aee:	34 fe       	sbrs	r3, 4
 af0:	0a c0       	rjmp	.+20     	; 0xb06 <vfprintf+0x29a>
 af2:	29 2f       	mov	r18, r25
 af4:	26 60       	ori	r18, 0x06	; 6
 af6:	b2 2e       	mov	r11, r18
 af8:	06 c0       	rjmp	.+12     	; 0xb06 <vfprintf+0x29a>
 afa:	28 e0       	ldi	r18, 0x08	; 8
 afc:	30 e0       	ldi	r19, 0x00	; 0
 afe:	05 c0       	rjmp	.+10     	; 0xb0a <vfprintf+0x29e>
 b00:	20 e1       	ldi	r18, 0x10	; 16
 b02:	30 e0       	ldi	r19, 0x00	; 0
 b04:	02 c0       	rjmp	.+4      	; 0xb0a <vfprintf+0x29e>
 b06:	20 e1       	ldi	r18, 0x10	; 16
 b08:	32 e0       	ldi	r19, 0x02	; 2
 b0a:	f8 01       	movw	r30, r16
 b0c:	b7 fe       	sbrs	r11, 7
 b0e:	07 c0       	rjmp	.+14     	; 0xb1e <vfprintf+0x2b2>
 b10:	60 81       	ld	r22, Z
 b12:	71 81       	ldd	r23, Z+1	; 0x01
 b14:	82 81       	ldd	r24, Z+2	; 0x02
 b16:	93 81       	ldd	r25, Z+3	; 0x03
 b18:	0c 5f       	subi	r16, 0xFC	; 252
 b1a:	1f 4f       	sbci	r17, 0xFF	; 255
 b1c:	06 c0       	rjmp	.+12     	; 0xb2a <vfprintf+0x2be>
 b1e:	60 81       	ld	r22, Z
 b20:	71 81       	ldd	r23, Z+1	; 0x01
 b22:	80 e0       	ldi	r24, 0x00	; 0
 b24:	90 e0       	ldi	r25, 0x00	; 0
 b26:	0e 5f       	subi	r16, 0xFE	; 254
 b28:	1f 4f       	sbci	r17, 0xFF	; 255
 b2a:	a3 01       	movw	r20, r6
 b2c:	0e 94 8c 06 	call	0xd18	; 0xd18 <__ultoa_invert>
 b30:	88 2e       	mov	r8, r24
 b32:	86 18       	sub	r8, r6
 b34:	fb 2d       	mov	r31, r11
 b36:	ff 77       	andi	r31, 0x7F	; 127
 b38:	3f 2e       	mov	r3, r31
 b3a:	36 fe       	sbrs	r3, 6
 b3c:	0d c0       	rjmp	.+26     	; 0xb58 <vfprintf+0x2ec>
 b3e:	23 2d       	mov	r18, r3
 b40:	2e 7f       	andi	r18, 0xFE	; 254
 b42:	a2 2e       	mov	r10, r18
 b44:	89 14       	cp	r8, r9
 b46:	58 f4       	brcc	.+22     	; 0xb5e <vfprintf+0x2f2>
 b48:	34 fe       	sbrs	r3, 4
 b4a:	0b c0       	rjmp	.+22     	; 0xb62 <vfprintf+0x2f6>
 b4c:	32 fc       	sbrc	r3, 2
 b4e:	09 c0       	rjmp	.+18     	; 0xb62 <vfprintf+0x2f6>
 b50:	83 2d       	mov	r24, r3
 b52:	8e 7e       	andi	r24, 0xEE	; 238
 b54:	a8 2e       	mov	r10, r24
 b56:	05 c0       	rjmp	.+10     	; 0xb62 <vfprintf+0x2f6>
 b58:	b8 2c       	mov	r11, r8
 b5a:	a3 2c       	mov	r10, r3
 b5c:	03 c0       	rjmp	.+6      	; 0xb64 <vfprintf+0x2f8>
 b5e:	b8 2c       	mov	r11, r8
 b60:	01 c0       	rjmp	.+2      	; 0xb64 <vfprintf+0x2f8>
 b62:	b9 2c       	mov	r11, r9
 b64:	a4 fe       	sbrs	r10, 4
 b66:	0f c0       	rjmp	.+30     	; 0xb86 <vfprintf+0x31a>
 b68:	fe 01       	movw	r30, r28
 b6a:	e8 0d       	add	r30, r8
 b6c:	f1 1d       	adc	r31, r1
 b6e:	80 81       	ld	r24, Z
 b70:	80 33       	cpi	r24, 0x30	; 48
 b72:	21 f4       	brne	.+8      	; 0xb7c <vfprintf+0x310>
 b74:	9a 2d       	mov	r25, r10
 b76:	99 7e       	andi	r25, 0xE9	; 233
 b78:	a9 2e       	mov	r10, r25
 b7a:	09 c0       	rjmp	.+18     	; 0xb8e <vfprintf+0x322>
 b7c:	a2 fe       	sbrs	r10, 2
 b7e:	06 c0       	rjmp	.+12     	; 0xb8c <vfprintf+0x320>
 b80:	b3 94       	inc	r11
 b82:	b3 94       	inc	r11
 b84:	04 c0       	rjmp	.+8      	; 0xb8e <vfprintf+0x322>
 b86:	8a 2d       	mov	r24, r10
 b88:	86 78       	andi	r24, 0x86	; 134
 b8a:	09 f0       	breq	.+2      	; 0xb8e <vfprintf+0x322>
 b8c:	b3 94       	inc	r11
 b8e:	a3 fc       	sbrc	r10, 3
 b90:	11 c0       	rjmp	.+34     	; 0xbb4 <vfprintf+0x348>
 b92:	a0 fe       	sbrs	r10, 0
 b94:	06 c0       	rjmp	.+12     	; 0xba2 <vfprintf+0x336>
 b96:	b2 14       	cp	r11, r2
 b98:	88 f4       	brcc	.+34     	; 0xbbc <vfprintf+0x350>
 b9a:	28 0c       	add	r2, r8
 b9c:	92 2c       	mov	r9, r2
 b9e:	9b 18       	sub	r9, r11
 ba0:	0e c0       	rjmp	.+28     	; 0xbbe <vfprintf+0x352>
 ba2:	b2 14       	cp	r11, r2
 ba4:	60 f4       	brcc	.+24     	; 0xbbe <vfprintf+0x352>
 ba6:	b6 01       	movw	r22, r12
 ba8:	80 e2       	ldi	r24, 0x20	; 32
 baa:	90 e0       	ldi	r25, 0x00	; 0
 bac:	0e 94 50 06 	call	0xca0	; 0xca0 <fputc>
 bb0:	b3 94       	inc	r11
 bb2:	f7 cf       	rjmp	.-18     	; 0xba2 <vfprintf+0x336>
 bb4:	b2 14       	cp	r11, r2
 bb6:	18 f4       	brcc	.+6      	; 0xbbe <vfprintf+0x352>
 bb8:	2b 18       	sub	r2, r11
 bba:	02 c0       	rjmp	.+4      	; 0xbc0 <vfprintf+0x354>
 bbc:	98 2c       	mov	r9, r8
 bbe:	21 2c       	mov	r2, r1
 bc0:	a4 fe       	sbrs	r10, 4
 bc2:	10 c0       	rjmp	.+32     	; 0xbe4 <vfprintf+0x378>
 bc4:	b6 01       	movw	r22, r12
 bc6:	80 e3       	ldi	r24, 0x30	; 48
 bc8:	90 e0       	ldi	r25, 0x00	; 0
 bca:	0e 94 50 06 	call	0xca0	; 0xca0 <fputc>
 bce:	a2 fe       	sbrs	r10, 2
 bd0:	17 c0       	rjmp	.+46     	; 0xc00 <vfprintf+0x394>
 bd2:	a1 fc       	sbrc	r10, 1
 bd4:	03 c0       	rjmp	.+6      	; 0xbdc <vfprintf+0x370>
 bd6:	88 e7       	ldi	r24, 0x78	; 120
 bd8:	90 e0       	ldi	r25, 0x00	; 0
 bda:	02 c0       	rjmp	.+4      	; 0xbe0 <vfprintf+0x374>
 bdc:	88 e5       	ldi	r24, 0x58	; 88
 bde:	90 e0       	ldi	r25, 0x00	; 0
 be0:	b6 01       	movw	r22, r12
 be2:	0c c0       	rjmp	.+24     	; 0xbfc <vfprintf+0x390>
 be4:	8a 2d       	mov	r24, r10
 be6:	86 78       	andi	r24, 0x86	; 134
 be8:	59 f0       	breq	.+22     	; 0xc00 <vfprintf+0x394>
 bea:	a1 fe       	sbrs	r10, 1
 bec:	02 c0       	rjmp	.+4      	; 0xbf2 <vfprintf+0x386>
 bee:	8b e2       	ldi	r24, 0x2B	; 43
 bf0:	01 c0       	rjmp	.+2      	; 0xbf4 <vfprintf+0x388>
 bf2:	80 e2       	ldi	r24, 0x20	; 32
 bf4:	a7 fc       	sbrc	r10, 7
 bf6:	8d e2       	ldi	r24, 0x2D	; 45
 bf8:	b6 01       	movw	r22, r12
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	0e 94 50 06 	call	0xca0	; 0xca0 <fputc>
 c00:	89 14       	cp	r8, r9
 c02:	38 f4       	brcc	.+14     	; 0xc12 <vfprintf+0x3a6>
 c04:	b6 01       	movw	r22, r12
 c06:	80 e3       	ldi	r24, 0x30	; 48
 c08:	90 e0       	ldi	r25, 0x00	; 0
 c0a:	0e 94 50 06 	call	0xca0	; 0xca0 <fputc>
 c0e:	9a 94       	dec	r9
 c10:	f7 cf       	rjmp	.-18     	; 0xc00 <vfprintf+0x394>
 c12:	8a 94       	dec	r8
 c14:	f3 01       	movw	r30, r6
 c16:	e8 0d       	add	r30, r8
 c18:	f1 1d       	adc	r31, r1
 c1a:	80 81       	ld	r24, Z
 c1c:	b6 01       	movw	r22, r12
 c1e:	90 e0       	ldi	r25, 0x00	; 0
 c20:	0e 94 50 06 	call	0xca0	; 0xca0 <fputc>
 c24:	81 10       	cpse	r8, r1
 c26:	f5 cf       	rjmp	.-22     	; 0xc12 <vfprintf+0x3a6>
 c28:	22 20       	and	r2, r2
 c2a:	09 f4       	brne	.+2      	; 0xc2e <vfprintf+0x3c2>
 c2c:	42 ce       	rjmp	.-892    	; 0x8b2 <vfprintf+0x46>
 c2e:	b6 01       	movw	r22, r12
 c30:	80 e2       	ldi	r24, 0x20	; 32
 c32:	90 e0       	ldi	r25, 0x00	; 0
 c34:	0e 94 50 06 	call	0xca0	; 0xca0 <fputc>
 c38:	2a 94       	dec	r2
 c3a:	f6 cf       	rjmp	.-20     	; 0xc28 <vfprintf+0x3bc>
 c3c:	f6 01       	movw	r30, r12
 c3e:	86 81       	ldd	r24, Z+6	; 0x06
 c40:	97 81       	ldd	r25, Z+7	; 0x07
 c42:	02 c0       	rjmp	.+4      	; 0xc48 <vfprintf+0x3dc>
 c44:	8f ef       	ldi	r24, 0xFF	; 255
 c46:	9f ef       	ldi	r25, 0xFF	; 255
 c48:	2b 96       	adiw	r28, 0x0b	; 11
 c4a:	cd bf       	out	0x3d, r28	; 61
 c4c:	de bf       	out	0x3e, r29	; 62
 c4e:	df 91       	pop	r29
 c50:	cf 91       	pop	r28
 c52:	1f 91       	pop	r17
 c54:	0f 91       	pop	r16
 c56:	ff 90       	pop	r15
 c58:	ef 90       	pop	r14
 c5a:	df 90       	pop	r13
 c5c:	cf 90       	pop	r12
 c5e:	bf 90       	pop	r11
 c60:	af 90       	pop	r10
 c62:	9f 90       	pop	r9
 c64:	8f 90       	pop	r8
 c66:	7f 90       	pop	r7
 c68:	6f 90       	pop	r6
 c6a:	5f 90       	pop	r5
 c6c:	4f 90       	pop	r4
 c6e:	3f 90       	pop	r3
 c70:	2f 90       	pop	r2
 c72:	08 95       	ret

00000c74 <strnlen_P>:
 c74:	fc 01       	movw	r30, r24
 c76:	05 90       	lpm	r0, Z+
 c78:	61 50       	subi	r22, 0x01	; 1
 c7a:	70 40       	sbci	r23, 0x00	; 0
 c7c:	01 10       	cpse	r0, r1
 c7e:	d8 f7       	brcc	.-10     	; 0xc76 <strnlen_P+0x2>
 c80:	80 95       	com	r24
 c82:	90 95       	com	r25
 c84:	8e 0f       	add	r24, r30
 c86:	9f 1f       	adc	r25, r31
 c88:	08 95       	ret

00000c8a <strnlen>:
 c8a:	fc 01       	movw	r30, r24
 c8c:	61 50       	subi	r22, 0x01	; 1
 c8e:	70 40       	sbci	r23, 0x00	; 0
 c90:	01 90       	ld	r0, Z+
 c92:	01 10       	cpse	r0, r1
 c94:	d8 f7       	brcc	.-10     	; 0xc8c <strnlen+0x2>
 c96:	80 95       	com	r24
 c98:	90 95       	com	r25
 c9a:	8e 0f       	add	r24, r30
 c9c:	9f 1f       	adc	r25, r31
 c9e:	08 95       	ret

00000ca0 <fputc>:
 ca0:	0f 93       	push	r16
 ca2:	1f 93       	push	r17
 ca4:	cf 93       	push	r28
 ca6:	df 93       	push	r29
 ca8:	fb 01       	movw	r30, r22
 caa:	23 81       	ldd	r18, Z+3	; 0x03
 cac:	21 fd       	sbrc	r18, 1
 cae:	03 c0       	rjmp	.+6      	; 0xcb6 <fputc+0x16>
 cb0:	8f ef       	ldi	r24, 0xFF	; 255
 cb2:	9f ef       	ldi	r25, 0xFF	; 255
 cb4:	2c c0       	rjmp	.+88     	; 0xd0e <fputc+0x6e>
 cb6:	22 ff       	sbrs	r18, 2
 cb8:	16 c0       	rjmp	.+44     	; 0xce6 <fputc+0x46>
 cba:	46 81       	ldd	r20, Z+6	; 0x06
 cbc:	57 81       	ldd	r21, Z+7	; 0x07
 cbe:	24 81       	ldd	r18, Z+4	; 0x04
 cc0:	35 81       	ldd	r19, Z+5	; 0x05
 cc2:	42 17       	cp	r20, r18
 cc4:	53 07       	cpc	r21, r19
 cc6:	44 f4       	brge	.+16     	; 0xcd8 <fputc+0x38>
 cc8:	a0 81       	ld	r26, Z
 cca:	b1 81       	ldd	r27, Z+1	; 0x01
 ccc:	9d 01       	movw	r18, r26
 cce:	2f 5f       	subi	r18, 0xFF	; 255
 cd0:	3f 4f       	sbci	r19, 0xFF	; 255
 cd2:	20 83       	st	Z, r18
 cd4:	31 83       	std	Z+1, r19	; 0x01
 cd6:	8c 93       	st	X, r24
 cd8:	26 81       	ldd	r18, Z+6	; 0x06
 cda:	37 81       	ldd	r19, Z+7	; 0x07
 cdc:	2f 5f       	subi	r18, 0xFF	; 255
 cde:	3f 4f       	sbci	r19, 0xFF	; 255
 ce0:	26 83       	std	Z+6, r18	; 0x06
 ce2:	37 83       	std	Z+7, r19	; 0x07
 ce4:	14 c0       	rjmp	.+40     	; 0xd0e <fputc+0x6e>
 ce6:	8b 01       	movw	r16, r22
 ce8:	ec 01       	movw	r28, r24
 cea:	fb 01       	movw	r30, r22
 cec:	00 84       	ldd	r0, Z+8	; 0x08
 cee:	f1 85       	ldd	r31, Z+9	; 0x09
 cf0:	e0 2d       	mov	r30, r0
 cf2:	09 95       	icall
 cf4:	89 2b       	or	r24, r25
 cf6:	e1 f6       	brne	.-72     	; 0xcb0 <fputc+0x10>
 cf8:	d8 01       	movw	r26, r16
 cfa:	16 96       	adiw	r26, 0x06	; 6
 cfc:	8d 91       	ld	r24, X+
 cfe:	9c 91       	ld	r25, X
 d00:	17 97       	sbiw	r26, 0x07	; 7
 d02:	01 96       	adiw	r24, 0x01	; 1
 d04:	16 96       	adiw	r26, 0x06	; 6
 d06:	8d 93       	st	X+, r24
 d08:	9c 93       	st	X, r25
 d0a:	17 97       	sbiw	r26, 0x07	; 7
 d0c:	ce 01       	movw	r24, r28
 d0e:	df 91       	pop	r29
 d10:	cf 91       	pop	r28
 d12:	1f 91       	pop	r17
 d14:	0f 91       	pop	r16
 d16:	08 95       	ret

00000d18 <__ultoa_invert>:
 d18:	fa 01       	movw	r30, r20
 d1a:	aa 27       	eor	r26, r26
 d1c:	28 30       	cpi	r18, 0x08	; 8
 d1e:	51 f1       	breq	.+84     	; 0xd74 <__ultoa_invert+0x5c>
 d20:	20 31       	cpi	r18, 0x10	; 16
 d22:	81 f1       	breq	.+96     	; 0xd84 <__ultoa_invert+0x6c>
 d24:	e8 94       	clt
 d26:	6f 93       	push	r22
 d28:	6e 7f       	andi	r22, 0xFE	; 254
 d2a:	6e 5f       	subi	r22, 0xFE	; 254
 d2c:	7f 4f       	sbci	r23, 0xFF	; 255
 d2e:	8f 4f       	sbci	r24, 0xFF	; 255
 d30:	9f 4f       	sbci	r25, 0xFF	; 255
 d32:	af 4f       	sbci	r26, 0xFF	; 255
 d34:	b1 e0       	ldi	r27, 0x01	; 1
 d36:	3e d0       	rcall	.+124    	; 0xdb4 <__ultoa_invert+0x9c>
 d38:	b4 e0       	ldi	r27, 0x04	; 4
 d3a:	3c d0       	rcall	.+120    	; 0xdb4 <__ultoa_invert+0x9c>
 d3c:	67 0f       	add	r22, r23
 d3e:	78 1f       	adc	r23, r24
 d40:	89 1f       	adc	r24, r25
 d42:	9a 1f       	adc	r25, r26
 d44:	a1 1d       	adc	r26, r1
 d46:	68 0f       	add	r22, r24
 d48:	79 1f       	adc	r23, r25
 d4a:	8a 1f       	adc	r24, r26
 d4c:	91 1d       	adc	r25, r1
 d4e:	a1 1d       	adc	r26, r1
 d50:	6a 0f       	add	r22, r26
 d52:	71 1d       	adc	r23, r1
 d54:	81 1d       	adc	r24, r1
 d56:	91 1d       	adc	r25, r1
 d58:	a1 1d       	adc	r26, r1
 d5a:	20 d0       	rcall	.+64     	; 0xd9c <__ultoa_invert+0x84>
 d5c:	09 f4       	brne	.+2      	; 0xd60 <__ultoa_invert+0x48>
 d5e:	68 94       	set
 d60:	3f 91       	pop	r19
 d62:	2a e0       	ldi	r18, 0x0A	; 10
 d64:	26 9f       	mul	r18, r22
 d66:	11 24       	eor	r1, r1
 d68:	30 19       	sub	r19, r0
 d6a:	30 5d       	subi	r19, 0xD0	; 208
 d6c:	31 93       	st	Z+, r19
 d6e:	de f6       	brtc	.-74     	; 0xd26 <__ultoa_invert+0xe>
 d70:	cf 01       	movw	r24, r30
 d72:	08 95       	ret
 d74:	46 2f       	mov	r20, r22
 d76:	47 70       	andi	r20, 0x07	; 7
 d78:	40 5d       	subi	r20, 0xD0	; 208
 d7a:	41 93       	st	Z+, r20
 d7c:	b3 e0       	ldi	r27, 0x03	; 3
 d7e:	0f d0       	rcall	.+30     	; 0xd9e <__ultoa_invert+0x86>
 d80:	c9 f7       	brne	.-14     	; 0xd74 <__ultoa_invert+0x5c>
 d82:	f6 cf       	rjmp	.-20     	; 0xd70 <__ultoa_invert+0x58>
 d84:	46 2f       	mov	r20, r22
 d86:	4f 70       	andi	r20, 0x0F	; 15
 d88:	40 5d       	subi	r20, 0xD0	; 208
 d8a:	4a 33       	cpi	r20, 0x3A	; 58
 d8c:	18 f0       	brcs	.+6      	; 0xd94 <__ultoa_invert+0x7c>
 d8e:	49 5d       	subi	r20, 0xD9	; 217
 d90:	31 fd       	sbrc	r19, 1
 d92:	40 52       	subi	r20, 0x20	; 32
 d94:	41 93       	st	Z+, r20
 d96:	02 d0       	rcall	.+4      	; 0xd9c <__ultoa_invert+0x84>
 d98:	a9 f7       	brne	.-22     	; 0xd84 <__ultoa_invert+0x6c>
 d9a:	ea cf       	rjmp	.-44     	; 0xd70 <__ultoa_invert+0x58>
 d9c:	b4 e0       	ldi	r27, 0x04	; 4
 d9e:	a6 95       	lsr	r26
 da0:	97 95       	ror	r25
 da2:	87 95       	ror	r24
 da4:	77 95       	ror	r23
 da6:	67 95       	ror	r22
 da8:	ba 95       	dec	r27
 daa:	c9 f7       	brne	.-14     	; 0xd9e <__ultoa_invert+0x86>
 dac:	00 97       	sbiw	r24, 0x00	; 0
 dae:	61 05       	cpc	r22, r1
 db0:	71 05       	cpc	r23, r1
 db2:	08 95       	ret
 db4:	9b 01       	movw	r18, r22
 db6:	ac 01       	movw	r20, r24
 db8:	0a 2e       	mov	r0, r26
 dba:	06 94       	lsr	r0
 dbc:	57 95       	ror	r21
 dbe:	47 95       	ror	r20
 dc0:	37 95       	ror	r19
 dc2:	27 95       	ror	r18
 dc4:	ba 95       	dec	r27
 dc6:	c9 f7       	brne	.-14     	; 0xdba <__ultoa_invert+0xa2>
 dc8:	62 0f       	add	r22, r18
 dca:	73 1f       	adc	r23, r19
 dcc:	84 1f       	adc	r24, r20
 dce:	95 1f       	adc	r25, r21
 dd0:	a0 1d       	adc	r26, r0
 dd2:	08 95       	ret

00000dd4 <_exit>:
 dd4:	f8 94       	cli

00000dd6 <__stop_program>:
 dd6:	ff cf       	rjmp	.-2      	; 0xdd6 <__stop_program>
