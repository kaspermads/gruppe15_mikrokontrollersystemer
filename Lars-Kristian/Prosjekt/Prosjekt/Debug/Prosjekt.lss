
Prosjekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00804000  00000e38  00000ecc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e38  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00804078  00804078  00000f44  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f44  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fa0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004f66  00000000  00000000  00001080  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002fd5  00000000  00000000  00005fe6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006d3  00000000  00000000  00008fbb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000278  00000000  00000000  00009690  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003bc2  00000000  00000000  00009908  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000566  00000000  00000000  0000d4ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  0000da30  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  10:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  14:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  18:	0c 94 34 01 	jmp	0x268	; 0x268 <__vector_6>
  1c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  20:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  24:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  28:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  2c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  30:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  34:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  38:	0c 94 6b 01 	jmp	0x2d6	; 0x2d6 <__vector_14>
  3c:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__vector_15>
  40:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  44:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  48:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  4c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  50:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  54:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  58:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  5c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  60:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  64:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  68:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  6c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  70:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  74:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  78:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  7c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  80:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  84:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  88:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  8c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  90:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  94:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  98:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  9c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ac:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  bc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  cc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  dc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ec:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  f0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62

00000100 <__do_copy_data>:
 100:	10 e4       	ldi	r17, 0x40	; 64
 102:	a0 e0       	ldi	r26, 0x00	; 0
 104:	b0 e4       	ldi	r27, 0x40	; 64
 106:	e8 e3       	ldi	r30, 0x38	; 56
 108:	fe e0       	ldi	r31, 0x0E	; 14
 10a:	00 e0       	ldi	r16, 0x00	; 0
 10c:	0b bf       	out	0x3b, r16	; 59
 10e:	02 c0       	rjmp	.+4      	; 0x114 <__do_copy_data+0x14>
 110:	07 90       	elpm	r0, Z+
 112:	0d 92       	st	X+, r0
 114:	a8 37       	cpi	r26, 0x78	; 120
 116:	b1 07       	cpc	r27, r17
 118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x10>

0000011a <__do_clear_bss>:
 11a:	20 e4       	ldi	r18, 0x40	; 64
 11c:	a8 e7       	ldi	r26, 0x78	; 120
 11e:	b0 e4       	ldi	r27, 0x40	; 64
 120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
 122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
 124:	a8 38       	cpi	r26, 0x88	; 136
 126:	b2 07       	cpc	r27, r18
 128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
 12a:	0e 94 71 02 	call	0x4e2	; 0x4e2 <main>
 12e:	0c 94 1a 07 	jmp	0xe34	; 0xe34 <_exit>

00000132 <__bad_interrupt>:
 132:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000136 <USART3_printChar>:
	USART3.CTRLB |= USART_TXEN_bm;	// Aktiverer USART3-senderen i kontrollregister B med bitmasken til TX
}
void USART3_printChar(char c, FILE *stream)
{
	// Sjekker om bufferet er tomt før ny sending
	while (!(USART3.STATUS & USART_DREIF_bm))
 136:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
 13a:	95 ff       	sbrs	r25, 5
 13c:	fc cf       	rjmp	.-8      	; 0x136 <USART3_printChar>
	{
		;
	}
	USART3.TXDATAL = c;	// Sender en karakter
 13e:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
 142:	08 95       	ret

00000144 <TCA0_init>:


void TCA0_init(void)
{
	// PORTD pins for output PWM-signals.
	PORTD.DIRSET = PIN0_bm | PIN1_bm | PIN4_bm | PIN3_bm;
 144:	8b e1       	ldi	r24, 0x1B	; 27
 146:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x7e0461>
	
	//set waveform output on PORT D
	PORTMUX.TCAROUTEA = PORTMUX_TCA0_PORTD_gc;
 14a:	83 e0       	ldi	r24, 0x03	; 3
 14c:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
	
	// enable compare channel 0, 1 and set single-slope PWM mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_CMP0EN_bm | TCA_SINGLE_CMP1EN_bm | TCA_SINGLE_WGMODE_SINGLESLOPE_gc;
 150:	e0 e0       	ldi	r30, 0x00	; 0
 152:	fa e0       	ldi	r31, 0x0A	; 10
 154:	83 e3       	ldi	r24, 0x33	; 51
 156:	81 83       	std	Z+1, r24	; 0x01
	
	 // enable split mode
    TCA0.SPLIT.CTRLD = TCA_SPLIT_SPLITM_bm; 
 158:	91 e0       	ldi	r25, 0x01	; 1
 15a:	93 83       	std	Z+3, r25	; 0x03
	
	// enable compare channel 0 for the higher byte, enable compare channel 0 for the lower byte
	TCA0.SPLIT.CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_LCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm | TCA_SPLIT_LCMP1EN_bm;    
 15c:	81 83       	std	Z+1, r24	; 0x01
	
	
	// L0 = PIN0, L1=PIN1, H0=PIN3, H1=PIN4
	// set the PWM frequencies and duty cycles
    TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
 15e:	87 e2       	ldi	r24, 0x27	; 39
 160:	86 a3       	std	Z+38, r24	; 0x26
    TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MIN_VALUE;                           
 162:	10 a6       	std	Z+40, r1	; 0x28
    TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
 164:	87 a3       	std	Z+39, r24	; 0x27
    TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MIN_VALUE;
 166:	11 a6       	std	Z+41, r1	; 0x29
	
	//TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
    TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;                           
 168:	12 a6       	std	Z+42, r1	; 0x2a
    //TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
    TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MIN_VALUE; 
 16a:	13 a6       	std	Z+43, r1	; 0x2b
	
	TCA0.SPLIT.CTRLA = TCA_SPLIT_CLKSEL_DIV4_gc | TCA_SPLIT_ENABLE_bm;   // set clock source (sys_clk/4), and start timer         
 16c:	85 e0       	ldi	r24, 0x05	; 5
 16e:	80 83       	st	Z, r24
 170:	08 95       	ret

00000172 <TCB0_init>:
}


void TCB0_init(void)
{
	PORTB.DIR &= ~PIN4_bm;
 172:	e0 e2       	ldi	r30, 0x20	; 32
 174:	f4 e0       	ldi	r31, 0x04	; 4
 176:	80 81       	ld	r24, Z
 178:	8f 7e       	andi	r24, 0xEF	; 239
 17a:	80 83       	st	Z, r24
	PORTB.PIN4CTRL |= PORT_PULLUPEN_bm;
 17c:	84 89       	ldd	r24, Z+20	; 0x14
 17e:	88 60       	ori	r24, 0x08	; 8
 180:	84 8b       	std	Z+20, r24	; 0x14
	
	TCB0.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
 182:	e0 e0       	ldi	r30, 0x00	; 0
 184:	fb e0       	ldi	r31, 0x0B	; 11
 186:	85 e0       	ldi	r24, 0x05	; 5
 188:	80 83       	st	Z, r24
	TCB0.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
 18a:	84 e0       	ldi	r24, 0x04	; 4
 18c:	81 83       	std	Z+1, r24	; 0x01
	
	TCB0.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	85 83       	std	Z+5, r24	; 0x05
	
	TCB0.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm; // Capture event input enable
 192:	91 e4       	ldi	r25, 0x41	; 65
 194:	94 83       	std	Z+4, r25	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL0 = EVSYS_CHANNEL0_PORTB_PIN4_gc; //	input event channel 0, port b on pin 4
 196:	e0 e0       	ldi	r30, 0x00	; 0
 198:	f2 e0       	ldi	r31, 0x02	; 2
 19a:	9c e4       	ldi	r25, 0x4C	; 76
 19c:	90 8b       	std	Z+16, r25	; 0x10
	EVSYS.USERTCB0CAPT = EVSYS_USER_CHANNEL0_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
 19e:	86 af       	std	Z+62, r24	; 0x3e
 1a0:	08 95       	ret

000001a2 <TCB1_init>:
}


void TCB1_init(void)
{
	PORTB.DIR &= ~PIN5_bm;
 1a2:	e0 e2       	ldi	r30, 0x20	; 32
 1a4:	f4 e0       	ldi	r31, 0x04	; 4
 1a6:	80 81       	ld	r24, Z
 1a8:	8f 7d       	andi	r24, 0xDF	; 223
 1aa:	80 83       	st	Z, r24
	PORTB.PIN5CTRL |= PORT_PULLUPEN_bm;
 1ac:	85 89       	ldd	r24, Z+21	; 0x15
 1ae:	88 60       	ori	r24, 0x08	; 8
 1b0:	85 8b       	std	Z+21, r24	; 0x15
	
	
	TCB1.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
 1b2:	e0 e1       	ldi	r30, 0x10	; 16
 1b4:	fb e0       	ldi	r31, 0x0B	; 11
 1b6:	85 e0       	ldi	r24, 0x05	; 5
 1b8:	80 83       	st	Z, r24
	TCB1.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
 1ba:	84 e0       	ldi	r24, 0x04	; 4
 1bc:	81 83       	std	Z+1, r24	; 0x01
	
	TCB1.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	85 83       	std	Z+5, r24	; 0x05
	
	TCB1.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm ; // Capture event input enable
 1c2:	81 e4       	ldi	r24, 0x41	; 65
 1c4:	84 83       	std	Z+4, r24	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL1 = EVSYS_CHANNEL1_PORTB_PIN5_gc; //	input event channel 1, port b on pin 5
 1c6:	8d e4       	ldi	r24, 0x4D	; 77
 1c8:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <__TEXT_REGION_LENGTH__+0x7e0211>
	EVSYS.USERTCB1CAPT = EVSYS_USER_CHANNEL1_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
 1cc:	82 e0       	ldi	r24, 0x02	; 2
 1ce:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__TEXT_REGION_LENGTH__+0x7e0240>
 1d2:	08 95       	ret

000001d4 <ADC0_init>:
bool ADC0_conersionDone(void);

void ADC0_init(void)
{
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
 1d4:	e0 e6       	ldi	r30, 0x60	; 96
 1d6:	f4 e0       	ldi	r31, 0x04	; 4
 1d8:	86 89       	ldd	r24, Z+22	; 0x16
 1da:	88 7f       	andi	r24, 0xF8	; 248
 1dc:	86 8b       	std	Z+22, r24	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
 1de:	86 89       	ldd	r24, Z+22	; 0x16
 1e0:	84 60       	ori	r24, 0x04	; 4
 1e2:	86 8b       	std	Z+22, r24	; 0x16

	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
 1e4:	86 89       	ldd	r24, Z+22	; 0x16
 1e6:	87 7f       	andi	r24, 0xF7	; 247
 1e8:	86 8b       	std	Z+22, r24	; 0x16

	ADC0.CTRLC = ADC_PRESC_DIV4_gc; /* CLK_PER divided by 4 */
 1ea:	e0 e0       	ldi	r30, 0x00	; 0
 1ec:	f6 e0       	ldi	r31, 0x06	; 6
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	82 83       	std	Z+2, r24	; 0x02
	
	VREF.ADC0REF = VREF_REFSEL_VDD_gc ; /* VDD as reference */
 1f2:	85 e0       	ldi	r24, 0x05	; 5
 1f4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>

	ADC0.CTRLA = ADC_ENABLE_bm | ADC_RESSEL_10BIT_gc; /* 10-bit mode */
 1f8:	80 83       	st	Z, r24

	/* Select ADC channel */
	ADC0.MUXPOS = ADC_MUXPOS_AIN6_gc;
 1fa:	86 e0       	ldi	r24, 0x06	; 6
 1fc:	80 87       	std	Z+8, r24	; 0x08

	/* Enable FreeRun mode */
	ADC0.CTRLA |= ADC_FREERUN_bm;
 1fe:	80 81       	ld	r24, Z
 200:	82 60       	ori	r24, 0x02	; 2
 202:	80 83       	st	Z, r24
 204:	08 95       	ret

00000206 <ADC0_read>:
}
uint16_t ADC0_read(void)
{
	/* Clear the interrupt flag by writing 1: */
	ADC0.INTFLAGS = ADC_RESRDY_bm;
 206:	e0 e0       	ldi	r30, 0x00	; 0
 208:	f6 e0       	ldi	r31, 0x06	; 6
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	85 87       	std	Z+13, r24	; 0x0d

	return ADC0.RES;
 20e:	80 89       	ldd	r24, Z+16	; 0x10
 210:	91 89       	ldd	r25, Z+17	; 0x11
}
 212:	08 95       	ret

00000214 <ADC0_start>:
void ADC0_start(void)
{
	/* Start conversion */
	ADC0.COMMAND = ADC_STCONV_bm;
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
 21a:	08 95       	ret

0000021c <ADC0_conersionDone>:
}
bool ADC0_conersionDone(void)
{
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
 21c:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
}
 220:	81 70       	andi	r24, 0x01	; 1
 222:	08 95       	ret

00000224 <file_stream>:

void file_stream(void)
{
	// Lager en egendefinert output stream som skal håndteres av funksjonen USART3_printChar
	static FILE USART3_stream = FDEV_SETUP_STREAM(USART3_printChar, NULL, _FDEV_SETUP_WRITE);
	stdout = &USART3_stream;	// Erstatter standard output stream med den egen definerte
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	90 e4       	ldi	r25, 0x40	; 64
 228:	80 93 84 40 	sts	0x4084, r24	; 0x804084 <__iob+0x2>
 22c:	90 93 85 40 	sts	0x4085, r25	; 0x804085 <__iob+0x3>
 230:	08 95       	ret

00000232 <USART3_init>:
}

void USART3_init(void)
{
	// RX input and TX output
	PORTB.DIR &= ~PIN1_bm;
 232:	e0 e2       	ldi	r30, 0x20	; 32
 234:	f4 e0       	ldi	r31, 0x04	; 4
 236:	80 81       	ld	r24, Z
 238:	8d 7f       	andi	r24, 0xFD	; 253
 23a:	80 83       	st	Z, r24
	PORTB.DIR |= PIN0_bm;
 23c:	80 81       	ld	r24, Z
 23e:	81 60       	ori	r24, 0x01	; 1
 240:	80 83       	st	Z, r24

	USART3.BAUD = (uint16_t)USART3_BAUD_RATE(9600);	// Baud rate for USART3
 242:	e0 e6       	ldi	r30, 0x60	; 96
 244:	f8 e0       	ldi	r31, 0x08	; 8
 246:	83 e8       	ldi	r24, 0x83	; 131
 248:	96 e0       	ldi	r25, 0x06	; 6
 24a:	80 87       	std	Z+8, r24	; 0x08
 24c:	91 87       	std	Z+9, r25	; 0x09
	USART3.CTRLB |= USART_TXEN_bm;	// Aktiverer USART3-senderen i kontrollregister B med bitmasken til TX
 24e:	86 81       	ldd	r24, Z+6	; 0x06
 250:	80 64       	ori	r24, 0x40	; 64
 252:	86 83       	std	Z+6, r24	; 0x06
 254:	08 95       	ret

00000256 <RTC_init>:


void RTC_init(void)
{
	// Enables the source clock for the RTC counter
	RTC.CTRLA = RTC_RTCEN_bm | RTC_PRESCALER_DIV1_gc; // Enable RTC, select presaler
 256:	e0 e4       	ldi	r30, 0x40	; 64
 258:	f1 e0       	ldi	r31, 0x01	; 1
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	80 83       	st	Z, r24
	//RTC.INTCTRL = RTC_OVF_bm;
	RTC.CLKSEL = RTC_CLKSEL_OSC1K_gc; // Select source for the RTC clock
 25e:	87 83       	std	Z+7, r24	; 0x07
	
	// Enables the PIT (Periodic Interrupt Timer)
	RTC.PITCTRLA = RTC_PITEN_bm | RTC_PERIOD_CYC1024_gc; // Enable PIT and select number of clock cycles between interrupt
 260:	99 e4       	ldi	r25, 0x49	; 73
 262:	90 8b       	std	Z+16, r25	; 0x10
	RTC.PITINTCTRL = RTC_PI_bm;	// Enable interrupt
 264:	82 8b       	std	Z+18, r24	; 0x12
 266:	08 95       	ret

00000268 <__vector_6>:
}

// RTC interrupt
ISR(RTC_PIT_vect)
{
 268:	1f 92       	push	r1
 26a:	0f 92       	push	r0
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	0f 92       	push	r0
 270:	11 24       	eor	r1, r1
 272:	8f 93       	push	r24
 274:	9f 93       	push	r25
	counter ++; // Counter represent seconds
 276:	80 91 80 40 	lds	r24, 0x4080	; 0x804080 <counter>
 27a:	90 91 81 40 	lds	r25, 0x4081	; 0x804081 <counter+0x1>
 27e:	01 96       	adiw	r24, 0x01	; 1
 280:	80 93 80 40 	sts	0x4080, r24	; 0x804080 <counter>
 284:	90 93 81 40 	sts	0x4081, r25	; 0x804081 <counter+0x1>
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x7e0153>
}
 28e:	9f 91       	pop	r25
 290:	8f 91       	pop	r24
 292:	0f 90       	pop	r0
 294:	0f be       	out	0x3f, r0	; 63
 296:	0f 90       	pop	r0
 298:	1f 90       	pop	r1
 29a:	18 95       	reti

0000029c <PWM_freq_to_RPM>:
	}
}

uint32_t PWM_freq_to_RPM(uint32_t PWM_onperiode)
{
	return ((F_CPU * 60)/(4 * 4 * PWM_onperiode));
 29c:	dc 01       	movw	r26, r24
 29e:	cb 01       	movw	r24, r22
 2a0:	88 0f       	add	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	aa 1f       	adc	r26, r26
 2a6:	bb 1f       	adc	r27, r27
 2a8:	88 0f       	add	r24, r24
 2aa:	99 1f       	adc	r25, r25
 2ac:	aa 1f       	adc	r26, r26
 2ae:	bb 1f       	adc	r27, r27
 2b0:	9c 01       	movw	r18, r24
 2b2:	ad 01       	movw	r20, r26
 2b4:	22 0f       	add	r18, r18
 2b6:	33 1f       	adc	r19, r19
 2b8:	44 1f       	adc	r20, r20
 2ba:	55 1f       	adc	r21, r21
 2bc:	22 0f       	add	r18, r18
 2be:	33 1f       	adc	r19, r19
 2c0:	44 1f       	adc	r20, r20
 2c2:	55 1f       	adc	r21, r21
 2c4:	60 e0       	ldi	r22, 0x00	; 0
 2c6:	7c e1       	ldi	r23, 0x1C	; 28
 2c8:	8e e4       	ldi	r24, 0x4E	; 78
 2ca:	9e e0       	ldi	r25, 0x0E	; 14
 2cc:	0e 94 00 04 	call	0x800	; 0x800 <__udivmodsi4>
}
 2d0:	ca 01       	movw	r24, r20
 2d2:	b9 01       	movw	r22, r18
 2d4:	08 95       	ret

000002d6 <__vector_14>:
	counter ++; // Counter represent seconds
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
}
// TCB0 interrupt function
ISR(TCB0_INT_vect)
{
 2d6:	1f 92       	push	r1
 2d8:	0f 92       	push	r0
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	0f 92       	push	r0
 2de:	11 24       	eor	r1, r1
 2e0:	0b b6       	in	r0, 0x3b	; 59
 2e2:	0f 92       	push	r0
 2e4:	2f 93       	push	r18
 2e6:	3f 93       	push	r19
 2e8:	4f 93       	push	r20
 2ea:	5f 93       	push	r21
 2ec:	6f 93       	push	r22
 2ee:	7f 93       	push	r23
 2f0:	8f 93       	push	r24
 2f2:	9f 93       	push	r25
 2f4:	af 93       	push	r26
 2f6:	bf 93       	push	r27
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	ef 93       	push	r30
 2fe:	ff 93       	push	r31
	//TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	RPM_fan1= PWM_freq_to_RPM(TCB0.CCMP);
 300:	c0 e0       	ldi	r28, 0x00	; 0
 302:	db e0       	ldi	r29, 0x0B	; 11
 304:	6c 85       	ldd	r22, Y+12	; 0x0c
 306:	7d 85       	ldd	r23, Y+13	; 0x0d
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	0e 94 4e 01 	call	0x29c	; 0x29c <PWM_freq_to_RPM>
 310:	60 93 78 40 	sts	0x4078, r22	; 0x804078 <__data_end>
 314:	70 93 79 40 	sts	0x4079, r23	; 0x804079 <__data_end+0x1>
 318:	80 93 7a 40 	sts	0x407A, r24	; 0x80407a <__data_end+0x2>
 31c:	90 93 7b 40 	sts	0x407B, r25	; 0x80407b <__data_end+0x3>
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	8e 83       	std	Y+6, r24	; 0x06
}
 324:	ff 91       	pop	r31
 326:	ef 91       	pop	r30
 328:	df 91       	pop	r29
 32a:	cf 91       	pop	r28
 32c:	bf 91       	pop	r27
 32e:	af 91       	pop	r26
 330:	9f 91       	pop	r25
 332:	8f 91       	pop	r24
 334:	7f 91       	pop	r23
 336:	6f 91       	pop	r22
 338:	5f 91       	pop	r21
 33a:	4f 91       	pop	r20
 33c:	3f 91       	pop	r19
 33e:	2f 91       	pop	r18
 340:	0f 90       	pop	r0
 342:	0b be       	out	0x3b, r0	; 59
 344:	0f 90       	pop	r0
 346:	0f be       	out	0x3f, r0	; 63
 348:	0f 90       	pop	r0
 34a:	1f 90       	pop	r1
 34c:	18 95       	reti

0000034e <__vector_15>:

ISR(TCB1_INT_vect)
{
 34e:	1f 92       	push	r1
 350:	0f 92       	push	r0
 352:	0f b6       	in	r0, 0x3f	; 63
 354:	0f 92       	push	r0
 356:	11 24       	eor	r1, r1
 358:	0b b6       	in	r0, 0x3b	; 59
 35a:	0f 92       	push	r0
 35c:	2f 93       	push	r18
 35e:	3f 93       	push	r19
 360:	4f 93       	push	r20
 362:	5f 93       	push	r21
 364:	6f 93       	push	r22
 366:	7f 93       	push	r23
 368:	8f 93       	push	r24
 36a:	9f 93       	push	r25
 36c:	af 93       	push	r26
 36e:	bf 93       	push	r27
 370:	cf 93       	push	r28
 372:	df 93       	push	r29
 374:	ef 93       	push	r30
 376:	ff 93       	push	r31
	//TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
	RPM_fan2= PWM_freq_to_RPM(TCB1.CCMP);
 378:	c0 e1       	ldi	r28, 0x10	; 16
 37a:	db e0       	ldi	r29, 0x0B	; 11
 37c:	6c 85       	ldd	r22, Y+12	; 0x0c
 37e:	7d 85       	ldd	r23, Y+13	; 0x0d
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	0e 94 4e 01 	call	0x29c	; 0x29c <PWM_freq_to_RPM>
 388:	60 93 7c 40 	sts	0x407C, r22	; 0x80407c <RPM_fan2>
 38c:	70 93 7d 40 	sts	0x407D, r23	; 0x80407d <RPM_fan2+0x1>
 390:	80 93 7e 40 	sts	0x407E, r24	; 0x80407e <RPM_fan2+0x2>
 394:	90 93 7f 40 	sts	0x407F, r25	; 0x80407f <RPM_fan2+0x3>
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	8e 83       	std	Y+6, r24	; 0x06
}
 39c:	ff 91       	pop	r31
 39e:	ef 91       	pop	r30
 3a0:	df 91       	pop	r29
 3a2:	cf 91       	pop	r28
 3a4:	bf 91       	pop	r27
 3a6:	af 91       	pop	r26
 3a8:	9f 91       	pop	r25
 3aa:	8f 91       	pop	r24
 3ac:	7f 91       	pop	r23
 3ae:	6f 91       	pop	r22
 3b0:	5f 91       	pop	r21
 3b2:	4f 91       	pop	r20
 3b4:	3f 91       	pop	r19
 3b6:	2f 91       	pop	r18
 3b8:	0f 90       	pop	r0
 3ba:	0b be       	out	0x3b, r0	; 59
 3bc:	0f 90       	pop	r0
 3be:	0f be       	out	0x3f, r0	; 63
 3c0:	0f 90       	pop	r0
 3c2:	1f 90       	pop	r1
 3c4:	18 95       	reti

000003c6 <average_values_for_tach>:
	return ((F_CPU * 60)/(4 * 4 * PWM_onperiode));
}

// For predicting failures with fans
void average_values_for_tach()
{
 3c6:	8f 92       	push	r8
 3c8:	9f 92       	push	r9
 3ca:	af 92       	push	r10
 3cc:	bf 92       	push	r11
 3ce:	cf 92       	push	r12
 3d0:	df 92       	push	r13
 3d2:	ef 92       	push	r14
 3d4:	ff 92       	push	r15
 3d6:	cf 93       	push	r28
 3d8:	df 93       	push	r29
	// SETT DETTE I IF MED FLAGG???
	
	// Set value to all fans
	TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MAX_VALUE;
 3da:	e0 e0       	ldi	r30, 0x00	; 0
 3dc:	fa e0       	ldi	r31, 0x0A	; 10
 3de:	87 e2       	ldi	r24, 0x27	; 39
 3e0:	80 a7       	std	Z+40, r24	; 0x28
	TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MAX_VALUE;
 3e2:	82 a7       	std	Z+42, r24	; 0x2a
	TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MAX_VALUE;
 3e4:	81 a7       	std	Z+41, r24	; 0x29
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
 3e6:	83 a7       	std	Z+43, r24	; 0x2b
	
	printf("Satt vifter! \r\n");
 3e8:	8e e0       	ldi	r24, 0x0E	; 14
 3ea:	90 e4       	ldi	r25, 0x40	; 64
 3ec:	0e 94 36 04 	call	0x86c	; 0x86c <puts>
	uint32_t sum_RPM_fan2 = 0;
	uint32_t average_read_value_fan1;
	uint32_t average_read_value_fan2;
	
	uint32_t num_of_readings = 0;
	uint16_t compare_counter_time = counter; // reset counter for compare
 3f0:	c0 91 80 40 	lds	r28, 0x4080	; 0x804080 <counter>
 3f4:	d0 91 81 40 	lds	r29, 0x4081	; 0x804081 <counter+0x1>
	uint32_t sum_RPM_fan1 = 0;
	uint32_t sum_RPM_fan2 = 0;
	uint32_t average_read_value_fan1;
	uint32_t average_read_value_fan2;
	
	uint32_t num_of_readings = 0;
 3f8:	c1 2c       	mov	r12, r1
 3fa:	d1 2c       	mov	r13, r1
 3fc:	76 01       	movw	r14, r12
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
	
	printf("Satt vifter! \r\n");
	
	// For average read values for two fans
	uint32_t sum_RPM_fan1 = 0;
 3fe:	81 2c       	mov	r8, r1
 400:	91 2c       	mov	r9, r1
 402:	54 01       	movw	r10, r8
	uint32_t num_of_readings = 0;
	uint16_t compare_counter_time = counter; // reset counter for compare
	
	while (1)
	{
		sum_RPM_fan1 += RPM_fan1;
 404:	80 91 78 40 	lds	r24, 0x4078	; 0x804078 <__data_end>
 408:	90 91 79 40 	lds	r25, 0x4079	; 0x804079 <__data_end+0x1>
 40c:	a0 91 7a 40 	lds	r26, 0x407A	; 0x80407a <__data_end+0x2>
 410:	b0 91 7b 40 	lds	r27, 0x407B	; 0x80407b <__data_end+0x3>
 414:	88 0e       	add	r8, r24
 416:	99 1e       	adc	r9, r25
 418:	aa 1e       	adc	r10, r26
 41a:	bb 1e       	adc	r11, r27
		sum_RPM_fan2 += RPM_fan2;
 41c:	80 91 7c 40 	lds	r24, 0x407C	; 0x80407c <RPM_fan2>
 420:	90 91 7d 40 	lds	r25, 0x407D	; 0x80407d <RPM_fan2+0x1>
 424:	a0 91 7e 40 	lds	r26, 0x407E	; 0x80407e <RPM_fan2+0x2>
 428:	b0 91 7f 40 	lds	r27, 0x407F	; 0x80407f <RPM_fan2+0x3>
		
		printf("PWM read: %d\r\n", RPM_fan1);
 42c:	80 91 78 40 	lds	r24, 0x4078	; 0x804078 <__data_end>
 430:	90 91 79 40 	lds	r25, 0x4079	; 0x804079 <__data_end+0x1>
 434:	a0 91 7a 40 	lds	r26, 0x407A	; 0x80407a <__data_end+0x2>
 438:	b0 91 7b 40 	lds	r27, 0x407B	; 0x80407b <__data_end+0x3>
 43c:	bf 93       	push	r27
 43e:	af 93       	push	r26
 440:	9f 93       	push	r25
 442:	8f 93       	push	r24
 444:	8d e1       	ldi	r24, 0x1D	; 29
 446:	90 e4       	ldi	r25, 0x40	; 64
 448:	9f 93       	push	r25
 44a:	8f 93       	push	r24
 44c:	0e 94 22 04 	call	0x844	; 0x844 <printf>
		num_of_readings ++;
 450:	8f ef       	ldi	r24, 0xFF	; 255
 452:	c8 1a       	sub	r12, r24
 454:	d8 0a       	sbc	r13, r24
 456:	e8 0a       	sbc	r14, r24
 458:	f8 0a       	sbc	r15, r24
		
		// Run test in x seconds
		if (counter - compare_counter_time >= 10)
 45a:	80 91 80 40 	lds	r24, 0x4080	; 0x804080 <counter>
 45e:	90 91 81 40 	lds	r25, 0x4081	; 0x804081 <counter+0x1>
 462:	8c 1b       	sub	r24, r28
 464:	9d 0b       	sbc	r25, r29
 466:	0f 90       	pop	r0
 468:	0f 90       	pop	r0
 46a:	0f 90       	pop	r0
 46c:	0f 90       	pop	r0
 46e:	0f 90       	pop	r0
 470:	0f 90       	pop	r0
 472:	0a 97       	sbiw	r24, 0x0a	; 10
 474:	38 f2       	brcs	.-114    	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
		{
			break;
		}
	}
		
	average_read_value_fan1 = sum_RPM_fan1 / num_of_readings;
 476:	c5 01       	movw	r24, r10
 478:	b4 01       	movw	r22, r8
 47a:	a7 01       	movw	r20, r14
 47c:	96 01       	movw	r18, r12
 47e:	0e 94 00 04 	call	0x800	; 0x800 <__udivmodsi4>
 482:	c2 2f       	mov	r28, r18
 484:	d3 2f       	mov	r29, r19
 486:	b4 2e       	mov	r11, r20
 488:	a5 2e       	mov	r10, r21
	average_read_value_fan2 = sum_RPM_fan2 / num_of_readings;
	
	printf("Number of readings: %d\r\n", num_of_readings);
 48a:	ff 92       	push	r15
 48c:	ef 92       	push	r14
 48e:	df 92       	push	r13
 490:	cf 92       	push	r12
 492:	8c e2       	ldi	r24, 0x2C	; 44
 494:	90 e4       	ldi	r25, 0x40	; 64
 496:	9f 93       	push	r25
 498:	8f 93       	push	r24
 49a:	0e 94 22 04 	call	0x844	; 0x844 <printf>
	printf("Gjennomsnitt: %d\r\n", average_read_value_fan1);
 49e:	af 92       	push	r10
 4a0:	bf 92       	push	r11
 4a2:	df 93       	push	r29
 4a4:	cf 93       	push	r28
 4a6:	85 e4       	ldi	r24, 0x45	; 69
 4a8:	90 e4       	ldi	r25, 0x40	; 64
 4aa:	9f 93       	push	r25
 4ac:	8f 93       	push	r24
 4ae:	0e 94 22 04 	call	0x844	; 0x844 <printf>
	
	printf("\r\n");
 4b2:	8b e1       	ldi	r24, 0x1B	; 27
 4b4:	90 e4       	ldi	r25, 0x40	; 64
 4b6:	0e 94 36 04 	call	0x86c	; 0x86c <puts>
	printf("\r\n");
 4ba:	8b e1       	ldi	r24, 0x1B	; 27
 4bc:	90 e4       	ldi	r25, 0x40	; 64
 4be:	0e 94 36 04 	call	0x86c	; 0x86c <puts>
}
 4c2:	8d b7       	in	r24, 0x3d	; 61
 4c4:	9e b7       	in	r25, 0x3e	; 62
 4c6:	0c 96       	adiw	r24, 0x0c	; 12
 4c8:	8d bf       	out	0x3d, r24	; 61
 4ca:	9e bf       	out	0x3e, r25	; 62
 4cc:	df 91       	pop	r29
 4ce:	cf 91       	pop	r28
 4d0:	ff 90       	pop	r15
 4d2:	ef 90       	pop	r14
 4d4:	df 90       	pop	r13
 4d6:	cf 90       	pop	r12
 4d8:	bf 90       	pop	r11
 4da:	af 90       	pop	r10
 4dc:	9f 90       	pop	r9
 4de:	8f 90       	pop	r8
 4e0:	08 95       	ret

000004e2 <main>:
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
}

int main(void)
{
	file_stream();  // Create file stream for USART
 4e2:	0e 94 12 01 	call	0x224	; 0x224 <file_stream>
	USART3_init();	// USART3 initialize
 4e6:	0e 94 19 01 	call	0x232	; 0x232 <USART3_init>
	
	// PWM initialize
	TCA0_init();
 4ea:	0e 94 a2 00 	call	0x144	; 0x144 <TCA0_init>
	TCB0_init();
 4ee:	0e 94 b9 00 	call	0x172	; 0x172 <TCB0_init>
	TCB1_init();
 4f2:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <TCB1_init>
	
	// ADC initialize
	ADC0_init();
 4f6:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <ADC0_init>
	ADC0_start();
 4fa:	0e 94 0a 01 	call	0x214	; 0x214 <ADC0_start>
	
	// RTC initialize
	RTC_init();
 4fe:	0e 94 2b 01 	call	0x256	; 0x256 <RTC_init>
	
	sei(); // Enable Global Interrupts
 502:	78 94       	sei
	
	while (1)
	{
		if(counter == 20)
 504:	80 91 80 40 	lds	r24, 0x4080	; 0x804080 <counter>
 508:	90 91 81 40 	lds	r25, 0x4081	; 0x804081 <counter+0x1>
 50c:	44 97       	sbiw	r24, 0x14	; 20
 50e:	31 f4       	brne	.+12     	; 0x51c <main+0x3a>
		{
			average_values_for_tach();
 510:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <average_values_for_tach>
			counter = 0;
 514:	10 92 80 40 	sts	0x4080, r1	; 0x804080 <counter>
 518:	10 92 81 40 	sts	0x4081, r1	; 0x804081 <counter+0x1>
		}
		if (ADC0_conersionDone())
 51c:	0e 94 0e 01 	call	0x21c	; 0x21c <ADC0_conersionDone>
 520:	88 23       	and	r24, r24
 522:	81 f3       	breq	.-32     	; 0x504 <main+0x22>
		{
			// Read potentiometer
			uint16_t adc_value = ADC0_read();
 524:	0e 94 03 01 	call	0x206	; 0x206 <ADC0_read>
 528:	ec 01       	movw	r28, r24
			// Convert ADC-value to PWM signal
			uint16_t fanSpeed = ((39.0/1023.0)*adc_value);
 52a:	bc 01       	movw	r22, r24
 52c:	80 e0       	ldi	r24, 0x00	; 0
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	0e 94 05 03 	call	0x60a	; 0x60a <__floatunsisf>
 534:	2a e0       	ldi	r18, 0x0A	; 10
 536:	37 e2       	ldi	r19, 0x27	; 39
 538:	4c e1       	ldi	r20, 0x1C	; 28
 53a:	5d e3       	ldi	r21, 0x3D	; 61
 53c:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__mulsf3>
 540:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__fixunssfsi>
 544:	16 2f       	mov	r17, r22
 546:	07 2f       	mov	r16, r23
			printf("ADC Value: %d\r\n", adc_value);
 548:	df 93       	push	r29
 54a:	cf 93       	push	r28
 54c:	88 e5       	ldi	r24, 0x58	; 88
 54e:	90 e4       	ldi	r25, 0x40	; 64
 550:	9f 93       	push	r25
 552:	8f 93       	push	r24
 554:	0e 94 22 04 	call	0x844	; 0x844 <printf>
			printf("Fan speed: %d\r\n", fanSpeed);
 558:	0f 93       	push	r16
 55a:	1f 93       	push	r17
 55c:	88 e6       	ldi	r24, 0x68	; 104
 55e:	90 e4       	ldi	r25, 0x40	; 64
 560:	9f 93       	push	r25
 562:	8f 93       	push	r24
 564:	0e 94 22 04 	call	0x844	; 0x844 <printf>
			printf("PWM read: %d\r\n", RPM_fan1);
 568:	80 91 78 40 	lds	r24, 0x4078	; 0x804078 <__data_end>
 56c:	90 91 79 40 	lds	r25, 0x4079	; 0x804079 <__data_end+0x1>
 570:	a0 91 7a 40 	lds	r26, 0x407A	; 0x80407a <__data_end+0x2>
 574:	b0 91 7b 40 	lds	r27, 0x407B	; 0x80407b <__data_end+0x3>
 578:	bf 93       	push	r27
 57a:	af 93       	push	r26
 57c:	9f 93       	push	r25
 57e:	8f 93       	push	r24
 580:	8d e1       	ldi	r24, 0x1D	; 29
 582:	90 e4       	ldi	r25, 0x40	; 64
 584:	9f 93       	push	r25
 586:	8f 93       	push	r24
 588:	0e 94 22 04 	call	0x844	; 0x844 <printf>
			printf("\r\n");
 58c:	8b e1       	ldi	r24, 0x1B	; 27
 58e:	90 e4       	ldi	r25, 0x40	; 64
 590:	0e 94 36 04 	call	0x86c	; 0x86c <puts>
			printf("\r\n");
 594:	8b e1       	ldi	r24, 0x1B	; 27
 596:	90 e4       	ldi	r25, 0x40	; 64
 598:	0e 94 36 04 	call	0x86c	; 0x86c <puts>
			//TCA0.SINGLE.CMP0BUF = fanSpeed; // Controls width PWM-signal
			TCA0.SPLIT.LCMP0 = fanSpeed;
 59c:	10 93 28 0a 	sts	0x0A28, r17	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
 5a0:	8d b7       	in	r24, 0x3d	; 61
 5a2:	9e b7       	in	r25, 0x3e	; 62
 5a4:	0e 96       	adiw	r24, 0x0e	; 14
 5a6:	8d bf       	out	0x3d, r24	; 61
 5a8:	9e bf       	out	0x3e, r25	; 62
 5aa:	ac cf       	rjmp	.-168    	; 0x504 <main+0x22>

000005ac <__fixunssfsi>:
 5ac:	0e 94 4a 03 	call	0x694	; 0x694 <__fp_splitA>
 5b0:	88 f0       	brcs	.+34     	; 0x5d4 <__fixunssfsi+0x28>
 5b2:	9f 57       	subi	r25, 0x7F	; 127
 5b4:	98 f0       	brcs	.+38     	; 0x5dc <__fixunssfsi+0x30>
 5b6:	b9 2f       	mov	r27, r25
 5b8:	99 27       	eor	r25, r25
 5ba:	b7 51       	subi	r27, 0x17	; 23
 5bc:	b0 f0       	brcs	.+44     	; 0x5ea <__fixunssfsi+0x3e>
 5be:	e1 f0       	breq	.+56     	; 0x5f8 <__fixunssfsi+0x4c>
 5c0:	66 0f       	add	r22, r22
 5c2:	77 1f       	adc	r23, r23
 5c4:	88 1f       	adc	r24, r24
 5c6:	99 1f       	adc	r25, r25
 5c8:	1a f0       	brmi	.+6      	; 0x5d0 <__fixunssfsi+0x24>
 5ca:	ba 95       	dec	r27
 5cc:	c9 f7       	brne	.-14     	; 0x5c0 <__fixunssfsi+0x14>
 5ce:	14 c0       	rjmp	.+40     	; 0x5f8 <__fixunssfsi+0x4c>
 5d0:	b1 30       	cpi	r27, 0x01	; 1
 5d2:	91 f0       	breq	.+36     	; 0x5f8 <__fixunssfsi+0x4c>
 5d4:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__fp_zero>
 5d8:	b1 e0       	ldi	r27, 0x01	; 1
 5da:	08 95       	ret
 5dc:	0c 94 64 03 	jmp	0x6c8	; 0x6c8 <__fp_zero>
 5e0:	67 2f       	mov	r22, r23
 5e2:	78 2f       	mov	r23, r24
 5e4:	88 27       	eor	r24, r24
 5e6:	b8 5f       	subi	r27, 0xF8	; 248
 5e8:	39 f0       	breq	.+14     	; 0x5f8 <__fixunssfsi+0x4c>
 5ea:	b9 3f       	cpi	r27, 0xF9	; 249
 5ec:	cc f3       	brlt	.-14     	; 0x5e0 <__fixunssfsi+0x34>
 5ee:	86 95       	lsr	r24
 5f0:	77 95       	ror	r23
 5f2:	67 95       	ror	r22
 5f4:	b3 95       	inc	r27
 5f6:	d9 f7       	brne	.-10     	; 0x5ee <__fixunssfsi+0x42>
 5f8:	3e f4       	brtc	.+14     	; 0x608 <__fixunssfsi+0x5c>
 5fa:	90 95       	com	r25
 5fc:	80 95       	com	r24
 5fe:	70 95       	com	r23
 600:	61 95       	neg	r22
 602:	7f 4f       	sbci	r23, 0xFF	; 255
 604:	8f 4f       	sbci	r24, 0xFF	; 255
 606:	9f 4f       	sbci	r25, 0xFF	; 255
 608:	08 95       	ret

0000060a <__floatunsisf>:
 60a:	e8 94       	clt
 60c:	09 c0       	rjmp	.+18     	; 0x620 <__floatsisf+0x12>

0000060e <__floatsisf>:
 60e:	97 fb       	bst	r25, 7
 610:	3e f4       	brtc	.+14     	; 0x620 <__floatsisf+0x12>
 612:	90 95       	com	r25
 614:	80 95       	com	r24
 616:	70 95       	com	r23
 618:	61 95       	neg	r22
 61a:	7f 4f       	sbci	r23, 0xFF	; 255
 61c:	8f 4f       	sbci	r24, 0xFF	; 255
 61e:	9f 4f       	sbci	r25, 0xFF	; 255
 620:	99 23       	and	r25, r25
 622:	a9 f0       	breq	.+42     	; 0x64e <__floatsisf+0x40>
 624:	f9 2f       	mov	r31, r25
 626:	96 e9       	ldi	r25, 0x96	; 150
 628:	bb 27       	eor	r27, r27
 62a:	93 95       	inc	r25
 62c:	f6 95       	lsr	r31
 62e:	87 95       	ror	r24
 630:	77 95       	ror	r23
 632:	67 95       	ror	r22
 634:	b7 95       	ror	r27
 636:	f1 11       	cpse	r31, r1
 638:	f8 cf       	rjmp	.-16     	; 0x62a <__floatsisf+0x1c>
 63a:	fa f4       	brpl	.+62     	; 0x67a <__floatsisf+0x6c>
 63c:	bb 0f       	add	r27, r27
 63e:	11 f4       	brne	.+4      	; 0x644 <__floatsisf+0x36>
 640:	60 ff       	sbrs	r22, 0
 642:	1b c0       	rjmp	.+54     	; 0x67a <__floatsisf+0x6c>
 644:	6f 5f       	subi	r22, 0xFF	; 255
 646:	7f 4f       	sbci	r23, 0xFF	; 255
 648:	8f 4f       	sbci	r24, 0xFF	; 255
 64a:	9f 4f       	sbci	r25, 0xFF	; 255
 64c:	16 c0       	rjmp	.+44     	; 0x67a <__floatsisf+0x6c>
 64e:	88 23       	and	r24, r24
 650:	11 f0       	breq	.+4      	; 0x656 <__floatsisf+0x48>
 652:	96 e9       	ldi	r25, 0x96	; 150
 654:	11 c0       	rjmp	.+34     	; 0x678 <__floatsisf+0x6a>
 656:	77 23       	and	r23, r23
 658:	21 f0       	breq	.+8      	; 0x662 <__floatsisf+0x54>
 65a:	9e e8       	ldi	r25, 0x8E	; 142
 65c:	87 2f       	mov	r24, r23
 65e:	76 2f       	mov	r23, r22
 660:	05 c0       	rjmp	.+10     	; 0x66c <__floatsisf+0x5e>
 662:	66 23       	and	r22, r22
 664:	71 f0       	breq	.+28     	; 0x682 <__floatsisf+0x74>
 666:	96 e8       	ldi	r25, 0x86	; 134
 668:	86 2f       	mov	r24, r22
 66a:	70 e0       	ldi	r23, 0x00	; 0
 66c:	60 e0       	ldi	r22, 0x00	; 0
 66e:	2a f0       	brmi	.+10     	; 0x67a <__floatsisf+0x6c>
 670:	9a 95       	dec	r25
 672:	66 0f       	add	r22, r22
 674:	77 1f       	adc	r23, r23
 676:	88 1f       	adc	r24, r24
 678:	da f7       	brpl	.-10     	; 0x670 <__floatsisf+0x62>
 67a:	88 0f       	add	r24, r24
 67c:	96 95       	lsr	r25
 67e:	87 95       	ror	r24
 680:	97 f9       	bld	r25, 7
 682:	08 95       	ret

00000684 <__fp_split3>:
 684:	57 fd       	sbrc	r21, 7
 686:	90 58       	subi	r25, 0x80	; 128
 688:	44 0f       	add	r20, r20
 68a:	55 1f       	adc	r21, r21
 68c:	59 f0       	breq	.+22     	; 0x6a4 <__fp_splitA+0x10>
 68e:	5f 3f       	cpi	r21, 0xFF	; 255
 690:	71 f0       	breq	.+28     	; 0x6ae <__fp_splitA+0x1a>
 692:	47 95       	ror	r20

00000694 <__fp_splitA>:
 694:	88 0f       	add	r24, r24
 696:	97 fb       	bst	r25, 7
 698:	99 1f       	adc	r25, r25
 69a:	61 f0       	breq	.+24     	; 0x6b4 <__fp_splitA+0x20>
 69c:	9f 3f       	cpi	r25, 0xFF	; 255
 69e:	79 f0       	breq	.+30     	; 0x6be <__fp_splitA+0x2a>
 6a0:	87 95       	ror	r24
 6a2:	08 95       	ret
 6a4:	12 16       	cp	r1, r18
 6a6:	13 06       	cpc	r1, r19
 6a8:	14 06       	cpc	r1, r20
 6aa:	55 1f       	adc	r21, r21
 6ac:	f2 cf       	rjmp	.-28     	; 0x692 <__fp_split3+0xe>
 6ae:	46 95       	lsr	r20
 6b0:	f1 df       	rcall	.-30     	; 0x694 <__fp_splitA>
 6b2:	08 c0       	rjmp	.+16     	; 0x6c4 <__fp_splitA+0x30>
 6b4:	16 16       	cp	r1, r22
 6b6:	17 06       	cpc	r1, r23
 6b8:	18 06       	cpc	r1, r24
 6ba:	99 1f       	adc	r25, r25
 6bc:	f1 cf       	rjmp	.-30     	; 0x6a0 <__fp_splitA+0xc>
 6be:	86 95       	lsr	r24
 6c0:	71 05       	cpc	r23, r1
 6c2:	61 05       	cpc	r22, r1
 6c4:	08 94       	sec
 6c6:	08 95       	ret

000006c8 <__fp_zero>:
 6c8:	e8 94       	clt

000006ca <__fp_szero>:
 6ca:	bb 27       	eor	r27, r27
 6cc:	66 27       	eor	r22, r22
 6ce:	77 27       	eor	r23, r23
 6d0:	cb 01       	movw	r24, r22
 6d2:	97 f9       	bld	r25, 7
 6d4:	08 95       	ret

000006d6 <__mulsf3>:
 6d6:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__mulsf3x>
 6da:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__fp_round>
 6de:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__fp_pscA>
 6e2:	38 f0       	brcs	.+14     	; 0x6f2 <__mulsf3+0x1c>
 6e4:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_pscB>
 6e8:	20 f0       	brcs	.+8      	; 0x6f2 <__mulsf3+0x1c>
 6ea:	95 23       	and	r25, r21
 6ec:	11 f0       	breq	.+4      	; 0x6f2 <__mulsf3+0x1c>
 6ee:	0c 94 d8 03 	jmp	0x7b0	; 0x7b0 <__fp_inf>
 6f2:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <__fp_nan>
 6f6:	11 24       	eor	r1, r1
 6f8:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__fp_szero>

000006fc <__mulsf3x>:
 6fc:	0e 94 42 03 	call	0x684	; 0x684 <__fp_split3>
 700:	70 f3       	brcs	.-36     	; 0x6de <__mulsf3+0x8>

00000702 <__mulsf3_pse>:
 702:	95 9f       	mul	r25, r21
 704:	c1 f3       	breq	.-16     	; 0x6f6 <__mulsf3+0x20>
 706:	95 0f       	add	r25, r21
 708:	50 e0       	ldi	r21, 0x00	; 0
 70a:	55 1f       	adc	r21, r21
 70c:	62 9f       	mul	r22, r18
 70e:	f0 01       	movw	r30, r0
 710:	72 9f       	mul	r23, r18
 712:	bb 27       	eor	r27, r27
 714:	f0 0d       	add	r31, r0
 716:	b1 1d       	adc	r27, r1
 718:	63 9f       	mul	r22, r19
 71a:	aa 27       	eor	r26, r26
 71c:	f0 0d       	add	r31, r0
 71e:	b1 1d       	adc	r27, r1
 720:	aa 1f       	adc	r26, r26
 722:	64 9f       	mul	r22, r20
 724:	66 27       	eor	r22, r22
 726:	b0 0d       	add	r27, r0
 728:	a1 1d       	adc	r26, r1
 72a:	66 1f       	adc	r22, r22
 72c:	82 9f       	mul	r24, r18
 72e:	22 27       	eor	r18, r18
 730:	b0 0d       	add	r27, r0
 732:	a1 1d       	adc	r26, r1
 734:	62 1f       	adc	r22, r18
 736:	73 9f       	mul	r23, r19
 738:	b0 0d       	add	r27, r0
 73a:	a1 1d       	adc	r26, r1
 73c:	62 1f       	adc	r22, r18
 73e:	83 9f       	mul	r24, r19
 740:	a0 0d       	add	r26, r0
 742:	61 1d       	adc	r22, r1
 744:	22 1f       	adc	r18, r18
 746:	74 9f       	mul	r23, r20
 748:	33 27       	eor	r19, r19
 74a:	a0 0d       	add	r26, r0
 74c:	61 1d       	adc	r22, r1
 74e:	23 1f       	adc	r18, r19
 750:	84 9f       	mul	r24, r20
 752:	60 0d       	add	r22, r0
 754:	21 1d       	adc	r18, r1
 756:	82 2f       	mov	r24, r18
 758:	76 2f       	mov	r23, r22
 75a:	6a 2f       	mov	r22, r26
 75c:	11 24       	eor	r1, r1
 75e:	9f 57       	subi	r25, 0x7F	; 127
 760:	50 40       	sbci	r21, 0x00	; 0
 762:	9a f0       	brmi	.+38     	; 0x78a <__mulsf3_pse+0x88>
 764:	f1 f0       	breq	.+60     	; 0x7a2 <__mulsf3_pse+0xa0>
 766:	88 23       	and	r24, r24
 768:	4a f0       	brmi	.+18     	; 0x77c <__mulsf3_pse+0x7a>
 76a:	ee 0f       	add	r30, r30
 76c:	ff 1f       	adc	r31, r31
 76e:	bb 1f       	adc	r27, r27
 770:	66 1f       	adc	r22, r22
 772:	77 1f       	adc	r23, r23
 774:	88 1f       	adc	r24, r24
 776:	91 50       	subi	r25, 0x01	; 1
 778:	50 40       	sbci	r21, 0x00	; 0
 77a:	a9 f7       	brne	.-22     	; 0x766 <__mulsf3_pse+0x64>
 77c:	9e 3f       	cpi	r25, 0xFE	; 254
 77e:	51 05       	cpc	r21, r1
 780:	80 f0       	brcs	.+32     	; 0x7a2 <__mulsf3_pse+0xa0>
 782:	0c 94 d8 03 	jmp	0x7b0	; 0x7b0 <__fp_inf>
 786:	0c 94 65 03 	jmp	0x6ca	; 0x6ca <__fp_szero>
 78a:	5f 3f       	cpi	r21, 0xFF	; 255
 78c:	e4 f3       	brlt	.-8      	; 0x786 <__mulsf3_pse+0x84>
 78e:	98 3e       	cpi	r25, 0xE8	; 232
 790:	d4 f3       	brlt	.-12     	; 0x786 <__mulsf3_pse+0x84>
 792:	86 95       	lsr	r24
 794:	77 95       	ror	r23
 796:	67 95       	ror	r22
 798:	b7 95       	ror	r27
 79a:	f7 95       	ror	r31
 79c:	e7 95       	ror	r30
 79e:	9f 5f       	subi	r25, 0xFF	; 255
 7a0:	c1 f7       	brne	.-16     	; 0x792 <__mulsf3_pse+0x90>
 7a2:	fe 2b       	or	r31, r30
 7a4:	88 0f       	add	r24, r24
 7a6:	91 1d       	adc	r25, r1
 7a8:	96 95       	lsr	r25
 7aa:	87 95       	ror	r24
 7ac:	97 f9       	bld	r25, 7
 7ae:	08 95       	ret

000007b0 <__fp_inf>:
 7b0:	97 f9       	bld	r25, 7
 7b2:	9f 67       	ori	r25, 0x7F	; 127
 7b4:	80 e8       	ldi	r24, 0x80	; 128
 7b6:	70 e0       	ldi	r23, 0x00	; 0
 7b8:	60 e0       	ldi	r22, 0x00	; 0
 7ba:	08 95       	ret

000007bc <__fp_nan>:
 7bc:	9f ef       	ldi	r25, 0xFF	; 255
 7be:	80 ec       	ldi	r24, 0xC0	; 192
 7c0:	08 95       	ret

000007c2 <__fp_pscA>:
 7c2:	00 24       	eor	r0, r0
 7c4:	0a 94       	dec	r0
 7c6:	16 16       	cp	r1, r22
 7c8:	17 06       	cpc	r1, r23
 7ca:	18 06       	cpc	r1, r24
 7cc:	09 06       	cpc	r0, r25
 7ce:	08 95       	ret

000007d0 <__fp_pscB>:
 7d0:	00 24       	eor	r0, r0
 7d2:	0a 94       	dec	r0
 7d4:	12 16       	cp	r1, r18
 7d6:	13 06       	cpc	r1, r19
 7d8:	14 06       	cpc	r1, r20
 7da:	05 06       	cpc	r0, r21
 7dc:	08 95       	ret

000007de <__fp_round>:
 7de:	09 2e       	mov	r0, r25
 7e0:	03 94       	inc	r0
 7e2:	00 0c       	add	r0, r0
 7e4:	11 f4       	brne	.+4      	; 0x7ea <__fp_round+0xc>
 7e6:	88 23       	and	r24, r24
 7e8:	52 f0       	brmi	.+20     	; 0x7fe <__fp_round+0x20>
 7ea:	bb 0f       	add	r27, r27
 7ec:	40 f4       	brcc	.+16     	; 0x7fe <__fp_round+0x20>
 7ee:	bf 2b       	or	r27, r31
 7f0:	11 f4       	brne	.+4      	; 0x7f6 <__fp_round+0x18>
 7f2:	60 ff       	sbrs	r22, 0
 7f4:	04 c0       	rjmp	.+8      	; 0x7fe <__fp_round+0x20>
 7f6:	6f 5f       	subi	r22, 0xFF	; 255
 7f8:	7f 4f       	sbci	r23, 0xFF	; 255
 7fa:	8f 4f       	sbci	r24, 0xFF	; 255
 7fc:	9f 4f       	sbci	r25, 0xFF	; 255
 7fe:	08 95       	ret

00000800 <__udivmodsi4>:
 800:	a1 e2       	ldi	r26, 0x21	; 33
 802:	1a 2e       	mov	r1, r26
 804:	aa 1b       	sub	r26, r26
 806:	bb 1b       	sub	r27, r27
 808:	fd 01       	movw	r30, r26
 80a:	0d c0       	rjmp	.+26     	; 0x826 <__udivmodsi4_ep>

0000080c <__udivmodsi4_loop>:
 80c:	aa 1f       	adc	r26, r26
 80e:	bb 1f       	adc	r27, r27
 810:	ee 1f       	adc	r30, r30
 812:	ff 1f       	adc	r31, r31
 814:	a2 17       	cp	r26, r18
 816:	b3 07       	cpc	r27, r19
 818:	e4 07       	cpc	r30, r20
 81a:	f5 07       	cpc	r31, r21
 81c:	20 f0       	brcs	.+8      	; 0x826 <__udivmodsi4_ep>
 81e:	a2 1b       	sub	r26, r18
 820:	b3 0b       	sbc	r27, r19
 822:	e4 0b       	sbc	r30, r20
 824:	f5 0b       	sbc	r31, r21

00000826 <__udivmodsi4_ep>:
 826:	66 1f       	adc	r22, r22
 828:	77 1f       	adc	r23, r23
 82a:	88 1f       	adc	r24, r24
 82c:	99 1f       	adc	r25, r25
 82e:	1a 94       	dec	r1
 830:	69 f7       	brne	.-38     	; 0x80c <__udivmodsi4_loop>
 832:	60 95       	com	r22
 834:	70 95       	com	r23
 836:	80 95       	com	r24
 838:	90 95       	com	r25
 83a:	9b 01       	movw	r18, r22
 83c:	ac 01       	movw	r20, r24
 83e:	bd 01       	movw	r22, r26
 840:	cf 01       	movw	r24, r30
 842:	08 95       	ret

00000844 <printf>:
 844:	cf 93       	push	r28
 846:	df 93       	push	r29
 848:	cd b7       	in	r28, 0x3d	; 61
 84a:	de b7       	in	r29, 0x3e	; 62
 84c:	ae 01       	movw	r20, r28
 84e:	4b 5f       	subi	r20, 0xFB	; 251
 850:	5f 4f       	sbci	r21, 0xFF	; 255
 852:	fa 01       	movw	r30, r20
 854:	61 91       	ld	r22, Z+
 856:	71 91       	ld	r23, Z+
 858:	af 01       	movw	r20, r30
 85a:	80 91 84 40 	lds	r24, 0x4084	; 0x804084 <__iob+0x2>
 85e:	90 91 85 40 	lds	r25, 0x4085	; 0x804085 <__iob+0x3>
 862:	0e 94 66 04 	call	0x8cc	; 0x8cc <vfprintf>
 866:	df 91       	pop	r29
 868:	cf 91       	pop	r28
 86a:	08 95       	ret

0000086c <puts>:
 86c:	0f 93       	push	r16
 86e:	1f 93       	push	r17
 870:	cf 93       	push	r28
 872:	df 93       	push	r29
 874:	e0 91 84 40 	lds	r30, 0x4084	; 0x804084 <__iob+0x2>
 878:	f0 91 85 40 	lds	r31, 0x4085	; 0x804085 <__iob+0x3>
 87c:	23 81       	ldd	r18, Z+3	; 0x03
 87e:	21 ff       	sbrs	r18, 1
 880:	1b c0       	rjmp	.+54     	; 0x8b8 <puts+0x4c>
 882:	8c 01       	movw	r16, r24
 884:	d0 e0       	ldi	r29, 0x00	; 0
 886:	c0 e0       	ldi	r28, 0x00	; 0
 888:	f8 01       	movw	r30, r16
 88a:	81 91       	ld	r24, Z+
 88c:	8f 01       	movw	r16, r30
 88e:	60 91 84 40 	lds	r22, 0x4084	; 0x804084 <__iob+0x2>
 892:	70 91 85 40 	lds	r23, 0x4085	; 0x804085 <__iob+0x3>
 896:	db 01       	movw	r26, r22
 898:	18 96       	adiw	r26, 0x08	; 8
 89a:	ed 91       	ld	r30, X+
 89c:	fc 91       	ld	r31, X
 89e:	19 97       	sbiw	r26, 0x09	; 9
 8a0:	88 23       	and	r24, r24
 8a2:	31 f0       	breq	.+12     	; 0x8b0 <puts+0x44>
 8a4:	09 95       	icall
 8a6:	89 2b       	or	r24, r25
 8a8:	79 f3       	breq	.-34     	; 0x888 <puts+0x1c>
 8aa:	df ef       	ldi	r29, 0xFF	; 255
 8ac:	cf ef       	ldi	r28, 0xFF	; 255
 8ae:	ec cf       	rjmp	.-40     	; 0x888 <puts+0x1c>
 8b0:	8a e0       	ldi	r24, 0x0A	; 10
 8b2:	09 95       	icall
 8b4:	89 2b       	or	r24, r25
 8b6:	19 f0       	breq	.+6      	; 0x8be <puts+0x52>
 8b8:	8f ef       	ldi	r24, 0xFF	; 255
 8ba:	9f ef       	ldi	r25, 0xFF	; 255
 8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <puts+0x56>
 8be:	8d 2f       	mov	r24, r29
 8c0:	9c 2f       	mov	r25, r28
 8c2:	df 91       	pop	r29
 8c4:	cf 91       	pop	r28
 8c6:	1f 91       	pop	r17
 8c8:	0f 91       	pop	r16
 8ca:	08 95       	ret

000008cc <vfprintf>:
 8cc:	2f 92       	push	r2
 8ce:	3f 92       	push	r3
 8d0:	4f 92       	push	r4
 8d2:	5f 92       	push	r5
 8d4:	6f 92       	push	r6
 8d6:	7f 92       	push	r7
 8d8:	8f 92       	push	r8
 8da:	9f 92       	push	r9
 8dc:	af 92       	push	r10
 8de:	bf 92       	push	r11
 8e0:	cf 92       	push	r12
 8e2:	df 92       	push	r13
 8e4:	ef 92       	push	r14
 8e6:	ff 92       	push	r15
 8e8:	0f 93       	push	r16
 8ea:	1f 93       	push	r17
 8ec:	cf 93       	push	r28
 8ee:	df 93       	push	r29
 8f0:	cd b7       	in	r28, 0x3d	; 61
 8f2:	de b7       	in	r29, 0x3e	; 62
 8f4:	2b 97       	sbiw	r28, 0x0b	; 11
 8f6:	cd bf       	out	0x3d, r28	; 61
 8f8:	de bf       	out	0x3e, r29	; 62
 8fa:	6c 01       	movw	r12, r24
 8fc:	7b 01       	movw	r14, r22
 8fe:	8a 01       	movw	r16, r20
 900:	fc 01       	movw	r30, r24
 902:	16 82       	std	Z+6, r1	; 0x06
 904:	17 82       	std	Z+7, r1	; 0x07
 906:	83 81       	ldd	r24, Z+3	; 0x03
 908:	81 ff       	sbrs	r24, 1
 90a:	cc c1       	rjmp	.+920    	; 0xca4 <vfprintf+0x3d8>
 90c:	ce 01       	movw	r24, r28
 90e:	01 96       	adiw	r24, 0x01	; 1
 910:	3c 01       	movw	r6, r24
 912:	f6 01       	movw	r30, r12
 914:	93 81       	ldd	r25, Z+3	; 0x03
 916:	f7 01       	movw	r30, r14
 918:	93 fd       	sbrc	r25, 3
 91a:	85 91       	lpm	r24, Z+
 91c:	93 ff       	sbrs	r25, 3
 91e:	81 91       	ld	r24, Z+
 920:	7f 01       	movw	r14, r30
 922:	88 23       	and	r24, r24
 924:	09 f4       	brne	.+2      	; 0x928 <vfprintf+0x5c>
 926:	ba c1       	rjmp	.+884    	; 0xc9c <vfprintf+0x3d0>
 928:	85 32       	cpi	r24, 0x25	; 37
 92a:	39 f4       	brne	.+14     	; 0x93a <vfprintf+0x6e>
 92c:	93 fd       	sbrc	r25, 3
 92e:	85 91       	lpm	r24, Z+
 930:	93 ff       	sbrs	r25, 3
 932:	81 91       	ld	r24, Z+
 934:	7f 01       	movw	r14, r30
 936:	85 32       	cpi	r24, 0x25	; 37
 938:	29 f4       	brne	.+10     	; 0x944 <vfprintf+0x78>
 93a:	b6 01       	movw	r22, r12
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	0e 94 80 06 	call	0xd00	; 0xd00 <fputc>
 942:	e7 cf       	rjmp	.-50     	; 0x912 <vfprintf+0x46>
 944:	91 2c       	mov	r9, r1
 946:	21 2c       	mov	r2, r1
 948:	31 2c       	mov	r3, r1
 94a:	ff e1       	ldi	r31, 0x1F	; 31
 94c:	f3 15       	cp	r31, r3
 94e:	d8 f0       	brcs	.+54     	; 0x986 <vfprintf+0xba>
 950:	8b 32       	cpi	r24, 0x2B	; 43
 952:	79 f0       	breq	.+30     	; 0x972 <vfprintf+0xa6>
 954:	38 f4       	brcc	.+14     	; 0x964 <vfprintf+0x98>
 956:	80 32       	cpi	r24, 0x20	; 32
 958:	79 f0       	breq	.+30     	; 0x978 <vfprintf+0xac>
 95a:	83 32       	cpi	r24, 0x23	; 35
 95c:	a1 f4       	brne	.+40     	; 0x986 <vfprintf+0xba>
 95e:	23 2d       	mov	r18, r3
 960:	20 61       	ori	r18, 0x10	; 16
 962:	1d c0       	rjmp	.+58     	; 0x99e <vfprintf+0xd2>
 964:	8d 32       	cpi	r24, 0x2D	; 45
 966:	61 f0       	breq	.+24     	; 0x980 <vfprintf+0xb4>
 968:	80 33       	cpi	r24, 0x30	; 48
 96a:	69 f4       	brne	.+26     	; 0x986 <vfprintf+0xba>
 96c:	23 2d       	mov	r18, r3
 96e:	21 60       	ori	r18, 0x01	; 1
 970:	16 c0       	rjmp	.+44     	; 0x99e <vfprintf+0xd2>
 972:	83 2d       	mov	r24, r3
 974:	82 60       	ori	r24, 0x02	; 2
 976:	38 2e       	mov	r3, r24
 978:	e3 2d       	mov	r30, r3
 97a:	e4 60       	ori	r30, 0x04	; 4
 97c:	3e 2e       	mov	r3, r30
 97e:	2a c0       	rjmp	.+84     	; 0x9d4 <vfprintf+0x108>
 980:	f3 2d       	mov	r31, r3
 982:	f8 60       	ori	r31, 0x08	; 8
 984:	1d c0       	rjmp	.+58     	; 0x9c0 <vfprintf+0xf4>
 986:	37 fc       	sbrc	r3, 7
 988:	2d c0       	rjmp	.+90     	; 0x9e4 <vfprintf+0x118>
 98a:	20 ed       	ldi	r18, 0xD0	; 208
 98c:	28 0f       	add	r18, r24
 98e:	2a 30       	cpi	r18, 0x0A	; 10
 990:	40 f0       	brcs	.+16     	; 0x9a2 <vfprintf+0xd6>
 992:	8e 32       	cpi	r24, 0x2E	; 46
 994:	b9 f4       	brne	.+46     	; 0x9c4 <vfprintf+0xf8>
 996:	36 fc       	sbrc	r3, 6
 998:	81 c1       	rjmp	.+770    	; 0xc9c <vfprintf+0x3d0>
 99a:	23 2d       	mov	r18, r3
 99c:	20 64       	ori	r18, 0x40	; 64
 99e:	32 2e       	mov	r3, r18
 9a0:	19 c0       	rjmp	.+50     	; 0x9d4 <vfprintf+0x108>
 9a2:	36 fe       	sbrs	r3, 6
 9a4:	06 c0       	rjmp	.+12     	; 0x9b2 <vfprintf+0xe6>
 9a6:	8a e0       	ldi	r24, 0x0A	; 10
 9a8:	98 9e       	mul	r9, r24
 9aa:	20 0d       	add	r18, r0
 9ac:	11 24       	eor	r1, r1
 9ae:	92 2e       	mov	r9, r18
 9b0:	11 c0       	rjmp	.+34     	; 0x9d4 <vfprintf+0x108>
 9b2:	ea e0       	ldi	r30, 0x0A	; 10
 9b4:	2e 9e       	mul	r2, r30
 9b6:	20 0d       	add	r18, r0
 9b8:	11 24       	eor	r1, r1
 9ba:	22 2e       	mov	r2, r18
 9bc:	f3 2d       	mov	r31, r3
 9be:	f0 62       	ori	r31, 0x20	; 32
 9c0:	3f 2e       	mov	r3, r31
 9c2:	08 c0       	rjmp	.+16     	; 0x9d4 <vfprintf+0x108>
 9c4:	8c 36       	cpi	r24, 0x6C	; 108
 9c6:	21 f4       	brne	.+8      	; 0x9d0 <vfprintf+0x104>
 9c8:	83 2d       	mov	r24, r3
 9ca:	80 68       	ori	r24, 0x80	; 128
 9cc:	38 2e       	mov	r3, r24
 9ce:	02 c0       	rjmp	.+4      	; 0x9d4 <vfprintf+0x108>
 9d0:	88 36       	cpi	r24, 0x68	; 104
 9d2:	41 f4       	brne	.+16     	; 0x9e4 <vfprintf+0x118>
 9d4:	f7 01       	movw	r30, r14
 9d6:	93 fd       	sbrc	r25, 3
 9d8:	85 91       	lpm	r24, Z+
 9da:	93 ff       	sbrs	r25, 3
 9dc:	81 91       	ld	r24, Z+
 9de:	7f 01       	movw	r14, r30
 9e0:	81 11       	cpse	r24, r1
 9e2:	b3 cf       	rjmp	.-154    	; 0x94a <vfprintf+0x7e>
 9e4:	98 2f       	mov	r25, r24
 9e6:	9f 7d       	andi	r25, 0xDF	; 223
 9e8:	95 54       	subi	r25, 0x45	; 69
 9ea:	93 30       	cpi	r25, 0x03	; 3
 9ec:	28 f4       	brcc	.+10     	; 0x9f8 <vfprintf+0x12c>
 9ee:	0c 5f       	subi	r16, 0xFC	; 252
 9f0:	1f 4f       	sbci	r17, 0xFF	; 255
 9f2:	9f e3       	ldi	r25, 0x3F	; 63
 9f4:	99 83       	std	Y+1, r25	; 0x01
 9f6:	0d c0       	rjmp	.+26     	; 0xa12 <vfprintf+0x146>
 9f8:	83 36       	cpi	r24, 0x63	; 99
 9fa:	31 f0       	breq	.+12     	; 0xa08 <vfprintf+0x13c>
 9fc:	83 37       	cpi	r24, 0x73	; 115
 9fe:	71 f0       	breq	.+28     	; 0xa1c <vfprintf+0x150>
 a00:	83 35       	cpi	r24, 0x53	; 83
 a02:	09 f0       	breq	.+2      	; 0xa06 <vfprintf+0x13a>
 a04:	59 c0       	rjmp	.+178    	; 0xab8 <vfprintf+0x1ec>
 a06:	21 c0       	rjmp	.+66     	; 0xa4a <vfprintf+0x17e>
 a08:	f8 01       	movw	r30, r16
 a0a:	80 81       	ld	r24, Z
 a0c:	89 83       	std	Y+1, r24	; 0x01
 a0e:	0e 5f       	subi	r16, 0xFE	; 254
 a10:	1f 4f       	sbci	r17, 0xFF	; 255
 a12:	88 24       	eor	r8, r8
 a14:	83 94       	inc	r8
 a16:	91 2c       	mov	r9, r1
 a18:	53 01       	movw	r10, r6
 a1a:	13 c0       	rjmp	.+38     	; 0xa42 <vfprintf+0x176>
 a1c:	28 01       	movw	r4, r16
 a1e:	f2 e0       	ldi	r31, 0x02	; 2
 a20:	4f 0e       	add	r4, r31
 a22:	51 1c       	adc	r5, r1
 a24:	f8 01       	movw	r30, r16
 a26:	a0 80       	ld	r10, Z
 a28:	b1 80       	ldd	r11, Z+1	; 0x01
 a2a:	36 fe       	sbrs	r3, 6
 a2c:	03 c0       	rjmp	.+6      	; 0xa34 <vfprintf+0x168>
 a2e:	69 2d       	mov	r22, r9
 a30:	70 e0       	ldi	r23, 0x00	; 0
 a32:	02 c0       	rjmp	.+4      	; 0xa38 <vfprintf+0x16c>
 a34:	6f ef       	ldi	r22, 0xFF	; 255
 a36:	7f ef       	ldi	r23, 0xFF	; 255
 a38:	c5 01       	movw	r24, r10
 a3a:	0e 94 75 06 	call	0xcea	; 0xcea <strnlen>
 a3e:	4c 01       	movw	r8, r24
 a40:	82 01       	movw	r16, r4
 a42:	f3 2d       	mov	r31, r3
 a44:	ff 77       	andi	r31, 0x7F	; 127
 a46:	3f 2e       	mov	r3, r31
 a48:	16 c0       	rjmp	.+44     	; 0xa76 <vfprintf+0x1aa>
 a4a:	28 01       	movw	r4, r16
 a4c:	22 e0       	ldi	r18, 0x02	; 2
 a4e:	42 0e       	add	r4, r18
 a50:	51 1c       	adc	r5, r1
 a52:	f8 01       	movw	r30, r16
 a54:	a0 80       	ld	r10, Z
 a56:	b1 80       	ldd	r11, Z+1	; 0x01
 a58:	36 fe       	sbrs	r3, 6
 a5a:	03 c0       	rjmp	.+6      	; 0xa62 <vfprintf+0x196>
 a5c:	69 2d       	mov	r22, r9
 a5e:	70 e0       	ldi	r23, 0x00	; 0
 a60:	02 c0       	rjmp	.+4      	; 0xa66 <vfprintf+0x19a>
 a62:	6f ef       	ldi	r22, 0xFF	; 255
 a64:	7f ef       	ldi	r23, 0xFF	; 255
 a66:	c5 01       	movw	r24, r10
 a68:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <strnlen_P>
 a6c:	4c 01       	movw	r8, r24
 a6e:	f3 2d       	mov	r31, r3
 a70:	f0 68       	ori	r31, 0x80	; 128
 a72:	3f 2e       	mov	r3, r31
 a74:	82 01       	movw	r16, r4
 a76:	33 fc       	sbrc	r3, 3
 a78:	1b c0       	rjmp	.+54     	; 0xab0 <vfprintf+0x1e4>
 a7a:	82 2d       	mov	r24, r2
 a7c:	90 e0       	ldi	r25, 0x00	; 0
 a7e:	88 16       	cp	r8, r24
 a80:	99 06       	cpc	r9, r25
 a82:	b0 f4       	brcc	.+44     	; 0xab0 <vfprintf+0x1e4>
 a84:	b6 01       	movw	r22, r12
 a86:	80 e2       	ldi	r24, 0x20	; 32
 a88:	90 e0       	ldi	r25, 0x00	; 0
 a8a:	0e 94 80 06 	call	0xd00	; 0xd00 <fputc>
 a8e:	2a 94       	dec	r2
 a90:	f4 cf       	rjmp	.-24     	; 0xa7a <vfprintf+0x1ae>
 a92:	f5 01       	movw	r30, r10
 a94:	37 fc       	sbrc	r3, 7
 a96:	85 91       	lpm	r24, Z+
 a98:	37 fe       	sbrs	r3, 7
 a9a:	81 91       	ld	r24, Z+
 a9c:	5f 01       	movw	r10, r30
 a9e:	b6 01       	movw	r22, r12
 aa0:	90 e0       	ldi	r25, 0x00	; 0
 aa2:	0e 94 80 06 	call	0xd00	; 0xd00 <fputc>
 aa6:	21 10       	cpse	r2, r1
 aa8:	2a 94       	dec	r2
 aaa:	21 e0       	ldi	r18, 0x01	; 1
 aac:	82 1a       	sub	r8, r18
 aae:	91 08       	sbc	r9, r1
 ab0:	81 14       	cp	r8, r1
 ab2:	91 04       	cpc	r9, r1
 ab4:	71 f7       	brne	.-36     	; 0xa92 <vfprintf+0x1c6>
 ab6:	e8 c0       	rjmp	.+464    	; 0xc88 <vfprintf+0x3bc>
 ab8:	84 36       	cpi	r24, 0x64	; 100
 aba:	11 f0       	breq	.+4      	; 0xac0 <vfprintf+0x1f4>
 abc:	89 36       	cpi	r24, 0x69	; 105
 abe:	41 f5       	brne	.+80     	; 0xb10 <vfprintf+0x244>
 ac0:	f8 01       	movw	r30, r16
 ac2:	37 fe       	sbrs	r3, 7
 ac4:	07 c0       	rjmp	.+14     	; 0xad4 <vfprintf+0x208>
 ac6:	60 81       	ld	r22, Z
 ac8:	71 81       	ldd	r23, Z+1	; 0x01
 aca:	82 81       	ldd	r24, Z+2	; 0x02
 acc:	93 81       	ldd	r25, Z+3	; 0x03
 ace:	0c 5f       	subi	r16, 0xFC	; 252
 ad0:	1f 4f       	sbci	r17, 0xFF	; 255
 ad2:	08 c0       	rjmp	.+16     	; 0xae4 <vfprintf+0x218>
 ad4:	60 81       	ld	r22, Z
 ad6:	71 81       	ldd	r23, Z+1	; 0x01
 ad8:	07 2e       	mov	r0, r23
 ada:	00 0c       	add	r0, r0
 adc:	88 0b       	sbc	r24, r24
 ade:	99 0b       	sbc	r25, r25
 ae0:	0e 5f       	subi	r16, 0xFE	; 254
 ae2:	1f 4f       	sbci	r17, 0xFF	; 255
 ae4:	f3 2d       	mov	r31, r3
 ae6:	ff 76       	andi	r31, 0x6F	; 111
 ae8:	3f 2e       	mov	r3, r31
 aea:	97 ff       	sbrs	r25, 7
 aec:	09 c0       	rjmp	.+18     	; 0xb00 <vfprintf+0x234>
 aee:	90 95       	com	r25
 af0:	80 95       	com	r24
 af2:	70 95       	com	r23
 af4:	61 95       	neg	r22
 af6:	7f 4f       	sbci	r23, 0xFF	; 255
 af8:	8f 4f       	sbci	r24, 0xFF	; 255
 afa:	9f 4f       	sbci	r25, 0xFF	; 255
 afc:	f0 68       	ori	r31, 0x80	; 128
 afe:	3f 2e       	mov	r3, r31
 b00:	2a e0       	ldi	r18, 0x0A	; 10
 b02:	30 e0       	ldi	r19, 0x00	; 0
 b04:	a3 01       	movw	r20, r6
 b06:	0e 94 bc 06 	call	0xd78	; 0xd78 <__ultoa_invert>
 b0a:	88 2e       	mov	r8, r24
 b0c:	86 18       	sub	r8, r6
 b0e:	45 c0       	rjmp	.+138    	; 0xb9a <vfprintf+0x2ce>
 b10:	85 37       	cpi	r24, 0x75	; 117
 b12:	31 f4       	brne	.+12     	; 0xb20 <vfprintf+0x254>
 b14:	23 2d       	mov	r18, r3
 b16:	2f 7e       	andi	r18, 0xEF	; 239
 b18:	b2 2e       	mov	r11, r18
 b1a:	2a e0       	ldi	r18, 0x0A	; 10
 b1c:	30 e0       	ldi	r19, 0x00	; 0
 b1e:	25 c0       	rjmp	.+74     	; 0xb6a <vfprintf+0x29e>
 b20:	93 2d       	mov	r25, r3
 b22:	99 7f       	andi	r25, 0xF9	; 249
 b24:	b9 2e       	mov	r11, r25
 b26:	8f 36       	cpi	r24, 0x6F	; 111
 b28:	c1 f0       	breq	.+48     	; 0xb5a <vfprintf+0x28e>
 b2a:	18 f4       	brcc	.+6      	; 0xb32 <vfprintf+0x266>
 b2c:	88 35       	cpi	r24, 0x58	; 88
 b2e:	79 f0       	breq	.+30     	; 0xb4e <vfprintf+0x282>
 b30:	b5 c0       	rjmp	.+362    	; 0xc9c <vfprintf+0x3d0>
 b32:	80 37       	cpi	r24, 0x70	; 112
 b34:	19 f0       	breq	.+6      	; 0xb3c <vfprintf+0x270>
 b36:	88 37       	cpi	r24, 0x78	; 120
 b38:	21 f0       	breq	.+8      	; 0xb42 <vfprintf+0x276>
 b3a:	b0 c0       	rjmp	.+352    	; 0xc9c <vfprintf+0x3d0>
 b3c:	e9 2f       	mov	r30, r25
 b3e:	e0 61       	ori	r30, 0x10	; 16
 b40:	be 2e       	mov	r11, r30
 b42:	b4 fe       	sbrs	r11, 4
 b44:	0d c0       	rjmp	.+26     	; 0xb60 <vfprintf+0x294>
 b46:	fb 2d       	mov	r31, r11
 b48:	f4 60       	ori	r31, 0x04	; 4
 b4a:	bf 2e       	mov	r11, r31
 b4c:	09 c0       	rjmp	.+18     	; 0xb60 <vfprintf+0x294>
 b4e:	34 fe       	sbrs	r3, 4
 b50:	0a c0       	rjmp	.+20     	; 0xb66 <vfprintf+0x29a>
 b52:	29 2f       	mov	r18, r25
 b54:	26 60       	ori	r18, 0x06	; 6
 b56:	b2 2e       	mov	r11, r18
 b58:	06 c0       	rjmp	.+12     	; 0xb66 <vfprintf+0x29a>
 b5a:	28 e0       	ldi	r18, 0x08	; 8
 b5c:	30 e0       	ldi	r19, 0x00	; 0
 b5e:	05 c0       	rjmp	.+10     	; 0xb6a <vfprintf+0x29e>
 b60:	20 e1       	ldi	r18, 0x10	; 16
 b62:	30 e0       	ldi	r19, 0x00	; 0
 b64:	02 c0       	rjmp	.+4      	; 0xb6a <vfprintf+0x29e>
 b66:	20 e1       	ldi	r18, 0x10	; 16
 b68:	32 e0       	ldi	r19, 0x02	; 2
 b6a:	f8 01       	movw	r30, r16
 b6c:	b7 fe       	sbrs	r11, 7
 b6e:	07 c0       	rjmp	.+14     	; 0xb7e <vfprintf+0x2b2>
 b70:	60 81       	ld	r22, Z
 b72:	71 81       	ldd	r23, Z+1	; 0x01
 b74:	82 81       	ldd	r24, Z+2	; 0x02
 b76:	93 81       	ldd	r25, Z+3	; 0x03
 b78:	0c 5f       	subi	r16, 0xFC	; 252
 b7a:	1f 4f       	sbci	r17, 0xFF	; 255
 b7c:	06 c0       	rjmp	.+12     	; 0xb8a <vfprintf+0x2be>
 b7e:	60 81       	ld	r22, Z
 b80:	71 81       	ldd	r23, Z+1	; 0x01
 b82:	80 e0       	ldi	r24, 0x00	; 0
 b84:	90 e0       	ldi	r25, 0x00	; 0
 b86:	0e 5f       	subi	r16, 0xFE	; 254
 b88:	1f 4f       	sbci	r17, 0xFF	; 255
 b8a:	a3 01       	movw	r20, r6
 b8c:	0e 94 bc 06 	call	0xd78	; 0xd78 <__ultoa_invert>
 b90:	88 2e       	mov	r8, r24
 b92:	86 18       	sub	r8, r6
 b94:	fb 2d       	mov	r31, r11
 b96:	ff 77       	andi	r31, 0x7F	; 127
 b98:	3f 2e       	mov	r3, r31
 b9a:	36 fe       	sbrs	r3, 6
 b9c:	0d c0       	rjmp	.+26     	; 0xbb8 <vfprintf+0x2ec>
 b9e:	23 2d       	mov	r18, r3
 ba0:	2e 7f       	andi	r18, 0xFE	; 254
 ba2:	a2 2e       	mov	r10, r18
 ba4:	89 14       	cp	r8, r9
 ba6:	58 f4       	brcc	.+22     	; 0xbbe <vfprintf+0x2f2>
 ba8:	34 fe       	sbrs	r3, 4
 baa:	0b c0       	rjmp	.+22     	; 0xbc2 <vfprintf+0x2f6>
 bac:	32 fc       	sbrc	r3, 2
 bae:	09 c0       	rjmp	.+18     	; 0xbc2 <vfprintf+0x2f6>
 bb0:	83 2d       	mov	r24, r3
 bb2:	8e 7e       	andi	r24, 0xEE	; 238
 bb4:	a8 2e       	mov	r10, r24
 bb6:	05 c0       	rjmp	.+10     	; 0xbc2 <vfprintf+0x2f6>
 bb8:	b8 2c       	mov	r11, r8
 bba:	a3 2c       	mov	r10, r3
 bbc:	03 c0       	rjmp	.+6      	; 0xbc4 <vfprintf+0x2f8>
 bbe:	b8 2c       	mov	r11, r8
 bc0:	01 c0       	rjmp	.+2      	; 0xbc4 <vfprintf+0x2f8>
 bc2:	b9 2c       	mov	r11, r9
 bc4:	a4 fe       	sbrs	r10, 4
 bc6:	0f c0       	rjmp	.+30     	; 0xbe6 <vfprintf+0x31a>
 bc8:	fe 01       	movw	r30, r28
 bca:	e8 0d       	add	r30, r8
 bcc:	f1 1d       	adc	r31, r1
 bce:	80 81       	ld	r24, Z
 bd0:	80 33       	cpi	r24, 0x30	; 48
 bd2:	21 f4       	brne	.+8      	; 0xbdc <vfprintf+0x310>
 bd4:	9a 2d       	mov	r25, r10
 bd6:	99 7e       	andi	r25, 0xE9	; 233
 bd8:	a9 2e       	mov	r10, r25
 bda:	09 c0       	rjmp	.+18     	; 0xbee <vfprintf+0x322>
 bdc:	a2 fe       	sbrs	r10, 2
 bde:	06 c0       	rjmp	.+12     	; 0xbec <vfprintf+0x320>
 be0:	b3 94       	inc	r11
 be2:	b3 94       	inc	r11
 be4:	04 c0       	rjmp	.+8      	; 0xbee <vfprintf+0x322>
 be6:	8a 2d       	mov	r24, r10
 be8:	86 78       	andi	r24, 0x86	; 134
 bea:	09 f0       	breq	.+2      	; 0xbee <vfprintf+0x322>
 bec:	b3 94       	inc	r11
 bee:	a3 fc       	sbrc	r10, 3
 bf0:	11 c0       	rjmp	.+34     	; 0xc14 <vfprintf+0x348>
 bf2:	a0 fe       	sbrs	r10, 0
 bf4:	06 c0       	rjmp	.+12     	; 0xc02 <vfprintf+0x336>
 bf6:	b2 14       	cp	r11, r2
 bf8:	88 f4       	brcc	.+34     	; 0xc1c <vfprintf+0x350>
 bfa:	28 0c       	add	r2, r8
 bfc:	92 2c       	mov	r9, r2
 bfe:	9b 18       	sub	r9, r11
 c00:	0e c0       	rjmp	.+28     	; 0xc1e <vfprintf+0x352>
 c02:	b2 14       	cp	r11, r2
 c04:	60 f4       	brcc	.+24     	; 0xc1e <vfprintf+0x352>
 c06:	b6 01       	movw	r22, r12
 c08:	80 e2       	ldi	r24, 0x20	; 32
 c0a:	90 e0       	ldi	r25, 0x00	; 0
 c0c:	0e 94 80 06 	call	0xd00	; 0xd00 <fputc>
 c10:	b3 94       	inc	r11
 c12:	f7 cf       	rjmp	.-18     	; 0xc02 <vfprintf+0x336>
 c14:	b2 14       	cp	r11, r2
 c16:	18 f4       	brcc	.+6      	; 0xc1e <vfprintf+0x352>
 c18:	2b 18       	sub	r2, r11
 c1a:	02 c0       	rjmp	.+4      	; 0xc20 <vfprintf+0x354>
 c1c:	98 2c       	mov	r9, r8
 c1e:	21 2c       	mov	r2, r1
 c20:	a4 fe       	sbrs	r10, 4
 c22:	10 c0       	rjmp	.+32     	; 0xc44 <vfprintf+0x378>
 c24:	b6 01       	movw	r22, r12
 c26:	80 e3       	ldi	r24, 0x30	; 48
 c28:	90 e0       	ldi	r25, 0x00	; 0
 c2a:	0e 94 80 06 	call	0xd00	; 0xd00 <fputc>
 c2e:	a2 fe       	sbrs	r10, 2
 c30:	17 c0       	rjmp	.+46     	; 0xc60 <vfprintf+0x394>
 c32:	a1 fc       	sbrc	r10, 1
 c34:	03 c0       	rjmp	.+6      	; 0xc3c <vfprintf+0x370>
 c36:	88 e7       	ldi	r24, 0x78	; 120
 c38:	90 e0       	ldi	r25, 0x00	; 0
 c3a:	02 c0       	rjmp	.+4      	; 0xc40 <vfprintf+0x374>
 c3c:	88 e5       	ldi	r24, 0x58	; 88
 c3e:	90 e0       	ldi	r25, 0x00	; 0
 c40:	b6 01       	movw	r22, r12
 c42:	0c c0       	rjmp	.+24     	; 0xc5c <vfprintf+0x390>
 c44:	8a 2d       	mov	r24, r10
 c46:	86 78       	andi	r24, 0x86	; 134
 c48:	59 f0       	breq	.+22     	; 0xc60 <vfprintf+0x394>
 c4a:	a1 fe       	sbrs	r10, 1
 c4c:	02 c0       	rjmp	.+4      	; 0xc52 <vfprintf+0x386>
 c4e:	8b e2       	ldi	r24, 0x2B	; 43
 c50:	01 c0       	rjmp	.+2      	; 0xc54 <vfprintf+0x388>
 c52:	80 e2       	ldi	r24, 0x20	; 32
 c54:	a7 fc       	sbrc	r10, 7
 c56:	8d e2       	ldi	r24, 0x2D	; 45
 c58:	b6 01       	movw	r22, r12
 c5a:	90 e0       	ldi	r25, 0x00	; 0
 c5c:	0e 94 80 06 	call	0xd00	; 0xd00 <fputc>
 c60:	89 14       	cp	r8, r9
 c62:	38 f4       	brcc	.+14     	; 0xc72 <vfprintf+0x3a6>
 c64:	b6 01       	movw	r22, r12
 c66:	80 e3       	ldi	r24, 0x30	; 48
 c68:	90 e0       	ldi	r25, 0x00	; 0
 c6a:	0e 94 80 06 	call	0xd00	; 0xd00 <fputc>
 c6e:	9a 94       	dec	r9
 c70:	f7 cf       	rjmp	.-18     	; 0xc60 <vfprintf+0x394>
 c72:	8a 94       	dec	r8
 c74:	f3 01       	movw	r30, r6
 c76:	e8 0d       	add	r30, r8
 c78:	f1 1d       	adc	r31, r1
 c7a:	80 81       	ld	r24, Z
 c7c:	b6 01       	movw	r22, r12
 c7e:	90 e0       	ldi	r25, 0x00	; 0
 c80:	0e 94 80 06 	call	0xd00	; 0xd00 <fputc>
 c84:	81 10       	cpse	r8, r1
 c86:	f5 cf       	rjmp	.-22     	; 0xc72 <vfprintf+0x3a6>
 c88:	22 20       	and	r2, r2
 c8a:	09 f4       	brne	.+2      	; 0xc8e <vfprintf+0x3c2>
 c8c:	42 ce       	rjmp	.-892    	; 0x912 <vfprintf+0x46>
 c8e:	b6 01       	movw	r22, r12
 c90:	80 e2       	ldi	r24, 0x20	; 32
 c92:	90 e0       	ldi	r25, 0x00	; 0
 c94:	0e 94 80 06 	call	0xd00	; 0xd00 <fputc>
 c98:	2a 94       	dec	r2
 c9a:	f6 cf       	rjmp	.-20     	; 0xc88 <vfprintf+0x3bc>
 c9c:	f6 01       	movw	r30, r12
 c9e:	86 81       	ldd	r24, Z+6	; 0x06
 ca0:	97 81       	ldd	r25, Z+7	; 0x07
 ca2:	02 c0       	rjmp	.+4      	; 0xca8 <vfprintf+0x3dc>
 ca4:	8f ef       	ldi	r24, 0xFF	; 255
 ca6:	9f ef       	ldi	r25, 0xFF	; 255
 ca8:	2b 96       	adiw	r28, 0x0b	; 11
 caa:	cd bf       	out	0x3d, r28	; 61
 cac:	de bf       	out	0x3e, r29	; 62
 cae:	df 91       	pop	r29
 cb0:	cf 91       	pop	r28
 cb2:	1f 91       	pop	r17
 cb4:	0f 91       	pop	r16
 cb6:	ff 90       	pop	r15
 cb8:	ef 90       	pop	r14
 cba:	df 90       	pop	r13
 cbc:	cf 90       	pop	r12
 cbe:	bf 90       	pop	r11
 cc0:	af 90       	pop	r10
 cc2:	9f 90       	pop	r9
 cc4:	8f 90       	pop	r8
 cc6:	7f 90       	pop	r7
 cc8:	6f 90       	pop	r6
 cca:	5f 90       	pop	r5
 ccc:	4f 90       	pop	r4
 cce:	3f 90       	pop	r3
 cd0:	2f 90       	pop	r2
 cd2:	08 95       	ret

00000cd4 <strnlen_P>:
 cd4:	fc 01       	movw	r30, r24
 cd6:	05 90       	lpm	r0, Z+
 cd8:	61 50       	subi	r22, 0x01	; 1
 cda:	70 40       	sbci	r23, 0x00	; 0
 cdc:	01 10       	cpse	r0, r1
 cde:	d8 f7       	brcc	.-10     	; 0xcd6 <strnlen_P+0x2>
 ce0:	80 95       	com	r24
 ce2:	90 95       	com	r25
 ce4:	8e 0f       	add	r24, r30
 ce6:	9f 1f       	adc	r25, r31
 ce8:	08 95       	ret

00000cea <strnlen>:
 cea:	fc 01       	movw	r30, r24
 cec:	61 50       	subi	r22, 0x01	; 1
 cee:	70 40       	sbci	r23, 0x00	; 0
 cf0:	01 90       	ld	r0, Z+
 cf2:	01 10       	cpse	r0, r1
 cf4:	d8 f7       	brcc	.-10     	; 0xcec <strnlen+0x2>
 cf6:	80 95       	com	r24
 cf8:	90 95       	com	r25
 cfa:	8e 0f       	add	r24, r30
 cfc:	9f 1f       	adc	r25, r31
 cfe:	08 95       	ret

00000d00 <fputc>:
 d00:	0f 93       	push	r16
 d02:	1f 93       	push	r17
 d04:	cf 93       	push	r28
 d06:	df 93       	push	r29
 d08:	fb 01       	movw	r30, r22
 d0a:	23 81       	ldd	r18, Z+3	; 0x03
 d0c:	21 fd       	sbrc	r18, 1
 d0e:	03 c0       	rjmp	.+6      	; 0xd16 <fputc+0x16>
 d10:	8f ef       	ldi	r24, 0xFF	; 255
 d12:	9f ef       	ldi	r25, 0xFF	; 255
 d14:	2c c0       	rjmp	.+88     	; 0xd6e <fputc+0x6e>
 d16:	22 ff       	sbrs	r18, 2
 d18:	16 c0       	rjmp	.+44     	; 0xd46 <fputc+0x46>
 d1a:	46 81       	ldd	r20, Z+6	; 0x06
 d1c:	57 81       	ldd	r21, Z+7	; 0x07
 d1e:	24 81       	ldd	r18, Z+4	; 0x04
 d20:	35 81       	ldd	r19, Z+5	; 0x05
 d22:	42 17       	cp	r20, r18
 d24:	53 07       	cpc	r21, r19
 d26:	44 f4       	brge	.+16     	; 0xd38 <fputc+0x38>
 d28:	a0 81       	ld	r26, Z
 d2a:	b1 81       	ldd	r27, Z+1	; 0x01
 d2c:	9d 01       	movw	r18, r26
 d2e:	2f 5f       	subi	r18, 0xFF	; 255
 d30:	3f 4f       	sbci	r19, 0xFF	; 255
 d32:	20 83       	st	Z, r18
 d34:	31 83       	std	Z+1, r19	; 0x01
 d36:	8c 93       	st	X, r24
 d38:	26 81       	ldd	r18, Z+6	; 0x06
 d3a:	37 81       	ldd	r19, Z+7	; 0x07
 d3c:	2f 5f       	subi	r18, 0xFF	; 255
 d3e:	3f 4f       	sbci	r19, 0xFF	; 255
 d40:	26 83       	std	Z+6, r18	; 0x06
 d42:	37 83       	std	Z+7, r19	; 0x07
 d44:	14 c0       	rjmp	.+40     	; 0xd6e <fputc+0x6e>
 d46:	8b 01       	movw	r16, r22
 d48:	ec 01       	movw	r28, r24
 d4a:	fb 01       	movw	r30, r22
 d4c:	00 84       	ldd	r0, Z+8	; 0x08
 d4e:	f1 85       	ldd	r31, Z+9	; 0x09
 d50:	e0 2d       	mov	r30, r0
 d52:	09 95       	icall
 d54:	89 2b       	or	r24, r25
 d56:	e1 f6       	brne	.-72     	; 0xd10 <fputc+0x10>
 d58:	d8 01       	movw	r26, r16
 d5a:	16 96       	adiw	r26, 0x06	; 6
 d5c:	8d 91       	ld	r24, X+
 d5e:	9c 91       	ld	r25, X
 d60:	17 97       	sbiw	r26, 0x07	; 7
 d62:	01 96       	adiw	r24, 0x01	; 1
 d64:	16 96       	adiw	r26, 0x06	; 6
 d66:	8d 93       	st	X+, r24
 d68:	9c 93       	st	X, r25
 d6a:	17 97       	sbiw	r26, 0x07	; 7
 d6c:	ce 01       	movw	r24, r28
 d6e:	df 91       	pop	r29
 d70:	cf 91       	pop	r28
 d72:	1f 91       	pop	r17
 d74:	0f 91       	pop	r16
 d76:	08 95       	ret

00000d78 <__ultoa_invert>:
 d78:	fa 01       	movw	r30, r20
 d7a:	aa 27       	eor	r26, r26
 d7c:	28 30       	cpi	r18, 0x08	; 8
 d7e:	51 f1       	breq	.+84     	; 0xdd4 <__ultoa_invert+0x5c>
 d80:	20 31       	cpi	r18, 0x10	; 16
 d82:	81 f1       	breq	.+96     	; 0xde4 <__ultoa_invert+0x6c>
 d84:	e8 94       	clt
 d86:	6f 93       	push	r22
 d88:	6e 7f       	andi	r22, 0xFE	; 254
 d8a:	6e 5f       	subi	r22, 0xFE	; 254
 d8c:	7f 4f       	sbci	r23, 0xFF	; 255
 d8e:	8f 4f       	sbci	r24, 0xFF	; 255
 d90:	9f 4f       	sbci	r25, 0xFF	; 255
 d92:	af 4f       	sbci	r26, 0xFF	; 255
 d94:	b1 e0       	ldi	r27, 0x01	; 1
 d96:	3e d0       	rcall	.+124    	; 0xe14 <__ultoa_invert+0x9c>
 d98:	b4 e0       	ldi	r27, 0x04	; 4
 d9a:	3c d0       	rcall	.+120    	; 0xe14 <__ultoa_invert+0x9c>
 d9c:	67 0f       	add	r22, r23
 d9e:	78 1f       	adc	r23, r24
 da0:	89 1f       	adc	r24, r25
 da2:	9a 1f       	adc	r25, r26
 da4:	a1 1d       	adc	r26, r1
 da6:	68 0f       	add	r22, r24
 da8:	79 1f       	adc	r23, r25
 daa:	8a 1f       	adc	r24, r26
 dac:	91 1d       	adc	r25, r1
 dae:	a1 1d       	adc	r26, r1
 db0:	6a 0f       	add	r22, r26
 db2:	71 1d       	adc	r23, r1
 db4:	81 1d       	adc	r24, r1
 db6:	91 1d       	adc	r25, r1
 db8:	a1 1d       	adc	r26, r1
 dba:	20 d0       	rcall	.+64     	; 0xdfc <__ultoa_invert+0x84>
 dbc:	09 f4       	brne	.+2      	; 0xdc0 <__ultoa_invert+0x48>
 dbe:	68 94       	set
 dc0:	3f 91       	pop	r19
 dc2:	2a e0       	ldi	r18, 0x0A	; 10
 dc4:	26 9f       	mul	r18, r22
 dc6:	11 24       	eor	r1, r1
 dc8:	30 19       	sub	r19, r0
 dca:	30 5d       	subi	r19, 0xD0	; 208
 dcc:	31 93       	st	Z+, r19
 dce:	de f6       	brtc	.-74     	; 0xd86 <__ultoa_invert+0xe>
 dd0:	cf 01       	movw	r24, r30
 dd2:	08 95       	ret
 dd4:	46 2f       	mov	r20, r22
 dd6:	47 70       	andi	r20, 0x07	; 7
 dd8:	40 5d       	subi	r20, 0xD0	; 208
 dda:	41 93       	st	Z+, r20
 ddc:	b3 e0       	ldi	r27, 0x03	; 3
 dde:	0f d0       	rcall	.+30     	; 0xdfe <__ultoa_invert+0x86>
 de0:	c9 f7       	brne	.-14     	; 0xdd4 <__ultoa_invert+0x5c>
 de2:	f6 cf       	rjmp	.-20     	; 0xdd0 <__ultoa_invert+0x58>
 de4:	46 2f       	mov	r20, r22
 de6:	4f 70       	andi	r20, 0x0F	; 15
 de8:	40 5d       	subi	r20, 0xD0	; 208
 dea:	4a 33       	cpi	r20, 0x3A	; 58
 dec:	18 f0       	brcs	.+6      	; 0xdf4 <__ultoa_invert+0x7c>
 dee:	49 5d       	subi	r20, 0xD9	; 217
 df0:	31 fd       	sbrc	r19, 1
 df2:	40 52       	subi	r20, 0x20	; 32
 df4:	41 93       	st	Z+, r20
 df6:	02 d0       	rcall	.+4      	; 0xdfc <__ultoa_invert+0x84>
 df8:	a9 f7       	brne	.-22     	; 0xde4 <__ultoa_invert+0x6c>
 dfa:	ea cf       	rjmp	.-44     	; 0xdd0 <__ultoa_invert+0x58>
 dfc:	b4 e0       	ldi	r27, 0x04	; 4
 dfe:	a6 95       	lsr	r26
 e00:	97 95       	ror	r25
 e02:	87 95       	ror	r24
 e04:	77 95       	ror	r23
 e06:	67 95       	ror	r22
 e08:	ba 95       	dec	r27
 e0a:	c9 f7       	brne	.-14     	; 0xdfe <__ultoa_invert+0x86>
 e0c:	00 97       	sbiw	r24, 0x00	; 0
 e0e:	61 05       	cpc	r22, r1
 e10:	71 05       	cpc	r23, r1
 e12:	08 95       	ret
 e14:	9b 01       	movw	r18, r22
 e16:	ac 01       	movw	r20, r24
 e18:	0a 2e       	mov	r0, r26
 e1a:	06 94       	lsr	r0
 e1c:	57 95       	ror	r21
 e1e:	47 95       	ror	r20
 e20:	37 95       	ror	r19
 e22:	27 95       	ror	r18
 e24:	ba 95       	dec	r27
 e26:	c9 f7       	brne	.-14     	; 0xe1a <__ultoa_invert+0xa2>
 e28:	62 0f       	add	r22, r18
 e2a:	73 1f       	adc	r23, r19
 e2c:	84 1f       	adc	r24, r20
 e2e:	95 1f       	adc	r25, r21
 e30:	a0 1d       	adc	r26, r0
 e32:	08 95       	ret

00000e34 <_exit>:
 e34:	f8 94       	cli

00000e36 <__stop_program>:
 e36:	ff cf       	rjmp	.-2      	; 0xe36 <__stop_program>
