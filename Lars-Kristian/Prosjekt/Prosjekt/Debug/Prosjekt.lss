
Prosjekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00804000  00000c82  00000d16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c82  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00804040  00804040  00000d56  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d56  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000db4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000df4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004bcd  00000000  00000000  00000e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002fff  00000000  00000000  00005a51  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ac  00000000  00000000  00008a50  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000194  00000000  00000000  000090fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000382e  00000000  00000000  00009290  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000258  00000000  00000000  0000cabe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  0000cd16  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  10:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  14:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  18:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  1c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  20:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  24:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  28:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  2c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  30:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  34:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  38:	0c 94 c9 01 	jmp	0x392	; 0x392 <__vector_14>
  3c:	0c 94 2b 01 	jmp	0x256	; 0x256 <__vector_15>
  40:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  44:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  48:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  4c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  50:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  54:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  58:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  5c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  60:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  64:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  68:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  6c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  70:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  74:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  78:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  7c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  80:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  84:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  88:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  8c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  90:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  94:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  98:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  9c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ac:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  bc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  cc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  dc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ec:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  f0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62

00000100 <__do_copy_data>:
 100:	10 e4       	ldi	r17, 0x40	; 64
 102:	a0 e0       	ldi	r26, 0x00	; 0
 104:	b0 e4       	ldi	r27, 0x40	; 64
 106:	e2 e8       	ldi	r30, 0x82	; 130
 108:	fc e0       	ldi	r31, 0x0C	; 12
 10a:	00 e0       	ldi	r16, 0x00	; 0
 10c:	0b bf       	out	0x3b, r16	; 59
 10e:	02 c0       	rjmp	.+4      	; 0x114 <__do_copy_data+0x14>
 110:	07 90       	elpm	r0, Z+
 112:	0d 92       	st	X+, r0
 114:	a0 34       	cpi	r26, 0x40	; 64
 116:	b1 07       	cpc	r27, r17
 118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x10>

0000011a <__do_clear_bss>:
 11a:	20 e4       	ldi	r18, 0x40	; 64
 11c:	a0 e4       	ldi	r26, 0x40	; 64
 11e:	b0 e4       	ldi	r27, 0x40	; 64
 120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
 122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
 124:	aa 34       	cpi	r26, 0x4A	; 74
 126:	b2 07       	cpc	r27, r18
 128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
 12a:	0e 94 4b 01 	call	0x296	; 0x296 <main>
 12e:	0c 94 3f 06 	jmp	0xc7e	; 0xc7e <_exit>

00000132 <__bad_interrupt>:
 132:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000136 <USART3_printChar>:
	USART3.CTRLB |= USART_TXEN_bm;	// Aktiverer USART3-senderen i kontrollregister B med bitmasken til TX
}
void USART3_printChar(char c, FILE *stream)
{
	// Sjekker om bufferet er tomt før ny sending
	while (!(USART3.STATUS & USART_DREIF_bm))
 136:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
 13a:	95 ff       	sbrs	r25, 5
 13c:	fc cf       	rjmp	.-8      	; 0x136 <USART3_printChar>
	{
		;
	}
	USART3.TXDATAL = c;	// Sender en karakter
 13e:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
 142:	08 95       	ret

00000144 <TCA0_init>:


void TCA0_init(void)
{
	// PORTD pins for output PWM-signals.
	PORTD.DIRSET = PIN0_bm | PIN1_bm | PIN4_bm | PIN3_bm;
 144:	8b e1       	ldi	r24, 0x1B	; 27
 146:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x7e0461>
	
	//set waveform output on PORT D
	PORTMUX.TCAROUTEA = PORTMUX_TCA0_PORTD_gc;
 14a:	83 e0       	ldi	r24, 0x03	; 3
 14c:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
	
	// enable compare channel 0, 1 and set single-slope PWM mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_CMP0EN_bm | TCA_SINGLE_CMP1EN_bm | TCA_SINGLE_WGMODE_SINGLESLOPE_gc;
 150:	e0 e0       	ldi	r30, 0x00	; 0
 152:	fa e0       	ldi	r31, 0x0A	; 10
 154:	83 e3       	ldi	r24, 0x33	; 51
 156:	81 83       	std	Z+1, r24	; 0x01
	
	 // enable split mode
    TCA0.SPLIT.CTRLD = TCA_SPLIT_SPLITM_bm; 
 158:	91 e0       	ldi	r25, 0x01	; 1
 15a:	93 83       	std	Z+3, r25	; 0x03
	
	// enable compare channel 0 for the higher byte, enable compare channel 0 for the lower byte
	TCA0.SPLIT.CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_LCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm | TCA_SPLIT_LCMP1EN_bm;    
 15c:	81 83       	std	Z+1, r24	; 0x01
	
	
	// L0 = PIN0, L1=PIN1, H0=PIN3, H1=PIN4
	// set the PWM frequencies and duty cycles
    TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
 15e:	87 e2       	ldi	r24, 0x27	; 39
 160:	86 a3       	std	Z+38, r24	; 0x26
    TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MIN_VALUE;                           
 162:	10 a6       	std	Z+40, r1	; 0x28
    TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
 164:	87 a3       	std	Z+39, r24	; 0x27
    TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MIN_VALUE;
 166:	11 a6       	std	Z+41, r1	; 0x29
	
	//TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
    TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;                           
 168:	12 a6       	std	Z+42, r1	; 0x2a
    //TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
    TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MIN_VALUE; 
 16a:	13 a6       	std	Z+43, r1	; 0x2b
	
	TCA0.SPLIT.CTRLA = TCA_SPLIT_CLKSEL_DIV4_gc | TCA_SPLIT_ENABLE_bm;   // set clock source (sys_clk/4), and start timer         
 16c:	85 e0       	ldi	r24, 0x05	; 5
 16e:	80 83       	st	Z, r24
 170:	08 95       	ret

00000172 <TCB0_init>:
}


void TCB0_init(void)
{
	PORTB.DIR &= ~PIN4_bm;
 172:	e0 e2       	ldi	r30, 0x20	; 32
 174:	f4 e0       	ldi	r31, 0x04	; 4
 176:	80 81       	ld	r24, Z
 178:	8f 7e       	andi	r24, 0xEF	; 239
 17a:	80 83       	st	Z, r24
	PORTB.PIN4CTRL |= PORT_PULLUPEN_bm;
 17c:	84 89       	ldd	r24, Z+20	; 0x14
 17e:	88 60       	ori	r24, 0x08	; 8
 180:	84 8b       	std	Z+20, r24	; 0x14
	
	TCB0.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
 182:	e0 e0       	ldi	r30, 0x00	; 0
 184:	fb e0       	ldi	r31, 0x0B	; 11
 186:	85 e0       	ldi	r24, 0x05	; 5
 188:	80 83       	st	Z, r24
	TCB0.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
 18a:	84 e0       	ldi	r24, 0x04	; 4
 18c:	81 83       	std	Z+1, r24	; 0x01
	
	TCB0.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	85 83       	std	Z+5, r24	; 0x05
	
	TCB0.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm; // Capture event input enable
 192:	91 e4       	ldi	r25, 0x41	; 65
 194:	94 83       	std	Z+4, r25	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL0 = EVSYS_CHANNEL0_PORTB_PIN4_gc; //	input event channel 0, port b on pin 4
 196:	e0 e0       	ldi	r30, 0x00	; 0
 198:	f2 e0       	ldi	r31, 0x02	; 2
 19a:	9c e4       	ldi	r25, 0x4C	; 76
 19c:	90 8b       	std	Z+16, r25	; 0x10
	EVSYS.USERTCB0CAPT = EVSYS_USER_CHANNEL0_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
 19e:	86 af       	std	Z+62, r24	; 0x3e
 1a0:	08 95       	ret

000001a2 <TCB1_init>:
}


void TCB1_init(void)
{
	PORTB.DIR &= ~PIN5_bm;
 1a2:	e0 e2       	ldi	r30, 0x20	; 32
 1a4:	f4 e0       	ldi	r31, 0x04	; 4
 1a6:	80 81       	ld	r24, Z
 1a8:	8f 7d       	andi	r24, 0xDF	; 223
 1aa:	80 83       	st	Z, r24
	PORTB.PIN5CTRL |= PORT_PULLUPEN_bm;
 1ac:	85 89       	ldd	r24, Z+21	; 0x15
 1ae:	88 60       	ori	r24, 0x08	; 8
 1b0:	85 8b       	std	Z+21, r24	; 0x15
	
	
	TCB1.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
 1b2:	e0 e1       	ldi	r30, 0x10	; 16
 1b4:	fb e0       	ldi	r31, 0x0B	; 11
 1b6:	85 e0       	ldi	r24, 0x05	; 5
 1b8:	80 83       	st	Z, r24
	TCB1.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
 1ba:	84 e0       	ldi	r24, 0x04	; 4
 1bc:	81 83       	std	Z+1, r24	; 0x01
	
	TCB1.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	85 83       	std	Z+5, r24	; 0x05
	
	TCB1.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm ; // Capture event input enable
 1c2:	81 e4       	ldi	r24, 0x41	; 65
 1c4:	84 83       	std	Z+4, r24	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL1 = EVSYS_CHANNEL1_PORTB_PIN5_gc; //	input event channel 1, port b on pin 5
 1c6:	8d e4       	ldi	r24, 0x4D	; 77
 1c8:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <__TEXT_REGION_LENGTH__+0x7e0211>
	EVSYS.USERTCB1CAPT = EVSYS_USER_CHANNEL1_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
 1cc:	82 e0       	ldi	r24, 0x02	; 2
 1ce:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__TEXT_REGION_LENGTH__+0x7e0240>
 1d2:	08 95       	ret

000001d4 <ADC0_init>:
bool ADC0_conersionDone(void);

void ADC0_init(void)
{
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
 1d4:	e0 e6       	ldi	r30, 0x60	; 96
 1d6:	f4 e0       	ldi	r31, 0x04	; 4
 1d8:	86 89       	ldd	r24, Z+22	; 0x16
 1da:	88 7f       	andi	r24, 0xF8	; 248
 1dc:	86 8b       	std	Z+22, r24	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
 1de:	86 89       	ldd	r24, Z+22	; 0x16
 1e0:	84 60       	ori	r24, 0x04	; 4
 1e2:	86 8b       	std	Z+22, r24	; 0x16

	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
 1e4:	86 89       	ldd	r24, Z+22	; 0x16
 1e6:	87 7f       	andi	r24, 0xF7	; 247
 1e8:	86 8b       	std	Z+22, r24	; 0x16

	ADC0.CTRLC = ADC_PRESC_DIV4_gc; /* CLK_PER divided by 4 */
 1ea:	e0 e0       	ldi	r30, 0x00	; 0
 1ec:	f6 e0       	ldi	r31, 0x06	; 6
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	82 83       	std	Z+2, r24	; 0x02
	
	VREF.ADC0REF = VREF_REFSEL_VDD_gc ; /* VDD as reference */
 1f2:	85 e0       	ldi	r24, 0x05	; 5
 1f4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>

	ADC0.CTRLA = ADC_ENABLE_bm | ADC_RESSEL_10BIT_gc; /* 10-bit mode */
 1f8:	80 83       	st	Z, r24

	/* Select ADC channel */
	ADC0.MUXPOS = ADC_MUXPOS_AIN6_gc;
 1fa:	86 e0       	ldi	r24, 0x06	; 6
 1fc:	80 87       	std	Z+8, r24	; 0x08

	/* Enable FreeRun mode */
	ADC0.CTRLA |= ADC_FREERUN_bm;
 1fe:	80 81       	ld	r24, Z
 200:	82 60       	ori	r24, 0x02	; 2
 202:	80 83       	st	Z, r24
 204:	08 95       	ret

00000206 <ADC0_read>:
}
uint16_t ADC0_read(void)
{
	/* Clear the interrupt flag by writing 1: */
	ADC0.INTFLAGS = ADC_RESRDY_bm;
 206:	e0 e0       	ldi	r30, 0x00	; 0
 208:	f6 e0       	ldi	r31, 0x06	; 6
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	85 87       	std	Z+13, r24	; 0x0d

	return ADC0.RES;
 20e:	80 89       	ldd	r24, Z+16	; 0x10
 210:	91 89       	ldd	r25, Z+17	; 0x11
}
 212:	08 95       	ret

00000214 <ADC0_start>:
void ADC0_start(void)
{
	/* Start conversion */
	ADC0.COMMAND = ADC_STCONV_bm;
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
 21a:	08 95       	ret

0000021c <ADC0_conersionDone>:
}
bool ADC0_conersionDone(void)
{
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
 21c:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
}
 220:	81 70       	andi	r24, 0x01	; 1
 222:	08 95       	ret

00000224 <file_stream>:

void file_stream(void)
{
	// Lager en egendefinert output stream som skal håndteres av funksjonen USART3_printChar
	static FILE USART3_stream = FDEV_SETUP_STREAM(USART3_printChar, NULL, _FDEV_SETUP_WRITE);
	stdout = &USART3_stream;	// Erstatter standard output stream med den egen definerte
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	90 e4       	ldi	r25, 0x40	; 64
 228:	80 93 46 40 	sts	0x4046, r24	; 0x804046 <__iob+0x2>
 22c:	90 93 47 40 	sts	0x4047, r25	; 0x804047 <__iob+0x3>
 230:	08 95       	ret

00000232 <USART3_init>:
}

void USART3_init(void)
{
	// RX input and TX output
	PORTB.DIR &= ~PIN1_bm;
 232:	e0 e2       	ldi	r30, 0x20	; 32
 234:	f4 e0       	ldi	r31, 0x04	; 4
 236:	80 81       	ld	r24, Z
 238:	8d 7f       	andi	r24, 0xFD	; 253
 23a:	80 83       	st	Z, r24
	PORTB.DIR |= PIN0_bm;
 23c:	80 81       	ld	r24, Z
 23e:	81 60       	ori	r24, 0x01	; 1
 240:	80 83       	st	Z, r24

	USART3.BAUD = (uint16_t)USART3_BAUD_RATE(9600);	// Baud rate for USART3
 242:	e0 e6       	ldi	r30, 0x60	; 96
 244:	f8 e0       	ldi	r31, 0x08	; 8
 246:	83 e8       	ldi	r24, 0x83	; 131
 248:	96 e0       	ldi	r25, 0x06	; 6
 24a:	80 87       	std	Z+8, r24	; 0x08
 24c:	91 87       	std	Z+9, r25	; 0x09
	USART3.CTRLB |= USART_TXEN_bm;	// Aktiverer USART3-senderen i kontrollregister B med bitmasken til TX
 24e:	86 81       	ldd	r24, Z+6	; 0x06
 250:	80 64       	ori	r24, 0x40	; 64
 252:	86 83       	std	Z+6, r24	; 0x06
 254:	08 95       	ret

00000256 <__vector_15>:
	RPM_fan1 = PWM_freq_to_RPM(RPM_fan1);
	
}

ISR(TCB1_INT_vect)
{
 256:	1f 92       	push	r1
 258:	0f 92       	push	r0
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	0f 92       	push	r0
 25e:	11 24       	eor	r1, r1
 260:	0b b6       	in	r0, 0x3b	; 59
 262:	0f 92       	push	r0
 264:	8f 93       	push	r24
 266:	9f 93       	push	r25
 268:	ef 93       	push	r30
 26a:	ff 93       	push	r31
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
 26c:	e0 e1       	ldi	r30, 0x10	; 16
 26e:	fb e0       	ldi	r31, 0x0B	; 11
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	86 83       	std	Z+6, r24	; 0x06
	RPM_fan2= TCB1.CCMP;
 274:	84 85       	ldd	r24, Z+12	; 0x0c
 276:	95 85       	ldd	r25, Z+13	; 0x0d
 278:	80 93 42 40 	sts	0x4042, r24	; 0x804042 <RPM_fan2>
 27c:	90 93 43 40 	sts	0x4043, r25	; 0x804043 <RPM_fan2+0x1>

}
 280:	ff 91       	pop	r31
 282:	ef 91       	pop	r30
 284:	9f 91       	pop	r25
 286:	8f 91       	pop	r24
 288:	0f 90       	pop	r0
 28a:	0b be       	out	0x3b, r0	; 59
 28c:	0f 90       	pop	r0
 28e:	0f be       	out	0x3f, r0	; 63
 290:	0f 90       	pop	r0
 292:	1f 90       	pop	r1
 294:	18 95       	reti

00000296 <main>:

int main(void)
{
	file_stream();  // Create file stream for USART
 296:	0e 94 12 01 	call	0x224	; 0x224 <file_stream>
	USART3_init();	// USART3 initialize
 29a:	0e 94 19 01 	call	0x232	; 0x232 <USART3_init>
	
	// PWM initialize
	TCA0_init();
 29e:	0e 94 a2 00 	call	0x144	; 0x144 <TCA0_init>
	TCB0_init();
 2a2:	0e 94 b9 00 	call	0x172	; 0x172 <TCB0_init>
	TCB1_init();
 2a6:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <TCB1_init>
	
	// ADC initialize
	ADC0_init();
 2aa:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <ADC0_init>
	ADC0_start();
 2ae:	0e 94 0a 01 	call	0x214	; 0x214 <ADC0_start>
	
	sei(); // Enable Global Interrupts
 2b2:	78 94       	sei
	
	
	
	while (1)
	{
		if (ADC0_conersionDone())
 2b4:	0e 94 0e 01 	call	0x21c	; 0x21c <ADC0_conersionDone>
 2b8:	88 23       	and	r24, r24
 2ba:	e1 f3       	breq	.-8      	; 0x2b4 <main+0x1e>
		{
			// Read potentiometer
			uint16_t adc_value = ADC0_read();
 2bc:	0e 94 03 01 	call	0x206	; 0x206 <ADC0_read>
 2c0:	ec 01       	movw	r28, r24
			// Convert ADC-value to PWM signal
			uint16_t fanSpeed = ((39.0/1023.0)*adc_value);
 2c2:	bc 01       	movw	r22, r24
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 2a 02 	call	0x454	; 0x454 <__floatunsisf>
 2cc:	2a e0       	ldi	r18, 0x0A	; 10
 2ce:	37 e2       	ldi	r19, 0x27	; 39
 2d0:	4c e1       	ldi	r20, 0x1C	; 28
 2d2:	5d e3       	ldi	r21, 0x3D	; 61
 2d4:	0e 94 90 02 	call	0x520	; 0x520 <__mulsf3>
 2d8:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__fixunssfsi>
 2dc:	16 2f       	mov	r17, r22
 2de:	07 2f       	mov	r16, r23
			printf("ADC Value: %d\r\n", adc_value);
 2e0:	df 93       	push	r29
 2e2:	cf 93       	push	r28
 2e4:	8e e0       	ldi	r24, 0x0E	; 14
 2e6:	90 e4       	ldi	r25, 0x40	; 64
 2e8:	9f 93       	push	r25
 2ea:	8f 93       	push	r24
 2ec:	0e 94 47 03 	call	0x68e	; 0x68e <printf>
			printf("Fan speed: %d\r\n", fanSpeed);
 2f0:	0f 93       	push	r16
 2f2:	1f 93       	push	r17
 2f4:	8e e1       	ldi	r24, 0x1E	; 30
 2f6:	90 e4       	ldi	r25, 0x40	; 64
 2f8:	9f 93       	push	r25
 2fa:	8f 93       	push	r24
 2fc:	0e 94 47 03 	call	0x68e	; 0x68e <printf>
			printf("PWM read: %d\r\n", RPM_fan1);
 300:	80 91 41 40 	lds	r24, 0x4041	; 0x804041 <__data_end+0x1>
 304:	8f 93       	push	r24
 306:	80 91 40 40 	lds	r24, 0x4040	; 0x804040 <__data_end>
 30a:	8f 93       	push	r24
 30c:	8e e2       	ldi	r24, 0x2E	; 46
 30e:	90 e4       	ldi	r25, 0x40	; 64
 310:	9f 93       	push	r25
 312:	8f 93       	push	r24
 314:	0e 94 47 03 	call	0x68e	; 0x68e <printf>
			printf("\r\n");
 318:	8d e3       	ldi	r24, 0x3D	; 61
 31a:	90 e4       	ldi	r25, 0x40	; 64
 31c:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <puts>
			printf("\r\n");
 320:	8d e3       	ldi	r24, 0x3D	; 61
 322:	90 e4       	ldi	r25, 0x40	; 64
 324:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <puts>
			//TCA0.SINGLE.CMP0BUF = fanSpeed; // Controls width PWM-signal
			TCA0.SPLIT.LCMP0 = fanSpeed;
 328:	10 93 28 0a 	sts	0x0A28, r17	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
			
			if (adc_value > 950)
 32c:	8d b7       	in	r24, 0x3d	; 61
 32e:	9e b7       	in	r25, 0x3e	; 62
 330:	0c 96       	adiw	r24, 0x0c	; 12
 332:	8d bf       	out	0x3d, r24	; 61
 334:	9e bf       	out	0x3e, r25	; 62
 336:	c7 3b       	cpi	r28, 0xB7	; 183
 338:	93 e0       	ldi	r25, 0x03	; 3
 33a:	d9 07       	cpc	r29, r25
 33c:	20 f0       	brcs	.+8      	; 0x346 <main+0xb0>
			{
				TCA0.SPLIT.HCMP0 = 15;
 33e:	8f e0       	ldi	r24, 0x0F	; 15
 340:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
 344:	b7 cf       	rjmp	.-146    	; 0x2b4 <main+0x1e>
			}
			else if (adc_value > 800)
 346:	c1 32       	cpi	r28, 0x21	; 33
 348:	83 e0       	ldi	r24, 0x03	; 3
 34a:	d8 07       	cpc	r29, r24
 34c:	20 f0       	brcs	.+8      	; 0x356 <main+0xc0>
			{
				TCA0.SPLIT.LCMP1 = 10;
 34e:	8a e0       	ldi	r24, 0x0A	; 10
 350:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
 354:	af cf       	rjmp	.-162    	; 0x2b4 <main+0x1e>
			}
			else if (adc_value > 700)
 356:	cd 3b       	cpi	r28, 0xBD	; 189
 358:	d2 40       	sbci	r29, 0x02	; 2
 35a:	20 f0       	brcs	.+8      	; 0x364 <main+0xce>
			{
				TCA0.SPLIT.HCMP1 = 16;
 35c:	80 e1       	ldi	r24, 0x10	; 16
 35e:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
 362:	a8 cf       	rjmp	.-176    	; 0x2b4 <main+0x1e>
			}
			else
			{
				TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;
 364:	e0 e0       	ldi	r30, 0x00	; 0
 366:	fa e0       	ldi	r31, 0x0A	; 10
 368:	12 a6       	std	Z+42, r1	; 0x2a
				TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MIN_VALUE;
 36a:	11 a6       	std	Z+41, r1	; 0x29
				TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MIN_VALUE;
 36c:	13 a6       	std	Z+43, r1	; 0x2b
 36e:	a2 cf       	rjmp	.-188    	; 0x2b4 <main+0x1e>

00000370 <PWM_freq_to_RPM>:
	}
}

uint16_t PWM_freq_to_RPM(uint16_t PWM_onperiode)
{
	return ((F_CPU * 60)/(4 * 4 * PWM_onperiode));
 370:	82 95       	swap	r24
 372:	92 95       	swap	r25
 374:	90 7f       	andi	r25, 0xF0	; 240
 376:	98 27       	eor	r25, r24
 378:	80 7f       	andi	r24, 0xF0	; 240
 37a:	98 27       	eor	r25, r24
 37c:	9c 01       	movw	r18, r24
 37e:	40 e0       	ldi	r20, 0x00	; 0
 380:	50 e0       	ldi	r21, 0x00	; 0
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	7c e1       	ldi	r23, 0x1C	; 28
 386:	8e e4       	ldi	r24, 0x4E	; 78
 388:	9e e0       	ldi	r25, 0x0E	; 14
 38a:	0e 94 25 03 	call	0x64a	; 0x64a <__udivmodsi4>
}
 38e:	c9 01       	movw	r24, r18
 390:	08 95       	ret

00000392 <__vector_14>:
uint16_t RPM_fan1;
uint16_t RPM_fan2;

// TCB0 interrupt function
ISR(TCB0_INT_vect)
{
 392:	1f 92       	push	r1
 394:	0f 92       	push	r0
 396:	0f b6       	in	r0, 0x3f	; 63
 398:	0f 92       	push	r0
 39a:	11 24       	eor	r1, r1
 39c:	0b b6       	in	r0, 0x3b	; 59
 39e:	0f 92       	push	r0
 3a0:	2f 93       	push	r18
 3a2:	3f 93       	push	r19
 3a4:	4f 93       	push	r20
 3a6:	5f 93       	push	r21
 3a8:	6f 93       	push	r22
 3aa:	7f 93       	push	r23
 3ac:	8f 93       	push	r24
 3ae:	9f 93       	push	r25
 3b0:	af 93       	push	r26
 3b2:	bf 93       	push	r27
 3b4:	ef 93       	push	r30
 3b6:	ff 93       	push	r31
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
 3b8:	e0 e0       	ldi	r30, 0x00	; 0
 3ba:	fb e0       	ldi	r31, 0x0B	; 11
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	86 83       	std	Z+6, r24	; 0x06
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	RPM_fan1= TCB0.CCMP;
 3c0:	84 85       	ldd	r24, Z+12	; 0x0c
 3c2:	95 85       	ldd	r25, Z+13	; 0x0d
	RPM_fan1 = PWM_freq_to_RPM(RPM_fan1);
 3c4:	0e 94 b8 01 	call	0x370	; 0x370 <PWM_freq_to_RPM>
 3c8:	80 93 40 40 	sts	0x4040, r24	; 0x804040 <__data_end>
 3cc:	90 93 41 40 	sts	0x4041, r25	; 0x804041 <__data_end+0x1>
	
}
 3d0:	ff 91       	pop	r31
 3d2:	ef 91       	pop	r30
 3d4:	bf 91       	pop	r27
 3d6:	af 91       	pop	r26
 3d8:	9f 91       	pop	r25
 3da:	8f 91       	pop	r24
 3dc:	7f 91       	pop	r23
 3de:	6f 91       	pop	r22
 3e0:	5f 91       	pop	r21
 3e2:	4f 91       	pop	r20
 3e4:	3f 91       	pop	r19
 3e6:	2f 91       	pop	r18
 3e8:	0f 90       	pop	r0
 3ea:	0b be       	out	0x3b, r0	; 59
 3ec:	0f 90       	pop	r0
 3ee:	0f be       	out	0x3f, r0	; 63
 3f0:	0f 90       	pop	r0
 3f2:	1f 90       	pop	r1
 3f4:	18 95       	reti

000003f6 <__fixunssfsi>:
 3f6:	0e 94 6f 02 	call	0x4de	; 0x4de <__fp_splitA>
 3fa:	88 f0       	brcs	.+34     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3fc:	9f 57       	subi	r25, 0x7F	; 127
 3fe:	98 f0       	brcs	.+38     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 400:	b9 2f       	mov	r27, r25
 402:	99 27       	eor	r25, r25
 404:	b7 51       	subi	r27, 0x17	; 23
 406:	b0 f0       	brcs	.+44     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 408:	e1 f0       	breq	.+56     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 40a:	66 0f       	add	r22, r22
 40c:	77 1f       	adc	r23, r23
 40e:	88 1f       	adc	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	1a f0       	brmi	.+6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 414:	ba 95       	dec	r27
 416:	c9 f7       	brne	.-14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 418:	14 c0       	rjmp	.+40     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 41a:	b1 30       	cpi	r27, 0x01	; 1
 41c:	91 f0       	breq	.+36     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 41e:	0e 94 89 02 	call	0x512	; 0x512 <__fp_zero>
 422:	b1 e0       	ldi	r27, 0x01	; 1
 424:	08 95       	ret
 426:	0c 94 89 02 	jmp	0x512	; 0x512 <__fp_zero>
 42a:	67 2f       	mov	r22, r23
 42c:	78 2f       	mov	r23, r24
 42e:	88 27       	eor	r24, r24
 430:	b8 5f       	subi	r27, 0xF8	; 248
 432:	39 f0       	breq	.+14     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 434:	b9 3f       	cpi	r27, 0xF9	; 249
 436:	cc f3       	brlt	.-14     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 438:	86 95       	lsr	r24
 43a:	77 95       	ror	r23
 43c:	67 95       	ror	r22
 43e:	b3 95       	inc	r27
 440:	d9 f7       	brne	.-10     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 442:	3e f4       	brtc	.+14     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 444:	90 95       	com	r25
 446:	80 95       	com	r24
 448:	70 95       	com	r23
 44a:	61 95       	neg	r22
 44c:	7f 4f       	sbci	r23, 0xFF	; 255
 44e:	8f 4f       	sbci	r24, 0xFF	; 255
 450:	9f 4f       	sbci	r25, 0xFF	; 255
 452:	08 95       	ret

00000454 <__floatunsisf>:
 454:	e8 94       	clt
 456:	09 c0       	rjmp	.+18     	; 0x46a <__floatsisf+0x12>

00000458 <__floatsisf>:
 458:	97 fb       	bst	r25, 7
 45a:	3e f4       	brtc	.+14     	; 0x46a <__floatsisf+0x12>
 45c:	90 95       	com	r25
 45e:	80 95       	com	r24
 460:	70 95       	com	r23
 462:	61 95       	neg	r22
 464:	7f 4f       	sbci	r23, 0xFF	; 255
 466:	8f 4f       	sbci	r24, 0xFF	; 255
 468:	9f 4f       	sbci	r25, 0xFF	; 255
 46a:	99 23       	and	r25, r25
 46c:	a9 f0       	breq	.+42     	; 0x498 <__floatsisf+0x40>
 46e:	f9 2f       	mov	r31, r25
 470:	96 e9       	ldi	r25, 0x96	; 150
 472:	bb 27       	eor	r27, r27
 474:	93 95       	inc	r25
 476:	f6 95       	lsr	r31
 478:	87 95       	ror	r24
 47a:	77 95       	ror	r23
 47c:	67 95       	ror	r22
 47e:	b7 95       	ror	r27
 480:	f1 11       	cpse	r31, r1
 482:	f8 cf       	rjmp	.-16     	; 0x474 <__floatsisf+0x1c>
 484:	fa f4       	brpl	.+62     	; 0x4c4 <__floatsisf+0x6c>
 486:	bb 0f       	add	r27, r27
 488:	11 f4       	brne	.+4      	; 0x48e <__floatsisf+0x36>
 48a:	60 ff       	sbrs	r22, 0
 48c:	1b c0       	rjmp	.+54     	; 0x4c4 <__floatsisf+0x6c>
 48e:	6f 5f       	subi	r22, 0xFF	; 255
 490:	7f 4f       	sbci	r23, 0xFF	; 255
 492:	8f 4f       	sbci	r24, 0xFF	; 255
 494:	9f 4f       	sbci	r25, 0xFF	; 255
 496:	16 c0       	rjmp	.+44     	; 0x4c4 <__floatsisf+0x6c>
 498:	88 23       	and	r24, r24
 49a:	11 f0       	breq	.+4      	; 0x4a0 <__floatsisf+0x48>
 49c:	96 e9       	ldi	r25, 0x96	; 150
 49e:	11 c0       	rjmp	.+34     	; 0x4c2 <__floatsisf+0x6a>
 4a0:	77 23       	and	r23, r23
 4a2:	21 f0       	breq	.+8      	; 0x4ac <__floatsisf+0x54>
 4a4:	9e e8       	ldi	r25, 0x8E	; 142
 4a6:	87 2f       	mov	r24, r23
 4a8:	76 2f       	mov	r23, r22
 4aa:	05 c0       	rjmp	.+10     	; 0x4b6 <__floatsisf+0x5e>
 4ac:	66 23       	and	r22, r22
 4ae:	71 f0       	breq	.+28     	; 0x4cc <__floatsisf+0x74>
 4b0:	96 e8       	ldi	r25, 0x86	; 134
 4b2:	86 2f       	mov	r24, r22
 4b4:	70 e0       	ldi	r23, 0x00	; 0
 4b6:	60 e0       	ldi	r22, 0x00	; 0
 4b8:	2a f0       	brmi	.+10     	; 0x4c4 <__floatsisf+0x6c>
 4ba:	9a 95       	dec	r25
 4bc:	66 0f       	add	r22, r22
 4be:	77 1f       	adc	r23, r23
 4c0:	88 1f       	adc	r24, r24
 4c2:	da f7       	brpl	.-10     	; 0x4ba <__floatsisf+0x62>
 4c4:	88 0f       	add	r24, r24
 4c6:	96 95       	lsr	r25
 4c8:	87 95       	ror	r24
 4ca:	97 f9       	bld	r25, 7
 4cc:	08 95       	ret

000004ce <__fp_split3>:
 4ce:	57 fd       	sbrc	r21, 7
 4d0:	90 58       	subi	r25, 0x80	; 128
 4d2:	44 0f       	add	r20, r20
 4d4:	55 1f       	adc	r21, r21
 4d6:	59 f0       	breq	.+22     	; 0x4ee <__fp_splitA+0x10>
 4d8:	5f 3f       	cpi	r21, 0xFF	; 255
 4da:	71 f0       	breq	.+28     	; 0x4f8 <__fp_splitA+0x1a>
 4dc:	47 95       	ror	r20

000004de <__fp_splitA>:
 4de:	88 0f       	add	r24, r24
 4e0:	97 fb       	bst	r25, 7
 4e2:	99 1f       	adc	r25, r25
 4e4:	61 f0       	breq	.+24     	; 0x4fe <__fp_splitA+0x20>
 4e6:	9f 3f       	cpi	r25, 0xFF	; 255
 4e8:	79 f0       	breq	.+30     	; 0x508 <__fp_splitA+0x2a>
 4ea:	87 95       	ror	r24
 4ec:	08 95       	ret
 4ee:	12 16       	cp	r1, r18
 4f0:	13 06       	cpc	r1, r19
 4f2:	14 06       	cpc	r1, r20
 4f4:	55 1f       	adc	r21, r21
 4f6:	f2 cf       	rjmp	.-28     	; 0x4dc <__fp_split3+0xe>
 4f8:	46 95       	lsr	r20
 4fa:	f1 df       	rcall	.-30     	; 0x4de <__fp_splitA>
 4fc:	08 c0       	rjmp	.+16     	; 0x50e <__fp_splitA+0x30>
 4fe:	16 16       	cp	r1, r22
 500:	17 06       	cpc	r1, r23
 502:	18 06       	cpc	r1, r24
 504:	99 1f       	adc	r25, r25
 506:	f1 cf       	rjmp	.-30     	; 0x4ea <__fp_splitA+0xc>
 508:	86 95       	lsr	r24
 50a:	71 05       	cpc	r23, r1
 50c:	61 05       	cpc	r22, r1
 50e:	08 94       	sec
 510:	08 95       	ret

00000512 <__fp_zero>:
 512:	e8 94       	clt

00000514 <__fp_szero>:
 514:	bb 27       	eor	r27, r27
 516:	66 27       	eor	r22, r22
 518:	77 27       	eor	r23, r23
 51a:	cb 01       	movw	r24, r22
 51c:	97 f9       	bld	r25, 7
 51e:	08 95       	ret

00000520 <__mulsf3>:
 520:	0e 94 a3 02 	call	0x546	; 0x546 <__mulsf3x>
 524:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_round>
 528:	0e 94 06 03 	call	0x60c	; 0x60c <__fp_pscA>
 52c:	38 f0       	brcs	.+14     	; 0x53c <__mulsf3+0x1c>
 52e:	0e 94 0d 03 	call	0x61a	; 0x61a <__fp_pscB>
 532:	20 f0       	brcs	.+8      	; 0x53c <__mulsf3+0x1c>
 534:	95 23       	and	r25, r21
 536:	11 f0       	breq	.+4      	; 0x53c <__mulsf3+0x1c>
 538:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_inf>
 53c:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_nan>
 540:	11 24       	eor	r1, r1
 542:	0c 94 8a 02 	jmp	0x514	; 0x514 <__fp_szero>

00000546 <__mulsf3x>:
 546:	0e 94 67 02 	call	0x4ce	; 0x4ce <__fp_split3>
 54a:	70 f3       	brcs	.-36     	; 0x528 <__mulsf3+0x8>

0000054c <__mulsf3_pse>:
 54c:	95 9f       	mul	r25, r21
 54e:	c1 f3       	breq	.-16     	; 0x540 <__mulsf3+0x20>
 550:	95 0f       	add	r25, r21
 552:	50 e0       	ldi	r21, 0x00	; 0
 554:	55 1f       	adc	r21, r21
 556:	62 9f       	mul	r22, r18
 558:	f0 01       	movw	r30, r0
 55a:	72 9f       	mul	r23, r18
 55c:	bb 27       	eor	r27, r27
 55e:	f0 0d       	add	r31, r0
 560:	b1 1d       	adc	r27, r1
 562:	63 9f       	mul	r22, r19
 564:	aa 27       	eor	r26, r26
 566:	f0 0d       	add	r31, r0
 568:	b1 1d       	adc	r27, r1
 56a:	aa 1f       	adc	r26, r26
 56c:	64 9f       	mul	r22, r20
 56e:	66 27       	eor	r22, r22
 570:	b0 0d       	add	r27, r0
 572:	a1 1d       	adc	r26, r1
 574:	66 1f       	adc	r22, r22
 576:	82 9f       	mul	r24, r18
 578:	22 27       	eor	r18, r18
 57a:	b0 0d       	add	r27, r0
 57c:	a1 1d       	adc	r26, r1
 57e:	62 1f       	adc	r22, r18
 580:	73 9f       	mul	r23, r19
 582:	b0 0d       	add	r27, r0
 584:	a1 1d       	adc	r26, r1
 586:	62 1f       	adc	r22, r18
 588:	83 9f       	mul	r24, r19
 58a:	a0 0d       	add	r26, r0
 58c:	61 1d       	adc	r22, r1
 58e:	22 1f       	adc	r18, r18
 590:	74 9f       	mul	r23, r20
 592:	33 27       	eor	r19, r19
 594:	a0 0d       	add	r26, r0
 596:	61 1d       	adc	r22, r1
 598:	23 1f       	adc	r18, r19
 59a:	84 9f       	mul	r24, r20
 59c:	60 0d       	add	r22, r0
 59e:	21 1d       	adc	r18, r1
 5a0:	82 2f       	mov	r24, r18
 5a2:	76 2f       	mov	r23, r22
 5a4:	6a 2f       	mov	r22, r26
 5a6:	11 24       	eor	r1, r1
 5a8:	9f 57       	subi	r25, 0x7F	; 127
 5aa:	50 40       	sbci	r21, 0x00	; 0
 5ac:	9a f0       	brmi	.+38     	; 0x5d4 <__mulsf3_pse+0x88>
 5ae:	f1 f0       	breq	.+60     	; 0x5ec <__mulsf3_pse+0xa0>
 5b0:	88 23       	and	r24, r24
 5b2:	4a f0       	brmi	.+18     	; 0x5c6 <__mulsf3_pse+0x7a>
 5b4:	ee 0f       	add	r30, r30
 5b6:	ff 1f       	adc	r31, r31
 5b8:	bb 1f       	adc	r27, r27
 5ba:	66 1f       	adc	r22, r22
 5bc:	77 1f       	adc	r23, r23
 5be:	88 1f       	adc	r24, r24
 5c0:	91 50       	subi	r25, 0x01	; 1
 5c2:	50 40       	sbci	r21, 0x00	; 0
 5c4:	a9 f7       	brne	.-22     	; 0x5b0 <__mulsf3_pse+0x64>
 5c6:	9e 3f       	cpi	r25, 0xFE	; 254
 5c8:	51 05       	cpc	r21, r1
 5ca:	80 f0       	brcs	.+32     	; 0x5ec <__mulsf3_pse+0xa0>
 5cc:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_inf>
 5d0:	0c 94 8a 02 	jmp	0x514	; 0x514 <__fp_szero>
 5d4:	5f 3f       	cpi	r21, 0xFF	; 255
 5d6:	e4 f3       	brlt	.-8      	; 0x5d0 <__mulsf3_pse+0x84>
 5d8:	98 3e       	cpi	r25, 0xE8	; 232
 5da:	d4 f3       	brlt	.-12     	; 0x5d0 <__mulsf3_pse+0x84>
 5dc:	86 95       	lsr	r24
 5de:	77 95       	ror	r23
 5e0:	67 95       	ror	r22
 5e2:	b7 95       	ror	r27
 5e4:	f7 95       	ror	r31
 5e6:	e7 95       	ror	r30
 5e8:	9f 5f       	subi	r25, 0xFF	; 255
 5ea:	c1 f7       	brne	.-16     	; 0x5dc <__mulsf3_pse+0x90>
 5ec:	fe 2b       	or	r31, r30
 5ee:	88 0f       	add	r24, r24
 5f0:	91 1d       	adc	r25, r1
 5f2:	96 95       	lsr	r25
 5f4:	87 95       	ror	r24
 5f6:	97 f9       	bld	r25, 7
 5f8:	08 95       	ret

000005fa <__fp_inf>:
 5fa:	97 f9       	bld	r25, 7
 5fc:	9f 67       	ori	r25, 0x7F	; 127
 5fe:	80 e8       	ldi	r24, 0x80	; 128
 600:	70 e0       	ldi	r23, 0x00	; 0
 602:	60 e0       	ldi	r22, 0x00	; 0
 604:	08 95       	ret

00000606 <__fp_nan>:
 606:	9f ef       	ldi	r25, 0xFF	; 255
 608:	80 ec       	ldi	r24, 0xC0	; 192
 60a:	08 95       	ret

0000060c <__fp_pscA>:
 60c:	00 24       	eor	r0, r0
 60e:	0a 94       	dec	r0
 610:	16 16       	cp	r1, r22
 612:	17 06       	cpc	r1, r23
 614:	18 06       	cpc	r1, r24
 616:	09 06       	cpc	r0, r25
 618:	08 95       	ret

0000061a <__fp_pscB>:
 61a:	00 24       	eor	r0, r0
 61c:	0a 94       	dec	r0
 61e:	12 16       	cp	r1, r18
 620:	13 06       	cpc	r1, r19
 622:	14 06       	cpc	r1, r20
 624:	05 06       	cpc	r0, r21
 626:	08 95       	ret

00000628 <__fp_round>:
 628:	09 2e       	mov	r0, r25
 62a:	03 94       	inc	r0
 62c:	00 0c       	add	r0, r0
 62e:	11 f4       	brne	.+4      	; 0x634 <__fp_round+0xc>
 630:	88 23       	and	r24, r24
 632:	52 f0       	brmi	.+20     	; 0x648 <__fp_round+0x20>
 634:	bb 0f       	add	r27, r27
 636:	40 f4       	brcc	.+16     	; 0x648 <__fp_round+0x20>
 638:	bf 2b       	or	r27, r31
 63a:	11 f4       	brne	.+4      	; 0x640 <__fp_round+0x18>
 63c:	60 ff       	sbrs	r22, 0
 63e:	04 c0       	rjmp	.+8      	; 0x648 <__fp_round+0x20>
 640:	6f 5f       	subi	r22, 0xFF	; 255
 642:	7f 4f       	sbci	r23, 0xFF	; 255
 644:	8f 4f       	sbci	r24, 0xFF	; 255
 646:	9f 4f       	sbci	r25, 0xFF	; 255
 648:	08 95       	ret

0000064a <__udivmodsi4>:
 64a:	a1 e2       	ldi	r26, 0x21	; 33
 64c:	1a 2e       	mov	r1, r26
 64e:	aa 1b       	sub	r26, r26
 650:	bb 1b       	sub	r27, r27
 652:	fd 01       	movw	r30, r26
 654:	0d c0       	rjmp	.+26     	; 0x670 <__udivmodsi4_ep>

00000656 <__udivmodsi4_loop>:
 656:	aa 1f       	adc	r26, r26
 658:	bb 1f       	adc	r27, r27
 65a:	ee 1f       	adc	r30, r30
 65c:	ff 1f       	adc	r31, r31
 65e:	a2 17       	cp	r26, r18
 660:	b3 07       	cpc	r27, r19
 662:	e4 07       	cpc	r30, r20
 664:	f5 07       	cpc	r31, r21
 666:	20 f0       	brcs	.+8      	; 0x670 <__udivmodsi4_ep>
 668:	a2 1b       	sub	r26, r18
 66a:	b3 0b       	sbc	r27, r19
 66c:	e4 0b       	sbc	r30, r20
 66e:	f5 0b       	sbc	r31, r21

00000670 <__udivmodsi4_ep>:
 670:	66 1f       	adc	r22, r22
 672:	77 1f       	adc	r23, r23
 674:	88 1f       	adc	r24, r24
 676:	99 1f       	adc	r25, r25
 678:	1a 94       	dec	r1
 67a:	69 f7       	brne	.-38     	; 0x656 <__udivmodsi4_loop>
 67c:	60 95       	com	r22
 67e:	70 95       	com	r23
 680:	80 95       	com	r24
 682:	90 95       	com	r25
 684:	9b 01       	movw	r18, r22
 686:	ac 01       	movw	r20, r24
 688:	bd 01       	movw	r22, r26
 68a:	cf 01       	movw	r24, r30
 68c:	08 95       	ret

0000068e <printf>:
 68e:	cf 93       	push	r28
 690:	df 93       	push	r29
 692:	cd b7       	in	r28, 0x3d	; 61
 694:	de b7       	in	r29, 0x3e	; 62
 696:	ae 01       	movw	r20, r28
 698:	4b 5f       	subi	r20, 0xFB	; 251
 69a:	5f 4f       	sbci	r21, 0xFF	; 255
 69c:	fa 01       	movw	r30, r20
 69e:	61 91       	ld	r22, Z+
 6a0:	71 91       	ld	r23, Z+
 6a2:	af 01       	movw	r20, r30
 6a4:	80 91 46 40 	lds	r24, 0x4046	; 0x804046 <__iob+0x2>
 6a8:	90 91 47 40 	lds	r25, 0x4047	; 0x804047 <__iob+0x3>
 6ac:	0e 94 8b 03 	call	0x716	; 0x716 <vfprintf>
 6b0:	df 91       	pop	r29
 6b2:	cf 91       	pop	r28
 6b4:	08 95       	ret

000006b6 <puts>:
 6b6:	0f 93       	push	r16
 6b8:	1f 93       	push	r17
 6ba:	cf 93       	push	r28
 6bc:	df 93       	push	r29
 6be:	e0 91 46 40 	lds	r30, 0x4046	; 0x804046 <__iob+0x2>
 6c2:	f0 91 47 40 	lds	r31, 0x4047	; 0x804047 <__iob+0x3>
 6c6:	23 81       	ldd	r18, Z+3	; 0x03
 6c8:	21 ff       	sbrs	r18, 1
 6ca:	1b c0       	rjmp	.+54     	; 0x702 <puts+0x4c>
 6cc:	8c 01       	movw	r16, r24
 6ce:	d0 e0       	ldi	r29, 0x00	; 0
 6d0:	c0 e0       	ldi	r28, 0x00	; 0
 6d2:	f8 01       	movw	r30, r16
 6d4:	81 91       	ld	r24, Z+
 6d6:	8f 01       	movw	r16, r30
 6d8:	60 91 46 40 	lds	r22, 0x4046	; 0x804046 <__iob+0x2>
 6dc:	70 91 47 40 	lds	r23, 0x4047	; 0x804047 <__iob+0x3>
 6e0:	db 01       	movw	r26, r22
 6e2:	18 96       	adiw	r26, 0x08	; 8
 6e4:	ed 91       	ld	r30, X+
 6e6:	fc 91       	ld	r31, X
 6e8:	19 97       	sbiw	r26, 0x09	; 9
 6ea:	88 23       	and	r24, r24
 6ec:	31 f0       	breq	.+12     	; 0x6fa <puts+0x44>
 6ee:	09 95       	icall
 6f0:	89 2b       	or	r24, r25
 6f2:	79 f3       	breq	.-34     	; 0x6d2 <puts+0x1c>
 6f4:	df ef       	ldi	r29, 0xFF	; 255
 6f6:	cf ef       	ldi	r28, 0xFF	; 255
 6f8:	ec cf       	rjmp	.-40     	; 0x6d2 <puts+0x1c>
 6fa:	8a e0       	ldi	r24, 0x0A	; 10
 6fc:	09 95       	icall
 6fe:	89 2b       	or	r24, r25
 700:	19 f0       	breq	.+6      	; 0x708 <puts+0x52>
 702:	8f ef       	ldi	r24, 0xFF	; 255
 704:	9f ef       	ldi	r25, 0xFF	; 255
 706:	02 c0       	rjmp	.+4      	; 0x70c <puts+0x56>
 708:	8d 2f       	mov	r24, r29
 70a:	9c 2f       	mov	r25, r28
 70c:	df 91       	pop	r29
 70e:	cf 91       	pop	r28
 710:	1f 91       	pop	r17
 712:	0f 91       	pop	r16
 714:	08 95       	ret

00000716 <vfprintf>:
 716:	2f 92       	push	r2
 718:	3f 92       	push	r3
 71a:	4f 92       	push	r4
 71c:	5f 92       	push	r5
 71e:	6f 92       	push	r6
 720:	7f 92       	push	r7
 722:	8f 92       	push	r8
 724:	9f 92       	push	r9
 726:	af 92       	push	r10
 728:	bf 92       	push	r11
 72a:	cf 92       	push	r12
 72c:	df 92       	push	r13
 72e:	ef 92       	push	r14
 730:	ff 92       	push	r15
 732:	0f 93       	push	r16
 734:	1f 93       	push	r17
 736:	cf 93       	push	r28
 738:	df 93       	push	r29
 73a:	cd b7       	in	r28, 0x3d	; 61
 73c:	de b7       	in	r29, 0x3e	; 62
 73e:	2b 97       	sbiw	r28, 0x0b	; 11
 740:	cd bf       	out	0x3d, r28	; 61
 742:	de bf       	out	0x3e, r29	; 62
 744:	6c 01       	movw	r12, r24
 746:	7b 01       	movw	r14, r22
 748:	8a 01       	movw	r16, r20
 74a:	fc 01       	movw	r30, r24
 74c:	16 82       	std	Z+6, r1	; 0x06
 74e:	17 82       	std	Z+7, r1	; 0x07
 750:	83 81       	ldd	r24, Z+3	; 0x03
 752:	81 ff       	sbrs	r24, 1
 754:	cc c1       	rjmp	.+920    	; 0xaee <vfprintf+0x3d8>
 756:	ce 01       	movw	r24, r28
 758:	01 96       	adiw	r24, 0x01	; 1
 75a:	3c 01       	movw	r6, r24
 75c:	f6 01       	movw	r30, r12
 75e:	93 81       	ldd	r25, Z+3	; 0x03
 760:	f7 01       	movw	r30, r14
 762:	93 fd       	sbrc	r25, 3
 764:	85 91       	lpm	r24, Z+
 766:	93 ff       	sbrs	r25, 3
 768:	81 91       	ld	r24, Z+
 76a:	7f 01       	movw	r14, r30
 76c:	88 23       	and	r24, r24
 76e:	09 f4       	brne	.+2      	; 0x772 <vfprintf+0x5c>
 770:	ba c1       	rjmp	.+884    	; 0xae6 <vfprintf+0x3d0>
 772:	85 32       	cpi	r24, 0x25	; 37
 774:	39 f4       	brne	.+14     	; 0x784 <vfprintf+0x6e>
 776:	93 fd       	sbrc	r25, 3
 778:	85 91       	lpm	r24, Z+
 77a:	93 ff       	sbrs	r25, 3
 77c:	81 91       	ld	r24, Z+
 77e:	7f 01       	movw	r14, r30
 780:	85 32       	cpi	r24, 0x25	; 37
 782:	29 f4       	brne	.+10     	; 0x78e <vfprintf+0x78>
 784:	b6 01       	movw	r22, r12
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 78c:	e7 cf       	rjmp	.-50     	; 0x75c <vfprintf+0x46>
 78e:	91 2c       	mov	r9, r1
 790:	21 2c       	mov	r2, r1
 792:	31 2c       	mov	r3, r1
 794:	ff e1       	ldi	r31, 0x1F	; 31
 796:	f3 15       	cp	r31, r3
 798:	d8 f0       	brcs	.+54     	; 0x7d0 <vfprintf+0xba>
 79a:	8b 32       	cpi	r24, 0x2B	; 43
 79c:	79 f0       	breq	.+30     	; 0x7bc <vfprintf+0xa6>
 79e:	38 f4       	brcc	.+14     	; 0x7ae <vfprintf+0x98>
 7a0:	80 32       	cpi	r24, 0x20	; 32
 7a2:	79 f0       	breq	.+30     	; 0x7c2 <vfprintf+0xac>
 7a4:	83 32       	cpi	r24, 0x23	; 35
 7a6:	a1 f4       	brne	.+40     	; 0x7d0 <vfprintf+0xba>
 7a8:	23 2d       	mov	r18, r3
 7aa:	20 61       	ori	r18, 0x10	; 16
 7ac:	1d c0       	rjmp	.+58     	; 0x7e8 <vfprintf+0xd2>
 7ae:	8d 32       	cpi	r24, 0x2D	; 45
 7b0:	61 f0       	breq	.+24     	; 0x7ca <vfprintf+0xb4>
 7b2:	80 33       	cpi	r24, 0x30	; 48
 7b4:	69 f4       	brne	.+26     	; 0x7d0 <vfprintf+0xba>
 7b6:	23 2d       	mov	r18, r3
 7b8:	21 60       	ori	r18, 0x01	; 1
 7ba:	16 c0       	rjmp	.+44     	; 0x7e8 <vfprintf+0xd2>
 7bc:	83 2d       	mov	r24, r3
 7be:	82 60       	ori	r24, 0x02	; 2
 7c0:	38 2e       	mov	r3, r24
 7c2:	e3 2d       	mov	r30, r3
 7c4:	e4 60       	ori	r30, 0x04	; 4
 7c6:	3e 2e       	mov	r3, r30
 7c8:	2a c0       	rjmp	.+84     	; 0x81e <vfprintf+0x108>
 7ca:	f3 2d       	mov	r31, r3
 7cc:	f8 60       	ori	r31, 0x08	; 8
 7ce:	1d c0       	rjmp	.+58     	; 0x80a <vfprintf+0xf4>
 7d0:	37 fc       	sbrc	r3, 7
 7d2:	2d c0       	rjmp	.+90     	; 0x82e <vfprintf+0x118>
 7d4:	20 ed       	ldi	r18, 0xD0	; 208
 7d6:	28 0f       	add	r18, r24
 7d8:	2a 30       	cpi	r18, 0x0A	; 10
 7da:	40 f0       	brcs	.+16     	; 0x7ec <vfprintf+0xd6>
 7dc:	8e 32       	cpi	r24, 0x2E	; 46
 7de:	b9 f4       	brne	.+46     	; 0x80e <vfprintf+0xf8>
 7e0:	36 fc       	sbrc	r3, 6
 7e2:	81 c1       	rjmp	.+770    	; 0xae6 <vfprintf+0x3d0>
 7e4:	23 2d       	mov	r18, r3
 7e6:	20 64       	ori	r18, 0x40	; 64
 7e8:	32 2e       	mov	r3, r18
 7ea:	19 c0       	rjmp	.+50     	; 0x81e <vfprintf+0x108>
 7ec:	36 fe       	sbrs	r3, 6
 7ee:	06 c0       	rjmp	.+12     	; 0x7fc <vfprintf+0xe6>
 7f0:	8a e0       	ldi	r24, 0x0A	; 10
 7f2:	98 9e       	mul	r9, r24
 7f4:	20 0d       	add	r18, r0
 7f6:	11 24       	eor	r1, r1
 7f8:	92 2e       	mov	r9, r18
 7fa:	11 c0       	rjmp	.+34     	; 0x81e <vfprintf+0x108>
 7fc:	ea e0       	ldi	r30, 0x0A	; 10
 7fe:	2e 9e       	mul	r2, r30
 800:	20 0d       	add	r18, r0
 802:	11 24       	eor	r1, r1
 804:	22 2e       	mov	r2, r18
 806:	f3 2d       	mov	r31, r3
 808:	f0 62       	ori	r31, 0x20	; 32
 80a:	3f 2e       	mov	r3, r31
 80c:	08 c0       	rjmp	.+16     	; 0x81e <vfprintf+0x108>
 80e:	8c 36       	cpi	r24, 0x6C	; 108
 810:	21 f4       	brne	.+8      	; 0x81a <vfprintf+0x104>
 812:	83 2d       	mov	r24, r3
 814:	80 68       	ori	r24, 0x80	; 128
 816:	38 2e       	mov	r3, r24
 818:	02 c0       	rjmp	.+4      	; 0x81e <vfprintf+0x108>
 81a:	88 36       	cpi	r24, 0x68	; 104
 81c:	41 f4       	brne	.+16     	; 0x82e <vfprintf+0x118>
 81e:	f7 01       	movw	r30, r14
 820:	93 fd       	sbrc	r25, 3
 822:	85 91       	lpm	r24, Z+
 824:	93 ff       	sbrs	r25, 3
 826:	81 91       	ld	r24, Z+
 828:	7f 01       	movw	r14, r30
 82a:	81 11       	cpse	r24, r1
 82c:	b3 cf       	rjmp	.-154    	; 0x794 <vfprintf+0x7e>
 82e:	98 2f       	mov	r25, r24
 830:	9f 7d       	andi	r25, 0xDF	; 223
 832:	95 54       	subi	r25, 0x45	; 69
 834:	93 30       	cpi	r25, 0x03	; 3
 836:	28 f4       	brcc	.+10     	; 0x842 <vfprintf+0x12c>
 838:	0c 5f       	subi	r16, 0xFC	; 252
 83a:	1f 4f       	sbci	r17, 0xFF	; 255
 83c:	9f e3       	ldi	r25, 0x3F	; 63
 83e:	99 83       	std	Y+1, r25	; 0x01
 840:	0d c0       	rjmp	.+26     	; 0x85c <vfprintf+0x146>
 842:	83 36       	cpi	r24, 0x63	; 99
 844:	31 f0       	breq	.+12     	; 0x852 <vfprintf+0x13c>
 846:	83 37       	cpi	r24, 0x73	; 115
 848:	71 f0       	breq	.+28     	; 0x866 <vfprintf+0x150>
 84a:	83 35       	cpi	r24, 0x53	; 83
 84c:	09 f0       	breq	.+2      	; 0x850 <vfprintf+0x13a>
 84e:	59 c0       	rjmp	.+178    	; 0x902 <vfprintf+0x1ec>
 850:	21 c0       	rjmp	.+66     	; 0x894 <vfprintf+0x17e>
 852:	f8 01       	movw	r30, r16
 854:	80 81       	ld	r24, Z
 856:	89 83       	std	Y+1, r24	; 0x01
 858:	0e 5f       	subi	r16, 0xFE	; 254
 85a:	1f 4f       	sbci	r17, 0xFF	; 255
 85c:	88 24       	eor	r8, r8
 85e:	83 94       	inc	r8
 860:	91 2c       	mov	r9, r1
 862:	53 01       	movw	r10, r6
 864:	13 c0       	rjmp	.+38     	; 0x88c <vfprintf+0x176>
 866:	28 01       	movw	r4, r16
 868:	f2 e0       	ldi	r31, 0x02	; 2
 86a:	4f 0e       	add	r4, r31
 86c:	51 1c       	adc	r5, r1
 86e:	f8 01       	movw	r30, r16
 870:	a0 80       	ld	r10, Z
 872:	b1 80       	ldd	r11, Z+1	; 0x01
 874:	36 fe       	sbrs	r3, 6
 876:	03 c0       	rjmp	.+6      	; 0x87e <vfprintf+0x168>
 878:	69 2d       	mov	r22, r9
 87a:	70 e0       	ldi	r23, 0x00	; 0
 87c:	02 c0       	rjmp	.+4      	; 0x882 <vfprintf+0x16c>
 87e:	6f ef       	ldi	r22, 0xFF	; 255
 880:	7f ef       	ldi	r23, 0xFF	; 255
 882:	c5 01       	movw	r24, r10
 884:	0e 94 9a 05 	call	0xb34	; 0xb34 <strnlen>
 888:	4c 01       	movw	r8, r24
 88a:	82 01       	movw	r16, r4
 88c:	f3 2d       	mov	r31, r3
 88e:	ff 77       	andi	r31, 0x7F	; 127
 890:	3f 2e       	mov	r3, r31
 892:	16 c0       	rjmp	.+44     	; 0x8c0 <vfprintf+0x1aa>
 894:	28 01       	movw	r4, r16
 896:	22 e0       	ldi	r18, 0x02	; 2
 898:	42 0e       	add	r4, r18
 89a:	51 1c       	adc	r5, r1
 89c:	f8 01       	movw	r30, r16
 89e:	a0 80       	ld	r10, Z
 8a0:	b1 80       	ldd	r11, Z+1	; 0x01
 8a2:	36 fe       	sbrs	r3, 6
 8a4:	03 c0       	rjmp	.+6      	; 0x8ac <vfprintf+0x196>
 8a6:	69 2d       	mov	r22, r9
 8a8:	70 e0       	ldi	r23, 0x00	; 0
 8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <vfprintf+0x19a>
 8ac:	6f ef       	ldi	r22, 0xFF	; 255
 8ae:	7f ef       	ldi	r23, 0xFF	; 255
 8b0:	c5 01       	movw	r24, r10
 8b2:	0e 94 8f 05 	call	0xb1e	; 0xb1e <strnlen_P>
 8b6:	4c 01       	movw	r8, r24
 8b8:	f3 2d       	mov	r31, r3
 8ba:	f0 68       	ori	r31, 0x80	; 128
 8bc:	3f 2e       	mov	r3, r31
 8be:	82 01       	movw	r16, r4
 8c0:	33 fc       	sbrc	r3, 3
 8c2:	1b c0       	rjmp	.+54     	; 0x8fa <vfprintf+0x1e4>
 8c4:	82 2d       	mov	r24, r2
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	88 16       	cp	r8, r24
 8ca:	99 06       	cpc	r9, r25
 8cc:	b0 f4       	brcc	.+44     	; 0x8fa <vfprintf+0x1e4>
 8ce:	b6 01       	movw	r22, r12
 8d0:	80 e2       	ldi	r24, 0x20	; 32
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 8d8:	2a 94       	dec	r2
 8da:	f4 cf       	rjmp	.-24     	; 0x8c4 <vfprintf+0x1ae>
 8dc:	f5 01       	movw	r30, r10
 8de:	37 fc       	sbrc	r3, 7
 8e0:	85 91       	lpm	r24, Z+
 8e2:	37 fe       	sbrs	r3, 7
 8e4:	81 91       	ld	r24, Z+
 8e6:	5f 01       	movw	r10, r30
 8e8:	b6 01       	movw	r22, r12
 8ea:	90 e0       	ldi	r25, 0x00	; 0
 8ec:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 8f0:	21 10       	cpse	r2, r1
 8f2:	2a 94       	dec	r2
 8f4:	21 e0       	ldi	r18, 0x01	; 1
 8f6:	82 1a       	sub	r8, r18
 8f8:	91 08       	sbc	r9, r1
 8fa:	81 14       	cp	r8, r1
 8fc:	91 04       	cpc	r9, r1
 8fe:	71 f7       	brne	.-36     	; 0x8dc <vfprintf+0x1c6>
 900:	e8 c0       	rjmp	.+464    	; 0xad2 <vfprintf+0x3bc>
 902:	84 36       	cpi	r24, 0x64	; 100
 904:	11 f0       	breq	.+4      	; 0x90a <vfprintf+0x1f4>
 906:	89 36       	cpi	r24, 0x69	; 105
 908:	41 f5       	brne	.+80     	; 0x95a <vfprintf+0x244>
 90a:	f8 01       	movw	r30, r16
 90c:	37 fe       	sbrs	r3, 7
 90e:	07 c0       	rjmp	.+14     	; 0x91e <vfprintf+0x208>
 910:	60 81       	ld	r22, Z
 912:	71 81       	ldd	r23, Z+1	; 0x01
 914:	82 81       	ldd	r24, Z+2	; 0x02
 916:	93 81       	ldd	r25, Z+3	; 0x03
 918:	0c 5f       	subi	r16, 0xFC	; 252
 91a:	1f 4f       	sbci	r17, 0xFF	; 255
 91c:	08 c0       	rjmp	.+16     	; 0x92e <vfprintf+0x218>
 91e:	60 81       	ld	r22, Z
 920:	71 81       	ldd	r23, Z+1	; 0x01
 922:	07 2e       	mov	r0, r23
 924:	00 0c       	add	r0, r0
 926:	88 0b       	sbc	r24, r24
 928:	99 0b       	sbc	r25, r25
 92a:	0e 5f       	subi	r16, 0xFE	; 254
 92c:	1f 4f       	sbci	r17, 0xFF	; 255
 92e:	f3 2d       	mov	r31, r3
 930:	ff 76       	andi	r31, 0x6F	; 111
 932:	3f 2e       	mov	r3, r31
 934:	97 ff       	sbrs	r25, 7
 936:	09 c0       	rjmp	.+18     	; 0x94a <vfprintf+0x234>
 938:	90 95       	com	r25
 93a:	80 95       	com	r24
 93c:	70 95       	com	r23
 93e:	61 95       	neg	r22
 940:	7f 4f       	sbci	r23, 0xFF	; 255
 942:	8f 4f       	sbci	r24, 0xFF	; 255
 944:	9f 4f       	sbci	r25, 0xFF	; 255
 946:	f0 68       	ori	r31, 0x80	; 128
 948:	3f 2e       	mov	r3, r31
 94a:	2a e0       	ldi	r18, 0x0A	; 10
 94c:	30 e0       	ldi	r19, 0x00	; 0
 94e:	a3 01       	movw	r20, r6
 950:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__ultoa_invert>
 954:	88 2e       	mov	r8, r24
 956:	86 18       	sub	r8, r6
 958:	45 c0       	rjmp	.+138    	; 0x9e4 <vfprintf+0x2ce>
 95a:	85 37       	cpi	r24, 0x75	; 117
 95c:	31 f4       	brne	.+12     	; 0x96a <vfprintf+0x254>
 95e:	23 2d       	mov	r18, r3
 960:	2f 7e       	andi	r18, 0xEF	; 239
 962:	b2 2e       	mov	r11, r18
 964:	2a e0       	ldi	r18, 0x0A	; 10
 966:	30 e0       	ldi	r19, 0x00	; 0
 968:	25 c0       	rjmp	.+74     	; 0x9b4 <vfprintf+0x29e>
 96a:	93 2d       	mov	r25, r3
 96c:	99 7f       	andi	r25, 0xF9	; 249
 96e:	b9 2e       	mov	r11, r25
 970:	8f 36       	cpi	r24, 0x6F	; 111
 972:	c1 f0       	breq	.+48     	; 0x9a4 <vfprintf+0x28e>
 974:	18 f4       	brcc	.+6      	; 0x97c <vfprintf+0x266>
 976:	88 35       	cpi	r24, 0x58	; 88
 978:	79 f0       	breq	.+30     	; 0x998 <vfprintf+0x282>
 97a:	b5 c0       	rjmp	.+362    	; 0xae6 <vfprintf+0x3d0>
 97c:	80 37       	cpi	r24, 0x70	; 112
 97e:	19 f0       	breq	.+6      	; 0x986 <vfprintf+0x270>
 980:	88 37       	cpi	r24, 0x78	; 120
 982:	21 f0       	breq	.+8      	; 0x98c <vfprintf+0x276>
 984:	b0 c0       	rjmp	.+352    	; 0xae6 <vfprintf+0x3d0>
 986:	e9 2f       	mov	r30, r25
 988:	e0 61       	ori	r30, 0x10	; 16
 98a:	be 2e       	mov	r11, r30
 98c:	b4 fe       	sbrs	r11, 4
 98e:	0d c0       	rjmp	.+26     	; 0x9aa <vfprintf+0x294>
 990:	fb 2d       	mov	r31, r11
 992:	f4 60       	ori	r31, 0x04	; 4
 994:	bf 2e       	mov	r11, r31
 996:	09 c0       	rjmp	.+18     	; 0x9aa <vfprintf+0x294>
 998:	34 fe       	sbrs	r3, 4
 99a:	0a c0       	rjmp	.+20     	; 0x9b0 <vfprintf+0x29a>
 99c:	29 2f       	mov	r18, r25
 99e:	26 60       	ori	r18, 0x06	; 6
 9a0:	b2 2e       	mov	r11, r18
 9a2:	06 c0       	rjmp	.+12     	; 0x9b0 <vfprintf+0x29a>
 9a4:	28 e0       	ldi	r18, 0x08	; 8
 9a6:	30 e0       	ldi	r19, 0x00	; 0
 9a8:	05 c0       	rjmp	.+10     	; 0x9b4 <vfprintf+0x29e>
 9aa:	20 e1       	ldi	r18, 0x10	; 16
 9ac:	30 e0       	ldi	r19, 0x00	; 0
 9ae:	02 c0       	rjmp	.+4      	; 0x9b4 <vfprintf+0x29e>
 9b0:	20 e1       	ldi	r18, 0x10	; 16
 9b2:	32 e0       	ldi	r19, 0x02	; 2
 9b4:	f8 01       	movw	r30, r16
 9b6:	b7 fe       	sbrs	r11, 7
 9b8:	07 c0       	rjmp	.+14     	; 0x9c8 <vfprintf+0x2b2>
 9ba:	60 81       	ld	r22, Z
 9bc:	71 81       	ldd	r23, Z+1	; 0x01
 9be:	82 81       	ldd	r24, Z+2	; 0x02
 9c0:	93 81       	ldd	r25, Z+3	; 0x03
 9c2:	0c 5f       	subi	r16, 0xFC	; 252
 9c4:	1f 4f       	sbci	r17, 0xFF	; 255
 9c6:	06 c0       	rjmp	.+12     	; 0x9d4 <vfprintf+0x2be>
 9c8:	60 81       	ld	r22, Z
 9ca:	71 81       	ldd	r23, Z+1	; 0x01
 9cc:	80 e0       	ldi	r24, 0x00	; 0
 9ce:	90 e0       	ldi	r25, 0x00	; 0
 9d0:	0e 5f       	subi	r16, 0xFE	; 254
 9d2:	1f 4f       	sbci	r17, 0xFF	; 255
 9d4:	a3 01       	movw	r20, r6
 9d6:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__ultoa_invert>
 9da:	88 2e       	mov	r8, r24
 9dc:	86 18       	sub	r8, r6
 9de:	fb 2d       	mov	r31, r11
 9e0:	ff 77       	andi	r31, 0x7F	; 127
 9e2:	3f 2e       	mov	r3, r31
 9e4:	36 fe       	sbrs	r3, 6
 9e6:	0d c0       	rjmp	.+26     	; 0xa02 <vfprintf+0x2ec>
 9e8:	23 2d       	mov	r18, r3
 9ea:	2e 7f       	andi	r18, 0xFE	; 254
 9ec:	a2 2e       	mov	r10, r18
 9ee:	89 14       	cp	r8, r9
 9f0:	58 f4       	brcc	.+22     	; 0xa08 <vfprintf+0x2f2>
 9f2:	34 fe       	sbrs	r3, 4
 9f4:	0b c0       	rjmp	.+22     	; 0xa0c <vfprintf+0x2f6>
 9f6:	32 fc       	sbrc	r3, 2
 9f8:	09 c0       	rjmp	.+18     	; 0xa0c <vfprintf+0x2f6>
 9fa:	83 2d       	mov	r24, r3
 9fc:	8e 7e       	andi	r24, 0xEE	; 238
 9fe:	a8 2e       	mov	r10, r24
 a00:	05 c0       	rjmp	.+10     	; 0xa0c <vfprintf+0x2f6>
 a02:	b8 2c       	mov	r11, r8
 a04:	a3 2c       	mov	r10, r3
 a06:	03 c0       	rjmp	.+6      	; 0xa0e <vfprintf+0x2f8>
 a08:	b8 2c       	mov	r11, r8
 a0a:	01 c0       	rjmp	.+2      	; 0xa0e <vfprintf+0x2f8>
 a0c:	b9 2c       	mov	r11, r9
 a0e:	a4 fe       	sbrs	r10, 4
 a10:	0f c0       	rjmp	.+30     	; 0xa30 <vfprintf+0x31a>
 a12:	fe 01       	movw	r30, r28
 a14:	e8 0d       	add	r30, r8
 a16:	f1 1d       	adc	r31, r1
 a18:	80 81       	ld	r24, Z
 a1a:	80 33       	cpi	r24, 0x30	; 48
 a1c:	21 f4       	brne	.+8      	; 0xa26 <vfprintf+0x310>
 a1e:	9a 2d       	mov	r25, r10
 a20:	99 7e       	andi	r25, 0xE9	; 233
 a22:	a9 2e       	mov	r10, r25
 a24:	09 c0       	rjmp	.+18     	; 0xa38 <vfprintf+0x322>
 a26:	a2 fe       	sbrs	r10, 2
 a28:	06 c0       	rjmp	.+12     	; 0xa36 <vfprintf+0x320>
 a2a:	b3 94       	inc	r11
 a2c:	b3 94       	inc	r11
 a2e:	04 c0       	rjmp	.+8      	; 0xa38 <vfprintf+0x322>
 a30:	8a 2d       	mov	r24, r10
 a32:	86 78       	andi	r24, 0x86	; 134
 a34:	09 f0       	breq	.+2      	; 0xa38 <vfprintf+0x322>
 a36:	b3 94       	inc	r11
 a38:	a3 fc       	sbrc	r10, 3
 a3a:	11 c0       	rjmp	.+34     	; 0xa5e <vfprintf+0x348>
 a3c:	a0 fe       	sbrs	r10, 0
 a3e:	06 c0       	rjmp	.+12     	; 0xa4c <vfprintf+0x336>
 a40:	b2 14       	cp	r11, r2
 a42:	88 f4       	brcc	.+34     	; 0xa66 <vfprintf+0x350>
 a44:	28 0c       	add	r2, r8
 a46:	92 2c       	mov	r9, r2
 a48:	9b 18       	sub	r9, r11
 a4a:	0e c0       	rjmp	.+28     	; 0xa68 <vfprintf+0x352>
 a4c:	b2 14       	cp	r11, r2
 a4e:	60 f4       	brcc	.+24     	; 0xa68 <vfprintf+0x352>
 a50:	b6 01       	movw	r22, r12
 a52:	80 e2       	ldi	r24, 0x20	; 32
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 a5a:	b3 94       	inc	r11
 a5c:	f7 cf       	rjmp	.-18     	; 0xa4c <vfprintf+0x336>
 a5e:	b2 14       	cp	r11, r2
 a60:	18 f4       	brcc	.+6      	; 0xa68 <vfprintf+0x352>
 a62:	2b 18       	sub	r2, r11
 a64:	02 c0       	rjmp	.+4      	; 0xa6a <vfprintf+0x354>
 a66:	98 2c       	mov	r9, r8
 a68:	21 2c       	mov	r2, r1
 a6a:	a4 fe       	sbrs	r10, 4
 a6c:	10 c0       	rjmp	.+32     	; 0xa8e <vfprintf+0x378>
 a6e:	b6 01       	movw	r22, r12
 a70:	80 e3       	ldi	r24, 0x30	; 48
 a72:	90 e0       	ldi	r25, 0x00	; 0
 a74:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 a78:	a2 fe       	sbrs	r10, 2
 a7a:	17 c0       	rjmp	.+46     	; 0xaaa <vfprintf+0x394>
 a7c:	a1 fc       	sbrc	r10, 1
 a7e:	03 c0       	rjmp	.+6      	; 0xa86 <vfprintf+0x370>
 a80:	88 e7       	ldi	r24, 0x78	; 120
 a82:	90 e0       	ldi	r25, 0x00	; 0
 a84:	02 c0       	rjmp	.+4      	; 0xa8a <vfprintf+0x374>
 a86:	88 e5       	ldi	r24, 0x58	; 88
 a88:	90 e0       	ldi	r25, 0x00	; 0
 a8a:	b6 01       	movw	r22, r12
 a8c:	0c c0       	rjmp	.+24     	; 0xaa6 <vfprintf+0x390>
 a8e:	8a 2d       	mov	r24, r10
 a90:	86 78       	andi	r24, 0x86	; 134
 a92:	59 f0       	breq	.+22     	; 0xaaa <vfprintf+0x394>
 a94:	a1 fe       	sbrs	r10, 1
 a96:	02 c0       	rjmp	.+4      	; 0xa9c <vfprintf+0x386>
 a98:	8b e2       	ldi	r24, 0x2B	; 43
 a9a:	01 c0       	rjmp	.+2      	; 0xa9e <vfprintf+0x388>
 a9c:	80 e2       	ldi	r24, 0x20	; 32
 a9e:	a7 fc       	sbrc	r10, 7
 aa0:	8d e2       	ldi	r24, 0x2D	; 45
 aa2:	b6 01       	movw	r22, r12
 aa4:	90 e0       	ldi	r25, 0x00	; 0
 aa6:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 aaa:	89 14       	cp	r8, r9
 aac:	38 f4       	brcc	.+14     	; 0xabc <vfprintf+0x3a6>
 aae:	b6 01       	movw	r22, r12
 ab0:	80 e3       	ldi	r24, 0x30	; 48
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 ab8:	9a 94       	dec	r9
 aba:	f7 cf       	rjmp	.-18     	; 0xaaa <vfprintf+0x394>
 abc:	8a 94       	dec	r8
 abe:	f3 01       	movw	r30, r6
 ac0:	e8 0d       	add	r30, r8
 ac2:	f1 1d       	adc	r31, r1
 ac4:	80 81       	ld	r24, Z
 ac6:	b6 01       	movw	r22, r12
 ac8:	90 e0       	ldi	r25, 0x00	; 0
 aca:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 ace:	81 10       	cpse	r8, r1
 ad0:	f5 cf       	rjmp	.-22     	; 0xabc <vfprintf+0x3a6>
 ad2:	22 20       	and	r2, r2
 ad4:	09 f4       	brne	.+2      	; 0xad8 <vfprintf+0x3c2>
 ad6:	42 ce       	rjmp	.-892    	; 0x75c <vfprintf+0x46>
 ad8:	b6 01       	movw	r22, r12
 ada:	80 e2       	ldi	r24, 0x20	; 32
 adc:	90 e0       	ldi	r25, 0x00	; 0
 ade:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 ae2:	2a 94       	dec	r2
 ae4:	f6 cf       	rjmp	.-20     	; 0xad2 <vfprintf+0x3bc>
 ae6:	f6 01       	movw	r30, r12
 ae8:	86 81       	ldd	r24, Z+6	; 0x06
 aea:	97 81       	ldd	r25, Z+7	; 0x07
 aec:	02 c0       	rjmp	.+4      	; 0xaf2 <vfprintf+0x3dc>
 aee:	8f ef       	ldi	r24, 0xFF	; 255
 af0:	9f ef       	ldi	r25, 0xFF	; 255
 af2:	2b 96       	adiw	r28, 0x0b	; 11
 af4:	cd bf       	out	0x3d, r28	; 61
 af6:	de bf       	out	0x3e, r29	; 62
 af8:	df 91       	pop	r29
 afa:	cf 91       	pop	r28
 afc:	1f 91       	pop	r17
 afe:	0f 91       	pop	r16
 b00:	ff 90       	pop	r15
 b02:	ef 90       	pop	r14
 b04:	df 90       	pop	r13
 b06:	cf 90       	pop	r12
 b08:	bf 90       	pop	r11
 b0a:	af 90       	pop	r10
 b0c:	9f 90       	pop	r9
 b0e:	8f 90       	pop	r8
 b10:	7f 90       	pop	r7
 b12:	6f 90       	pop	r6
 b14:	5f 90       	pop	r5
 b16:	4f 90       	pop	r4
 b18:	3f 90       	pop	r3
 b1a:	2f 90       	pop	r2
 b1c:	08 95       	ret

00000b1e <strnlen_P>:
 b1e:	fc 01       	movw	r30, r24
 b20:	05 90       	lpm	r0, Z+
 b22:	61 50       	subi	r22, 0x01	; 1
 b24:	70 40       	sbci	r23, 0x00	; 0
 b26:	01 10       	cpse	r0, r1
 b28:	d8 f7       	brcc	.-10     	; 0xb20 <strnlen_P+0x2>
 b2a:	80 95       	com	r24
 b2c:	90 95       	com	r25
 b2e:	8e 0f       	add	r24, r30
 b30:	9f 1f       	adc	r25, r31
 b32:	08 95       	ret

00000b34 <strnlen>:
 b34:	fc 01       	movw	r30, r24
 b36:	61 50       	subi	r22, 0x01	; 1
 b38:	70 40       	sbci	r23, 0x00	; 0
 b3a:	01 90       	ld	r0, Z+
 b3c:	01 10       	cpse	r0, r1
 b3e:	d8 f7       	brcc	.-10     	; 0xb36 <strnlen+0x2>
 b40:	80 95       	com	r24
 b42:	90 95       	com	r25
 b44:	8e 0f       	add	r24, r30
 b46:	9f 1f       	adc	r25, r31
 b48:	08 95       	ret

00000b4a <fputc>:
 b4a:	0f 93       	push	r16
 b4c:	1f 93       	push	r17
 b4e:	cf 93       	push	r28
 b50:	df 93       	push	r29
 b52:	fb 01       	movw	r30, r22
 b54:	23 81       	ldd	r18, Z+3	; 0x03
 b56:	21 fd       	sbrc	r18, 1
 b58:	03 c0       	rjmp	.+6      	; 0xb60 <fputc+0x16>
 b5a:	8f ef       	ldi	r24, 0xFF	; 255
 b5c:	9f ef       	ldi	r25, 0xFF	; 255
 b5e:	2c c0       	rjmp	.+88     	; 0xbb8 <fputc+0x6e>
 b60:	22 ff       	sbrs	r18, 2
 b62:	16 c0       	rjmp	.+44     	; 0xb90 <fputc+0x46>
 b64:	46 81       	ldd	r20, Z+6	; 0x06
 b66:	57 81       	ldd	r21, Z+7	; 0x07
 b68:	24 81       	ldd	r18, Z+4	; 0x04
 b6a:	35 81       	ldd	r19, Z+5	; 0x05
 b6c:	42 17       	cp	r20, r18
 b6e:	53 07       	cpc	r21, r19
 b70:	44 f4       	brge	.+16     	; 0xb82 <fputc+0x38>
 b72:	a0 81       	ld	r26, Z
 b74:	b1 81       	ldd	r27, Z+1	; 0x01
 b76:	9d 01       	movw	r18, r26
 b78:	2f 5f       	subi	r18, 0xFF	; 255
 b7a:	3f 4f       	sbci	r19, 0xFF	; 255
 b7c:	20 83       	st	Z, r18
 b7e:	31 83       	std	Z+1, r19	; 0x01
 b80:	8c 93       	st	X, r24
 b82:	26 81       	ldd	r18, Z+6	; 0x06
 b84:	37 81       	ldd	r19, Z+7	; 0x07
 b86:	2f 5f       	subi	r18, 0xFF	; 255
 b88:	3f 4f       	sbci	r19, 0xFF	; 255
 b8a:	26 83       	std	Z+6, r18	; 0x06
 b8c:	37 83       	std	Z+7, r19	; 0x07
 b8e:	14 c0       	rjmp	.+40     	; 0xbb8 <fputc+0x6e>
 b90:	8b 01       	movw	r16, r22
 b92:	ec 01       	movw	r28, r24
 b94:	fb 01       	movw	r30, r22
 b96:	00 84       	ldd	r0, Z+8	; 0x08
 b98:	f1 85       	ldd	r31, Z+9	; 0x09
 b9a:	e0 2d       	mov	r30, r0
 b9c:	09 95       	icall
 b9e:	89 2b       	or	r24, r25
 ba0:	e1 f6       	brne	.-72     	; 0xb5a <fputc+0x10>
 ba2:	d8 01       	movw	r26, r16
 ba4:	16 96       	adiw	r26, 0x06	; 6
 ba6:	8d 91       	ld	r24, X+
 ba8:	9c 91       	ld	r25, X
 baa:	17 97       	sbiw	r26, 0x07	; 7
 bac:	01 96       	adiw	r24, 0x01	; 1
 bae:	16 96       	adiw	r26, 0x06	; 6
 bb0:	8d 93       	st	X+, r24
 bb2:	9c 93       	st	X, r25
 bb4:	17 97       	sbiw	r26, 0x07	; 7
 bb6:	ce 01       	movw	r24, r28
 bb8:	df 91       	pop	r29
 bba:	cf 91       	pop	r28
 bbc:	1f 91       	pop	r17
 bbe:	0f 91       	pop	r16
 bc0:	08 95       	ret

00000bc2 <__ultoa_invert>:
 bc2:	fa 01       	movw	r30, r20
 bc4:	aa 27       	eor	r26, r26
 bc6:	28 30       	cpi	r18, 0x08	; 8
 bc8:	51 f1       	breq	.+84     	; 0xc1e <__ultoa_invert+0x5c>
 bca:	20 31       	cpi	r18, 0x10	; 16
 bcc:	81 f1       	breq	.+96     	; 0xc2e <__ultoa_invert+0x6c>
 bce:	e8 94       	clt
 bd0:	6f 93       	push	r22
 bd2:	6e 7f       	andi	r22, 0xFE	; 254
 bd4:	6e 5f       	subi	r22, 0xFE	; 254
 bd6:	7f 4f       	sbci	r23, 0xFF	; 255
 bd8:	8f 4f       	sbci	r24, 0xFF	; 255
 bda:	9f 4f       	sbci	r25, 0xFF	; 255
 bdc:	af 4f       	sbci	r26, 0xFF	; 255
 bde:	b1 e0       	ldi	r27, 0x01	; 1
 be0:	3e d0       	rcall	.+124    	; 0xc5e <__ultoa_invert+0x9c>
 be2:	b4 e0       	ldi	r27, 0x04	; 4
 be4:	3c d0       	rcall	.+120    	; 0xc5e <__ultoa_invert+0x9c>
 be6:	67 0f       	add	r22, r23
 be8:	78 1f       	adc	r23, r24
 bea:	89 1f       	adc	r24, r25
 bec:	9a 1f       	adc	r25, r26
 bee:	a1 1d       	adc	r26, r1
 bf0:	68 0f       	add	r22, r24
 bf2:	79 1f       	adc	r23, r25
 bf4:	8a 1f       	adc	r24, r26
 bf6:	91 1d       	adc	r25, r1
 bf8:	a1 1d       	adc	r26, r1
 bfa:	6a 0f       	add	r22, r26
 bfc:	71 1d       	adc	r23, r1
 bfe:	81 1d       	adc	r24, r1
 c00:	91 1d       	adc	r25, r1
 c02:	a1 1d       	adc	r26, r1
 c04:	20 d0       	rcall	.+64     	; 0xc46 <__ultoa_invert+0x84>
 c06:	09 f4       	brne	.+2      	; 0xc0a <__ultoa_invert+0x48>
 c08:	68 94       	set
 c0a:	3f 91       	pop	r19
 c0c:	2a e0       	ldi	r18, 0x0A	; 10
 c0e:	26 9f       	mul	r18, r22
 c10:	11 24       	eor	r1, r1
 c12:	30 19       	sub	r19, r0
 c14:	30 5d       	subi	r19, 0xD0	; 208
 c16:	31 93       	st	Z+, r19
 c18:	de f6       	brtc	.-74     	; 0xbd0 <__ultoa_invert+0xe>
 c1a:	cf 01       	movw	r24, r30
 c1c:	08 95       	ret
 c1e:	46 2f       	mov	r20, r22
 c20:	47 70       	andi	r20, 0x07	; 7
 c22:	40 5d       	subi	r20, 0xD0	; 208
 c24:	41 93       	st	Z+, r20
 c26:	b3 e0       	ldi	r27, 0x03	; 3
 c28:	0f d0       	rcall	.+30     	; 0xc48 <__ultoa_invert+0x86>
 c2a:	c9 f7       	brne	.-14     	; 0xc1e <__ultoa_invert+0x5c>
 c2c:	f6 cf       	rjmp	.-20     	; 0xc1a <__ultoa_invert+0x58>
 c2e:	46 2f       	mov	r20, r22
 c30:	4f 70       	andi	r20, 0x0F	; 15
 c32:	40 5d       	subi	r20, 0xD0	; 208
 c34:	4a 33       	cpi	r20, 0x3A	; 58
 c36:	18 f0       	brcs	.+6      	; 0xc3e <__ultoa_invert+0x7c>
 c38:	49 5d       	subi	r20, 0xD9	; 217
 c3a:	31 fd       	sbrc	r19, 1
 c3c:	40 52       	subi	r20, 0x20	; 32
 c3e:	41 93       	st	Z+, r20
 c40:	02 d0       	rcall	.+4      	; 0xc46 <__ultoa_invert+0x84>
 c42:	a9 f7       	brne	.-22     	; 0xc2e <__ultoa_invert+0x6c>
 c44:	ea cf       	rjmp	.-44     	; 0xc1a <__ultoa_invert+0x58>
 c46:	b4 e0       	ldi	r27, 0x04	; 4
 c48:	a6 95       	lsr	r26
 c4a:	97 95       	ror	r25
 c4c:	87 95       	ror	r24
 c4e:	77 95       	ror	r23
 c50:	67 95       	ror	r22
 c52:	ba 95       	dec	r27
 c54:	c9 f7       	brne	.-14     	; 0xc48 <__ultoa_invert+0x86>
 c56:	00 97       	sbiw	r24, 0x00	; 0
 c58:	61 05       	cpc	r22, r1
 c5a:	71 05       	cpc	r23, r1
 c5c:	08 95       	ret
 c5e:	9b 01       	movw	r18, r22
 c60:	ac 01       	movw	r20, r24
 c62:	0a 2e       	mov	r0, r26
 c64:	06 94       	lsr	r0
 c66:	57 95       	ror	r21
 c68:	47 95       	ror	r20
 c6a:	37 95       	ror	r19
 c6c:	27 95       	ror	r18
 c6e:	ba 95       	dec	r27
 c70:	c9 f7       	brne	.-14     	; 0xc64 <__ultoa_invert+0xa2>
 c72:	62 0f       	add	r22, r18
 c74:	73 1f       	adc	r23, r19
 c76:	84 1f       	adc	r24, r20
 c78:	95 1f       	adc	r25, r21
 c7a:	a0 1d       	adc	r26, r0
 c7c:	08 95       	ret

00000c7e <_exit>:
 c7e:	f8 94       	cli

00000c80 <__stop_program>:
 c80:	ff cf       	rjmp	.-2      	; 0xc80 <__stop_program>
