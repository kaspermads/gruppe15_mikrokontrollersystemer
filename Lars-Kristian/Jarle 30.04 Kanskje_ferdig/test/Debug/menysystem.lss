
menysystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000b9a  00804000  00001d34  00001de8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d34  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000222  00804b9a  00804b9a  00002982  2**0
                  ALLOC
  3 .eeprom       00000004  00810000  00810000  00002982  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00002986  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000029e4  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000001c0  00000000  00000000  00002a28  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000624a  00000000  00000000  00002be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003224  00000000  00000000  00008e32  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000013e6  00000000  00000000  0000c056  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000664  00000000  00000000  0000d43c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00003d45  00000000  00000000  0000daa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001878  00000000  00000000  000117e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001a0  00000000  00000000  0001305d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 00 	jmp	0x10e	; 0x10e <__ctors_end>
       4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      10:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      14:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      18:	0c 94 09 05 	jmp	0xa12	; 0xa12 <__vector_6>
      1c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      20:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      24:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      28:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      2c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      30:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      34:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      38:	0c 94 23 05 	jmp	0xa46	; 0xa46 <__vector_14>
      3c:	0c 94 5a 05 	jmp	0xab4	; 0xab4 <__vector_15>
      40:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      44:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      48:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      4c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      50:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      54:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      58:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      5c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      60:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      64:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      68:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      6c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      70:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      74:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      78:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      7c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      80:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      84:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      88:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      8c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      90:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      94:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      98:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      9c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      a0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      a4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      a8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      ac:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      b0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      b4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      b8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      bc:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      c0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      c4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      c8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      cc:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      d0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      d4:	0c 94 83 08 	jmp	0x1106	; 0x1106 <__vector_53>
      d8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      dc:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      e0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      e4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      e8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      ec:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      f0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      f4:	32 07       	cpc	r19, r18
      f6:	3c 07       	cpc	r19, r28
      f8:	46 07       	cpc	r20, r22
      fa:	50 07       	cpc	r21, r16
      fc:	5a 07       	cpc	r21, r26
      fe:	63 07       	cpc	r22, r19
     100:	73 07       	cpc	r23, r19
     102:	7c 07       	cpc	r23, r28
     104:	8f 07       	cpc	r24, r31
     106:	b0 07       	cpc	r27, r16
     108:	b0 07       	cpc	r27, r16
     10a:	b0 07       	cpc	r27, r16
     10c:	96 07       	cpc	r25, r22

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	cd bf       	out	0x3d, r28	; 61
     116:	df e7       	ldi	r29, 0x7F	; 127
     118:	de bf       	out	0x3e, r29	; 62

0000011a <__do_copy_data>:
     11a:	1b e4       	ldi	r17, 0x4B	; 75
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b0 e4       	ldi	r27, 0x40	; 64
     120:	e4 e3       	ldi	r30, 0x34	; 52
     122:	fd e1       	ldi	r31, 0x1D	; 29
     124:	00 e0       	ldi	r16, 0x00	; 0
     126:	0b bf       	out	0x3b, r16	; 59
     128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x14>
     12a:	07 90       	elpm	r0, Z+
     12c:	0d 92       	st	X+, r0
     12e:	aa 39       	cpi	r26, 0x9A	; 154
     130:	b1 07       	cpc	r27, r17
     132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x10>

00000134 <__do_clear_bss>:
     134:	2d e4       	ldi	r18, 0x4D	; 77
     136:	aa e9       	ldi	r26, 0x9A	; 154
     138:	bb e4       	ldi	r27, 0x4B	; 75
     13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
     13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
     13e:	ac 3b       	cpi	r26, 0xBC	; 188
     140:	b2 07       	cpc	r27, r18
     142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
     144:	0e 94 ab 08 	call	0x1156	; 0x1156 <main>
     148:	0c 94 98 0e 	jmp	0x1d30	; 0x1d30 <_exit>

0000014c <__bad_interrupt>:
     14c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000150 <TWI0_M_init>:
	
	status_eeprom();
	
	read_value = eeprom_read_word((uint16_t*) address_fan1);
	return read_value;
}
     150:	e0 e0       	ldi	r30, 0x00	; 0
     152:	f4 e0       	ldi	r31, 0x04	; 4
     154:	8c e0       	ldi	r24, 0x0C	; 12
     156:	81 83       	std	Z+1, r24	; 0x01
     158:	98 e0       	ldi	r25, 0x08	; 8
     15a:	93 87       	std	Z+11, r25	; 0x0b
     15c:	84 87       	std	Z+12, r24	; 0x0c
     15e:	e0 e0       	ldi	r30, 0x00	; 0
     160:	f9 e0       	ldi	r31, 0x09	; 9
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	83 83       	std	Z+3, r24	; 0x03
     166:	16 82       	std	Z+6, r1	; 0x06
     168:	85 83       	std	Z+5, r24	; 0x05
     16a:	e0 e8       	ldi	r30, 0x80	; 128
     16c:	f4 e0       	ldi	r31, 0x04	; 4
     16e:	82 e0       	ldi	r24, 0x02	; 2
     170:	81 83       	std	Z+1, r24	; 0x01
     172:	84 83       	std	Z+4, r24	; 0x04
     174:	08 95       	ret

00000176 <I2C0_M_start>:
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	88 0f       	add	r24, r24
     17a:	99 1f       	adc	r25, r25
     17c:	86 2b       	or	r24, r22
     17e:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     182:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     186:	85 fd       	sbrc	r24, 5
     188:	0d c0       	rjmp	.+26     	; 0x1a4 <I2C0_M_start+0x2e>
     18a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     18e:	82 fd       	sbrc	r24, 2
     190:	09 c0       	rjmp	.+18     	; 0x1a4 <I2C0_M_start+0x2e>
     192:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     196:	83 fd       	sbrc	r24, 3
     198:	05 c0       	rjmp	.+10     	; 0x1a4 <I2C0_M_start+0x2e>
     19a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     19e:	83 70       	andi	r24, 0x03	; 3
     1a0:	83 30       	cpi	r24, 0x03	; 3
     1a2:	79 f7       	brne	.-34     	; 0x182 <I2C0_M_start+0xc>
     1a4:	08 95       	ret

000001a6 <I2C_M_write>:
     1a6:	cf 93       	push	r28
     1a8:	c6 2f       	mov	r28, r22
     1aa:	60 e0       	ldi	r22, 0x00	; 0
     1ac:	0e 94 bb 00 	call	0x176	; 0x176 <I2C0_M_start>
     1b0:	c0 93 08 09 	sts	0x0908, r28	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     1b4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1b8:	85 fd       	sbrc	r24, 5
     1ba:	0d c0       	rjmp	.+26     	; 0x1d6 <I2C_M_write+0x30>
     1bc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c0:	82 fd       	sbrc	r24, 2
     1c2:	09 c0       	rjmp	.+18     	; 0x1d6 <I2C_M_write+0x30>
     1c4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c8:	83 fd       	sbrc	r24, 3
     1ca:	05 c0       	rjmp	.+10     	; 0x1d6 <I2C_M_write+0x30>
     1cc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1d0:	83 70       	andi	r24, 0x03	; 3
     1d2:	83 30       	cpi	r24, 0x03	; 3
     1d4:	79 f7       	brne	.-34     	; 0x1b4 <I2C_M_write+0xe>
     1d6:	e0 e0       	ldi	r30, 0x00	; 0
     1d8:	f9 e0       	ldi	r31, 0x09	; 9
     1da:	85 81       	ldd	r24, Z+5	; 0x05
     1dc:	84 81       	ldd	r24, Z+4	; 0x04
     1de:	83 60       	ori	r24, 0x03	; 3
     1e0:	84 83       	std	Z+4, r24	; 0x04
     1e2:	cf 91       	pop	r28
     1e4:	08 95       	ret

000001e6 <I2C_M_read>:
     1e6:	0f 93       	push	r16
     1e8:	1f 93       	push	r17
     1ea:	cf 93       	push	r28
     1ec:	8b 01       	movw	r16, r22
     1ee:	c4 2f       	mov	r28, r20
     1f0:	61 e0       	ldi	r22, 0x01	; 1
     1f2:	0e 94 bb 00 	call	0x176	; 0x176 <I2C0_M_start>
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	1d c0       	rjmp	.+58     	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     1fa:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1fe:	85 fd       	sbrc	r24, 5
     200:	0d c0       	rjmp	.+26     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
     202:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     206:	82 fd       	sbrc	r24, 2
     208:	09 c0       	rjmp	.+18     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
     20a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     20e:	83 fd       	sbrc	r24, 3
     210:	05 c0       	rjmp	.+10     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
     212:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     216:	83 70       	andi	r24, 0x03	; 3
     218:	83 30       	cpi	r24, 0x03	; 3
     21a:	79 f7       	brne	.-34     	; 0x1fa <I2C_M_read+0x14>
     21c:	f8 01       	movw	r30, r16
     21e:	e9 0f       	add	r30, r25
     220:	f1 1d       	adc	r31, r1
     222:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     226:	80 83       	st	Z, r24
     228:	9f 5f       	subi	r25, 0xFF	; 255
     22a:	c9 17       	cp	r28, r25
     22c:	19 f0       	breq	.+6      	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     22e:	82 e0       	ldi	r24, 0x02	; 2
     230:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
     234:	9c 17       	cp	r25, r28
     236:	08 f3       	brcs	.-62     	; 0x1fa <I2C_M_read+0x14>
     238:	87 e0       	ldi	r24, 0x07	; 7
     23a:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
     23e:	cf 91       	pop	r28
     240:	1f 91       	pop	r17
     242:	0f 91       	pop	r16
     244:	08 95       	ret

00000246 <AHT10_init>:
     246:	61 ee       	ldi	r22, 0xE1	; 225
     248:	88 e3       	ldi	r24, 0x38	; 56
     24a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <I2C_M_write>
     24e:	2f e5       	ldi	r18, 0x5F	; 95
     250:	8a ee       	ldi	r24, 0xEA	; 234
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	21 50       	subi	r18, 0x01	; 1
     256:	80 40       	sbci	r24, 0x00	; 0
     258:	90 40       	sbci	r25, 0x00	; 0
     25a:	e1 f7       	brne	.-8      	; 0x254 <AHT10_init+0xe>
     25c:	00 c0       	rjmp	.+0      	; 0x25e <AHT10_init+0x18>
     25e:	00 00       	nop
     260:	6a eb       	ldi	r22, 0xBA	; 186
     262:	88 e3       	ldi	r24, 0x38	; 56
     264:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <I2C_M_write>
     268:	8f e1       	ldi	r24, 0x1F	; 31
     26a:	9e e4       	ldi	r25, 0x4E	; 78
     26c:	01 97       	sbiw	r24, 0x01	; 1
     26e:	f1 f7       	brne	.-4      	; 0x26c <AHT10_init+0x26>
     270:	00 c0       	rjmp	.+0      	; 0x272 <AHT10_init+0x2c>
     272:	00 00       	nop
     274:	08 95       	ret

00000276 <autoRPMmode>:
     276:	cb 97       	sbiw	r24, 0x3b	; 59
     278:	bc 01       	movw	r22, r24
     27a:	80 e0       	ldi	r24, 0x00	; 0
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	0e 94 1f 0a 	call	0x143e	; 0x143e <__floatunsisf>
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	40 e0       	ldi	r20, 0x00	; 0
     288:	5f e3       	ldi	r21, 0x3F	; 63
     28a:	0e 94 12 09 	call	0x1224	; 0x1224 <__addsf3>
     28e:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <__fixunssfsi>
     292:	6e 31       	cpi	r22, 0x1E	; 30
     294:	18 f0       	brcs	.+6      	; 0x29c <autoRPMmode+0x26>
     296:	60 35       	cpi	r22, 0x50	; 80
     298:	18 f4       	brcc	.+6      	; 0x2a0 <autoRPMmode+0x2a>
     29a:	03 c0       	rjmp	.+6      	; 0x2a2 <autoRPMmode+0x2c>
     29c:	6e e1       	ldi	r22, 0x1E	; 30
     29e:	01 c0       	rjmp	.+2      	; 0x2a2 <autoRPMmode+0x2c>
     2a0:	6f e4       	ldi	r22, 0x4F	; 79
     2a2:	86 2f       	mov	r24, r22
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	08 95       	ret

000002a8 <handleFansInAuto>:
     2a8:	80 91 33 45 	lds	r24, 0x4533	; 0x804533 <fan1>
     2ac:	90 91 34 45 	lds	r25, 0x4534	; 0x804534 <fan1+0x1>
     2b0:	02 97       	sbiw	r24, 0x02	; 2
     2b2:	41 f4       	brne	.+16     	; 0x2c4 <handleFansInAuto+0x1c>
     2b4:	80 91 0c 4c 	lds	r24, 0x4C0C	; 0x804c0c <temperature>
     2b8:	90 91 0d 4c 	lds	r25, 0x4C0D	; 0x804c0d <temperature+0x1>
     2bc:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     2c0:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     2c4:	80 91 2f 45 	lds	r24, 0x452F	; 0x80452f <fan2>
     2c8:	90 91 30 45 	lds	r25, 0x4530	; 0x804530 <fan2+0x1>
     2cc:	02 97       	sbiw	r24, 0x02	; 2
     2ce:	41 f4       	brne	.+16     	; 0x2e0 <handleFansInAuto+0x38>
     2d0:	80 91 0c 4c 	lds	r24, 0x4C0C	; 0x804c0c <temperature>
     2d4:	90 91 0d 4c 	lds	r25, 0x4C0D	; 0x804c0d <temperature+0x1>
     2d8:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     2dc:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     2e0:	80 91 2b 45 	lds	r24, 0x452B	; 0x80452b <fan3>
     2e4:	90 91 2c 45 	lds	r25, 0x452C	; 0x80452c <fan3+0x1>
     2e8:	02 97       	sbiw	r24, 0x02	; 2
     2ea:	41 f4       	brne	.+16     	; 0x2fc <handleFansInAuto+0x54>
     2ec:	80 91 0c 4c 	lds	r24, 0x4C0C	; 0x804c0c <temperature>
     2f0:	90 91 0d 4c 	lds	r25, 0x4C0D	; 0x804c0d <temperature+0x1>
     2f4:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     2f8:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     2fc:	80 91 27 45 	lds	r24, 0x4527	; 0x804527 <fan4>
     300:	90 91 28 45 	lds	r25, 0x4528	; 0x804528 <fan4+0x1>
     304:	02 97       	sbiw	r24, 0x02	; 2
     306:	41 f4       	brne	.+16     	; 0x318 <handleFansInAuto+0x70>
     308:	80 91 0c 4c 	lds	r24, 0x4C0C	; 0x804c0c <temperature>
     30c:	90 91 0d 4c 	lds	r25, 0x4C0D	; 0x804c0d <temperature+0x1>
     310:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     314:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     318:	08 95       	ret

0000031a <startFansAfterDiagnose>:
     31a:	80 91 22 4c 	lds	r24, 0x4C22	; 0x804c22 <SavedFan1State>
     31e:	90 91 23 4c 	lds	r25, 0x4C23	; 0x804c23 <SavedFan1State+0x1>
     322:	81 30       	cpi	r24, 0x01	; 1
     324:	91 05       	cpc	r25, r1
     326:	49 f4       	brne	.+18     	; 0x33a <startFansAfterDiagnose+0x20>
     328:	81 e0       	ldi	r24, 0x01	; 1
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	80 93 33 45 	sts	0x4533, r24	; 0x804533 <fan1>
     330:	90 93 34 45 	sts	0x4534, r25	; 0x804534 <fan1+0x1>
     334:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     338:	10 c0       	rjmp	.+32     	; 0x35a <startFansAfterDiagnose+0x40>
     33a:	82 30       	cpi	r24, 0x02	; 2
     33c:	91 05       	cpc	r25, r1
     33e:	39 f4       	brne	.+14     	; 0x34e <startFansAfterDiagnose+0x34>
     340:	82 e0       	ldi	r24, 0x02	; 2
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	80 93 33 45 	sts	0x4533, r24	; 0x804533 <fan1>
     348:	90 93 34 45 	sts	0x4534, r25	; 0x804534 <fan1+0x1>
     34c:	06 c0       	rjmp	.+12     	; 0x35a <startFansAfterDiagnose+0x40>
     34e:	89 2b       	or	r24, r25
     350:	21 f4       	brne	.+8      	; 0x35a <startFansAfterDiagnose+0x40>
     352:	10 92 33 45 	sts	0x4533, r1	; 0x804533 <fan1>
     356:	10 92 34 45 	sts	0x4534, r1	; 0x804534 <fan1+0x1>
     35a:	80 91 1b 4c 	lds	r24, 0x4C1B	; 0x804c1b <SavedFan2State>
     35e:	90 91 1c 4c 	lds	r25, 0x4C1C	; 0x804c1c <SavedFan2State+0x1>
     362:	81 30       	cpi	r24, 0x01	; 1
     364:	91 05       	cpc	r25, r1
     366:	49 f4       	brne	.+18     	; 0x37a <startFansAfterDiagnose+0x60>
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	80 93 2f 45 	sts	0x452F, r24	; 0x80452f <fan2>
     370:	90 93 30 45 	sts	0x4530, r25	; 0x804530 <fan2+0x1>
     374:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     378:	10 c0       	rjmp	.+32     	; 0x39a <startFansAfterDiagnose+0x80>
     37a:	82 30       	cpi	r24, 0x02	; 2
     37c:	91 05       	cpc	r25, r1
     37e:	39 f4       	brne	.+14     	; 0x38e <startFansAfterDiagnose+0x74>
     380:	82 e0       	ldi	r24, 0x02	; 2
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	80 93 2f 45 	sts	0x452F, r24	; 0x80452f <fan2>
     388:	90 93 30 45 	sts	0x4530, r25	; 0x804530 <fan2+0x1>
     38c:	06 c0       	rjmp	.+12     	; 0x39a <startFansAfterDiagnose+0x80>
     38e:	89 2b       	or	r24, r25
     390:	21 f4       	brne	.+8      	; 0x39a <startFansAfterDiagnose+0x80>
     392:	10 92 2f 45 	sts	0x452F, r1	; 0x80452f <fan2>
     396:	10 92 30 45 	sts	0x4530, r1	; 0x804530 <fan2+0x1>
     39a:	80 91 11 4c 	lds	r24, 0x4C11	; 0x804c11 <SavedFan3State>
     39e:	90 91 12 4c 	lds	r25, 0x4C12	; 0x804c12 <SavedFan3State+0x1>
     3a2:	81 30       	cpi	r24, 0x01	; 1
     3a4:	91 05       	cpc	r25, r1
     3a6:	49 f4       	brne	.+18     	; 0x3ba <startFansAfterDiagnose+0xa0>
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	80 93 2b 45 	sts	0x452B, r24	; 0x80452b <fan3>
     3b0:	90 93 2c 45 	sts	0x452C, r25	; 0x80452c <fan3+0x1>
     3b4:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     3b8:	10 c0       	rjmp	.+32     	; 0x3da <startFansAfterDiagnose+0xc0>
     3ba:	82 30       	cpi	r24, 0x02	; 2
     3bc:	91 05       	cpc	r25, r1
     3be:	39 f4       	brne	.+14     	; 0x3ce <startFansAfterDiagnose+0xb4>
     3c0:	82 e0       	ldi	r24, 0x02	; 2
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	80 93 2b 45 	sts	0x452B, r24	; 0x80452b <fan3>
     3c8:	90 93 2c 45 	sts	0x452C, r25	; 0x80452c <fan3+0x1>
     3cc:	06 c0       	rjmp	.+12     	; 0x3da <startFansAfterDiagnose+0xc0>
     3ce:	89 2b       	or	r24, r25
     3d0:	21 f4       	brne	.+8      	; 0x3da <startFansAfterDiagnose+0xc0>
     3d2:	10 92 2b 45 	sts	0x452B, r1	; 0x80452b <fan3>
     3d6:	10 92 2c 45 	sts	0x452C, r1	; 0x80452c <fan3+0x1>
     3da:	80 91 a1 4b 	lds	r24, 0x4BA1	; 0x804ba1 <SavedFan4State>
     3de:	90 91 a2 4b 	lds	r25, 0x4BA2	; 0x804ba2 <SavedFan4State+0x1>
     3e2:	81 30       	cpi	r24, 0x01	; 1
     3e4:	91 05       	cpc	r25, r1
     3e6:	49 f4       	brne	.+18     	; 0x3fa <startFansAfterDiagnose+0xe0>
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <fan4>
     3f0:	90 93 28 45 	sts	0x4528, r25	; 0x804528 <fan4+0x1>
     3f4:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     3f8:	08 95       	ret
     3fa:	82 30       	cpi	r24, 0x02	; 2
     3fc:	91 05       	cpc	r25, r1
     3fe:	39 f4       	brne	.+14     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     400:	82 e0       	ldi	r24, 0x02	; 2
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <fan4>
     408:	90 93 28 45 	sts	0x4528, r25	; 0x804528 <fan4+0x1>
     40c:	08 95       	ret
     40e:	89 2b       	or	r24, r25
     410:	21 f4       	brne	.+8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     412:	10 92 27 45 	sts	0x4527, r1	; 0x804527 <fan4>
     416:	10 92 28 45 	sts	0x4528, r1	; 0x804528 <fan4+0x1>
     41a:	08 95       	ret

0000041c <saveFanModes>:
     41c:	80 91 33 45 	lds	r24, 0x4533	; 0x804533 <fan1>
     420:	90 91 34 45 	lds	r25, 0x4534	; 0x804534 <fan1+0x1>
     424:	80 93 22 4c 	sts	0x4C22, r24	; 0x804c22 <SavedFan1State>
     428:	90 93 23 4c 	sts	0x4C23, r25	; 0x804c23 <SavedFan1State+0x1>
     42c:	80 91 2f 45 	lds	r24, 0x452F	; 0x80452f <fan2>
     430:	90 91 30 45 	lds	r25, 0x4530	; 0x804530 <fan2+0x1>
     434:	80 93 1b 4c 	sts	0x4C1B, r24	; 0x804c1b <SavedFan2State>
     438:	90 93 1c 4c 	sts	0x4C1C, r25	; 0x804c1c <SavedFan2State+0x1>
     43c:	80 91 2b 45 	lds	r24, 0x452B	; 0x80452b <fan3>
     440:	90 91 2c 45 	lds	r25, 0x452C	; 0x80452c <fan3+0x1>
     444:	80 93 11 4c 	sts	0x4C11, r24	; 0x804c11 <SavedFan3State>
     448:	90 93 12 4c 	sts	0x4C12, r25	; 0x804c12 <SavedFan3State+0x1>
     44c:	80 91 27 45 	lds	r24, 0x4527	; 0x804527 <fan4>
     450:	90 91 28 45 	lds	r25, 0x4528	; 0x804528 <fan4+0x1>
     454:	80 93 a1 4b 	sts	0x4BA1, r24	; 0x804ba1 <SavedFan4State>
     458:	90 93 a2 4b 	sts	0x4BA2, r25	; 0x804ba2 <SavedFan4State+0x1>
     45c:	08 95       	ret

0000045e <AHT10_read>:
     45e:	cf 93       	push	r28
     460:	df 93       	push	r29
     462:	cd b7       	in	r28, 0x3d	; 61
     464:	de b7       	in	r29, 0x3e	; 62
     466:	26 97       	sbiw	r28, 0x06	; 6
     468:	cd bf       	out	0x3d, r28	; 61
     46a:	de bf       	out	0x3e, r29	; 62
     46c:	6c ea       	ldi	r22, 0xAC	; 172
     46e:	88 e3       	ldi	r24, 0x38	; 56
     470:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <I2C_M_write>
     474:	2f e5       	ldi	r18, 0x5F	; 95
     476:	8a ee       	ldi	r24, 0xEA	; 234
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	21 50       	subi	r18, 0x01	; 1
     47c:	80 40       	sbci	r24, 0x00	; 0
     47e:	90 40       	sbci	r25, 0x00	; 0
     480:	e1 f7       	brne	.-8      	; 0x47a <AHT10_read+0x1c>
     482:	00 c0       	rjmp	.+0      	; 0x484 <AHT10_read+0x26>
     484:	00 00       	nop
     486:	46 e0       	ldi	r20, 0x06	; 6
     488:	be 01       	movw	r22, r28
     48a:	6f 5f       	subi	r22, 0xFF	; 255
     48c:	7f 4f       	sbci	r23, 0xFF	; 255
     48e:	88 e3       	ldi	r24, 0x38	; 56
     490:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <I2C_M_read>
     494:	6c 81       	ldd	r22, Y+4	; 0x04
     496:	6f 70       	andi	r22, 0x0F	; 15
     498:	86 2f       	mov	r24, r22
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	a0 e0       	ldi	r26, 0x00	; 0
     49e:	b0 e0       	ldi	r27, 0x00	; 0
     4a0:	ba 2f       	mov	r27, r26
     4a2:	a9 2f       	mov	r26, r25
     4a4:	98 2f       	mov	r25, r24
     4a6:	88 27       	eor	r24, r24
     4a8:	2d 81       	ldd	r18, Y+5	; 0x05
     4aa:	82 2b       	or	r24, r18
     4ac:	ba 2f       	mov	r27, r26
     4ae:	a9 2f       	mov	r26, r25
     4b0:	98 2f       	mov	r25, r24
     4b2:	88 27       	eor	r24, r24
     4b4:	2e 81       	ldd	r18, Y+6	; 0x06
     4b6:	bc 01       	movw	r22, r24
     4b8:	cd 01       	movw	r24, r26
     4ba:	62 2b       	or	r22, r18
     4bc:	0e 94 1f 0a 	call	0x143e	; 0x143e <__floatunsisf>
     4c0:	20 e0       	ldi	r18, 0x00	; 0
     4c2:	30 e0       	ldi	r19, 0x00	; 0
     4c4:	48 e4       	ldi	r20, 0x48	; 72
     4c6:	53 e4       	ldi	r21, 0x43	; 67
     4c8:	0e 94 ad 0a 	call	0x155a	; 0x155a <__mulsf3>
     4cc:	20 e0       	ldi	r18, 0x00	; 0
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	40 e8       	ldi	r20, 0x80	; 128
     4d2:	55 e3       	ldi	r21, 0x35	; 53
     4d4:	0e 94 ad 0a 	call	0x155a	; 0x155a <__mulsf3>
     4d8:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <__fixunssfsi>
     4dc:	8e ec       	ldi	r24, 0xCE	; 206
     4de:	86 0f       	add	r24, r22
     4e0:	26 96       	adiw	r28, 0x06	; 6
     4e2:	cd bf       	out	0x3d, r28	; 61
     4e4:	de bf       	out	0x3e, r29	; 62
     4e6:	df 91       	pop	r29
     4e8:	cf 91       	pop	r28
     4ea:	08 95       	ret

000004ec <alarm>:
     4ec:	86 17       	cp	r24, r22
     4ee:	10 f4       	brcc	.+4      	; 0x4f4 <alarm+0x8>
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	08 95       	ret
     4f4:	80 e0       	ldi	r24, 0x00	; 0
     4f6:	08 95       	ret

000004f8 <calculate_percentage>:
     4f8:	cf 92       	push	r12
     4fa:	df 92       	push	r13
     4fc:	ef 92       	push	r14
     4fe:	ff 92       	push	r15
     500:	6b 01       	movw	r12, r22
     502:	7c 01       	movw	r14, r24
     504:	ba 01       	movw	r22, r20
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	0e 94 1f 0a 	call	0x143e	; 0x143e <__floatunsisf>
     50e:	a7 01       	movw	r20, r14
     510:	96 01       	movw	r18, r12
     512:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     516:	20 e0       	ldi	r18, 0x00	; 0
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	48 ec       	ldi	r20, 0xC8	; 200
     51c:	52 e4       	ldi	r21, 0x42	; 66
     51e:	0e 94 ad 0a 	call	0x155a	; 0x155a <__mulsf3>
     522:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <__fixunssfsi>
     526:	86 2f       	mov	r24, r22
     528:	ff 90       	pop	r15
     52a:	ef 90       	pop	r14
     52c:	df 90       	pop	r13
     52e:	cf 90       	pop	r12
     530:	08 95       	ret

00000532 <printHomeScreen>:
     532:	8c e7       	ldi	r24, 0x7C	; 124
     534:	9a e4       	ldi	r25, 0x4A	; 74
     536:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     53a:	8c e7       	ldi	r24, 0x7C	; 124
     53c:	9a e4       	ldi	r25, 0x4A	; 74
     53e:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     542:	8c e7       	ldi	r24, 0x7C	; 124
     544:	9a e4       	ldi	r25, 0x4A	; 74
     546:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     54a:	8d e3       	ldi	r24, 0x3D	; 61
     54c:	95 e4       	ldi	r25, 0x45	; 69
     54e:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     552:	8a e4       	ldi	r24, 0x4A	; 74
     554:	95 e4       	ldi	r25, 0x45	; 69
     556:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     55a:	8c e7       	ldi	r24, 0x7C	; 124
     55c:	9a e4       	ldi	r25, 0x4A	; 74
     55e:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     562:	8e e5       	ldi	r24, 0x5E	; 94
     564:	95 e4       	ldi	r25, 0x45	; 69
     566:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     56a:	08 95       	ret

0000056c <fanOff>:
     56c:	80 91 a0 4b 	lds	r24, 0x4BA0	; 0x804ba0 <chosenFan>
     570:	80 ff       	sbrs	r24, 0
     572:	13 c0       	rjmp	.+38     	; 0x59a <fanOff+0x2e>
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	80 93 33 45 	sts	0x4533, r24	; 0x804533 <fan1>
     57c:	90 93 34 45 	sts	0x4534, r25	; 0x804534 <fan1+0x1>
     580:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     584:	89 e8       	ldi	r24, 0x89	; 137
     586:	95 e4       	ldi	r25, 0x45	; 69
     588:	9f 93       	push	r25
     58a:	8f 93       	push	r24
     58c:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     590:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     594:	0f 90       	pop	r0
     596:	0f 90       	pop	r0
     598:	08 95       	ret
     59a:	81 ff       	sbrs	r24, 1
     59c:	13 c0       	rjmp	.+38     	; 0x5c4 <fanOff+0x58>
     59e:	81 e0       	ldi	r24, 0x01	; 1
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	80 93 2f 45 	sts	0x452F, r24	; 0x80452f <fan2>
     5a6:	90 93 30 45 	sts	0x4530, r25	; 0x804530 <fan2+0x1>
     5aa:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     5ae:	82 ea       	ldi	r24, 0xA2	; 162
     5b0:	95 e4       	ldi	r25, 0x45	; 69
     5b2:	9f 93       	push	r25
     5b4:	8f 93       	push	r24
     5b6:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     5ba:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     5be:	0f 90       	pop	r0
     5c0:	0f 90       	pop	r0
     5c2:	08 95       	ret
     5c4:	82 ff       	sbrs	r24, 2
     5c6:	13 c0       	rjmp	.+38     	; 0x5ee <fanOff+0x82>
     5c8:	81 e0       	ldi	r24, 0x01	; 1
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	80 93 2b 45 	sts	0x452B, r24	; 0x80452b <fan3>
     5d0:	90 93 2c 45 	sts	0x452C, r25	; 0x80452c <fan3+0x1>
     5d4:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     5d8:	8b eb       	ldi	r24, 0xBB	; 187
     5da:	95 e4       	ldi	r25, 0x45	; 69
     5dc:	9f 93       	push	r25
     5de:	8f 93       	push	r24
     5e0:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     5e4:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     5e8:	0f 90       	pop	r0
     5ea:	0f 90       	pop	r0
     5ec:	08 95       	ret
     5ee:	83 ff       	sbrs	r24, 3
     5f0:	12 c0       	rjmp	.+36     	; 0x616 <fanOff+0xaa>
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <fan4>
     5fa:	90 93 28 45 	sts	0x4528, r25	; 0x804528 <fan4+0x1>
     5fe:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     602:	84 ed       	ldi	r24, 0xD4	; 212
     604:	95 e4       	ldi	r25, 0x45	; 69
     606:	9f 93       	push	r25
     608:	8f 93       	push	r24
     60a:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     60e:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     612:	0f 90       	pop	r0
     614:	0f 90       	pop	r0
     616:	08 95       	ret

00000618 <fanAuto>:
     618:	80 91 a0 4b 	lds	r24, 0x4BA0	; 0x804ba0 <chosenFan>
     61c:	80 ff       	sbrs	r24, 0
     61e:	11 c0       	rjmp	.+34     	; 0x642 <fanAuto+0x2a>
     620:	82 e0       	ldi	r24, 0x02	; 2
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	80 93 33 45 	sts	0x4533, r24	; 0x804533 <fan1>
     628:	90 93 34 45 	sts	0x4534, r25	; 0x804534 <fan1+0x1>
     62c:	8d ee       	ldi	r24, 0xED	; 237
     62e:	95 e4       	ldi	r25, 0x45	; 69
     630:	9f 93       	push	r25
     632:	8f 93       	push	r24
     634:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     638:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     63c:	0f 90       	pop	r0
     63e:	0f 90       	pop	r0
     640:	08 95       	ret
     642:	81 ff       	sbrs	r24, 1
     644:	11 c0       	rjmp	.+34     	; 0x668 <fanAuto+0x50>
     646:	82 e0       	ldi	r24, 0x02	; 2
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	80 93 2f 45 	sts	0x452F, r24	; 0x80452f <fan2>
     64e:	90 93 30 45 	sts	0x4530, r25	; 0x804530 <fan2+0x1>
     652:	87 e0       	ldi	r24, 0x07	; 7
     654:	96 e4       	ldi	r25, 0x46	; 70
     656:	9f 93       	push	r25
     658:	8f 93       	push	r24
     65a:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     65e:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     662:	0f 90       	pop	r0
     664:	0f 90       	pop	r0
     666:	08 95       	ret
     668:	82 ff       	sbrs	r24, 2
     66a:	11 c0       	rjmp	.+34     	; 0x68e <fanAuto+0x76>
     66c:	82 e0       	ldi	r24, 0x02	; 2
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	80 93 2b 45 	sts	0x452B, r24	; 0x80452b <fan3>
     674:	90 93 2c 45 	sts	0x452C, r25	; 0x80452c <fan3+0x1>
     678:	81 e2       	ldi	r24, 0x21	; 33
     67a:	96 e4       	ldi	r25, 0x46	; 70
     67c:	9f 93       	push	r25
     67e:	8f 93       	push	r24
     680:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     684:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	08 95       	ret
     68e:	83 ff       	sbrs	r24, 3
     690:	10 c0       	rjmp	.+32     	; 0x6b2 <fanAuto+0x9a>
     692:	82 e0       	ldi	r24, 0x02	; 2
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <fan4>
     69a:	90 93 28 45 	sts	0x4528, r25	; 0x804528 <fan4+0x1>
     69e:	8b e3       	ldi	r24, 0x3B	; 59
     6a0:	96 e4       	ldi	r25, 0x46	; 70
     6a2:	9f 93       	push	r25
     6a4:	8f 93       	push	r24
     6a6:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     6aa:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     6ae:	0f 90       	pop	r0
     6b0:	0f 90       	pop	r0
     6b2:	08 95       	ret

000006b4 <fanManual>:
     6b4:	80 91 a0 4b 	lds	r24, 0x4BA0	; 0x804ba0 <chosenFan>
     6b8:	80 ff       	sbrs	r24, 0
     6ba:	0f c0       	rjmp	.+30     	; 0x6da <fanManual+0x26>
     6bc:	10 92 33 45 	sts	0x4533, r1	; 0x804533 <fan1>
     6c0:	10 92 34 45 	sts	0x4534, r1	; 0x804534 <fan1+0x1>
     6c4:	80 91 a5 4b 	lds	r24, 0x4BA5	; 0x804ba5 <manual_rpm_value>
     6c8:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     6cc:	85 e5       	ldi	r24, 0x55	; 85
     6ce:	96 e4       	ldi	r25, 0x46	; 70
     6d0:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     6d4:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     6d8:	08 95       	ret
     6da:	81 ff       	sbrs	r24, 1
     6dc:	13 c0       	rjmp	.+38     	; 0x704 <fanManual+0x50>
     6de:	10 92 2f 45 	sts	0x452F, r1	; 0x80452f <fan2>
     6e2:	10 92 30 45 	sts	0x4530, r1	; 0x804530 <fan2+0x1>
     6e6:	80 91 a5 4b 	lds	r24, 0x4BA5	; 0x804ba5 <manual_rpm_value>
     6ea:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     6ee:	83 e7       	ldi	r24, 0x73	; 115
     6f0:	96 e4       	ldi	r25, 0x46	; 70
     6f2:	9f 93       	push	r25
     6f4:	8f 93       	push	r24
     6f6:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     6fa:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	08 95       	ret
     704:	82 ff       	sbrs	r24, 2
     706:	13 c0       	rjmp	.+38     	; 0x72e <fanManual+0x7a>
     708:	10 92 2b 45 	sts	0x452B, r1	; 0x80452b <fan3>
     70c:	10 92 2c 45 	sts	0x452C, r1	; 0x80452c <fan3+0x1>
     710:	80 91 a5 4b 	lds	r24, 0x4BA5	; 0x804ba5 <manual_rpm_value>
     714:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     718:	8f e8       	ldi	r24, 0x8F	; 143
     71a:	96 e4       	ldi	r25, 0x46	; 70
     71c:	9f 93       	push	r25
     71e:	8f 93       	push	r24
     720:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     724:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     728:	0f 90       	pop	r0
     72a:	0f 90       	pop	r0
     72c:	08 95       	ret
     72e:	83 ff       	sbrs	r24, 3
     730:	12 c0       	rjmp	.+36     	; 0x756 <fanManual+0xa2>
     732:	10 92 27 45 	sts	0x4527, r1	; 0x804527 <fan4>
     736:	10 92 28 45 	sts	0x4528, r1	; 0x804528 <fan4+0x1>
     73a:	80 91 a5 4b 	lds	r24, 0x4BA5	; 0x804ba5 <manual_rpm_value>
     73e:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     742:	8b ea       	ldi	r24, 0xAB	; 171
     744:	96 e4       	ldi	r25, 0x46	; 70
     746:	9f 93       	push	r25
     748:	8f 93       	push	r24
     74a:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     74e:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     752:	0f 90       	pop	r0
     754:	0f 90       	pop	r0
     756:	08 95       	ret

00000758 <PrintSelectFanMode>:
     758:	87 ec       	ldi	r24, 0xC7	; 199
     75a:	96 e4       	ldi	r25, 0x46	; 70
     75c:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     760:	8c e7       	ldi	r24, 0x7C	; 124
     762:	9a e4       	ldi	r25, 0x4A	; 74
     764:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     768:	89 ed       	ldi	r24, 0xD9	; 217
     76a:	96 e4       	ldi	r25, 0x46	; 70
     76c:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     770:	08 95       	ret

00000772 <printOverview>:
     772:	cf 93       	push	r28
     774:	df 93       	push	r29
     776:	8a ef       	ldi	r24, 0xFA	; 250
     778:	96 e4       	ldi	r25, 0x46	; 70
     77a:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     77e:	8c e7       	ldi	r24, 0x7C	; 124
     780:	9a e4       	ldi	r25, 0x4A	; 74
     782:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     786:	c3 e3       	ldi	r28, 0x33	; 51
     788:	d5 e4       	ldi	r29, 0x45	; 69
     78a:	8b 81       	ldd	r24, Y+3	; 0x03
     78c:	8f 93       	push	r24
     78e:	8a 81       	ldd	r24, Y+2	; 0x02
     790:	8f 93       	push	r24
     792:	85 e0       	ldi	r24, 0x05	; 5
     794:	97 e4       	ldi	r25, 0x47	; 71
     796:	9f 93       	push	r25
     798:	8f 93       	push	r24
     79a:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     79e:	e8 81       	ld	r30, Y
     7a0:	f9 81       	ldd	r31, Y+1	; 0x01
     7a2:	ee 0f       	add	r30, r30
     7a4:	ff 1f       	adc	r31, r31
     7a6:	e9 5c       	subi	r30, 0xC9	; 201
     7a8:	fa 4b       	sbci	r31, 0xBA	; 186
     7aa:	81 81       	ldd	r24, Z+1	; 0x01
     7ac:	8f 93       	push	r24
     7ae:	80 81       	ld	r24, Z
     7b0:	8f 93       	push	r24
     7b2:	85 e1       	ldi	r24, 0x15	; 21
     7b4:	97 e4       	ldi	r25, 0x47	; 71
     7b6:	9f 93       	push	r25
     7b8:	8f 93       	push	r24
     7ba:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     7be:	cf e2       	ldi	r28, 0x2F	; 47
     7c0:	d5 e4       	ldi	r29, 0x45	; 69
     7c2:	8b 81       	ldd	r24, Y+3	; 0x03
     7c4:	8f 93       	push	r24
     7c6:	8a 81       	ldd	r24, Y+2	; 0x02
     7c8:	8f 93       	push	r24
     7ca:	87 e2       	ldi	r24, 0x27	; 39
     7cc:	97 e4       	ldi	r25, 0x47	; 71
     7ce:	9f 93       	push	r25
     7d0:	8f 93       	push	r24
     7d2:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     7d6:	e8 81       	ld	r30, Y
     7d8:	f9 81       	ldd	r31, Y+1	; 0x01
     7da:	ee 0f       	add	r30, r30
     7dc:	ff 1f       	adc	r31, r31
     7de:	e9 5c       	subi	r30, 0xC9	; 201
     7e0:	fa 4b       	sbci	r31, 0xBA	; 186
     7e2:	81 81       	ldd	r24, Z+1	; 0x01
     7e4:	8f 93       	push	r24
     7e6:	80 81       	ld	r24, Z
     7e8:	8f 93       	push	r24
     7ea:	87 e3       	ldi	r24, 0x37	; 55
     7ec:	97 e4       	ldi	r25, 0x47	; 71
     7ee:	9f 93       	push	r25
     7f0:	8f 93       	push	r24
     7f2:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     7f6:	cb e2       	ldi	r28, 0x2B	; 43
     7f8:	d5 e4       	ldi	r29, 0x45	; 69
     7fa:	8b 81       	ldd	r24, Y+3	; 0x03
     7fc:	8f 93       	push	r24
     7fe:	8a 81       	ldd	r24, Y+2	; 0x02
     800:	8f 93       	push	r24
     802:	89 e4       	ldi	r24, 0x49	; 73
     804:	97 e4       	ldi	r25, 0x47	; 71
     806:	9f 93       	push	r25
     808:	8f 93       	push	r24
     80a:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     80e:	e8 81       	ld	r30, Y
     810:	f9 81       	ldd	r31, Y+1	; 0x01
     812:	ee 0f       	add	r30, r30
     814:	ff 1f       	adc	r31, r31
     816:	e9 5c       	subi	r30, 0xC9	; 201
     818:	fa 4b       	sbci	r31, 0xBA	; 186
     81a:	81 81       	ldd	r24, Z+1	; 0x01
     81c:	8f 93       	push	r24
     81e:	80 81       	ld	r24, Z
     820:	8f 93       	push	r24
     822:	89 e5       	ldi	r24, 0x59	; 89
     824:	97 e4       	ldi	r25, 0x47	; 71
     826:	9f 93       	push	r25
     828:	8f 93       	push	r24
     82a:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     82e:	c7 e2       	ldi	r28, 0x27	; 39
     830:	d5 e4       	ldi	r29, 0x45	; 69
     832:	8b 81       	ldd	r24, Y+3	; 0x03
     834:	8f 93       	push	r24
     836:	8a 81       	ldd	r24, Y+2	; 0x02
     838:	8f 93       	push	r24
     83a:	8b e6       	ldi	r24, 0x6B	; 107
     83c:	97 e4       	ldi	r25, 0x47	; 71
     83e:	9f 93       	push	r25
     840:	8f 93       	push	r24
     842:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     846:	e8 81       	ld	r30, Y
     848:	f9 81       	ldd	r31, Y+1	; 0x01
     84a:	ee 0f       	add	r30, r30
     84c:	ff 1f       	adc	r31, r31
     84e:	e9 5c       	subi	r30, 0xC9	; 201
     850:	fa 4b       	sbci	r31, 0xBA	; 186
     852:	81 81       	ldd	r24, Z+1	; 0x01
     854:	8f 93       	push	r24
     856:	80 81       	ld	r24, Z
     858:	8f 93       	push	r24
     85a:	8b e7       	ldi	r24, 0x7B	; 123
     85c:	97 e4       	ldi	r25, 0x47	; 71
     85e:	9f 93       	push	r25
     860:	8f 93       	push	r24
     862:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     866:	8d b7       	in	r24, 0x3d	; 61
     868:	9e b7       	in	r25, 0x3e	; 62
     86a:	80 96       	adiw	r24, 0x20	; 32
     86c:	8d bf       	out	0x3d, r24	; 61
     86e:	9e bf       	out	0x3e, r25	; 62
     870:	0e 94 2f 02 	call	0x45e	; 0x45e <AHT10_read>
     874:	28 2f       	mov	r18, r24
     876:	30 e0       	ldi	r19, 0x00	; 0
     878:	20 93 0c 4c 	sts	0x4C0C, r18	; 0x804c0c <temperature>
     87c:	30 93 0d 4c 	sts	0x4C0D, r19	; 0x804c0d <temperature+0x1>
     880:	1f 92       	push	r1
     882:	8f 93       	push	r24
     884:	8d e8       	ldi	r24, 0x8D	; 141
     886:	97 e4       	ldi	r25, 0x47	; 71
     888:	9f 93       	push	r25
     88a:	8f 93       	push	r24
     88c:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     890:	8c e7       	ldi	r24, 0x7C	; 124
     892:	9a e4       	ldi	r25, 0x4A	; 74
     894:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     898:	8c e7       	ldi	r24, 0x7C	; 124
     89a:	9a e4       	ldi	r25, 0x4A	; 74
     89c:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     8a0:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     8a4:	0f 90       	pop	r0
     8a6:	0f 90       	pop	r0
     8a8:	0f 90       	pop	r0
     8aa:	0f 90       	pop	r0
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	08 95       	ret

000008b2 <printSelectFan>:
     8b2:	8f e9       	ldi	r24, 0x9F	; 159
     8b4:	97 e4       	ldi	r25, 0x47	; 71
     8b6:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     8ba:	8b ea       	ldi	r24, 0xAB	; 171
     8bc:	97 e4       	ldi	r25, 0x47	; 71
     8be:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     8c2:	86 ec       	ldi	r24, 0xC6	; 198
     8c4:	97 e4       	ldi	r25, 0x47	; 71
     8c6:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
     8ca:	08 95       	ret

000008cc <compareCommands>:
     8cc:	0f 93       	push	r16
     8ce:	1f 93       	push	r17
     8d0:	cf 93       	push	r28
     8d2:	8c 01       	movw	r16, r24
     8d4:	c0 e0       	ldi	r28, 0x00	; 0
     8d6:	0c c0       	rjmp	.+24     	; 0x8f0 <compareCommands+0x24>
     8d8:	84 e6       	ldi	r24, 0x64	; 100
     8da:	c8 9f       	mul	r28, r24
     8dc:	b0 01       	movw	r22, r0
     8de:	11 24       	eor	r1, r1
     8e0:	62 5f       	subi	r22, 0xF2	; 242
     8e2:	7f 4b       	sbci	r23, 0xBF	; 191
     8e4:	c8 01       	movw	r24, r16
     8e6:	0e 94 82 0b 	call	0x1704	; 0x1704 <strcmp>
     8ea:	89 2b       	or	r24, r25
     8ec:	29 f0       	breq	.+10     	; 0x8f8 <compareCommands+0x2c>
     8ee:	cf 5f       	subi	r28, 0xFF	; 255
     8f0:	cd 30       	cpi	r28, 0x0D	; 13
     8f2:	90 f3       	brcs	.-28     	; 0x8d8 <compareCommands+0xc>
     8f4:	8f ef       	ldi	r24, 0xFF	; 255
     8f6:	01 c0       	rjmp	.+2      	; 0x8fa <compareCommands+0x2e>
     8f8:	8c 2f       	mov	r24, r28
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	0f 91       	pop	r16
     900:	08 95       	ret

00000902 <USART3_sendChar>:
     902:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     906:	95 ff       	sbrs	r25, 5
     908:	fc cf       	rjmp	.-8      	; 0x902 <USART3_sendChar>
     90a:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
     90e:	08 95       	ret

00000910 <USART3_printChar>:
     910:	0e 94 81 04 	call	0x902	; 0x902 <USART3_sendChar>
     914:	80 e0       	ldi	r24, 0x00	; 0
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	08 95       	ret

0000091a <USART3_readChar>:
     91a:	cf 93       	push	r28
     91c:	80 91 64 08 	lds	r24, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     920:	88 23       	and	r24, r24
     922:	e4 f7       	brge	.-8      	; 0x91c <USART3_readChar+0x2>
     924:	c0 91 60 08 	lds	r28, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7e0860>
     928:	8c 2f       	mov	r24, r28
     92a:	0e 94 81 04 	call	0x902	; 0x902 <USART3_sendChar>
     92e:	8c 2f       	mov	r24, r28
     930:	cf 91       	pop	r28
     932:	08 95       	ret

00000934 <USART3_init>:
     934:	e0 e2       	ldi	r30, 0x20	; 32
     936:	f4 e0       	ldi	r31, 0x04	; 4
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	81 83       	std	Z+1, r24	; 0x01
     93c:	82 e0       	ldi	r24, 0x02	; 2
     93e:	82 83       	std	Z+2, r24	; 0x02
     940:	e0 e6       	ldi	r30, 0x60	; 96
     942:	f8 e0       	ldi	r31, 0x08	; 8
     944:	85 81       	ldd	r24, Z+5	; 0x05
     946:	80 68       	ori	r24, 0x80	; 128
     948:	85 83       	std	Z+5, r24	; 0x05
     94a:	83 e8       	ldi	r24, 0x83	; 131
     94c:	96 e0       	ldi	r25, 0x06	; 6
     94e:	80 87       	std	Z+8, r24	; 0x08
     950:	91 87       	std	Z+9, r25	; 0x09
     952:	86 81       	ldd	r24, Z+6	; 0x06
     954:	80 6c       	ori	r24, 0xC0	; 192
     956:	86 83       	std	Z+6, r24	; 0x06
     958:	80 e0       	ldi	r24, 0x00	; 0
     95a:	90 e4       	ldi	r25, 0x40	; 64
     95c:	80 93 b8 4d 	sts	0x4DB8, r24	; 0x804db8 <__iob+0x2>
     960:	90 93 b9 4d 	sts	0x4DB9, r25	; 0x804db9 <__iob+0x3>
     964:	08 95       	ret

00000966 <PORT_init>:
     966:	8b e1       	ldi	r24, 0x1B	; 27
     968:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x7e0461>
     96c:	08 95       	ret

0000096e <TCA0_init>:
     96e:	83 e0       	ldi	r24, 0x03	; 3
     970:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
     974:	e0 e0       	ldi	r30, 0x00	; 0
     976:	fa e0       	ldi	r31, 0x0A	; 10
     978:	93 e3       	ldi	r25, 0x33	; 51
     97a:	91 83       	std	Z+1, r25	; 0x01
     97c:	21 e0       	ldi	r18, 0x01	; 1
     97e:	23 83       	std	Z+3, r18	; 0x03
     980:	91 83       	std	Z+1, r25	; 0x01
     982:	9f e4       	ldi	r25, 0x4F	; 79
     984:	96 a3       	std	Z+38, r25	; 0x26
     986:	10 a6       	std	Z+40, r1	; 0x28
     988:	97 a3       	std	Z+39, r25	; 0x27
     98a:	11 a6       	std	Z+41, r1	; 0x29
     98c:	12 a6       	std	Z+42, r1	; 0x2a
     98e:	13 a6       	std	Z+43, r1	; 0x2b
     990:	80 83       	st	Z, r24
     992:	08 95       	ret

00000994 <TCB0_init>:
     994:	e0 e2       	ldi	r30, 0x20	; 32
     996:	f4 e0       	ldi	r31, 0x04	; 4
     998:	80 81       	ld	r24, Z
     99a:	8f 7e       	andi	r24, 0xEF	; 239
     99c:	80 83       	st	Z, r24
     99e:	84 89       	ldd	r24, Z+20	; 0x14
     9a0:	88 60       	ori	r24, 0x08	; 8
     9a2:	84 8b       	std	Z+20, r24	; 0x14
     9a4:	e0 e0       	ldi	r30, 0x00	; 0
     9a6:	fb e0       	ldi	r31, 0x0B	; 11
     9a8:	85 e0       	ldi	r24, 0x05	; 5
     9aa:	80 83       	st	Z, r24
     9ac:	84 e0       	ldi	r24, 0x04	; 4
     9ae:	81 83       	std	Z+1, r24	; 0x01
     9b0:	81 e0       	ldi	r24, 0x01	; 1
     9b2:	85 83       	std	Z+5, r24	; 0x05
     9b4:	91 e4       	ldi	r25, 0x41	; 65
     9b6:	94 83       	std	Z+4, r25	; 0x04
     9b8:	e0 e0       	ldi	r30, 0x00	; 0
     9ba:	f2 e0       	ldi	r31, 0x02	; 2
     9bc:	9c e4       	ldi	r25, 0x4C	; 76
     9be:	90 8b       	std	Z+16, r25	; 0x10
     9c0:	86 af       	std	Z+62, r24	; 0x3e
     9c2:	08 95       	ret

000009c4 <TCB1_init>:
     9c4:	e0 e2       	ldi	r30, 0x20	; 32
     9c6:	f4 e0       	ldi	r31, 0x04	; 4
     9c8:	80 81       	ld	r24, Z
     9ca:	8f 7d       	andi	r24, 0xDF	; 223
     9cc:	80 83       	st	Z, r24
     9ce:	85 89       	ldd	r24, Z+21	; 0x15
     9d0:	88 60       	ori	r24, 0x08	; 8
     9d2:	85 8b       	std	Z+21, r24	; 0x15
     9d4:	e0 e1       	ldi	r30, 0x10	; 16
     9d6:	fb e0       	ldi	r31, 0x0B	; 11
     9d8:	85 e0       	ldi	r24, 0x05	; 5
     9da:	80 83       	st	Z, r24
     9dc:	84 e0       	ldi	r24, 0x04	; 4
     9de:	81 83       	std	Z+1, r24	; 0x01
     9e0:	81 e0       	ldi	r24, 0x01	; 1
     9e2:	85 83       	std	Z+5, r24	; 0x05
     9e4:	81 e4       	ldi	r24, 0x41	; 65
     9e6:	84 83       	std	Z+4, r24	; 0x04
     9e8:	8d e4       	ldi	r24, 0x4D	; 77
     9ea:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <__TEXT_REGION_LENGTH__+0x7e0211>
     9ee:	82 e0       	ldi	r24, 0x02	; 2
     9f0:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__TEXT_REGION_LENGTH__+0x7e0240>
     9f4:	08 95       	ret

000009f6 <status_eeprom>:
     9f6:	80 91 02 10 	lds	r24, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7e1002>
     9fa:	81 fd       	sbrc	r24, 1
     9fc:	fc cf       	rjmp	.-8      	; 0x9f6 <status_eeprom>
     9fe:	08 95       	ret

00000a00 <RTC_init>:
 * @return void
 */
void RTC_init(void)
{
	// RTC peripheral
	RTC.CTRLA = RTC_RTCEN_bm | RTC_PRESCALER_DIV1_gc; // Enable RTC, select prescaler
     a00:	e0 e4       	ldi	r30, 0x40	; 64
     a02:	f1 e0       	ldi	r31, 0x01	; 1
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	80 83       	st	Z, r24
	RTC.CLKSEL = RTC_CLKSEL_OSC1K_gc; // Select clock source for the RTC  - 1.024kHz
     a08:	87 83       	std	Z+7, r24	; 0x07
	
	// PIT (Periodic Interrupt Timer)
	RTC.PITCTRLA = RTC_PITEN_bm | RTC_PERIOD_CYC1024_gc; // Enable PIT and select number of clock cycles between interrupt
     a0a:	99 e4       	ldi	r25, 0x49	; 73
     a0c:	90 8b       	std	Z+16, r25	; 0x10
	RTC.PITINTCTRL = RTC_PI_bm;	// Enable interrupt
     a0e:	82 8b       	std	Z+18, r24	; 0x12
     a10:	08 95       	ret

00000a12 <__vector_6>:
}

// RTC interrupt
ISR(RTC_PIT_vect)
{
     a12:	1f 92       	push	r1
     a14:	0f 92       	push	r0
     a16:	0f b6       	in	r0, 0x3f	; 63
     a18:	0f 92       	push	r0
     a1a:	11 24       	eor	r1, r1
     a1c:	8f 93       	push	r24
     a1e:	9f 93       	push	r25
	counter ++; // Counter represent seconds
     a20:	80 91 1e 4c 	lds	r24, 0x4C1E	; 0x804c1e <counter>
     a24:	90 91 1f 4c 	lds	r25, 0x4C1F	; 0x804c1f <counter+0x1>
     a28:	01 96       	adiw	r24, 0x01	; 1
     a2a:	80 93 1e 4c 	sts	0x4C1E, r24	; 0x804c1e <counter>
     a2e:	90 93 1f 4c 	sts	0x4C1F, r25	; 0x804c1f <counter+0x1>
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
     a32:	81 e0       	ldi	r24, 0x01	; 1
     a34:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x7e0153>
}
     a38:	9f 91       	pop	r25
     a3a:	8f 91       	pop	r24
     a3c:	0f 90       	pop	r0
     a3e:	0f be       	out	0x3f, r0	; 63
     a40:	0f 90       	pop	r0
     a42:	1f 90       	pop	r1
     a44:	18 95       	reti

00000a46 <__vector_14>:
{
	read_commands();
}

ISR(TCB0_INT_vect)// starting interrupt for reading pwm from fan1
{
     a46:	1f 92       	push	r1
     a48:	0f 92       	push	r0
     a4a:	0f b6       	in	r0, 0x3f	; 63
     a4c:	0f 92       	push	r0
     a4e:	11 24       	eor	r1, r1
     a50:	0b b6       	in	r0, 0x3b	; 59
     a52:	0f 92       	push	r0
     a54:	2f 93       	push	r18
     a56:	3f 93       	push	r19
     a58:	8f 93       	push	r24
     a5a:	af 93       	push	r26
     a5c:	bf 93       	push	r27
     a5e:	ef 93       	push	r30
     a60:	ff 93       	push	r31
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     a62:	a0 e0       	ldi	r26, 0x00	; 0
     a64:	bb e0       	ldi	r27, 0x0B	; 11
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	16 96       	adiw	r26, 0x06	; 6
     a6a:	8c 93       	st	X, r24
     a6c:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings1[pulseWidthIndex1] = TCB0.CCMP;
     a6e:	80 91 9c 4b 	lds	r24, 0x4B9C	; 0x804b9c <pulseWidthIndex1>
     a72:	e8 2f       	mov	r30, r24
     a74:	f0 e0       	ldi	r31, 0x00	; 0
     a76:	1c 96       	adiw	r26, 0x0c	; 12
     a78:	2d 91       	ld	r18, X+
     a7a:	3c 91       	ld	r19, X
     a7c:	1d 97       	sbiw	r26, 0x0d	; 13
     a7e:	ee 0f       	add	r30, r30
     a80:	ff 1f       	adc	r31, r31
     a82:	e2 51       	subi	r30, 0x12	; 18
     a84:	f3 4b       	sbci	r31, 0xB3	; 179
     a86:	20 83       	st	Z, r18
     a88:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex1++;
     a8a:	8f 5f       	subi	r24, 0xFF	; 255
     a8c:	80 93 9c 4b 	sts	0x4B9C, r24	; 0x804b9c <pulseWidthIndex1>
	if (pulseWidthIndex1 >= 100) {
     a90:	84 36       	cpi	r24, 0x64	; 100
     a92:	10 f0       	brcs	.+4      	; 0xa98 <__vector_14+0x52>
		pulseWidthIndex1 = 0; // Reset index when all readings are stored
     a94:	10 92 9c 4b 	sts	0x4B9C, r1	; 0x804b9c <pulseWidthIndex1>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     a98:	ff 91       	pop	r31
     a9a:	ef 91       	pop	r30
     a9c:	bf 91       	pop	r27
     a9e:	af 91       	pop	r26
     aa0:	8f 91       	pop	r24
     aa2:	3f 91       	pop	r19
     aa4:	2f 91       	pop	r18
     aa6:	0f 90       	pop	r0
     aa8:	0b be       	out	0x3b, r0	; 59
     aaa:	0f 90       	pop	r0
     aac:	0f be       	out	0x3f, r0	; 63
     aae:	0f 90       	pop	r0
     ab0:	1f 90       	pop	r1
     ab2:	18 95       	reti

00000ab4 <__vector_15>:


ISR(TCB1_INT_vect)// starting interrupt for reading pwm from fan1
{
     ab4:	1f 92       	push	r1
     ab6:	0f 92       	push	r0
     ab8:	0f b6       	in	r0, 0x3f	; 63
     aba:	0f 92       	push	r0
     abc:	11 24       	eor	r1, r1
     abe:	0b b6       	in	r0, 0x3b	; 59
     ac0:	0f 92       	push	r0
     ac2:	2f 93       	push	r18
     ac4:	3f 93       	push	r19
     ac6:	8f 93       	push	r24
     ac8:	af 93       	push	r26
     aca:	bf 93       	push	r27
     acc:	ef 93       	push	r30
     ace:	ff 93       	push	r31
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     ad0:	a0 e1       	ldi	r26, 0x10	; 16
     ad2:	bb e0       	ldi	r27, 0x0B	; 11
     ad4:	81 e0       	ldi	r24, 0x01	; 1
     ad6:	16 96       	adiw	r26, 0x06	; 6
     ad8:	8c 93       	st	X, r24
     ada:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings2[pulseWidthIndex2] = TCB1.CCMP;
     adc:	80 91 9b 4b 	lds	r24, 0x4B9B	; 0x804b9b <pulseWidthIndex2>
     ae0:	e8 2f       	mov	r30, r24
     ae2:	f0 e0       	ldi	r31, 0x00	; 0
     ae4:	1c 96       	adiw	r26, 0x0c	; 12
     ae6:	2d 91       	ld	r18, X+
     ae8:	3c 91       	ld	r19, X
     aea:	1d 97       	sbiw	r26, 0x0d	; 13
     aec:	ee 0f       	add	r30, r30
     aee:	ff 1f       	adc	r31, r31
     af0:	ea 5d       	subi	r30, 0xDA	; 218
     af2:	f3 4b       	sbci	r31, 0xB3	; 179
     af4:	20 83       	st	Z, r18
     af6:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex2++;
     af8:	8f 5f       	subi	r24, 0xFF	; 255
     afa:	80 93 9b 4b 	sts	0x4B9B, r24	; 0x804b9b <pulseWidthIndex2>
	if (pulseWidthIndex2 >= 100) {
     afe:	84 36       	cpi	r24, 0x64	; 100
     b00:	10 f0       	brcs	.+4      	; 0xb06 <__vector_15+0x52>
		pulseWidthIndex2 = 0; // Reset index when all readings are stored
     b02:	10 92 9b 4b 	sts	0x4B9B, r1	; 0x804b9b <pulseWidthIndex2>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     b06:	ff 91       	pop	r31
     b08:	ef 91       	pop	r30
     b0a:	bf 91       	pop	r27
     b0c:	af 91       	pop	r26
     b0e:	8f 91       	pop	r24
     b10:	3f 91       	pop	r19
     b12:	2f 91       	pop	r18
     b14:	0f 90       	pop	r0
     b16:	0b be       	out	0x3b, r0	; 59
     b18:	0f 90       	pop	r0
     b1a:	0f be       	out	0x3f, r0	; 63
     b1c:	0f 90       	pop	r0
     b1e:	1f 90       	pop	r1
     b20:	18 95       	reti

00000b22 <average>:
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
     b22:	0f 93       	push	r16
     b24:	1f 93       	push	r17
     b26:	9c 01       	movw	r18, r24
     b28:	06 2f       	mov	r16, r22
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     b2a:	90 e0       	ldi	r25, 0x00	; 0
	//readPulseWidth = TCB0.CCMP;
	
}
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
     b2c:	40 e0       	ldi	r20, 0x00	; 0
     b2e:	50 e0       	ldi	r21, 0x00	; 0
     b30:	ba 01       	movw	r22, r20
	for (uint8_t i = 0; i < size; i++) {
     b32:	0e c0       	rjmp	.+28     	; 0xb50 <average+0x2e>
		sum += array[i];
     b34:	e9 2f       	mov	r30, r25
     b36:	f0 e0       	ldi	r31, 0x00	; 0
     b38:	ee 0f       	add	r30, r30
     b3a:	ff 1f       	adc	r31, r31
     b3c:	e2 0f       	add	r30, r18
     b3e:	f3 1f       	adc	r31, r19
     b40:	01 90       	ld	r0, Z+
     b42:	f0 81       	ld	r31, Z
     b44:	e0 2d       	mov	r30, r0
     b46:	4e 0f       	add	r20, r30
     b48:	5f 1f       	adc	r21, r31
     b4a:	61 1d       	adc	r22, r1
     b4c:	71 1d       	adc	r23, r1
	
}
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     b4e:	9f 5f       	subi	r25, 0xFF	; 255
     b50:	90 17       	cp	r25, r16
     b52:	80 f3       	brcs	.-32     	; 0xb34 <average+0x12>
		sum += array[i];
	}
	return (uint16_t)(sum / size);
     b54:	10 e0       	ldi	r17, 0x00	; 0
     b56:	20 e0       	ldi	r18, 0x00	; 0
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	cb 01       	movw	r24, r22
     b5c:	ba 01       	movw	r22, r20
     b5e:	a9 01       	movw	r20, r18
     b60:	98 01       	movw	r18, r16
     b62:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__udivmodsi4>
}
     b66:	c9 01       	movw	r24, r18
     b68:	1f 91       	pop	r17
     b6a:	0f 91       	pop	r16
     b6c:	08 95       	ret

00000b6e <pwm_to_rpm1>:


uint16_t pwm_to_rpm1()
{
	uint16_t pulseWidthAverage1 = average(pulseWidthReadings1, 100);
     b6e:	64 e6       	ldi	r22, 0x64	; 100
     b70:	8e ee       	ldi	r24, 0xEE	; 238
     b72:	9c e4       	ldi	r25, 0x4C	; 76
     b74:	0e 94 91 05 	call	0xb22	; 0xb22 <average>
	uint32_t rpm1 = ((F_CPU*60)/(4*pulseWidthAverage1*2));
     b78:	88 0f       	add	r24, r24
     b7a:	99 1f       	adc	r25, r25
     b7c:	88 0f       	add	r24, r24
     b7e:	99 1f       	adc	r25, r25
     b80:	88 0f       	add	r24, r24
     b82:	99 1f       	adc	r25, r25
     b84:	9c 01       	movw	r18, r24
     b86:	40 e0       	ldi	r20, 0x00	; 0
     b88:	50 e0       	ldi	r21, 0x00	; 0
     b8a:	60 e0       	ldi	r22, 0x00	; 0
     b8c:	7c e1       	ldi	r23, 0x1C	; 28
     b8e:	8e e4       	ldi	r24, 0x4E	; 78
     b90:	9e e0       	ldi	r25, 0x0E	; 14
     b92:	0e 94 3c 0b 	call	0x1678	; 0x1678 <__divmodsi4>
	return (uint16_t)rpm1;
	
}
     b96:	c9 01       	movw	r24, r18
     b98:	08 95       	ret

00000b9a <pwm_to_rpm2>:


uint16_t pwm_to_rpm2()
{
	uint16_t pulseWidthAverage2 = average(pulseWidthReadings2, 100);
     b9a:	64 e6       	ldi	r22, 0x64	; 100
     b9c:	86 e2       	ldi	r24, 0x26	; 38
     b9e:	9c e4       	ldi	r25, 0x4C	; 76
     ba0:	0e 94 91 05 	call	0xb22	; 0xb22 <average>
	uint32_t rpm2 = ((F_CPU*60)/(4*pulseWidthAverage2*2));
     ba4:	88 0f       	add	r24, r24
     ba6:	99 1f       	adc	r25, r25
     ba8:	88 0f       	add	r24, r24
     baa:	99 1f       	adc	r25, r25
     bac:	88 0f       	add	r24, r24
     bae:	99 1f       	adc	r25, r25
     bb0:	9c 01       	movw	r18, r24
     bb2:	40 e0       	ldi	r20, 0x00	; 0
     bb4:	50 e0       	ldi	r21, 0x00	; 0
     bb6:	60 e0       	ldi	r22, 0x00	; 0
     bb8:	7c e1       	ldi	r23, 0x1C	; 28
     bba:	8e e4       	ldi	r24, 0x4E	; 78
     bbc:	9e e0       	ldi	r25, 0x0E	; 14
     bbe:	0e 94 3c 0b 	call	0x1678	; 0x1678 <__divmodsi4>
	return (uint16_t)rpm2;
	
}
     bc2:	c9 01       	movw	r24, r18
     bc4:	08 95       	ret

00000bc6 <run_test_and_calculate_average>:
 * @param void
 * 
 * @return FanSpeeds is a struct for average values for fans
 */
FanSpeeds run_test_and_calculate_average()
{
     bc6:	4f 92       	push	r4
     bc8:	5f 92       	push	r5
     bca:	6f 92       	push	r6
     bcc:	7f 92       	push	r7
     bce:	8f 92       	push	r8
     bd0:	9f 92       	push	r9
     bd2:	af 92       	push	r10
     bd4:	bf 92       	push	r11
     bd6:	cf 92       	push	r12
     bd8:	df 92       	push	r13
     bda:	ef 92       	push	r14
     bdc:	ff 92       	push	r15
     bde:	0f 93       	push	r16
     be0:	1f 93       	push	r17
     be2:	cf 93       	push	r28
     be4:	df 93       	push	r29
	// Set max values to all fans
	TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MAX_VALUE;
     be6:	e0 e0       	ldi	r30, 0x00	; 0
     be8:	fa e0       	ldi	r31, 0x0A	; 10
     bea:	8f e4       	ldi	r24, 0x4F	; 79
     bec:	80 a7       	std	Z+40, r24	; 0x28
	TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MAX_VALUE;
     bee:	82 a7       	std	Z+42, r24	; 0x2a
	TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MAX_VALUE;
     bf0:	81 a7       	std	Z+41, r24	; 0x29
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
     bf2:	83 a7       	std	Z+43, r24	; 0x2b
	
	printf("Diagnose startet! \r\n");
     bf4:	81 e0       	ldi	r24, 0x01	; 1
     bf6:	98 e4       	ldi	r25, 0x48	; 72
     bf8:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
	// Hold average values for two fans
	uint16_t average_value_fan1;
	uint16_t average_value_fan2;
	
	uint16_t num_of_readings = 0;
	uint16_t compare_counter = counter; // Current value to compare
     bfc:	20 91 1e 4c 	lds	r18, 0x4C1E	; 0x804c1e <counter>
     c00:	30 91 1f 4c 	lds	r19, 0x4C1F	; 0x804c1f <counter+0x1>
	
	// Hold 2seconds for fans to get maximum speed
	while (counter - compare_counter <= 2)
     c04:	80 91 1e 4c 	lds	r24, 0x4C1E	; 0x804c1e <counter>
     c08:	90 91 1f 4c 	lds	r25, 0x4C1F	; 0x804c1f <counter+0x1>
     c0c:	82 1b       	sub	r24, r18
     c0e:	93 0b       	sbc	r25, r19
     c10:	03 97       	sbiw	r24, 0x03	; 3
     c12:	c0 f3       	brcs	.-16     	; 0xc04 <run_test_and_calculate_average+0x3e>
	{
		;
	}
	compare_counter = counter;	// Update for new comparison
     c14:	00 91 1e 4c 	lds	r16, 0x4C1E	; 0x804c1e <counter>
     c18:	10 91 1f 4c 	lds	r17, 0x4C1F	; 0x804c1f <counter+0x1>
	uint32_t sum_RPM_fan2 = 0;
	// Hold average values for two fans
	uint16_t average_value_fan1;
	uint16_t average_value_fan2;
	
	uint16_t num_of_readings = 0;
     c1c:	c0 e0       	ldi	r28, 0x00	; 0
     c1e:	d0 e0       	ldi	r29, 0x00	; 0
	
	printf("Diagnose startet! \r\n");
	
	// Sum for calculation
	uint32_t sum_RPM_fan1 = 0;
	uint32_t sum_RPM_fan2 = 0;
     c20:	81 2c       	mov	r8, r1
     c22:	91 2c       	mov	r9, r1
     c24:	54 01       	movw	r10, r8
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
	
	printf("Diagnose startet! \r\n");
	
	// Sum for calculation
	uint32_t sum_RPM_fan1 = 0;
     c26:	c1 2c       	mov	r12, r1
     c28:	d1 2c       	mov	r13, r1
     c2a:	76 01       	movw	r14, r12
		;
	}
	compare_counter = counter;	// Update for new comparison
	
	
	while (counter - compare_counter <= 10)
     c2c:	0d c0       	rjmp	.+26     	; 0xc48 <run_test_and_calculate_average+0x82>
	{
		sum_RPM_fan1 += pwm_to_rpm1();
     c2e:	0e 94 b7 05 	call	0xb6e	; 0xb6e <pwm_to_rpm1>
     c32:	c8 0e       	add	r12, r24
     c34:	d9 1e       	adc	r13, r25
     c36:	e1 1c       	adc	r14, r1
     c38:	f1 1c       	adc	r15, r1
		sum_RPM_fan2 += pwm_to_rpm2();
     c3a:	0e 94 cd 05 	call	0xb9a	; 0xb9a <pwm_to_rpm2>
     c3e:	88 0e       	add	r8, r24
     c40:	99 1e       	adc	r9, r25
     c42:	a1 1c       	adc	r10, r1
     c44:	b1 1c       	adc	r11, r1
		
		num_of_readings ++;
     c46:	21 96       	adiw	r28, 0x01	; 1
		;
	}
	compare_counter = counter;	// Update for new comparison
	
	
	while (counter - compare_counter <= 10)
     c48:	80 91 1e 4c 	lds	r24, 0x4C1E	; 0x804c1e <counter>
     c4c:	90 91 1f 4c 	lds	r25, 0x4C1F	; 0x804c1f <counter+0x1>
     c50:	80 1b       	sub	r24, r16
     c52:	91 0b       	sbc	r25, r17
     c54:	0b 97       	sbiw	r24, 0x0b	; 11
     c56:	58 f3       	brcs	.-42     	; 0xc2e <run_test_and_calculate_average+0x68>
		
		num_of_readings ++;
	}
	
	// Actual calculation of average
	average_value_fan1 = sum_RPM_fan1 / num_of_readings;
     c58:	2e 01       	movw	r4, r28
     c5a:	61 2c       	mov	r6, r1
     c5c:	71 2c       	mov	r7, r1
     c5e:	c7 01       	movw	r24, r14
     c60:	b6 01       	movw	r22, r12
     c62:	a3 01       	movw	r20, r6
     c64:	92 01       	movw	r18, r4
     c66:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__udivmodsi4>
     c6a:	69 01       	movw	r12, r18
     c6c:	7a 01       	movw	r14, r20
	average_value_fan2 = sum_RPM_fan2 / num_of_readings;
     c6e:	c5 01       	movw	r24, r10
     c70:	b4 01       	movw	r22, r8
     c72:	a3 01       	movw	r20, r6
     c74:	92 01       	movw	r18, r4
     c76:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__udivmodsi4>
	
	// Local buffer for fan speeds to be returned
	FanSpeeds average_values;
	average_values.fan1 = average_value_fan1;
     c7a:	b6 01       	movw	r22, r12
	average_values.fan2 = average_value_fan2;
     c7c:	c9 01       	movw	r24, r18
	
	return average_values;
}
     c7e:	df 91       	pop	r29
     c80:	cf 91       	pop	r28
     c82:	1f 91       	pop	r17
     c84:	0f 91       	pop	r16
     c86:	ff 90       	pop	r15
     c88:	ef 90       	pop	r14
     c8a:	df 90       	pop	r13
     c8c:	cf 90       	pop	r12
     c8e:	bf 90       	pop	r11
     c90:	af 90       	pop	r10
     c92:	9f 90       	pop	r9
     c94:	8f 90       	pop	r8
     c96:	7f 90       	pop	r7
     c98:	6f 90       	pop	r6
     c9a:	5f 90       	pop	r5
     c9c:	4f 90       	pop	r4
     c9e:	08 95       	ret

00000ca0 <predict_error>:

// Predicting failures with fans
void predict_error()
{	
     ca0:	af 92       	push	r10
     ca2:	bf 92       	push	r11
     ca4:	cf 92       	push	r12
     ca6:	df 92       	push	r13
     ca8:	ef 92       	push	r14
     caa:	ff 92       	push	r15
     cac:	0f 93       	push	r16
     cae:	1f 93       	push	r17
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
	// Local struct for current RPM speeds for fans
	FanSpeeds current_RPM_values;
	// Call function to get the average fan speeds and save in local variables
	current_RPM_values = run_test_and_calculate_average();
     cb4:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <run_test_and_calculate_average>
     cb8:	06 2f       	mov	r16, r22
     cba:	17 2f       	mov	r17, r23
     cbc:	d8 2f       	mov	r29, r24
     cbe:	c9 2f       	mov	r28, r25
	
	printf("Gjennomsnitt fan 1: %d\r\n", current_RPM_values.fan1);
     cc0:	7f 93       	push	r23
     cc2:	6f 93       	push	r22
     cc4:	85 e1       	ldi	r24, 0x15	; 21
     cc6:	98 e4       	ldi	r25, 0x48	; 72
     cc8:	9f 93       	push	r25
     cca:	8f 93       	push	r24
     ccc:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
	printf("Gjennomsnitt fan 2: %d\r\n", current_RPM_values.fan2);
     cd0:	cf 93       	push	r28
     cd2:	df 93       	push	r29
     cd4:	8e e2       	ldi	r24, 0x2E	; 46
     cd6:	98 e4       	ldi	r25, 0x48	; 72
     cd8:	9f 93       	push	r25
     cda:	8f 93       	push	r24
     cdc:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
	printf("\r\n");
     ce0:	8c e7       	ldi	r24, 0x7C	; 124
     ce2:	9a e4       	ldi	r25, 0x4A	; 74
     ce4:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
	printf("\r\n");
     ce8:	8c e7       	ldi	r24, 0x7C	; 124
     cea:	9a e4       	ldi	r25, 0x4A	; 74
     cec:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
	
	// EEPROM values
	uint16_t  old_value_fan1 = read_value_EE_fan1;
     cf0:	60 91 15 4c 	lds	r22, 0x4C15	; 0x804c15 <read_value_EE_fan1>
     cf4:	70 91 16 4c 	lds	r23, 0x4C16	; 0x804c16 <read_value_EE_fan1+0x1>
	uint16_t  old_value_fan2 = read_value_EE_fan2;
     cf8:	c0 90 0f 4c 	lds	r12, 0x4C0F	; 0x804c0f <read_value_EE_fan2>
     cfc:	d0 90 10 4c 	lds	r13, 0x4C10	; 0x804c10 <read_value_EE_fan2+0x1>
	
	//TESTING
	//printf("forrige fan 1: %d\r\n", previous_RPM_fan1);
	
	// Percentages for prediction 
	uint8_t percentage_fan1_eeprom = calculate_percentage(old_value_fan1, current_RPM_values.fan1);
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	0e 94 1f 0a 	call	0x143e	; 0x143e <__floatunsisf>
     d08:	40 2f       	mov	r20, r16
     d0a:	51 2f       	mov	r21, r17
     d0c:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <calculate_percentage>
     d10:	f8 2e       	mov	r15, r24
	uint8_t percentage_fan2_eeprom = calculate_percentage(old_value_fan2, current_RPM_values.fan2);
     d12:	b6 01       	movw	r22, r12
     d14:	80 e0       	ldi	r24, 0x00	; 0
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	0e 94 1f 0a 	call	0x143e	; 0x143e <__floatunsisf>
     d1c:	4d 2f       	mov	r20, r29
     d1e:	5c 2f       	mov	r21, r28
     d20:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <calculate_percentage>
     d24:	d8 2e       	mov	r13, r24
	
	uint8_t percentage_fan1_previous = calculate_percentage(previous_RPM_fan1, current_RPM_values.fan1);
     d26:	60 91 25 45 	lds	r22, 0x4525	; 0x804525 <previous_RPM_fan1>
     d2a:	70 91 26 45 	lds	r23, 0x4526	; 0x804526 <previous_RPM_fan1+0x1>
     d2e:	80 e0       	ldi	r24, 0x00	; 0
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	0e 94 1f 0a 	call	0x143e	; 0x143e <__floatunsisf>
     d36:	40 2f       	mov	r20, r16
     d38:	51 2f       	mov	r21, r17
     d3a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <calculate_percentage>
     d3e:	c8 2e       	mov	r12, r24
	uint8_t percentage_fan2_previous = calculate_percentage(previous_RPM_fan2, current_RPM_values.fan2);
     d40:	60 91 23 45 	lds	r22, 0x4523	; 0x804523 <previous_RPM_fan2>
     d44:	70 91 24 45 	lds	r23, 0x4524	; 0x804524 <previous_RPM_fan2+0x1>
     d48:	80 e0       	ldi	r24, 0x00	; 0
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	0e 94 1f 0a 	call	0x143e	; 0x143e <__floatunsisf>
     d50:	4d 2f       	mov	r20, r29
     d52:	5c 2f       	mov	r21, r28
     d54:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <calculate_percentage>
     d58:	a8 2e       	mov	r10, r24
	
	// For testing
	printf("PROSENT fan 1: %d\r\n", percentage_fan1_previous);
     d5a:	1f 92       	push	r1
     d5c:	cf 92       	push	r12
     d5e:	87 e4       	ldi	r24, 0x47	; 71
     d60:	98 e4       	ldi	r25, 0x48	; 72
     d62:	9f 93       	push	r25
     d64:	8f 93       	push	r24
     d66:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
	printf("PROSENT fan 2: %d\r\n", percentage_fan2_eeprom);
     d6a:	1f 92       	push	r1
     d6c:	df 92       	push	r13
     d6e:	8b e5       	ldi	r24, 0x5B	; 91
     d70:	98 e4       	ldi	r25, 0x48	; 72
     d72:	9f 93       	push	r25
     d74:	8f 93       	push	r24
     d76:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
	
	// Flags for alarms
	uint8_t fan1_alarm_long_term =  alarm(percentage_fan1_eeprom, threshold_percentage);
     d7a:	e0 90 22 45 	lds	r14, 0x4522	; 0x804522 <threshold_percentage>
     d7e:	6e 2d       	mov	r22, r14
     d80:	8f 2d       	mov	r24, r15
     d82:	0e 94 76 02 	call	0x4ec	; 0x4ec <alarm>
     d86:	b8 2e       	mov	r11, r24
	uint8_t fan2_alarm_long_term = alarm(percentage_fan2_eeprom, threshold_percentage);
     d88:	6e 2d       	mov	r22, r14
     d8a:	8d 2d       	mov	r24, r13
     d8c:	0e 94 76 02 	call	0x4ec	; 0x4ec <alarm>
     d90:	d8 2e       	mov	r13, r24
	
	uint8_t fan1_alarm_short_term = alarm(percentage_fan1_previous, 90);
     d92:	6a e5       	ldi	r22, 0x5A	; 90
     d94:	8c 2d       	mov	r24, r12
     d96:	0e 94 76 02 	call	0x4ec	; 0x4ec <alarm>
     d9a:	f8 2e       	mov	r15, r24
	uint8_t fan2_alarm_short_term = alarm(percentage_fan2_previous, 90);
     d9c:	6a e5       	ldi	r22, 0x5A	; 90
     d9e:	8a 2d       	mov	r24, r10
     da0:	0e 94 76 02 	call	0x4ec	; 0x4ec <alarm>
     da4:	e8 2e       	mov	r14, r24
	
	// For testing
	printf("STATUS fan 1: %d\r\n", fan1_alarm_short_term);
     da6:	1f 92       	push	r1
     da8:	ff 92       	push	r15
     daa:	8f e6       	ldi	r24, 0x6F	; 111
     dac:	98 e4       	ldi	r25, 0x48	; 72
     dae:	9f 93       	push	r25
     db0:	8f 93       	push	r24
     db2:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
	printf("STATUS fan 2: %d\r\n", fan2_alarm_long_term);
     db6:	1f 92       	push	r1
     db8:	df 92       	push	r13
     dba:	82 e8       	ldi	r24, 0x82	; 130
     dbc:	98 e4       	ldi	r25, 0x48	; 72
     dbe:	9f 93       	push	r25
     dc0:	8f 93       	push	r24
     dc2:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
	
	// Check flags
	if (fan1_alarm_long_term == 1)
     dc6:	8d b7       	in	r24, 0x3d	; 61
     dc8:	9e b7       	in	r25, 0x3e	; 62
     dca:	48 96       	adiw	r24, 0x18	; 24
     dcc:	8d bf       	out	0x3d, r24	; 61
     dce:	9e bf       	out	0x3e, r25	; 62
     dd0:	91 e0       	ldi	r25, 0x01	; 1
     dd2:	b9 12       	cpse	r11, r25
     dd4:	04 c0       	rjmp	.+8      	; 0xdde <predict_error+0x13e>
	{
		printf("ALARM fan 1! Type: wear and tear \r\n");
     dd6:	85 e9       	ldi	r24, 0x95	; 149
     dd8:	98 e4       	ldi	r25, 0x48	; 72
     dda:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
	}
	if (fan2_alarm_long_term == 1)
     dde:	81 e0       	ldi	r24, 0x01	; 1
     de0:	d8 12       	cpse	r13, r24
     de2:	04 c0       	rjmp	.+8      	; 0xdec <predict_error+0x14c>
	{
		printf("ALARM fan 2! Type: wear and tear \r\n");
     de4:	88 eb       	ldi	r24, 0xB8	; 184
     de6:	98 e4       	ldi	r25, 0x48	; 72
     de8:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
	}
	if (fan1_alarm_short_term == 1)
     dec:	91 e0       	ldi	r25, 0x01	; 1
     dee:	f9 12       	cpse	r15, r25
     df0:	04 c0       	rjmp	.+8      	; 0xdfa <predict_error+0x15a>
	{
		printf("ALARM fan 1! Type: momentarily\r\n");
     df2:	8b ed       	ldi	r24, 0xDB	; 219
     df4:	98 e4       	ldi	r25, 0x48	; 72
     df6:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
	}
	if (fan2_alarm_short_term == 1)
     dfa:	81 e0       	ldi	r24, 0x01	; 1
     dfc:	e8 12       	cpse	r14, r24
     dfe:	04 c0       	rjmp	.+8      	; 0xe08 <predict_error+0x168>
	{
		printf("ALARM fan 1! Type: momentarily\r\n");
     e00:	8b ed       	ldi	r24, 0xDB	; 219
     e02:	98 e4       	ldi	r25, 0x48	; 72
     e04:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
	}
	
	// Updates the short term value to predict instant failure
	previous_RPM_fan1 = current_RPM_values.fan1;
     e08:	00 93 25 45 	sts	0x4525, r16	; 0x804525 <previous_RPM_fan1>
     e0c:	10 93 26 45 	sts	0x4526, r17	; 0x804526 <previous_RPM_fan1+0x1>
	previous_RPM_fan2 = current_RPM_values.fan2;
     e10:	d0 93 23 45 	sts	0x4523, r29	; 0x804523 <previous_RPM_fan2>
     e14:	c0 93 24 45 	sts	0x4524, r28	; 0x804524 <previous_RPM_fan2+0x1>
	
}
     e18:	df 91       	pop	r29
     e1a:	cf 91       	pop	r28
     e1c:	1f 91       	pop	r17
     e1e:	0f 91       	pop	r16
     e20:	ff 90       	pop	r15
     e22:	ef 90       	pop	r14
     e24:	df 90       	pop	r13
     e26:	cf 90       	pop	r12
     e28:	bf 90       	pop	r11
     e2a:	af 90       	pop	r10
     e2c:	08 95       	ret

00000e2e <executeCommand>:


	

void executeCommand(uint8_t command_number, char *command)
{
     e2e:	cf 93       	push	r28
     e30:	df 93       	push	r29
     e32:	9b 01       	movw	r18, r22
	if (diagnoseIsRunning) {
     e34:	90 91 0e 4c 	lds	r25, 0x4C0E	; 0x804c0e <diagnoseIsRunning>
     e38:	99 23       	and	r25, r25
     e3a:	49 f0       	breq	.+18     	; 0xe4e <executeCommand+0x20>
		printf("Diagnose is running!\r\n ");
     e3c:	8b ef       	ldi	r24, 0xFB	; 251
     e3e:	98 e4       	ldi	r25, 0x48	; 72
     e40:	9f 93       	push	r25
     e42:	8f 93       	push	r24
     e44:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
     e48:	0f 90       	pop	r0
     e4a:	0f 90       	pop	r0
     e4c:	1d c1       	rjmp	.+570    	; 0x1088 <executeCommand+0x25a>
	}
	else {
		
	switch ( command_number )
     e4e:	48 2f       	mov	r20, r24
     e50:	50 e0       	ldi	r21, 0x00	; 0
     e52:	4d 30       	cpi	r20, 0x0D	; 13
     e54:	51 05       	cpc	r21, r1
     e56:	08 f0       	brcs	.+2      	; 0xe5a <executeCommand+0x2c>
     e58:	83 c0       	rjmp	.+262    	; 0xf60 <executeCommand+0x132>
     e5a:	fa 01       	movw	r30, r20
     e5c:	e6 58       	subi	r30, 0x86	; 134
     e5e:	ff 4f       	sbci	r31, 0xFF	; 255
     e60:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__tablejump2__>
	{
		case 0:
		printf("Received command: fan1\r\n");
     e64:	83 e1       	ldi	r24, 0x13	; 19
     e66:	99 e4       	ldi	r25, 0x49	; 73
     e68:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		PrintSelectFanMode();
     e6c:	0e 94 ac 03 	call	0x758	; 0x758 <PrintSelectFanMode>
		chosenFan = FAN1_bm;
     e70:	81 e0       	ldi	r24, 0x01	; 1
     e72:	80 93 a0 4b 	sts	0x4BA0, r24	; 0x804ba0 <chosenFan>
		break ;
     e76:	08 c1       	rjmp	.+528    	; 0x1088 <executeCommand+0x25a>
		
		case 1:
		printf("Received command: fan2\r\n");
     e78:	8b e2       	ldi	r24, 0x2B	; 43
     e7a:	99 e4       	ldi	r25, 0x49	; 73
     e7c:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		PrintSelectFanMode();
     e80:	0e 94 ac 03 	call	0x758	; 0x758 <PrintSelectFanMode>
		chosenFan = FAN2_bm;
     e84:	82 e0       	ldi	r24, 0x02	; 2
     e86:	80 93 a0 4b 	sts	0x4BA0, r24	; 0x804ba0 <chosenFan>
		break ;
     e8a:	fe c0       	rjmp	.+508    	; 0x1088 <executeCommand+0x25a>
		
		case 2:
		printf("Received command: fan3\r\n");
     e8c:	83 e4       	ldi	r24, 0x43	; 67
     e8e:	99 e4       	ldi	r25, 0x49	; 73
     e90:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		PrintSelectFanMode();
     e94:	0e 94 ac 03 	call	0x758	; 0x758 <PrintSelectFanMode>
		chosenFan = FAN3_bm;
     e98:	84 e0       	ldi	r24, 0x04	; 4
     e9a:	80 93 a0 4b 	sts	0x4BA0, r24	; 0x804ba0 <chosenFan>
		break ;
     e9e:	f4 c0       	rjmp	.+488    	; 0x1088 <executeCommand+0x25a>
		
		case 3:
		printf("Received command: fan4\r\n");
     ea0:	8b e5       	ldi	r24, 0x5B	; 91
     ea2:	99 e4       	ldi	r25, 0x49	; 73
     ea4:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		PrintSelectFanMode();
     ea8:	0e 94 ac 03 	call	0x758	; 0x758 <PrintSelectFanMode>
		chosenFan = FAN4_bm;
     eac:	88 e0       	ldi	r24, 0x08	; 8
     eae:	80 93 a0 4b 	sts	0x4BA0, r24	; 0x804ba0 <chosenFan>
		break ;
     eb2:	ea c0       	rjmp	.+468    	; 0x1088 <executeCommand+0x25a>
		
		case 4:
		printf("Received command: off\r\n");
     eb4:	83 e7       	ldi	r24, 0x73	; 115
     eb6:	99 e4       	ldi	r25, 0x49	; 73
     eb8:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		chosenModeIsManual = 0;
     ebc:	10 92 13 4c 	sts	0x4C13, r1	; 0x804c13 <chosenModeIsManual>
		fanOff();
     ec0:	0e 94 b6 02 	call	0x56c	; 0x56c <fanOff>
		break ;
     ec4:	e1 c0       	rjmp	.+450    	; 0x1088 <executeCommand+0x25a>
		
		case 5:
		printf("Received command: manual\r\n");
     ec6:	8a e8       	ldi	r24, 0x8A	; 138
     ec8:	99 e4       	ldi	r25, 0x49	; 73
     eca:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		printf("Type wanted rpm mode\r\n");
     ece:	84 ea       	ldi	r24, 0xA4	; 164
     ed0:	99 e4       	ldi	r25, 0x49	; 73
     ed2:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		printf("Alternatives: low, medium, high or fan speed: 0-100 \r\n");
     ed6:	8a eb       	ldi	r24, 0xBA	; 186
     ed8:	99 e4       	ldi	r25, 0x49	; 73
     eda:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		chosenModeIsManual = 1;
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	80 93 13 4c 	sts	0x4C13, r24	; 0x804c13 <chosenModeIsManual>
		break ;
     ee4:	d1 c0       	rjmp	.+418    	; 0x1088 <executeCommand+0x25a>
		
		case 6:
		printf("Received command: auto\r\n");
     ee6:	80 ef       	ldi	r24, 0xF0	; 240
     ee8:	99 e4       	ldi	r25, 0x49	; 73
     eea:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		chosenModeIsManual = 0;
     eee:	10 92 13 4c 	sts	0x4C13, r1	; 0x804c13 <chosenModeIsManual>
		fanAuto();
     ef2:	0e 94 0c 03 	call	0x618	; 0x618 <fanAuto>
		break ;
     ef6:	c8 c0       	rjmp	.+400    	; 0x1088 <executeCommand+0x25a>
		
		case 7:
		printf("Received command: overview\r\n");
     ef8:	88 e0       	ldi	r24, 0x08	; 8
     efa:	9a e4       	ldi	r25, 0x4A	; 74
     efc:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		fan1.rpm = pwm_to_rpm1();
     f00:	0e 94 b7 05 	call	0xb6e	; 0xb6e <pwm_to_rpm1>
     f04:	80 93 35 45 	sts	0x4535, r24	; 0x804535 <fan1+0x2>
     f08:	90 93 36 45 	sts	0x4536, r25	; 0x804536 <fan1+0x3>
		fan2.rpm = pwm_to_rpm2();
     f0c:	0e 94 cd 05 	call	0xb9a	; 0xb9a <pwm_to_rpm2>
     f10:	80 93 31 45 	sts	0x4531, r24	; 0x804531 <fan2+0x2>
     f14:	90 93 32 45 	sts	0x4532, r25	; 0x804532 <fan2+0x3>
		printOverview();
     f18:	0e 94 b9 03 	call	0x772	; 0x772 <printOverview>
		break ;
     f1c:	b5 c0       	rjmp	.+362    	; 0x1088 <executeCommand+0x25a>
		
		case 8:
		printf("Received command: controller\r\n");
     f1e:	84 e2       	ldi	r24, 0x24	; 36
     f20:	9a e4       	ldi	r25, 0x4A	; 74
     f22:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		printSelectFan();
     f26:	0e 94 59 04 	call	0x8b2	; 0x8b2 <printSelectFan>
		break ;
     f2a:	ae c0       	rjmp	.+348    	; 0x1088 <executeCommand+0x25a>
		
		case 12: // if command = alarm
		changeAlarmDeviation = 1;
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	80 93 9d 4b 	sts	0x4B9D, r24	; 0x804b9d <changeAlarmDeviation>
		printf("Type wanted deviation percentage for wear and tear alarm \n\r");
     f32:	82 e4       	ldi	r24, 0x42	; 66
     f34:	9a e4       	ldi	r25, 0x4A	; 74
     f36:	9f 93       	push	r25
     f38:	8f 93       	push	r24
     f3a:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
		printf("Current alarm deviation percentage is: %d\n\r", threshold_percentage);
     f3e:	80 91 22 45 	lds	r24, 0x4522	; 0x804522 <threshold_percentage>
     f42:	1f 92       	push	r1
     f44:	8f 93       	push	r24
     f46:	8e e7       	ldi	r24, 0x7E	; 126
     f48:	9a e4       	ldi	r25, 0x4A	; 74
     f4a:	9f 93       	push	r25
     f4c:	8f 93       	push	r24
     f4e:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
		break;
     f52:	0f 90       	pop	r0
     f54:	0f 90       	pop	r0
     f56:	0f 90       	pop	r0
     f58:	0f 90       	pop	r0
     f5a:	0f 90       	pop	r0
     f5c:	0f 90       	pop	r0
     f5e:	94 c0       	rjmp	.+296    	; 0x1088 <executeCommand+0x25a>
		
		default :
		
		if (changeAlarmDeviation){
     f60:	90 91 9d 4b 	lds	r25, 0x4B9D	; 0x804b9d <changeAlarmDeviation>
     f64:	99 23       	and	r25, r25
     f66:	a1 f0       	breq	.+40     	; 0xf90 <executeCommand+0x162>
				threshold_percentage = atoi(command); //change alarm deviaton for alarm type long
     f68:	c9 01       	movw	r24, r18
     f6a:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <atoi>
     f6e:	80 93 22 45 	sts	0x4522, r24	; 0x804522 <threshold_percentage>
				changeAlarmDeviation = 0;
     f72:	10 92 9d 4b 	sts	0x4B9D, r1	; 0x804b9d <changeAlarmDeviation>
				printf("wear and tear alarm devation percentage is changed to: %d\n\r", threshold_percentage);
     f76:	1f 92       	push	r1
     f78:	8f 93       	push	r24
     f7a:	8a ea       	ldi	r24, 0xAA	; 170
     f7c:	9a e4       	ldi	r25, 0x4A	; 74
     f7e:	9f 93       	push	r25
     f80:	8f 93       	push	r24
     f82:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
				break;
     f86:	0f 90       	pop	r0
     f88:	0f 90       	pop	r0
     f8a:	0f 90       	pop	r0
     f8c:	0f 90       	pop	r0
     f8e:	7c c0       	rjmp	.+248    	; 0x1088 <executeCommand+0x25a>
			}
			
		
		
		
		if(chosenModeIsManual)
     f90:	90 91 13 4c 	lds	r25, 0x4C13	; 0x804c13 <chosenModeIsManual>
     f94:	99 23       	and	r25, r25
     f96:	09 f4       	brne	.+2      	; 0xf9a <executeCommand+0x16c>
     f98:	73 c0       	rjmp	.+230    	; 0x1080 <executeCommand+0x252>
		{
			switch (command_number)
     f9a:	8a 30       	cpi	r24, 0x0A	; 10
     f9c:	89 f0       	breq	.+34     	; 0xfc0 <executeCommand+0x192>
     f9e:	8b 30       	cpi	r24, 0x0B	; 11
     fa0:	e1 f0       	breq	.+56     	; 0xfda <executeCommand+0x1ac>
     fa2:	89 30       	cpi	r24, 0x09	; 9
     fa4:	39 f5       	brne	.+78     	; 0xff4 <executeCommand+0x1c6>
			{
				case 9:
				
				printf("Received command: low\r\n");
     fa6:	86 ee       	ldi	r24, 0xE6	; 230
     fa8:	9a e4       	ldi	r25, 0x4A	; 74
     faa:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
				manual_rpm_value = FAN_RPM_LOW; //LOW
     fae:	83 e2       	ldi	r24, 0x23	; 35
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	80 93 a5 4b 	sts	0x4BA5, r24	; 0x804ba5 <manual_rpm_value>
     fb6:	90 93 a6 4b 	sts	0x4BA6, r25	; 0x804ba6 <manual_rpm_value+0x1>
				fanManual();
     fba:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fanManual>
				break;
     fbe:	64 c0       	rjmp	.+200    	; 0x1088 <executeCommand+0x25a>
				
				case 10:
				
				printf("Received command: medium\r\n");
     fc0:	8d ef       	ldi	r24, 0xFD	; 253
     fc2:	9a e4       	ldi	r25, 0x4A	; 74
     fc4:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
				manual_rpm_value = FAN_RPM_MEDIUM; //MEDIUM
     fc8:	8c e3       	ldi	r24, 0x3C	; 60
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	80 93 a5 4b 	sts	0x4BA5, r24	; 0x804ba5 <manual_rpm_value>
     fd0:	90 93 a6 4b 	sts	0x4BA6, r25	; 0x804ba6 <manual_rpm_value+0x1>
				fanManual();
     fd4:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fanManual>
				break;
     fd8:	57 c0       	rjmp	.+174    	; 0x1088 <executeCommand+0x25a>
				
				case 11:
				
				printf("Received command: high\r\n");
     fda:	87 e1       	ldi	r24, 0x17	; 23
     fdc:	9b e4       	ldi	r25, 0x4B	; 75
     fde:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
				manual_rpm_value = FAN_RPM_HIGH; //HIGH
     fe2:	8f e4       	ldi	r24, 0x4F	; 79
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	80 93 a5 4b 	sts	0x4BA5, r24	; 0x804ba5 <manual_rpm_value>
     fea:	90 93 a6 4b 	sts	0x4BA6, r25	; 0x804ba6 <manual_rpm_value+0x1>
				fanManual();
     fee:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fanManual>
				break;
     ff2:	4a c0       	rjmp	.+148    	; 0x1088 <executeCommand+0x25a>
				
				default:
				
				duty_cycle_input = atoi(command);
     ff4:	c9 01       	movw	r24, r18
     ff6:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <atoi>
     ffa:	80 93 19 4c 	sts	0x4C19, r24	; 0x804c19 <duty_cycle_input>
     ffe:	90 93 1a 4c 	sts	0x4C1A, r25	; 0x804c1a <duty_cycle_input+0x1>
				printf("%d\r\n", duty_cycle_input);
    1002:	9f 93       	push	r25
    1004:	8f 93       	push	r24
    1006:	85 e7       	ldi	r24, 0x75	; 117
    1008:	9b e4       	ldi	r25, 0x4B	; 75
    100a:	9f 93       	push	r25
    100c:	8f 93       	push	r24
    100e:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
				if (duty_cycle_input >= 0 && duty_cycle_input <= 100)
    1012:	60 91 19 4c 	lds	r22, 0x4C19	; 0x804c19 <duty_cycle_input>
    1016:	70 91 1a 4c 	lds	r23, 0x4C1A	; 0x804c1a <duty_cycle_input+0x1>
    101a:	0f 90       	pop	r0
    101c:	0f 90       	pop	r0
    101e:	0f 90       	pop	r0
    1020:	0f 90       	pop	r0
    1022:	65 36       	cpi	r22, 0x65	; 101
    1024:	71 05       	cpc	r23, r1
    1026:	38 f5       	brcc	.+78     	; 0x1076 <executeCommand+0x248>
				{
					uint16_t new_duty_cycle = (duty_cycle_input / 100.0) * FAN_RPM_HIGH;
    1028:	80 e0       	ldi	r24, 0x00	; 0
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	0e 94 1f 0a 	call	0x143e	; 0x143e <__floatunsisf>
    1030:	20 e0       	ldi	r18, 0x00	; 0
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	48 ec       	ldi	r20, 0xC8	; 200
    1036:	52 e4       	ldi	r21, 0x42	; 66
    1038:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	4e e9       	ldi	r20, 0x9E	; 158
    1042:	52 e4       	ldi	r21, 0x42	; 66
    1044:	0e 94 ad 0a 	call	0x155a	; 0x155a <__mulsf3>
    1048:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <__fixunssfsi>
    104c:	d6 2f       	mov	r29, r22
    104e:	c7 2f       	mov	r28, r23
					printf("%d\r\n", new_duty_cycle);
    1050:	7f 93       	push	r23
    1052:	6f 93       	push	r22
    1054:	85 e7       	ldi	r24, 0x75	; 117
    1056:	9b e4       	ldi	r25, 0x4B	; 75
    1058:	9f 93       	push	r25
    105a:	8f 93       	push	r24
    105c:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
					// Set the duty cycle to the new value
					// Assuming TCA0_SPLIT_LCMP0 is where the duty cycle is set
					manual_rpm_value = new_duty_cycle;
    1060:	d0 93 a5 4b 	sts	0x4BA5, r29	; 0x804ba5 <manual_rpm_value>
    1064:	c0 93 a6 4b 	sts	0x4BA6, r28	; 0x804ba6 <manual_rpm_value+0x1>
					fanManual();
    1068:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fanManual>
    106c:	0f 90       	pop	r0
    106e:	0f 90       	pop	r0
    1070:	0f 90       	pop	r0
    1072:	0f 90       	pop	r0
    1074:	09 c0       	rjmp	.+18     	; 0x1088 <executeCommand+0x25a>
				}
				else
				{
					printf("Please insert a valid duty cycle (0-100)\r\n");
    1076:	8f e2       	ldi	r24, 0x2F	; 47
    1078:	9b e4       	ldi	r25, 0x4B	; 75
    107a:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
    107e:	04 c0       	rjmp	.+8      	; 0x1088 <executeCommand+0x25a>
		
		
		}
		
		
		else printf("unknown command \r\n");
    1080:	89 e5       	ldi	r24, 0x59	; 89
    1082:	9b e4       	ldi	r25, 0x4B	; 75
    1084:	0e 94 a7 0b 	call	0x174e	; 0x174e <puts>
		
	}

   }
}
    1088:	df 91       	pop	r29
    108a:	cf 91       	pop	r28
    108c:	08 95       	ret

0000108e <read_commands>:




void read_commands() //Reads Uart when enter is pressed
{
    108e:	cf 93       	push	r28
    1090:	df 93       	push	r29
    1092:	cd b7       	in	r28, 0x3d	; 61
    1094:	de b7       	in	r29, 0x3e	; 62
    1096:	c4 56       	subi	r28, 0x64	; 100
    1098:	d1 09       	sbc	r29, r1
    109a:	cd bf       	out	0x3d, r28	; 61
    109c:	de bf       	out	0x3e, r29	; 62
	char command[MAX_COMMAND_LEN];
	static uint8_t index = 0;
	char c = USART3_readChar();
    109e:	0e 94 8d 04 	call	0x91a	; 0x91a <USART3_readChar>
	
	if(c != '\n' && c != '\r' && index < MAX_COMMAND_LEN - 1)
    10a2:	8a 30       	cpi	r24, 0x0A	; 10
    10a4:	89 f0       	breq	.+34     	; 0x10c8 <read_commands+0x3a>
    10a6:	8d 30       	cpi	r24, 0x0D	; 13
    10a8:	79 f0       	breq	.+30     	; 0x10c8 <read_commands+0x3a>
    10aa:	90 91 9a 4b 	lds	r25, 0x4B9A	; 0x804b9a <__data_end>
    10ae:	93 36       	cpi	r25, 0x63	; 99
    10b0:	58 f4       	brcc	.+22     	; 0x10c8 <read_commands+0x3a>
	{
		command[index++] = c;
    10b2:	21 e0       	ldi	r18, 0x01	; 1
    10b4:	29 0f       	add	r18, r25
    10b6:	20 93 9a 4b 	sts	0x4B9A, r18	; 0x804b9a <__data_end>
    10ba:	e1 e0       	ldi	r30, 0x01	; 1
    10bc:	f0 e0       	ldi	r31, 0x00	; 0
    10be:	ec 0f       	add	r30, r28
    10c0:	fd 1f       	adc	r31, r29
    10c2:	e9 0f       	add	r30, r25
    10c4:	f1 1d       	adc	r31, r1
    10c6:	80 83       	st	Z, r24
		
	}
	
	if(c == '\r'|| c=='\n')
    10c8:	8d 30       	cpi	r24, 0x0D	; 13
    10ca:	11 f0       	breq	.+4      	; 0x10d0 <read_commands+0x42>
    10cc:	8a 30       	cpi	r24, 0x0A	; 10
    10ce:	a1 f4       	brne	.+40     	; 0x10f8 <read_commands+0x6a>
	{
		command[index] = '\0';
    10d0:	80 91 9a 4b 	lds	r24, 0x4B9A	; 0x804b9a <__data_end>
    10d4:	e1 e0       	ldi	r30, 0x01	; 1
    10d6:	f0 e0       	ldi	r31, 0x00	; 0
    10d8:	ec 0f       	add	r30, r28
    10da:	fd 1f       	adc	r31, r29
    10dc:	e8 0f       	add	r30, r24
    10de:	f1 1d       	adc	r31, r1
    10e0:	10 82       	st	Z, r1
		index = 0;
    10e2:	10 92 9a 4b 	sts	0x4B9A, r1	; 0x804b9a <__data_end>
		//printf("test command1: %s\r\n",command);

		executeCommand(compareCommands(command), command); // executes actions based on command as an argument
    10e6:	ce 01       	movw	r24, r28
    10e8:	01 96       	adiw	r24, 0x01	; 1
    10ea:	0e 94 66 04 	call	0x8cc	; 0x8cc <compareCommands>
    10ee:	be 01       	movw	r22, r28
    10f0:	6f 5f       	subi	r22, 0xFF	; 255
    10f2:	7f 4f       	sbci	r23, 0xFF	; 255
    10f4:	0e 94 17 07 	call	0xe2e	; 0xe2e <executeCommand>
		
		
	}
}
    10f8:	cc 59       	subi	r28, 0x9C	; 156
    10fa:	df 4f       	sbci	r29, 0xFF	; 255
    10fc:	cd bf       	out	0x3d, r28	; 61
    10fe:	de bf       	out	0x3e, r29	; 62
    1100:	df 91       	pop	r29
    1102:	cf 91       	pop	r28
    1104:	08 95       	ret

00001106 <__vector_53>:
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
}


ISR(USART3_RXC_vect)
{
    1106:	1f 92       	push	r1
    1108:	0f 92       	push	r0
    110a:	0f b6       	in	r0, 0x3f	; 63
    110c:	0f 92       	push	r0
    110e:	11 24       	eor	r1, r1
    1110:	0b b6       	in	r0, 0x3b	; 59
    1112:	0f 92       	push	r0
    1114:	2f 93       	push	r18
    1116:	3f 93       	push	r19
    1118:	4f 93       	push	r20
    111a:	5f 93       	push	r21
    111c:	6f 93       	push	r22
    111e:	7f 93       	push	r23
    1120:	8f 93       	push	r24
    1122:	9f 93       	push	r25
    1124:	af 93       	push	r26
    1126:	bf 93       	push	r27
    1128:	ef 93       	push	r30
    112a:	ff 93       	push	r31
	read_commands();
    112c:	0e 94 47 08 	call	0x108e	; 0x108e <read_commands>
}
    1130:	ff 91       	pop	r31
    1132:	ef 91       	pop	r30
    1134:	bf 91       	pop	r27
    1136:	af 91       	pop	r26
    1138:	9f 91       	pop	r25
    113a:	8f 91       	pop	r24
    113c:	7f 91       	pop	r23
    113e:	6f 91       	pop	r22
    1140:	5f 91       	pop	r21
    1142:	4f 91       	pop	r20
    1144:	3f 91       	pop	r19
    1146:	2f 91       	pop	r18
    1148:	0f 90       	pop	r0
    114a:	0b be       	out	0x3b, r0	; 59
    114c:	0f 90       	pop	r0
    114e:	0f be       	out	0x3f, r0	; 63
    1150:	0f 90       	pop	r0
    1152:	1f 90       	pop	r1
    1154:	18 95       	reti

00001156 <main>:


int main(void)
{
	
	USART3_init();
    1156:	0e 94 9a 04 	call	0x934	; 0x934 <USART3_init>
	sei(); // Enable Global Interrupts
    115a:	78 94       	sei

	// PWM initialize
	PORT_init();
    115c:	0e 94 b3 04 	call	0x966	; 0x966 <PORT_init>
	TCA0_init();
    1160:	0e 94 b7 04 	call	0x96e	; 0x96e <TCA0_init>
	TCB0_init();
    1164:	0e 94 ca 04 	call	0x994	; 0x994 <TCB0_init>
	TCB1_init();
    1168:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <TCB1_init>
	
	// I2C initialize

	TWI0_M_init();
    116c:	0e 94 a8 00 	call	0x150	; 0x150 <TWI0_M_init>
	AHT10_init();
    1170:	0e 94 23 01 	call	0x246	; 0x246 <AHT10_init>
	
	// RTC initialize
	RTC_init();
    1174:	0e 94 00 05 	call	0xa00	; 0xa00 <RTC_init>
	status_eeprom();
	eeprom_write_word((uint16_t*) address_fan2, 12238);
	*/
	
	// Get values for prediction from eeprom
	status_eeprom();
    1178:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <status_eeprom>
	read_value_EE_fan1 = eeprom_read_word((uint16_t*) address_fan1);
    117c:	80 91 02 00 	lds	r24, 0x0002	; 0x800002 <__TEXT_REGION_LENGTH__+0x7e0002>
    1180:	90 91 03 00 	lds	r25, 0x0003	; 0x800003 <__TEXT_REGION_LENGTH__+0x7e0003>
    1184:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <eeprom_read_word>
    1188:	80 93 15 4c 	sts	0x4C15, r24	; 0x804c15 <read_value_EE_fan1>
    118c:	90 93 16 4c 	sts	0x4C16, r25	; 0x804c16 <read_value_EE_fan1+0x1>
	status_eeprom();
    1190:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <status_eeprom>
	read_value_EE_fan2 = eeprom_read_word((uint16_t*) address_fan2);
    1194:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__TEXT_REGION_LENGTH__+0x7e0000>
    1198:	90 91 01 00 	lds	r25, 0x0001	; 0x800001 <__TEXT_REGION_LENGTH__+0x7e0001>
    119c:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <eeprom_read_word>
    11a0:	80 93 0f 4c 	sts	0x4C0F, r24	; 0x804c0f <read_value_EE_fan2>
    11a4:	90 93 10 4c 	sts	0x4C10, r25	; 0x804c10 <read_value_EE_fan2+0x1>
	
	
	printHomeScreen();
    11a8:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
	
	printf("EE fan 1: %d\r\n", read_value_EE_fan1);
    11ac:	80 91 16 4c 	lds	r24, 0x4C16	; 0x804c16 <read_value_EE_fan1+0x1>
    11b0:	8f 93       	push	r24
    11b2:	80 91 15 4c 	lds	r24, 0x4C15	; 0x804c15 <read_value_EE_fan1>
    11b6:	8f 93       	push	r24
    11b8:	8b e6       	ldi	r24, 0x6B	; 107
    11ba:	9b e4       	ldi	r25, 0x4B	; 75
    11bc:	9f 93       	push	r25
    11be:	8f 93       	push	r24
    11c0:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
	printf("EE fan 2: %d\r\n", read_value_EE_fan2);
    11c4:	80 91 10 4c 	lds	r24, 0x4C10	; 0x804c10 <read_value_EE_fan2+0x1>
    11c8:	8f 93       	push	r24
    11ca:	80 91 0f 4c 	lds	r24, 0x4C0F	; 0x804c0f <read_value_EE_fan2>
    11ce:	8f 93       	push	r24
    11d0:	8a e7       	ldi	r24, 0x7A	; 122
    11d2:	9b e4       	ldi	r25, 0x4B	; 75
    11d4:	9f 93       	push	r25
    11d6:	8f 93       	push	r24
    11d8:	0e 94 93 0b 	call	0x1726	; 0x1726 <printf>
    11dc:	8d b7       	in	r24, 0x3d	; 61
    11de:	9e b7       	in	r25, 0x3e	; 62
    11e0:	08 96       	adiw	r24, 0x08	; 8
    11e2:	8d bf       	out	0x3d, r24	; 61
    11e4:	9e bf       	out	0x3e, r25	; 62

	
	while(1){
		
		
		if(counter == 20)
    11e6:	80 91 1e 4c 	lds	r24, 0x4C1E	; 0x804c1e <counter>
    11ea:	90 91 1f 4c 	lds	r25, 0x4C1F	; 0x804c1f <counter+0x1>
    11ee:	44 97       	sbiw	r24, 0x14	; 20
    11f0:	79 f4       	brne	.+30     	; 0x1210 <main+0xba>
		{
			saveFanModes();
    11f2:	0e 94 0e 02 	call	0x41c	; 0x41c <saveFanModes>
			diagnoseIsRunning = 1;
    11f6:	81 e0       	ldi	r24, 0x01	; 1
    11f8:	80 93 0e 4c 	sts	0x4C0E, r24	; 0x804c0e <diagnoseIsRunning>
			predict_error();
    11fc:	0e 94 50 06 	call	0xca0	; 0xca0 <predict_error>
			startFansAfterDiagnose();
    1200:	0e 94 8d 01 	call	0x31a	; 0x31a <startFansAfterDiagnose>
			diagnoseIsRunning = 0;
    1204:	10 92 0e 4c 	sts	0x4C0E, r1	; 0x804c0e <diagnoseIsRunning>
			counter = 0;
    1208:	10 92 1e 4c 	sts	0x4C1E, r1	; 0x804c1e <counter>
    120c:	10 92 1f 4c 	sts	0x4C1F, r1	; 0x804c1f <counter+0x1>
		}
		
		
		
		handleFansInAuto(); //changes the rpm of the fans in mode auto based on temperature
    1210:	0e 94 54 01 	call	0x2a8	; 0x2a8 <handleFansInAuto>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1214:	8f e0       	ldi	r24, 0x0F	; 15
    1216:	97 e2       	ldi	r25, 0x27	; 39
    1218:	01 97       	sbiw	r24, 0x01	; 1
    121a:	f1 f7       	brne	.-4      	; 0x1218 <main+0xc2>
    121c:	00 c0       	rjmp	.+0      	; 0x121e <main+0xc8>
    121e:	00 00       	nop
    1220:	e2 cf       	rjmp	.-60     	; 0x11e6 <main+0x90>

00001222 <__subsf3>:
    1222:	50 58       	subi	r21, 0x80	; 128

00001224 <__addsf3>:
    1224:	bb 27       	eor	r27, r27
    1226:	aa 27       	eor	r26, r26
    1228:	0e 94 29 09 	call	0x1252	; 0x1252 <__addsf3x>
    122c:	0c 94 73 0a 	jmp	0x14e6	; 0x14e6 <__fp_round>
    1230:	0e 94 65 0a 	call	0x14ca	; 0x14ca <__fp_pscA>
    1234:	38 f0       	brcs	.+14     	; 0x1244 <__addsf3+0x20>
    1236:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <__fp_pscB>
    123a:	20 f0       	brcs	.+8      	; 0x1244 <__addsf3+0x20>
    123c:	39 f4       	brne	.+14     	; 0x124c <__addsf3+0x28>
    123e:	9f 3f       	cpi	r25, 0xFF	; 255
    1240:	19 f4       	brne	.+6      	; 0x1248 <__addsf3+0x24>
    1242:	26 f4       	brtc	.+8      	; 0x124c <__addsf3+0x28>
    1244:	0c 94 62 0a 	jmp	0x14c4	; 0x14c4 <__fp_nan>
    1248:	0e f4       	brtc	.+2      	; 0x124c <__addsf3+0x28>
    124a:	e0 95       	com	r30
    124c:	e7 fb       	bst	r30, 7
    124e:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__fp_inf>

00001252 <__addsf3x>:
    1252:	e9 2f       	mov	r30, r25
    1254:	0e 94 84 0a 	call	0x1508	; 0x1508 <__fp_split3>
    1258:	58 f3       	brcs	.-42     	; 0x1230 <__addsf3+0xc>
    125a:	ba 17       	cp	r27, r26
    125c:	62 07       	cpc	r22, r18
    125e:	73 07       	cpc	r23, r19
    1260:	84 07       	cpc	r24, r20
    1262:	95 07       	cpc	r25, r21
    1264:	20 f0       	brcs	.+8      	; 0x126e <__addsf3x+0x1c>
    1266:	79 f4       	brne	.+30     	; 0x1286 <__addsf3x+0x34>
    1268:	a6 f5       	brtc	.+104    	; 0x12d2 <__addsf3x+0x80>
    126a:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <__fp_zero>
    126e:	0e f4       	brtc	.+2      	; 0x1272 <__addsf3x+0x20>
    1270:	e0 95       	com	r30
    1272:	0b 2e       	mov	r0, r27
    1274:	ba 2f       	mov	r27, r26
    1276:	a0 2d       	mov	r26, r0
    1278:	0b 01       	movw	r0, r22
    127a:	b9 01       	movw	r22, r18
    127c:	90 01       	movw	r18, r0
    127e:	0c 01       	movw	r0, r24
    1280:	ca 01       	movw	r24, r20
    1282:	a0 01       	movw	r20, r0
    1284:	11 24       	eor	r1, r1
    1286:	ff 27       	eor	r31, r31
    1288:	59 1b       	sub	r21, r25
    128a:	99 f0       	breq	.+38     	; 0x12b2 <__addsf3x+0x60>
    128c:	59 3f       	cpi	r21, 0xF9	; 249
    128e:	50 f4       	brcc	.+20     	; 0x12a4 <__addsf3x+0x52>
    1290:	50 3e       	cpi	r21, 0xE0	; 224
    1292:	68 f1       	brcs	.+90     	; 0x12ee <__addsf3x+0x9c>
    1294:	1a 16       	cp	r1, r26
    1296:	f0 40       	sbci	r31, 0x00	; 0
    1298:	a2 2f       	mov	r26, r18
    129a:	23 2f       	mov	r18, r19
    129c:	34 2f       	mov	r19, r20
    129e:	44 27       	eor	r20, r20
    12a0:	58 5f       	subi	r21, 0xF8	; 248
    12a2:	f3 cf       	rjmp	.-26     	; 0x128a <__addsf3x+0x38>
    12a4:	46 95       	lsr	r20
    12a6:	37 95       	ror	r19
    12a8:	27 95       	ror	r18
    12aa:	a7 95       	ror	r26
    12ac:	f0 40       	sbci	r31, 0x00	; 0
    12ae:	53 95       	inc	r21
    12b0:	c9 f7       	brne	.-14     	; 0x12a4 <__addsf3x+0x52>
    12b2:	7e f4       	brtc	.+30     	; 0x12d2 <__addsf3x+0x80>
    12b4:	1f 16       	cp	r1, r31
    12b6:	ba 0b       	sbc	r27, r26
    12b8:	62 0b       	sbc	r22, r18
    12ba:	73 0b       	sbc	r23, r19
    12bc:	84 0b       	sbc	r24, r20
    12be:	ba f0       	brmi	.+46     	; 0x12ee <__addsf3x+0x9c>
    12c0:	91 50       	subi	r25, 0x01	; 1
    12c2:	a1 f0       	breq	.+40     	; 0x12ec <__addsf3x+0x9a>
    12c4:	ff 0f       	add	r31, r31
    12c6:	bb 1f       	adc	r27, r27
    12c8:	66 1f       	adc	r22, r22
    12ca:	77 1f       	adc	r23, r23
    12cc:	88 1f       	adc	r24, r24
    12ce:	c2 f7       	brpl	.-16     	; 0x12c0 <__addsf3x+0x6e>
    12d0:	0e c0       	rjmp	.+28     	; 0x12ee <__addsf3x+0x9c>
    12d2:	ba 0f       	add	r27, r26
    12d4:	62 1f       	adc	r22, r18
    12d6:	73 1f       	adc	r23, r19
    12d8:	84 1f       	adc	r24, r20
    12da:	48 f4       	brcc	.+18     	; 0x12ee <__addsf3x+0x9c>
    12dc:	87 95       	ror	r24
    12de:	77 95       	ror	r23
    12e0:	67 95       	ror	r22
    12e2:	b7 95       	ror	r27
    12e4:	f7 95       	ror	r31
    12e6:	9e 3f       	cpi	r25, 0xFE	; 254
    12e8:	08 f0       	brcs	.+2      	; 0x12ec <__addsf3x+0x9a>
    12ea:	b0 cf       	rjmp	.-160    	; 0x124c <__addsf3+0x28>
    12ec:	93 95       	inc	r25
    12ee:	88 0f       	add	r24, r24
    12f0:	08 f0       	brcs	.+2      	; 0x12f4 <__addsf3x+0xa2>
    12f2:	99 27       	eor	r25, r25
    12f4:	ee 0f       	add	r30, r30
    12f6:	97 95       	ror	r25
    12f8:	87 95       	ror	r24
    12fa:	08 95       	ret

000012fc <__divsf3>:
    12fc:	0e 94 92 09 	call	0x1324	; 0x1324 <__divsf3x>
    1300:	0c 94 73 0a 	jmp	0x14e6	; 0x14e6 <__fp_round>
    1304:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <__fp_pscB>
    1308:	58 f0       	brcs	.+22     	; 0x1320 <__divsf3+0x24>
    130a:	0e 94 65 0a 	call	0x14ca	; 0x14ca <__fp_pscA>
    130e:	40 f0       	brcs	.+16     	; 0x1320 <__divsf3+0x24>
    1310:	29 f4       	brne	.+10     	; 0x131c <__divsf3+0x20>
    1312:	5f 3f       	cpi	r21, 0xFF	; 255
    1314:	29 f0       	breq	.+10     	; 0x1320 <__divsf3+0x24>
    1316:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__fp_inf>
    131a:	51 11       	cpse	r21, r1
    131c:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__fp_szero>
    1320:	0c 94 62 0a 	jmp	0x14c4	; 0x14c4 <__fp_nan>

00001324 <__divsf3x>:
    1324:	0e 94 84 0a 	call	0x1508	; 0x1508 <__fp_split3>
    1328:	68 f3       	brcs	.-38     	; 0x1304 <__divsf3+0x8>

0000132a <__divsf3_pse>:
    132a:	99 23       	and	r25, r25
    132c:	b1 f3       	breq	.-20     	; 0x131a <__divsf3+0x1e>
    132e:	55 23       	and	r21, r21
    1330:	91 f3       	breq	.-28     	; 0x1316 <__divsf3+0x1a>
    1332:	95 1b       	sub	r25, r21
    1334:	55 0b       	sbc	r21, r21
    1336:	bb 27       	eor	r27, r27
    1338:	aa 27       	eor	r26, r26
    133a:	62 17       	cp	r22, r18
    133c:	73 07       	cpc	r23, r19
    133e:	84 07       	cpc	r24, r20
    1340:	38 f0       	brcs	.+14     	; 0x1350 <__divsf3_pse+0x26>
    1342:	9f 5f       	subi	r25, 0xFF	; 255
    1344:	5f 4f       	sbci	r21, 0xFF	; 255
    1346:	22 0f       	add	r18, r18
    1348:	33 1f       	adc	r19, r19
    134a:	44 1f       	adc	r20, r20
    134c:	aa 1f       	adc	r26, r26
    134e:	a9 f3       	breq	.-22     	; 0x133a <__divsf3_pse+0x10>
    1350:	35 d0       	rcall	.+106    	; 0x13bc <__divsf3_pse+0x92>
    1352:	0e 2e       	mov	r0, r30
    1354:	3a f0       	brmi	.+14     	; 0x1364 <__divsf3_pse+0x3a>
    1356:	e0 e8       	ldi	r30, 0x80	; 128
    1358:	32 d0       	rcall	.+100    	; 0x13be <__divsf3_pse+0x94>
    135a:	91 50       	subi	r25, 0x01	; 1
    135c:	50 40       	sbci	r21, 0x00	; 0
    135e:	e6 95       	lsr	r30
    1360:	00 1c       	adc	r0, r0
    1362:	ca f7       	brpl	.-14     	; 0x1356 <__divsf3_pse+0x2c>
    1364:	2b d0       	rcall	.+86     	; 0x13bc <__divsf3_pse+0x92>
    1366:	fe 2f       	mov	r31, r30
    1368:	29 d0       	rcall	.+82     	; 0x13bc <__divsf3_pse+0x92>
    136a:	66 0f       	add	r22, r22
    136c:	77 1f       	adc	r23, r23
    136e:	88 1f       	adc	r24, r24
    1370:	bb 1f       	adc	r27, r27
    1372:	26 17       	cp	r18, r22
    1374:	37 07       	cpc	r19, r23
    1376:	48 07       	cpc	r20, r24
    1378:	ab 07       	cpc	r26, r27
    137a:	b0 e8       	ldi	r27, 0x80	; 128
    137c:	09 f0       	breq	.+2      	; 0x1380 <__divsf3_pse+0x56>
    137e:	bb 0b       	sbc	r27, r27
    1380:	80 2d       	mov	r24, r0
    1382:	bf 01       	movw	r22, r30
    1384:	ff 27       	eor	r31, r31
    1386:	93 58       	subi	r25, 0x83	; 131
    1388:	5f 4f       	sbci	r21, 0xFF	; 255
    138a:	3a f0       	brmi	.+14     	; 0x139a <__divsf3_pse+0x70>
    138c:	9e 3f       	cpi	r25, 0xFE	; 254
    138e:	51 05       	cpc	r21, r1
    1390:	78 f0       	brcs	.+30     	; 0x13b0 <__divsf3_pse+0x86>
    1392:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__fp_inf>
    1396:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__fp_szero>
    139a:	5f 3f       	cpi	r21, 0xFF	; 255
    139c:	e4 f3       	brlt	.-8      	; 0x1396 <__divsf3_pse+0x6c>
    139e:	98 3e       	cpi	r25, 0xE8	; 232
    13a0:	d4 f3       	brlt	.-12     	; 0x1396 <__divsf3_pse+0x6c>
    13a2:	86 95       	lsr	r24
    13a4:	77 95       	ror	r23
    13a6:	67 95       	ror	r22
    13a8:	b7 95       	ror	r27
    13aa:	f7 95       	ror	r31
    13ac:	9f 5f       	subi	r25, 0xFF	; 255
    13ae:	c9 f7       	brne	.-14     	; 0x13a2 <__divsf3_pse+0x78>
    13b0:	88 0f       	add	r24, r24
    13b2:	91 1d       	adc	r25, r1
    13b4:	96 95       	lsr	r25
    13b6:	87 95       	ror	r24
    13b8:	97 f9       	bld	r25, 7
    13ba:	08 95       	ret
    13bc:	e1 e0       	ldi	r30, 0x01	; 1
    13be:	66 0f       	add	r22, r22
    13c0:	77 1f       	adc	r23, r23
    13c2:	88 1f       	adc	r24, r24
    13c4:	bb 1f       	adc	r27, r27
    13c6:	62 17       	cp	r22, r18
    13c8:	73 07       	cpc	r23, r19
    13ca:	84 07       	cpc	r24, r20
    13cc:	ba 07       	cpc	r27, r26
    13ce:	20 f0       	brcs	.+8      	; 0x13d8 <__divsf3_pse+0xae>
    13d0:	62 1b       	sub	r22, r18
    13d2:	73 0b       	sbc	r23, r19
    13d4:	84 0b       	sbc	r24, r20
    13d6:	ba 0b       	sbc	r27, r26
    13d8:	ee 1f       	adc	r30, r30
    13da:	88 f7       	brcc	.-30     	; 0x13be <__divsf3_pse+0x94>
    13dc:	e0 95       	com	r30
    13de:	08 95       	ret

000013e0 <__fixunssfsi>:
    13e0:	0e 94 8c 0a 	call	0x1518	; 0x1518 <__fp_splitA>
    13e4:	88 f0       	brcs	.+34     	; 0x1408 <__fixunssfsi+0x28>
    13e6:	9f 57       	subi	r25, 0x7F	; 127
    13e8:	98 f0       	brcs	.+38     	; 0x1410 <__fixunssfsi+0x30>
    13ea:	b9 2f       	mov	r27, r25
    13ec:	99 27       	eor	r25, r25
    13ee:	b7 51       	subi	r27, 0x17	; 23
    13f0:	b0 f0       	brcs	.+44     	; 0x141e <__fixunssfsi+0x3e>
    13f2:	e1 f0       	breq	.+56     	; 0x142c <__fixunssfsi+0x4c>
    13f4:	66 0f       	add	r22, r22
    13f6:	77 1f       	adc	r23, r23
    13f8:	88 1f       	adc	r24, r24
    13fa:	99 1f       	adc	r25, r25
    13fc:	1a f0       	brmi	.+6      	; 0x1404 <__fixunssfsi+0x24>
    13fe:	ba 95       	dec	r27
    1400:	c9 f7       	brne	.-14     	; 0x13f4 <__fixunssfsi+0x14>
    1402:	14 c0       	rjmp	.+40     	; 0x142c <__fixunssfsi+0x4c>
    1404:	b1 30       	cpi	r27, 0x01	; 1
    1406:	91 f0       	breq	.+36     	; 0x142c <__fixunssfsi+0x4c>
    1408:	0e 94 a6 0a 	call	0x154c	; 0x154c <__fp_zero>
    140c:	b1 e0       	ldi	r27, 0x01	; 1
    140e:	08 95       	ret
    1410:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <__fp_zero>
    1414:	67 2f       	mov	r22, r23
    1416:	78 2f       	mov	r23, r24
    1418:	88 27       	eor	r24, r24
    141a:	b8 5f       	subi	r27, 0xF8	; 248
    141c:	39 f0       	breq	.+14     	; 0x142c <__fixunssfsi+0x4c>
    141e:	b9 3f       	cpi	r27, 0xF9	; 249
    1420:	cc f3       	brlt	.-14     	; 0x1414 <__fixunssfsi+0x34>
    1422:	86 95       	lsr	r24
    1424:	77 95       	ror	r23
    1426:	67 95       	ror	r22
    1428:	b3 95       	inc	r27
    142a:	d9 f7       	brne	.-10     	; 0x1422 <__fixunssfsi+0x42>
    142c:	3e f4       	brtc	.+14     	; 0x143c <__fixunssfsi+0x5c>
    142e:	90 95       	com	r25
    1430:	80 95       	com	r24
    1432:	70 95       	com	r23
    1434:	61 95       	neg	r22
    1436:	7f 4f       	sbci	r23, 0xFF	; 255
    1438:	8f 4f       	sbci	r24, 0xFF	; 255
    143a:	9f 4f       	sbci	r25, 0xFF	; 255
    143c:	08 95       	ret

0000143e <__floatunsisf>:
    143e:	e8 94       	clt
    1440:	09 c0       	rjmp	.+18     	; 0x1454 <__floatsisf+0x12>

00001442 <__floatsisf>:
    1442:	97 fb       	bst	r25, 7
    1444:	3e f4       	brtc	.+14     	; 0x1454 <__floatsisf+0x12>
    1446:	90 95       	com	r25
    1448:	80 95       	com	r24
    144a:	70 95       	com	r23
    144c:	61 95       	neg	r22
    144e:	7f 4f       	sbci	r23, 0xFF	; 255
    1450:	8f 4f       	sbci	r24, 0xFF	; 255
    1452:	9f 4f       	sbci	r25, 0xFF	; 255
    1454:	99 23       	and	r25, r25
    1456:	a9 f0       	breq	.+42     	; 0x1482 <__floatsisf+0x40>
    1458:	f9 2f       	mov	r31, r25
    145a:	96 e9       	ldi	r25, 0x96	; 150
    145c:	bb 27       	eor	r27, r27
    145e:	93 95       	inc	r25
    1460:	f6 95       	lsr	r31
    1462:	87 95       	ror	r24
    1464:	77 95       	ror	r23
    1466:	67 95       	ror	r22
    1468:	b7 95       	ror	r27
    146a:	f1 11       	cpse	r31, r1
    146c:	f8 cf       	rjmp	.-16     	; 0x145e <__floatsisf+0x1c>
    146e:	fa f4       	brpl	.+62     	; 0x14ae <__floatsisf+0x6c>
    1470:	bb 0f       	add	r27, r27
    1472:	11 f4       	brne	.+4      	; 0x1478 <__floatsisf+0x36>
    1474:	60 ff       	sbrs	r22, 0
    1476:	1b c0       	rjmp	.+54     	; 0x14ae <__floatsisf+0x6c>
    1478:	6f 5f       	subi	r22, 0xFF	; 255
    147a:	7f 4f       	sbci	r23, 0xFF	; 255
    147c:	8f 4f       	sbci	r24, 0xFF	; 255
    147e:	9f 4f       	sbci	r25, 0xFF	; 255
    1480:	16 c0       	rjmp	.+44     	; 0x14ae <__floatsisf+0x6c>
    1482:	88 23       	and	r24, r24
    1484:	11 f0       	breq	.+4      	; 0x148a <__floatsisf+0x48>
    1486:	96 e9       	ldi	r25, 0x96	; 150
    1488:	11 c0       	rjmp	.+34     	; 0x14ac <__floatsisf+0x6a>
    148a:	77 23       	and	r23, r23
    148c:	21 f0       	breq	.+8      	; 0x1496 <__floatsisf+0x54>
    148e:	9e e8       	ldi	r25, 0x8E	; 142
    1490:	87 2f       	mov	r24, r23
    1492:	76 2f       	mov	r23, r22
    1494:	05 c0       	rjmp	.+10     	; 0x14a0 <__floatsisf+0x5e>
    1496:	66 23       	and	r22, r22
    1498:	71 f0       	breq	.+28     	; 0x14b6 <__floatsisf+0x74>
    149a:	96 e8       	ldi	r25, 0x86	; 134
    149c:	86 2f       	mov	r24, r22
    149e:	70 e0       	ldi	r23, 0x00	; 0
    14a0:	60 e0       	ldi	r22, 0x00	; 0
    14a2:	2a f0       	brmi	.+10     	; 0x14ae <__floatsisf+0x6c>
    14a4:	9a 95       	dec	r25
    14a6:	66 0f       	add	r22, r22
    14a8:	77 1f       	adc	r23, r23
    14aa:	88 1f       	adc	r24, r24
    14ac:	da f7       	brpl	.-10     	; 0x14a4 <__floatsisf+0x62>
    14ae:	88 0f       	add	r24, r24
    14b0:	96 95       	lsr	r25
    14b2:	87 95       	ror	r24
    14b4:	97 f9       	bld	r25, 7
    14b6:	08 95       	ret

000014b8 <__fp_inf>:
    14b8:	97 f9       	bld	r25, 7
    14ba:	9f 67       	ori	r25, 0x7F	; 127
    14bc:	80 e8       	ldi	r24, 0x80	; 128
    14be:	70 e0       	ldi	r23, 0x00	; 0
    14c0:	60 e0       	ldi	r22, 0x00	; 0
    14c2:	08 95       	ret

000014c4 <__fp_nan>:
    14c4:	9f ef       	ldi	r25, 0xFF	; 255
    14c6:	80 ec       	ldi	r24, 0xC0	; 192
    14c8:	08 95       	ret

000014ca <__fp_pscA>:
    14ca:	00 24       	eor	r0, r0
    14cc:	0a 94       	dec	r0
    14ce:	16 16       	cp	r1, r22
    14d0:	17 06       	cpc	r1, r23
    14d2:	18 06       	cpc	r1, r24
    14d4:	09 06       	cpc	r0, r25
    14d6:	08 95       	ret

000014d8 <__fp_pscB>:
    14d8:	00 24       	eor	r0, r0
    14da:	0a 94       	dec	r0
    14dc:	12 16       	cp	r1, r18
    14de:	13 06       	cpc	r1, r19
    14e0:	14 06       	cpc	r1, r20
    14e2:	05 06       	cpc	r0, r21
    14e4:	08 95       	ret

000014e6 <__fp_round>:
    14e6:	09 2e       	mov	r0, r25
    14e8:	03 94       	inc	r0
    14ea:	00 0c       	add	r0, r0
    14ec:	11 f4       	brne	.+4      	; 0x14f2 <__fp_round+0xc>
    14ee:	88 23       	and	r24, r24
    14f0:	52 f0       	brmi	.+20     	; 0x1506 <__fp_round+0x20>
    14f2:	bb 0f       	add	r27, r27
    14f4:	40 f4       	brcc	.+16     	; 0x1506 <__fp_round+0x20>
    14f6:	bf 2b       	or	r27, r31
    14f8:	11 f4       	brne	.+4      	; 0x14fe <__fp_round+0x18>
    14fa:	60 ff       	sbrs	r22, 0
    14fc:	04 c0       	rjmp	.+8      	; 0x1506 <__fp_round+0x20>
    14fe:	6f 5f       	subi	r22, 0xFF	; 255
    1500:	7f 4f       	sbci	r23, 0xFF	; 255
    1502:	8f 4f       	sbci	r24, 0xFF	; 255
    1504:	9f 4f       	sbci	r25, 0xFF	; 255
    1506:	08 95       	ret

00001508 <__fp_split3>:
    1508:	57 fd       	sbrc	r21, 7
    150a:	90 58       	subi	r25, 0x80	; 128
    150c:	44 0f       	add	r20, r20
    150e:	55 1f       	adc	r21, r21
    1510:	59 f0       	breq	.+22     	; 0x1528 <__fp_splitA+0x10>
    1512:	5f 3f       	cpi	r21, 0xFF	; 255
    1514:	71 f0       	breq	.+28     	; 0x1532 <__fp_splitA+0x1a>
    1516:	47 95       	ror	r20

00001518 <__fp_splitA>:
    1518:	88 0f       	add	r24, r24
    151a:	97 fb       	bst	r25, 7
    151c:	99 1f       	adc	r25, r25
    151e:	61 f0       	breq	.+24     	; 0x1538 <__fp_splitA+0x20>
    1520:	9f 3f       	cpi	r25, 0xFF	; 255
    1522:	79 f0       	breq	.+30     	; 0x1542 <__fp_splitA+0x2a>
    1524:	87 95       	ror	r24
    1526:	08 95       	ret
    1528:	12 16       	cp	r1, r18
    152a:	13 06       	cpc	r1, r19
    152c:	14 06       	cpc	r1, r20
    152e:	55 1f       	adc	r21, r21
    1530:	f2 cf       	rjmp	.-28     	; 0x1516 <__fp_split3+0xe>
    1532:	46 95       	lsr	r20
    1534:	f1 df       	rcall	.-30     	; 0x1518 <__fp_splitA>
    1536:	08 c0       	rjmp	.+16     	; 0x1548 <__fp_splitA+0x30>
    1538:	16 16       	cp	r1, r22
    153a:	17 06       	cpc	r1, r23
    153c:	18 06       	cpc	r1, r24
    153e:	99 1f       	adc	r25, r25
    1540:	f1 cf       	rjmp	.-30     	; 0x1524 <__fp_splitA+0xc>
    1542:	86 95       	lsr	r24
    1544:	71 05       	cpc	r23, r1
    1546:	61 05       	cpc	r22, r1
    1548:	08 94       	sec
    154a:	08 95       	ret

0000154c <__fp_zero>:
    154c:	e8 94       	clt

0000154e <__fp_szero>:
    154e:	bb 27       	eor	r27, r27
    1550:	66 27       	eor	r22, r22
    1552:	77 27       	eor	r23, r23
    1554:	cb 01       	movw	r24, r22
    1556:	97 f9       	bld	r25, 7
    1558:	08 95       	ret

0000155a <__mulsf3>:
    155a:	0e 94 c0 0a 	call	0x1580	; 0x1580 <__mulsf3x>
    155e:	0c 94 73 0a 	jmp	0x14e6	; 0x14e6 <__fp_round>
    1562:	0e 94 65 0a 	call	0x14ca	; 0x14ca <__fp_pscA>
    1566:	38 f0       	brcs	.+14     	; 0x1576 <__mulsf3+0x1c>
    1568:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <__fp_pscB>
    156c:	20 f0       	brcs	.+8      	; 0x1576 <__mulsf3+0x1c>
    156e:	95 23       	and	r25, r21
    1570:	11 f0       	breq	.+4      	; 0x1576 <__mulsf3+0x1c>
    1572:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__fp_inf>
    1576:	0c 94 62 0a 	jmp	0x14c4	; 0x14c4 <__fp_nan>
    157a:	11 24       	eor	r1, r1
    157c:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__fp_szero>

00001580 <__mulsf3x>:
    1580:	0e 94 84 0a 	call	0x1508	; 0x1508 <__fp_split3>
    1584:	70 f3       	brcs	.-36     	; 0x1562 <__mulsf3+0x8>

00001586 <__mulsf3_pse>:
    1586:	95 9f       	mul	r25, r21
    1588:	c1 f3       	breq	.-16     	; 0x157a <__mulsf3+0x20>
    158a:	95 0f       	add	r25, r21
    158c:	50 e0       	ldi	r21, 0x00	; 0
    158e:	55 1f       	adc	r21, r21
    1590:	62 9f       	mul	r22, r18
    1592:	f0 01       	movw	r30, r0
    1594:	72 9f       	mul	r23, r18
    1596:	bb 27       	eor	r27, r27
    1598:	f0 0d       	add	r31, r0
    159a:	b1 1d       	adc	r27, r1
    159c:	63 9f       	mul	r22, r19
    159e:	aa 27       	eor	r26, r26
    15a0:	f0 0d       	add	r31, r0
    15a2:	b1 1d       	adc	r27, r1
    15a4:	aa 1f       	adc	r26, r26
    15a6:	64 9f       	mul	r22, r20
    15a8:	66 27       	eor	r22, r22
    15aa:	b0 0d       	add	r27, r0
    15ac:	a1 1d       	adc	r26, r1
    15ae:	66 1f       	adc	r22, r22
    15b0:	82 9f       	mul	r24, r18
    15b2:	22 27       	eor	r18, r18
    15b4:	b0 0d       	add	r27, r0
    15b6:	a1 1d       	adc	r26, r1
    15b8:	62 1f       	adc	r22, r18
    15ba:	73 9f       	mul	r23, r19
    15bc:	b0 0d       	add	r27, r0
    15be:	a1 1d       	adc	r26, r1
    15c0:	62 1f       	adc	r22, r18
    15c2:	83 9f       	mul	r24, r19
    15c4:	a0 0d       	add	r26, r0
    15c6:	61 1d       	adc	r22, r1
    15c8:	22 1f       	adc	r18, r18
    15ca:	74 9f       	mul	r23, r20
    15cc:	33 27       	eor	r19, r19
    15ce:	a0 0d       	add	r26, r0
    15d0:	61 1d       	adc	r22, r1
    15d2:	23 1f       	adc	r18, r19
    15d4:	84 9f       	mul	r24, r20
    15d6:	60 0d       	add	r22, r0
    15d8:	21 1d       	adc	r18, r1
    15da:	82 2f       	mov	r24, r18
    15dc:	76 2f       	mov	r23, r22
    15de:	6a 2f       	mov	r22, r26
    15e0:	11 24       	eor	r1, r1
    15e2:	9f 57       	subi	r25, 0x7F	; 127
    15e4:	50 40       	sbci	r21, 0x00	; 0
    15e6:	9a f0       	brmi	.+38     	; 0x160e <__mulsf3_pse+0x88>
    15e8:	f1 f0       	breq	.+60     	; 0x1626 <__mulsf3_pse+0xa0>
    15ea:	88 23       	and	r24, r24
    15ec:	4a f0       	brmi	.+18     	; 0x1600 <__mulsf3_pse+0x7a>
    15ee:	ee 0f       	add	r30, r30
    15f0:	ff 1f       	adc	r31, r31
    15f2:	bb 1f       	adc	r27, r27
    15f4:	66 1f       	adc	r22, r22
    15f6:	77 1f       	adc	r23, r23
    15f8:	88 1f       	adc	r24, r24
    15fa:	91 50       	subi	r25, 0x01	; 1
    15fc:	50 40       	sbci	r21, 0x00	; 0
    15fe:	a9 f7       	brne	.-22     	; 0x15ea <__mulsf3_pse+0x64>
    1600:	9e 3f       	cpi	r25, 0xFE	; 254
    1602:	51 05       	cpc	r21, r1
    1604:	80 f0       	brcs	.+32     	; 0x1626 <__mulsf3_pse+0xa0>
    1606:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__fp_inf>
    160a:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__fp_szero>
    160e:	5f 3f       	cpi	r21, 0xFF	; 255
    1610:	e4 f3       	brlt	.-8      	; 0x160a <__mulsf3_pse+0x84>
    1612:	98 3e       	cpi	r25, 0xE8	; 232
    1614:	d4 f3       	brlt	.-12     	; 0x160a <__mulsf3_pse+0x84>
    1616:	86 95       	lsr	r24
    1618:	77 95       	ror	r23
    161a:	67 95       	ror	r22
    161c:	b7 95       	ror	r27
    161e:	f7 95       	ror	r31
    1620:	e7 95       	ror	r30
    1622:	9f 5f       	subi	r25, 0xFF	; 255
    1624:	c1 f7       	brne	.-16     	; 0x1616 <__mulsf3_pse+0x90>
    1626:	fe 2b       	or	r31, r30
    1628:	88 0f       	add	r24, r24
    162a:	91 1d       	adc	r25, r1
    162c:	96 95       	lsr	r25
    162e:	87 95       	ror	r24
    1630:	97 f9       	bld	r25, 7
    1632:	08 95       	ret

00001634 <__udivmodsi4>:
    1634:	a1 e2       	ldi	r26, 0x21	; 33
    1636:	1a 2e       	mov	r1, r26
    1638:	aa 1b       	sub	r26, r26
    163a:	bb 1b       	sub	r27, r27
    163c:	fd 01       	movw	r30, r26
    163e:	0d c0       	rjmp	.+26     	; 0x165a <__udivmodsi4_ep>

00001640 <__udivmodsi4_loop>:
    1640:	aa 1f       	adc	r26, r26
    1642:	bb 1f       	adc	r27, r27
    1644:	ee 1f       	adc	r30, r30
    1646:	ff 1f       	adc	r31, r31
    1648:	a2 17       	cp	r26, r18
    164a:	b3 07       	cpc	r27, r19
    164c:	e4 07       	cpc	r30, r20
    164e:	f5 07       	cpc	r31, r21
    1650:	20 f0       	brcs	.+8      	; 0x165a <__udivmodsi4_ep>
    1652:	a2 1b       	sub	r26, r18
    1654:	b3 0b       	sbc	r27, r19
    1656:	e4 0b       	sbc	r30, r20
    1658:	f5 0b       	sbc	r31, r21

0000165a <__udivmodsi4_ep>:
    165a:	66 1f       	adc	r22, r22
    165c:	77 1f       	adc	r23, r23
    165e:	88 1f       	adc	r24, r24
    1660:	99 1f       	adc	r25, r25
    1662:	1a 94       	dec	r1
    1664:	69 f7       	brne	.-38     	; 0x1640 <__udivmodsi4_loop>
    1666:	60 95       	com	r22
    1668:	70 95       	com	r23
    166a:	80 95       	com	r24
    166c:	90 95       	com	r25
    166e:	9b 01       	movw	r18, r22
    1670:	ac 01       	movw	r20, r24
    1672:	bd 01       	movw	r22, r26
    1674:	cf 01       	movw	r24, r30
    1676:	08 95       	ret

00001678 <__divmodsi4>:
    1678:	05 2e       	mov	r0, r21
    167a:	97 fb       	bst	r25, 7
    167c:	1e f4       	brtc	.+6      	; 0x1684 <__divmodsi4+0xc>
    167e:	00 94       	com	r0
    1680:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <__negsi2>
    1684:	57 fd       	sbrc	r21, 7
    1686:	07 d0       	rcall	.+14     	; 0x1696 <__divmodsi4_neg2>
    1688:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__udivmodsi4>
    168c:	07 fc       	sbrc	r0, 7
    168e:	03 d0       	rcall	.+6      	; 0x1696 <__divmodsi4_neg2>
    1690:	4e f4       	brtc	.+18     	; 0x16a4 <__divmodsi4_exit>
    1692:	0c 94 53 0b 	jmp	0x16a6	; 0x16a6 <__negsi2>

00001696 <__divmodsi4_neg2>:
    1696:	50 95       	com	r21
    1698:	40 95       	com	r20
    169a:	30 95       	com	r19
    169c:	21 95       	neg	r18
    169e:	3f 4f       	sbci	r19, 0xFF	; 255
    16a0:	4f 4f       	sbci	r20, 0xFF	; 255
    16a2:	5f 4f       	sbci	r21, 0xFF	; 255

000016a4 <__divmodsi4_exit>:
    16a4:	08 95       	ret

000016a6 <__negsi2>:
    16a6:	90 95       	com	r25
    16a8:	80 95       	com	r24
    16aa:	70 95       	com	r23
    16ac:	61 95       	neg	r22
    16ae:	7f 4f       	sbci	r23, 0xFF	; 255
    16b0:	8f 4f       	sbci	r24, 0xFF	; 255
    16b2:	9f 4f       	sbci	r25, 0xFF	; 255
    16b4:	08 95       	ret

000016b6 <__tablejump2__>:
    16b6:	ee 0f       	add	r30, r30
    16b8:	ff 1f       	adc	r31, r31
    16ba:	00 24       	eor	r0, r0
    16bc:	00 1c       	adc	r0, r0
    16be:	0b be       	out	0x3b, r0	; 59
    16c0:	07 90       	elpm	r0, Z+
    16c2:	f6 91       	elpm	r31, Z
    16c4:	e0 2d       	mov	r30, r0
    16c6:	09 94       	ijmp

000016c8 <atoi>:
    16c8:	fc 01       	movw	r30, r24
    16ca:	88 27       	eor	r24, r24
    16cc:	99 27       	eor	r25, r25
    16ce:	e8 94       	clt
    16d0:	21 91       	ld	r18, Z+
    16d2:	20 32       	cpi	r18, 0x20	; 32
    16d4:	e9 f3       	breq	.-6      	; 0x16d0 <atoi+0x8>
    16d6:	29 30       	cpi	r18, 0x09	; 9
    16d8:	10 f0       	brcs	.+4      	; 0x16de <atoi+0x16>
    16da:	2e 30       	cpi	r18, 0x0E	; 14
    16dc:	c8 f3       	brcs	.-14     	; 0x16d0 <atoi+0x8>
    16de:	2b 32       	cpi	r18, 0x2B	; 43
    16e0:	41 f0       	breq	.+16     	; 0x16f2 <atoi+0x2a>
    16e2:	2d 32       	cpi	r18, 0x2D	; 45
    16e4:	39 f4       	brne	.+14     	; 0x16f4 <atoi+0x2c>
    16e6:	68 94       	set
    16e8:	04 c0       	rjmp	.+8      	; 0x16f2 <atoi+0x2a>
    16ea:	0e 94 8b 0b 	call	0x1716	; 0x1716 <__mulhi_const_10>
    16ee:	82 0f       	add	r24, r18
    16f0:	91 1d       	adc	r25, r1
    16f2:	21 91       	ld	r18, Z+
    16f4:	20 53       	subi	r18, 0x30	; 48
    16f6:	2a 30       	cpi	r18, 0x0A	; 10
    16f8:	c0 f3       	brcs	.-16     	; 0x16ea <atoi+0x22>
    16fa:	1e f4       	brtc	.+6      	; 0x1702 <atoi+0x3a>
    16fc:	90 95       	com	r25
    16fe:	81 95       	neg	r24
    1700:	9f 4f       	sbci	r25, 0xFF	; 255
    1702:	08 95       	ret

00001704 <strcmp>:
    1704:	fb 01       	movw	r30, r22
    1706:	dc 01       	movw	r26, r24
    1708:	8d 91       	ld	r24, X+
    170a:	01 90       	ld	r0, Z+
    170c:	80 19       	sub	r24, r0
    170e:	01 10       	cpse	r0, r1
    1710:	d9 f3       	breq	.-10     	; 0x1708 <strcmp+0x4>
    1712:	99 0b       	sbc	r25, r25
    1714:	08 95       	ret

00001716 <__mulhi_const_10>:
    1716:	7a e0       	ldi	r23, 0x0A	; 10
    1718:	97 9f       	mul	r25, r23
    171a:	90 2d       	mov	r25, r0
    171c:	87 9f       	mul	r24, r23
    171e:	80 2d       	mov	r24, r0
    1720:	91 0d       	add	r25, r1
    1722:	11 24       	eor	r1, r1
    1724:	08 95       	ret

00001726 <printf>:
    1726:	cf 93       	push	r28
    1728:	df 93       	push	r29
    172a:	cd b7       	in	r28, 0x3d	; 61
    172c:	de b7       	in	r29, 0x3e	; 62
    172e:	ae 01       	movw	r20, r28
    1730:	4b 5f       	subi	r20, 0xFB	; 251
    1732:	5f 4f       	sbci	r21, 0xFF	; 255
    1734:	fa 01       	movw	r30, r20
    1736:	61 91       	ld	r22, Z+
    1738:	71 91       	ld	r23, Z+
    173a:	af 01       	movw	r20, r30
    173c:	80 91 b8 4d 	lds	r24, 0x4DB8	; 0x804db8 <__iob+0x2>
    1740:	90 91 b9 4d 	lds	r25, 0x4DB9	; 0x804db9 <__iob+0x3>
    1744:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <vfprintf>
    1748:	df 91       	pop	r29
    174a:	cf 91       	pop	r28
    174c:	08 95       	ret

0000174e <puts>:
    174e:	0f 93       	push	r16
    1750:	1f 93       	push	r17
    1752:	cf 93       	push	r28
    1754:	df 93       	push	r29
    1756:	e0 91 b8 4d 	lds	r30, 0x4DB8	; 0x804db8 <__iob+0x2>
    175a:	f0 91 b9 4d 	lds	r31, 0x4DB9	; 0x804db9 <__iob+0x3>
    175e:	23 81       	ldd	r18, Z+3	; 0x03
    1760:	21 ff       	sbrs	r18, 1
    1762:	1b c0       	rjmp	.+54     	; 0x179a <puts+0x4c>
    1764:	8c 01       	movw	r16, r24
    1766:	d0 e0       	ldi	r29, 0x00	; 0
    1768:	c0 e0       	ldi	r28, 0x00	; 0
    176a:	f8 01       	movw	r30, r16
    176c:	81 91       	ld	r24, Z+
    176e:	8f 01       	movw	r16, r30
    1770:	60 91 b8 4d 	lds	r22, 0x4DB8	; 0x804db8 <__iob+0x2>
    1774:	70 91 b9 4d 	lds	r23, 0x4DB9	; 0x804db9 <__iob+0x3>
    1778:	db 01       	movw	r26, r22
    177a:	18 96       	adiw	r26, 0x08	; 8
    177c:	ed 91       	ld	r30, X+
    177e:	fc 91       	ld	r31, X
    1780:	19 97       	sbiw	r26, 0x09	; 9
    1782:	88 23       	and	r24, r24
    1784:	31 f0       	breq	.+12     	; 0x1792 <puts+0x44>
    1786:	09 95       	icall
    1788:	89 2b       	or	r24, r25
    178a:	79 f3       	breq	.-34     	; 0x176a <puts+0x1c>
    178c:	df ef       	ldi	r29, 0xFF	; 255
    178e:	cf ef       	ldi	r28, 0xFF	; 255
    1790:	ec cf       	rjmp	.-40     	; 0x176a <puts+0x1c>
    1792:	8a e0       	ldi	r24, 0x0A	; 10
    1794:	09 95       	icall
    1796:	89 2b       	or	r24, r25
    1798:	19 f0       	breq	.+6      	; 0x17a0 <puts+0x52>
    179a:	8f ef       	ldi	r24, 0xFF	; 255
    179c:	9f ef       	ldi	r25, 0xFF	; 255
    179e:	02 c0       	rjmp	.+4      	; 0x17a4 <puts+0x56>
    17a0:	8d 2f       	mov	r24, r29
    17a2:	9c 2f       	mov	r25, r28
    17a4:	df 91       	pop	r29
    17a6:	cf 91       	pop	r28
    17a8:	1f 91       	pop	r17
    17aa:	0f 91       	pop	r16
    17ac:	08 95       	ret

000017ae <vfprintf>:
    17ae:	2f 92       	push	r2
    17b0:	3f 92       	push	r3
    17b2:	4f 92       	push	r4
    17b4:	5f 92       	push	r5
    17b6:	6f 92       	push	r6
    17b8:	7f 92       	push	r7
    17ba:	8f 92       	push	r8
    17bc:	9f 92       	push	r9
    17be:	af 92       	push	r10
    17c0:	bf 92       	push	r11
    17c2:	cf 92       	push	r12
    17c4:	df 92       	push	r13
    17c6:	ef 92       	push	r14
    17c8:	ff 92       	push	r15
    17ca:	0f 93       	push	r16
    17cc:	1f 93       	push	r17
    17ce:	cf 93       	push	r28
    17d0:	df 93       	push	r29
    17d2:	cd b7       	in	r28, 0x3d	; 61
    17d4:	de b7       	in	r29, 0x3e	; 62
    17d6:	2b 97       	sbiw	r28, 0x0b	; 11
    17d8:	cd bf       	out	0x3d, r28	; 61
    17da:	de bf       	out	0x3e, r29	; 62
    17dc:	6c 01       	movw	r12, r24
    17de:	7b 01       	movw	r14, r22
    17e0:	8a 01       	movw	r16, r20
    17e2:	fc 01       	movw	r30, r24
    17e4:	16 82       	std	Z+6, r1	; 0x06
    17e6:	17 82       	std	Z+7, r1	; 0x07
    17e8:	83 81       	ldd	r24, Z+3	; 0x03
    17ea:	81 ff       	sbrs	r24, 1
    17ec:	cc c1       	rjmp	.+920    	; 0x1b86 <vfprintf+0x3d8>
    17ee:	ce 01       	movw	r24, r28
    17f0:	01 96       	adiw	r24, 0x01	; 1
    17f2:	3c 01       	movw	r6, r24
    17f4:	f6 01       	movw	r30, r12
    17f6:	93 81       	ldd	r25, Z+3	; 0x03
    17f8:	f7 01       	movw	r30, r14
    17fa:	93 fd       	sbrc	r25, 3
    17fc:	85 91       	lpm	r24, Z+
    17fe:	93 ff       	sbrs	r25, 3
    1800:	81 91       	ld	r24, Z+
    1802:	7f 01       	movw	r14, r30
    1804:	88 23       	and	r24, r24
    1806:	09 f4       	brne	.+2      	; 0x180a <vfprintf+0x5c>
    1808:	ba c1       	rjmp	.+884    	; 0x1b7e <vfprintf+0x3d0>
    180a:	85 32       	cpi	r24, 0x25	; 37
    180c:	39 f4       	brne	.+14     	; 0x181c <vfprintf+0x6e>
    180e:	93 fd       	sbrc	r25, 3
    1810:	85 91       	lpm	r24, Z+
    1812:	93 ff       	sbrs	r25, 3
    1814:	81 91       	ld	r24, Z+
    1816:	7f 01       	movw	r14, r30
    1818:	85 32       	cpi	r24, 0x25	; 37
    181a:	29 f4       	brne	.+10     	; 0x1826 <vfprintf+0x78>
    181c:	b6 01       	movw	r22, r12
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <fputc>
    1824:	e7 cf       	rjmp	.-50     	; 0x17f4 <vfprintf+0x46>
    1826:	91 2c       	mov	r9, r1
    1828:	21 2c       	mov	r2, r1
    182a:	31 2c       	mov	r3, r1
    182c:	ff e1       	ldi	r31, 0x1F	; 31
    182e:	f3 15       	cp	r31, r3
    1830:	d8 f0       	brcs	.+54     	; 0x1868 <vfprintf+0xba>
    1832:	8b 32       	cpi	r24, 0x2B	; 43
    1834:	79 f0       	breq	.+30     	; 0x1854 <vfprintf+0xa6>
    1836:	38 f4       	brcc	.+14     	; 0x1846 <vfprintf+0x98>
    1838:	80 32       	cpi	r24, 0x20	; 32
    183a:	79 f0       	breq	.+30     	; 0x185a <vfprintf+0xac>
    183c:	83 32       	cpi	r24, 0x23	; 35
    183e:	a1 f4       	brne	.+40     	; 0x1868 <vfprintf+0xba>
    1840:	23 2d       	mov	r18, r3
    1842:	20 61       	ori	r18, 0x10	; 16
    1844:	1d c0       	rjmp	.+58     	; 0x1880 <vfprintf+0xd2>
    1846:	8d 32       	cpi	r24, 0x2D	; 45
    1848:	61 f0       	breq	.+24     	; 0x1862 <vfprintf+0xb4>
    184a:	80 33       	cpi	r24, 0x30	; 48
    184c:	69 f4       	brne	.+26     	; 0x1868 <vfprintf+0xba>
    184e:	23 2d       	mov	r18, r3
    1850:	21 60       	ori	r18, 0x01	; 1
    1852:	16 c0       	rjmp	.+44     	; 0x1880 <vfprintf+0xd2>
    1854:	83 2d       	mov	r24, r3
    1856:	82 60       	ori	r24, 0x02	; 2
    1858:	38 2e       	mov	r3, r24
    185a:	e3 2d       	mov	r30, r3
    185c:	e4 60       	ori	r30, 0x04	; 4
    185e:	3e 2e       	mov	r3, r30
    1860:	2a c0       	rjmp	.+84     	; 0x18b6 <vfprintf+0x108>
    1862:	f3 2d       	mov	r31, r3
    1864:	f8 60       	ori	r31, 0x08	; 8
    1866:	1d c0       	rjmp	.+58     	; 0x18a2 <vfprintf+0xf4>
    1868:	37 fc       	sbrc	r3, 7
    186a:	2d c0       	rjmp	.+90     	; 0x18c6 <vfprintf+0x118>
    186c:	20 ed       	ldi	r18, 0xD0	; 208
    186e:	28 0f       	add	r18, r24
    1870:	2a 30       	cpi	r18, 0x0A	; 10
    1872:	40 f0       	brcs	.+16     	; 0x1884 <vfprintf+0xd6>
    1874:	8e 32       	cpi	r24, 0x2E	; 46
    1876:	b9 f4       	brne	.+46     	; 0x18a6 <vfprintf+0xf8>
    1878:	36 fc       	sbrc	r3, 6
    187a:	81 c1       	rjmp	.+770    	; 0x1b7e <vfprintf+0x3d0>
    187c:	23 2d       	mov	r18, r3
    187e:	20 64       	ori	r18, 0x40	; 64
    1880:	32 2e       	mov	r3, r18
    1882:	19 c0       	rjmp	.+50     	; 0x18b6 <vfprintf+0x108>
    1884:	36 fe       	sbrs	r3, 6
    1886:	06 c0       	rjmp	.+12     	; 0x1894 <vfprintf+0xe6>
    1888:	8a e0       	ldi	r24, 0x0A	; 10
    188a:	98 9e       	mul	r9, r24
    188c:	20 0d       	add	r18, r0
    188e:	11 24       	eor	r1, r1
    1890:	92 2e       	mov	r9, r18
    1892:	11 c0       	rjmp	.+34     	; 0x18b6 <vfprintf+0x108>
    1894:	ea e0       	ldi	r30, 0x0A	; 10
    1896:	2e 9e       	mul	r2, r30
    1898:	20 0d       	add	r18, r0
    189a:	11 24       	eor	r1, r1
    189c:	22 2e       	mov	r2, r18
    189e:	f3 2d       	mov	r31, r3
    18a0:	f0 62       	ori	r31, 0x20	; 32
    18a2:	3f 2e       	mov	r3, r31
    18a4:	08 c0       	rjmp	.+16     	; 0x18b6 <vfprintf+0x108>
    18a6:	8c 36       	cpi	r24, 0x6C	; 108
    18a8:	21 f4       	brne	.+8      	; 0x18b2 <vfprintf+0x104>
    18aa:	83 2d       	mov	r24, r3
    18ac:	80 68       	ori	r24, 0x80	; 128
    18ae:	38 2e       	mov	r3, r24
    18b0:	02 c0       	rjmp	.+4      	; 0x18b6 <vfprintf+0x108>
    18b2:	88 36       	cpi	r24, 0x68	; 104
    18b4:	41 f4       	brne	.+16     	; 0x18c6 <vfprintf+0x118>
    18b6:	f7 01       	movw	r30, r14
    18b8:	93 fd       	sbrc	r25, 3
    18ba:	85 91       	lpm	r24, Z+
    18bc:	93 ff       	sbrs	r25, 3
    18be:	81 91       	ld	r24, Z+
    18c0:	7f 01       	movw	r14, r30
    18c2:	81 11       	cpse	r24, r1
    18c4:	b3 cf       	rjmp	.-154    	; 0x182c <vfprintf+0x7e>
    18c6:	98 2f       	mov	r25, r24
    18c8:	9f 7d       	andi	r25, 0xDF	; 223
    18ca:	95 54       	subi	r25, 0x45	; 69
    18cc:	93 30       	cpi	r25, 0x03	; 3
    18ce:	28 f4       	brcc	.+10     	; 0x18da <vfprintf+0x12c>
    18d0:	0c 5f       	subi	r16, 0xFC	; 252
    18d2:	1f 4f       	sbci	r17, 0xFF	; 255
    18d4:	9f e3       	ldi	r25, 0x3F	; 63
    18d6:	99 83       	std	Y+1, r25	; 0x01
    18d8:	0d c0       	rjmp	.+26     	; 0x18f4 <vfprintf+0x146>
    18da:	83 36       	cpi	r24, 0x63	; 99
    18dc:	31 f0       	breq	.+12     	; 0x18ea <vfprintf+0x13c>
    18de:	83 37       	cpi	r24, 0x73	; 115
    18e0:	71 f0       	breq	.+28     	; 0x18fe <vfprintf+0x150>
    18e2:	83 35       	cpi	r24, 0x53	; 83
    18e4:	09 f0       	breq	.+2      	; 0x18e8 <vfprintf+0x13a>
    18e6:	59 c0       	rjmp	.+178    	; 0x199a <vfprintf+0x1ec>
    18e8:	21 c0       	rjmp	.+66     	; 0x192c <vfprintf+0x17e>
    18ea:	f8 01       	movw	r30, r16
    18ec:	80 81       	ld	r24, Z
    18ee:	89 83       	std	Y+1, r24	; 0x01
    18f0:	0e 5f       	subi	r16, 0xFE	; 254
    18f2:	1f 4f       	sbci	r17, 0xFF	; 255
    18f4:	88 24       	eor	r8, r8
    18f6:	83 94       	inc	r8
    18f8:	91 2c       	mov	r9, r1
    18fa:	53 01       	movw	r10, r6
    18fc:	13 c0       	rjmp	.+38     	; 0x1924 <vfprintf+0x176>
    18fe:	28 01       	movw	r4, r16
    1900:	f2 e0       	ldi	r31, 0x02	; 2
    1902:	4f 0e       	add	r4, r31
    1904:	51 1c       	adc	r5, r1
    1906:	f8 01       	movw	r30, r16
    1908:	a0 80       	ld	r10, Z
    190a:	b1 80       	ldd	r11, Z+1	; 0x01
    190c:	36 fe       	sbrs	r3, 6
    190e:	03 c0       	rjmp	.+6      	; 0x1916 <vfprintf+0x168>
    1910:	69 2d       	mov	r22, r9
    1912:	70 e0       	ldi	r23, 0x00	; 0
    1914:	02 c0       	rjmp	.+4      	; 0x191a <vfprintf+0x16c>
    1916:	6f ef       	ldi	r22, 0xFF	; 255
    1918:	7f ef       	ldi	r23, 0xFF	; 255
    191a:	c5 01       	movw	r24, r10
    191c:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <strnlen>
    1920:	4c 01       	movw	r8, r24
    1922:	82 01       	movw	r16, r4
    1924:	f3 2d       	mov	r31, r3
    1926:	ff 77       	andi	r31, 0x7F	; 127
    1928:	3f 2e       	mov	r3, r31
    192a:	16 c0       	rjmp	.+44     	; 0x1958 <vfprintf+0x1aa>
    192c:	28 01       	movw	r4, r16
    192e:	22 e0       	ldi	r18, 0x02	; 2
    1930:	42 0e       	add	r4, r18
    1932:	51 1c       	adc	r5, r1
    1934:	f8 01       	movw	r30, r16
    1936:	a0 80       	ld	r10, Z
    1938:	b1 80       	ldd	r11, Z+1	; 0x01
    193a:	36 fe       	sbrs	r3, 6
    193c:	03 c0       	rjmp	.+6      	; 0x1944 <vfprintf+0x196>
    193e:	69 2d       	mov	r22, r9
    1940:	70 e0       	ldi	r23, 0x00	; 0
    1942:	02 c0       	rjmp	.+4      	; 0x1948 <vfprintf+0x19a>
    1944:	6f ef       	ldi	r22, 0xFF	; 255
    1946:	7f ef       	ldi	r23, 0xFF	; 255
    1948:	c5 01       	movw	r24, r10
    194a:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <strnlen_P>
    194e:	4c 01       	movw	r8, r24
    1950:	f3 2d       	mov	r31, r3
    1952:	f0 68       	ori	r31, 0x80	; 128
    1954:	3f 2e       	mov	r3, r31
    1956:	82 01       	movw	r16, r4
    1958:	33 fc       	sbrc	r3, 3
    195a:	1b c0       	rjmp	.+54     	; 0x1992 <vfprintf+0x1e4>
    195c:	82 2d       	mov	r24, r2
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	88 16       	cp	r8, r24
    1962:	99 06       	cpc	r9, r25
    1964:	b0 f4       	brcc	.+44     	; 0x1992 <vfprintf+0x1e4>
    1966:	b6 01       	movw	r22, r12
    1968:	80 e2       	ldi	r24, 0x20	; 32
    196a:	90 e0       	ldi	r25, 0x00	; 0
    196c:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <fputc>
    1970:	2a 94       	dec	r2
    1972:	f4 cf       	rjmp	.-24     	; 0x195c <vfprintf+0x1ae>
    1974:	f5 01       	movw	r30, r10
    1976:	37 fc       	sbrc	r3, 7
    1978:	85 91       	lpm	r24, Z+
    197a:	37 fe       	sbrs	r3, 7
    197c:	81 91       	ld	r24, Z+
    197e:	5f 01       	movw	r10, r30
    1980:	b6 01       	movw	r22, r12
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <fputc>
    1988:	21 10       	cpse	r2, r1
    198a:	2a 94       	dec	r2
    198c:	21 e0       	ldi	r18, 0x01	; 1
    198e:	82 1a       	sub	r8, r18
    1990:	91 08       	sbc	r9, r1
    1992:	81 14       	cp	r8, r1
    1994:	91 04       	cpc	r9, r1
    1996:	71 f7       	brne	.-36     	; 0x1974 <vfprintf+0x1c6>
    1998:	e8 c0       	rjmp	.+464    	; 0x1b6a <vfprintf+0x3bc>
    199a:	84 36       	cpi	r24, 0x64	; 100
    199c:	11 f0       	breq	.+4      	; 0x19a2 <vfprintf+0x1f4>
    199e:	89 36       	cpi	r24, 0x69	; 105
    19a0:	41 f5       	brne	.+80     	; 0x19f2 <vfprintf+0x244>
    19a2:	f8 01       	movw	r30, r16
    19a4:	37 fe       	sbrs	r3, 7
    19a6:	07 c0       	rjmp	.+14     	; 0x19b6 <vfprintf+0x208>
    19a8:	60 81       	ld	r22, Z
    19aa:	71 81       	ldd	r23, Z+1	; 0x01
    19ac:	82 81       	ldd	r24, Z+2	; 0x02
    19ae:	93 81       	ldd	r25, Z+3	; 0x03
    19b0:	0c 5f       	subi	r16, 0xFC	; 252
    19b2:	1f 4f       	sbci	r17, 0xFF	; 255
    19b4:	08 c0       	rjmp	.+16     	; 0x19c6 <vfprintf+0x218>
    19b6:	60 81       	ld	r22, Z
    19b8:	71 81       	ldd	r23, Z+1	; 0x01
    19ba:	07 2e       	mov	r0, r23
    19bc:	00 0c       	add	r0, r0
    19be:	88 0b       	sbc	r24, r24
    19c0:	99 0b       	sbc	r25, r25
    19c2:	0e 5f       	subi	r16, 0xFE	; 254
    19c4:	1f 4f       	sbci	r17, 0xFF	; 255
    19c6:	f3 2d       	mov	r31, r3
    19c8:	ff 76       	andi	r31, 0x6F	; 111
    19ca:	3f 2e       	mov	r3, r31
    19cc:	97 ff       	sbrs	r25, 7
    19ce:	09 c0       	rjmp	.+18     	; 0x19e2 <vfprintf+0x234>
    19d0:	90 95       	com	r25
    19d2:	80 95       	com	r24
    19d4:	70 95       	com	r23
    19d6:	61 95       	neg	r22
    19d8:	7f 4f       	sbci	r23, 0xFF	; 255
    19da:	8f 4f       	sbci	r24, 0xFF	; 255
    19dc:	9f 4f       	sbci	r25, 0xFF	; 255
    19de:	f0 68       	ori	r31, 0x80	; 128
    19e0:	3f 2e       	mov	r3, r31
    19e2:	2a e0       	ldi	r18, 0x0A	; 10
    19e4:	30 e0       	ldi	r19, 0x00	; 0
    19e6:	a3 01       	movw	r20, r6
    19e8:	0e 94 2d 0e 	call	0x1c5a	; 0x1c5a <__ultoa_invert>
    19ec:	88 2e       	mov	r8, r24
    19ee:	86 18       	sub	r8, r6
    19f0:	45 c0       	rjmp	.+138    	; 0x1a7c <vfprintf+0x2ce>
    19f2:	85 37       	cpi	r24, 0x75	; 117
    19f4:	31 f4       	brne	.+12     	; 0x1a02 <vfprintf+0x254>
    19f6:	23 2d       	mov	r18, r3
    19f8:	2f 7e       	andi	r18, 0xEF	; 239
    19fa:	b2 2e       	mov	r11, r18
    19fc:	2a e0       	ldi	r18, 0x0A	; 10
    19fe:	30 e0       	ldi	r19, 0x00	; 0
    1a00:	25 c0       	rjmp	.+74     	; 0x1a4c <vfprintf+0x29e>
    1a02:	93 2d       	mov	r25, r3
    1a04:	99 7f       	andi	r25, 0xF9	; 249
    1a06:	b9 2e       	mov	r11, r25
    1a08:	8f 36       	cpi	r24, 0x6F	; 111
    1a0a:	c1 f0       	breq	.+48     	; 0x1a3c <vfprintf+0x28e>
    1a0c:	18 f4       	brcc	.+6      	; 0x1a14 <vfprintf+0x266>
    1a0e:	88 35       	cpi	r24, 0x58	; 88
    1a10:	79 f0       	breq	.+30     	; 0x1a30 <vfprintf+0x282>
    1a12:	b5 c0       	rjmp	.+362    	; 0x1b7e <vfprintf+0x3d0>
    1a14:	80 37       	cpi	r24, 0x70	; 112
    1a16:	19 f0       	breq	.+6      	; 0x1a1e <vfprintf+0x270>
    1a18:	88 37       	cpi	r24, 0x78	; 120
    1a1a:	21 f0       	breq	.+8      	; 0x1a24 <vfprintf+0x276>
    1a1c:	b0 c0       	rjmp	.+352    	; 0x1b7e <vfprintf+0x3d0>
    1a1e:	e9 2f       	mov	r30, r25
    1a20:	e0 61       	ori	r30, 0x10	; 16
    1a22:	be 2e       	mov	r11, r30
    1a24:	b4 fe       	sbrs	r11, 4
    1a26:	0d c0       	rjmp	.+26     	; 0x1a42 <vfprintf+0x294>
    1a28:	fb 2d       	mov	r31, r11
    1a2a:	f4 60       	ori	r31, 0x04	; 4
    1a2c:	bf 2e       	mov	r11, r31
    1a2e:	09 c0       	rjmp	.+18     	; 0x1a42 <vfprintf+0x294>
    1a30:	34 fe       	sbrs	r3, 4
    1a32:	0a c0       	rjmp	.+20     	; 0x1a48 <vfprintf+0x29a>
    1a34:	29 2f       	mov	r18, r25
    1a36:	26 60       	ori	r18, 0x06	; 6
    1a38:	b2 2e       	mov	r11, r18
    1a3a:	06 c0       	rjmp	.+12     	; 0x1a48 <vfprintf+0x29a>
    1a3c:	28 e0       	ldi	r18, 0x08	; 8
    1a3e:	30 e0       	ldi	r19, 0x00	; 0
    1a40:	05 c0       	rjmp	.+10     	; 0x1a4c <vfprintf+0x29e>
    1a42:	20 e1       	ldi	r18, 0x10	; 16
    1a44:	30 e0       	ldi	r19, 0x00	; 0
    1a46:	02 c0       	rjmp	.+4      	; 0x1a4c <vfprintf+0x29e>
    1a48:	20 e1       	ldi	r18, 0x10	; 16
    1a4a:	32 e0       	ldi	r19, 0x02	; 2
    1a4c:	f8 01       	movw	r30, r16
    1a4e:	b7 fe       	sbrs	r11, 7
    1a50:	07 c0       	rjmp	.+14     	; 0x1a60 <vfprintf+0x2b2>
    1a52:	60 81       	ld	r22, Z
    1a54:	71 81       	ldd	r23, Z+1	; 0x01
    1a56:	82 81       	ldd	r24, Z+2	; 0x02
    1a58:	93 81       	ldd	r25, Z+3	; 0x03
    1a5a:	0c 5f       	subi	r16, 0xFC	; 252
    1a5c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a5e:	06 c0       	rjmp	.+12     	; 0x1a6c <vfprintf+0x2be>
    1a60:	60 81       	ld	r22, Z
    1a62:	71 81       	ldd	r23, Z+1	; 0x01
    1a64:	80 e0       	ldi	r24, 0x00	; 0
    1a66:	90 e0       	ldi	r25, 0x00	; 0
    1a68:	0e 5f       	subi	r16, 0xFE	; 254
    1a6a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a6c:	a3 01       	movw	r20, r6
    1a6e:	0e 94 2d 0e 	call	0x1c5a	; 0x1c5a <__ultoa_invert>
    1a72:	88 2e       	mov	r8, r24
    1a74:	86 18       	sub	r8, r6
    1a76:	fb 2d       	mov	r31, r11
    1a78:	ff 77       	andi	r31, 0x7F	; 127
    1a7a:	3f 2e       	mov	r3, r31
    1a7c:	36 fe       	sbrs	r3, 6
    1a7e:	0d c0       	rjmp	.+26     	; 0x1a9a <vfprintf+0x2ec>
    1a80:	23 2d       	mov	r18, r3
    1a82:	2e 7f       	andi	r18, 0xFE	; 254
    1a84:	a2 2e       	mov	r10, r18
    1a86:	89 14       	cp	r8, r9
    1a88:	58 f4       	brcc	.+22     	; 0x1aa0 <vfprintf+0x2f2>
    1a8a:	34 fe       	sbrs	r3, 4
    1a8c:	0b c0       	rjmp	.+22     	; 0x1aa4 <vfprintf+0x2f6>
    1a8e:	32 fc       	sbrc	r3, 2
    1a90:	09 c0       	rjmp	.+18     	; 0x1aa4 <vfprintf+0x2f6>
    1a92:	83 2d       	mov	r24, r3
    1a94:	8e 7e       	andi	r24, 0xEE	; 238
    1a96:	a8 2e       	mov	r10, r24
    1a98:	05 c0       	rjmp	.+10     	; 0x1aa4 <vfprintf+0x2f6>
    1a9a:	b8 2c       	mov	r11, r8
    1a9c:	a3 2c       	mov	r10, r3
    1a9e:	03 c0       	rjmp	.+6      	; 0x1aa6 <vfprintf+0x2f8>
    1aa0:	b8 2c       	mov	r11, r8
    1aa2:	01 c0       	rjmp	.+2      	; 0x1aa6 <vfprintf+0x2f8>
    1aa4:	b9 2c       	mov	r11, r9
    1aa6:	a4 fe       	sbrs	r10, 4
    1aa8:	0f c0       	rjmp	.+30     	; 0x1ac8 <vfprintf+0x31a>
    1aaa:	fe 01       	movw	r30, r28
    1aac:	e8 0d       	add	r30, r8
    1aae:	f1 1d       	adc	r31, r1
    1ab0:	80 81       	ld	r24, Z
    1ab2:	80 33       	cpi	r24, 0x30	; 48
    1ab4:	21 f4       	brne	.+8      	; 0x1abe <vfprintf+0x310>
    1ab6:	9a 2d       	mov	r25, r10
    1ab8:	99 7e       	andi	r25, 0xE9	; 233
    1aba:	a9 2e       	mov	r10, r25
    1abc:	09 c0       	rjmp	.+18     	; 0x1ad0 <vfprintf+0x322>
    1abe:	a2 fe       	sbrs	r10, 2
    1ac0:	06 c0       	rjmp	.+12     	; 0x1ace <vfprintf+0x320>
    1ac2:	b3 94       	inc	r11
    1ac4:	b3 94       	inc	r11
    1ac6:	04 c0       	rjmp	.+8      	; 0x1ad0 <vfprintf+0x322>
    1ac8:	8a 2d       	mov	r24, r10
    1aca:	86 78       	andi	r24, 0x86	; 134
    1acc:	09 f0       	breq	.+2      	; 0x1ad0 <vfprintf+0x322>
    1ace:	b3 94       	inc	r11
    1ad0:	a3 fc       	sbrc	r10, 3
    1ad2:	11 c0       	rjmp	.+34     	; 0x1af6 <vfprintf+0x348>
    1ad4:	a0 fe       	sbrs	r10, 0
    1ad6:	06 c0       	rjmp	.+12     	; 0x1ae4 <vfprintf+0x336>
    1ad8:	b2 14       	cp	r11, r2
    1ada:	88 f4       	brcc	.+34     	; 0x1afe <vfprintf+0x350>
    1adc:	28 0c       	add	r2, r8
    1ade:	92 2c       	mov	r9, r2
    1ae0:	9b 18       	sub	r9, r11
    1ae2:	0e c0       	rjmp	.+28     	; 0x1b00 <vfprintf+0x352>
    1ae4:	b2 14       	cp	r11, r2
    1ae6:	60 f4       	brcc	.+24     	; 0x1b00 <vfprintf+0x352>
    1ae8:	b6 01       	movw	r22, r12
    1aea:	80 e2       	ldi	r24, 0x20	; 32
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <fputc>
    1af2:	b3 94       	inc	r11
    1af4:	f7 cf       	rjmp	.-18     	; 0x1ae4 <vfprintf+0x336>
    1af6:	b2 14       	cp	r11, r2
    1af8:	18 f4       	brcc	.+6      	; 0x1b00 <vfprintf+0x352>
    1afa:	2b 18       	sub	r2, r11
    1afc:	02 c0       	rjmp	.+4      	; 0x1b02 <vfprintf+0x354>
    1afe:	98 2c       	mov	r9, r8
    1b00:	21 2c       	mov	r2, r1
    1b02:	a4 fe       	sbrs	r10, 4
    1b04:	10 c0       	rjmp	.+32     	; 0x1b26 <vfprintf+0x378>
    1b06:	b6 01       	movw	r22, r12
    1b08:	80 e3       	ldi	r24, 0x30	; 48
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <fputc>
    1b10:	a2 fe       	sbrs	r10, 2
    1b12:	17 c0       	rjmp	.+46     	; 0x1b42 <vfprintf+0x394>
    1b14:	a1 fc       	sbrc	r10, 1
    1b16:	03 c0       	rjmp	.+6      	; 0x1b1e <vfprintf+0x370>
    1b18:	88 e7       	ldi	r24, 0x78	; 120
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	02 c0       	rjmp	.+4      	; 0x1b22 <vfprintf+0x374>
    1b1e:	88 e5       	ldi	r24, 0x58	; 88
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	b6 01       	movw	r22, r12
    1b24:	0c c0       	rjmp	.+24     	; 0x1b3e <vfprintf+0x390>
    1b26:	8a 2d       	mov	r24, r10
    1b28:	86 78       	andi	r24, 0x86	; 134
    1b2a:	59 f0       	breq	.+22     	; 0x1b42 <vfprintf+0x394>
    1b2c:	a1 fe       	sbrs	r10, 1
    1b2e:	02 c0       	rjmp	.+4      	; 0x1b34 <vfprintf+0x386>
    1b30:	8b e2       	ldi	r24, 0x2B	; 43
    1b32:	01 c0       	rjmp	.+2      	; 0x1b36 <vfprintf+0x388>
    1b34:	80 e2       	ldi	r24, 0x20	; 32
    1b36:	a7 fc       	sbrc	r10, 7
    1b38:	8d e2       	ldi	r24, 0x2D	; 45
    1b3a:	b6 01       	movw	r22, r12
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <fputc>
    1b42:	89 14       	cp	r8, r9
    1b44:	38 f4       	brcc	.+14     	; 0x1b54 <vfprintf+0x3a6>
    1b46:	b6 01       	movw	r22, r12
    1b48:	80 e3       	ldi	r24, 0x30	; 48
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <fputc>
    1b50:	9a 94       	dec	r9
    1b52:	f7 cf       	rjmp	.-18     	; 0x1b42 <vfprintf+0x394>
    1b54:	8a 94       	dec	r8
    1b56:	f3 01       	movw	r30, r6
    1b58:	e8 0d       	add	r30, r8
    1b5a:	f1 1d       	adc	r31, r1
    1b5c:	80 81       	ld	r24, Z
    1b5e:	b6 01       	movw	r22, r12
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <fputc>
    1b66:	81 10       	cpse	r8, r1
    1b68:	f5 cf       	rjmp	.-22     	; 0x1b54 <vfprintf+0x3a6>
    1b6a:	22 20       	and	r2, r2
    1b6c:	09 f4       	brne	.+2      	; 0x1b70 <vfprintf+0x3c2>
    1b6e:	42 ce       	rjmp	.-892    	; 0x17f4 <vfprintf+0x46>
    1b70:	b6 01       	movw	r22, r12
    1b72:	80 e2       	ldi	r24, 0x20	; 32
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <fputc>
    1b7a:	2a 94       	dec	r2
    1b7c:	f6 cf       	rjmp	.-20     	; 0x1b6a <vfprintf+0x3bc>
    1b7e:	f6 01       	movw	r30, r12
    1b80:	86 81       	ldd	r24, Z+6	; 0x06
    1b82:	97 81       	ldd	r25, Z+7	; 0x07
    1b84:	02 c0       	rjmp	.+4      	; 0x1b8a <vfprintf+0x3dc>
    1b86:	8f ef       	ldi	r24, 0xFF	; 255
    1b88:	9f ef       	ldi	r25, 0xFF	; 255
    1b8a:	2b 96       	adiw	r28, 0x0b	; 11
    1b8c:	cd bf       	out	0x3d, r28	; 61
    1b8e:	de bf       	out	0x3e, r29	; 62
    1b90:	df 91       	pop	r29
    1b92:	cf 91       	pop	r28
    1b94:	1f 91       	pop	r17
    1b96:	0f 91       	pop	r16
    1b98:	ff 90       	pop	r15
    1b9a:	ef 90       	pop	r14
    1b9c:	df 90       	pop	r13
    1b9e:	cf 90       	pop	r12
    1ba0:	bf 90       	pop	r11
    1ba2:	af 90       	pop	r10
    1ba4:	9f 90       	pop	r9
    1ba6:	8f 90       	pop	r8
    1ba8:	7f 90       	pop	r7
    1baa:	6f 90       	pop	r6
    1bac:	5f 90       	pop	r5
    1bae:	4f 90       	pop	r4
    1bb0:	3f 90       	pop	r3
    1bb2:	2f 90       	pop	r2
    1bb4:	08 95       	ret

00001bb6 <strnlen_P>:
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	05 90       	lpm	r0, Z+
    1bba:	61 50       	subi	r22, 0x01	; 1
    1bbc:	70 40       	sbci	r23, 0x00	; 0
    1bbe:	01 10       	cpse	r0, r1
    1bc0:	d8 f7       	brcc	.-10     	; 0x1bb8 <strnlen_P+0x2>
    1bc2:	80 95       	com	r24
    1bc4:	90 95       	com	r25
    1bc6:	8e 0f       	add	r24, r30
    1bc8:	9f 1f       	adc	r25, r31
    1bca:	08 95       	ret

00001bcc <strnlen>:
    1bcc:	fc 01       	movw	r30, r24
    1bce:	61 50       	subi	r22, 0x01	; 1
    1bd0:	70 40       	sbci	r23, 0x00	; 0
    1bd2:	01 90       	ld	r0, Z+
    1bd4:	01 10       	cpse	r0, r1
    1bd6:	d8 f7       	brcc	.-10     	; 0x1bce <strnlen+0x2>
    1bd8:	80 95       	com	r24
    1bda:	90 95       	com	r25
    1bdc:	8e 0f       	add	r24, r30
    1bde:	9f 1f       	adc	r25, r31
    1be0:	08 95       	ret

00001be2 <fputc>:
    1be2:	0f 93       	push	r16
    1be4:	1f 93       	push	r17
    1be6:	cf 93       	push	r28
    1be8:	df 93       	push	r29
    1bea:	fb 01       	movw	r30, r22
    1bec:	23 81       	ldd	r18, Z+3	; 0x03
    1bee:	21 fd       	sbrc	r18, 1
    1bf0:	03 c0       	rjmp	.+6      	; 0x1bf8 <fputc+0x16>
    1bf2:	8f ef       	ldi	r24, 0xFF	; 255
    1bf4:	9f ef       	ldi	r25, 0xFF	; 255
    1bf6:	2c c0       	rjmp	.+88     	; 0x1c50 <fputc+0x6e>
    1bf8:	22 ff       	sbrs	r18, 2
    1bfa:	16 c0       	rjmp	.+44     	; 0x1c28 <fputc+0x46>
    1bfc:	46 81       	ldd	r20, Z+6	; 0x06
    1bfe:	57 81       	ldd	r21, Z+7	; 0x07
    1c00:	24 81       	ldd	r18, Z+4	; 0x04
    1c02:	35 81       	ldd	r19, Z+5	; 0x05
    1c04:	42 17       	cp	r20, r18
    1c06:	53 07       	cpc	r21, r19
    1c08:	44 f4       	brge	.+16     	; 0x1c1a <fputc+0x38>
    1c0a:	a0 81       	ld	r26, Z
    1c0c:	b1 81       	ldd	r27, Z+1	; 0x01
    1c0e:	9d 01       	movw	r18, r26
    1c10:	2f 5f       	subi	r18, 0xFF	; 255
    1c12:	3f 4f       	sbci	r19, 0xFF	; 255
    1c14:	20 83       	st	Z, r18
    1c16:	31 83       	std	Z+1, r19	; 0x01
    1c18:	8c 93       	st	X, r24
    1c1a:	26 81       	ldd	r18, Z+6	; 0x06
    1c1c:	37 81       	ldd	r19, Z+7	; 0x07
    1c1e:	2f 5f       	subi	r18, 0xFF	; 255
    1c20:	3f 4f       	sbci	r19, 0xFF	; 255
    1c22:	26 83       	std	Z+6, r18	; 0x06
    1c24:	37 83       	std	Z+7, r19	; 0x07
    1c26:	14 c0       	rjmp	.+40     	; 0x1c50 <fputc+0x6e>
    1c28:	8b 01       	movw	r16, r22
    1c2a:	ec 01       	movw	r28, r24
    1c2c:	fb 01       	movw	r30, r22
    1c2e:	00 84       	ldd	r0, Z+8	; 0x08
    1c30:	f1 85       	ldd	r31, Z+9	; 0x09
    1c32:	e0 2d       	mov	r30, r0
    1c34:	09 95       	icall
    1c36:	89 2b       	or	r24, r25
    1c38:	e1 f6       	brne	.-72     	; 0x1bf2 <fputc+0x10>
    1c3a:	d8 01       	movw	r26, r16
    1c3c:	16 96       	adiw	r26, 0x06	; 6
    1c3e:	8d 91       	ld	r24, X+
    1c40:	9c 91       	ld	r25, X
    1c42:	17 97       	sbiw	r26, 0x07	; 7
    1c44:	01 96       	adiw	r24, 0x01	; 1
    1c46:	16 96       	adiw	r26, 0x06	; 6
    1c48:	8d 93       	st	X+, r24
    1c4a:	9c 93       	st	X, r25
    1c4c:	17 97       	sbiw	r26, 0x07	; 7
    1c4e:	ce 01       	movw	r24, r28
    1c50:	df 91       	pop	r29
    1c52:	cf 91       	pop	r28
    1c54:	1f 91       	pop	r17
    1c56:	0f 91       	pop	r16
    1c58:	08 95       	ret

00001c5a <__ultoa_invert>:
    1c5a:	fa 01       	movw	r30, r20
    1c5c:	aa 27       	eor	r26, r26
    1c5e:	28 30       	cpi	r18, 0x08	; 8
    1c60:	51 f1       	breq	.+84     	; 0x1cb6 <__ultoa_invert+0x5c>
    1c62:	20 31       	cpi	r18, 0x10	; 16
    1c64:	81 f1       	breq	.+96     	; 0x1cc6 <__ultoa_invert+0x6c>
    1c66:	e8 94       	clt
    1c68:	6f 93       	push	r22
    1c6a:	6e 7f       	andi	r22, 0xFE	; 254
    1c6c:	6e 5f       	subi	r22, 0xFE	; 254
    1c6e:	7f 4f       	sbci	r23, 0xFF	; 255
    1c70:	8f 4f       	sbci	r24, 0xFF	; 255
    1c72:	9f 4f       	sbci	r25, 0xFF	; 255
    1c74:	af 4f       	sbci	r26, 0xFF	; 255
    1c76:	b1 e0       	ldi	r27, 0x01	; 1
    1c78:	3e d0       	rcall	.+124    	; 0x1cf6 <__ultoa_invert+0x9c>
    1c7a:	b4 e0       	ldi	r27, 0x04	; 4
    1c7c:	3c d0       	rcall	.+120    	; 0x1cf6 <__ultoa_invert+0x9c>
    1c7e:	67 0f       	add	r22, r23
    1c80:	78 1f       	adc	r23, r24
    1c82:	89 1f       	adc	r24, r25
    1c84:	9a 1f       	adc	r25, r26
    1c86:	a1 1d       	adc	r26, r1
    1c88:	68 0f       	add	r22, r24
    1c8a:	79 1f       	adc	r23, r25
    1c8c:	8a 1f       	adc	r24, r26
    1c8e:	91 1d       	adc	r25, r1
    1c90:	a1 1d       	adc	r26, r1
    1c92:	6a 0f       	add	r22, r26
    1c94:	71 1d       	adc	r23, r1
    1c96:	81 1d       	adc	r24, r1
    1c98:	91 1d       	adc	r25, r1
    1c9a:	a1 1d       	adc	r26, r1
    1c9c:	20 d0       	rcall	.+64     	; 0x1cde <__ultoa_invert+0x84>
    1c9e:	09 f4       	brne	.+2      	; 0x1ca2 <__ultoa_invert+0x48>
    1ca0:	68 94       	set
    1ca2:	3f 91       	pop	r19
    1ca4:	2a e0       	ldi	r18, 0x0A	; 10
    1ca6:	26 9f       	mul	r18, r22
    1ca8:	11 24       	eor	r1, r1
    1caa:	30 19       	sub	r19, r0
    1cac:	30 5d       	subi	r19, 0xD0	; 208
    1cae:	31 93       	st	Z+, r19
    1cb0:	de f6       	brtc	.-74     	; 0x1c68 <__ultoa_invert+0xe>
    1cb2:	cf 01       	movw	r24, r30
    1cb4:	08 95       	ret
    1cb6:	46 2f       	mov	r20, r22
    1cb8:	47 70       	andi	r20, 0x07	; 7
    1cba:	40 5d       	subi	r20, 0xD0	; 208
    1cbc:	41 93       	st	Z+, r20
    1cbe:	b3 e0       	ldi	r27, 0x03	; 3
    1cc0:	0f d0       	rcall	.+30     	; 0x1ce0 <__ultoa_invert+0x86>
    1cc2:	c9 f7       	brne	.-14     	; 0x1cb6 <__ultoa_invert+0x5c>
    1cc4:	f6 cf       	rjmp	.-20     	; 0x1cb2 <__ultoa_invert+0x58>
    1cc6:	46 2f       	mov	r20, r22
    1cc8:	4f 70       	andi	r20, 0x0F	; 15
    1cca:	40 5d       	subi	r20, 0xD0	; 208
    1ccc:	4a 33       	cpi	r20, 0x3A	; 58
    1cce:	18 f0       	brcs	.+6      	; 0x1cd6 <__ultoa_invert+0x7c>
    1cd0:	49 5d       	subi	r20, 0xD9	; 217
    1cd2:	31 fd       	sbrc	r19, 1
    1cd4:	40 52       	subi	r20, 0x20	; 32
    1cd6:	41 93       	st	Z+, r20
    1cd8:	02 d0       	rcall	.+4      	; 0x1cde <__ultoa_invert+0x84>
    1cda:	a9 f7       	brne	.-22     	; 0x1cc6 <__ultoa_invert+0x6c>
    1cdc:	ea cf       	rjmp	.-44     	; 0x1cb2 <__ultoa_invert+0x58>
    1cde:	b4 e0       	ldi	r27, 0x04	; 4
    1ce0:	a6 95       	lsr	r26
    1ce2:	97 95       	ror	r25
    1ce4:	87 95       	ror	r24
    1ce6:	77 95       	ror	r23
    1ce8:	67 95       	ror	r22
    1cea:	ba 95       	dec	r27
    1cec:	c9 f7       	brne	.-14     	; 0x1ce0 <__ultoa_invert+0x86>
    1cee:	00 97       	sbiw	r24, 0x00	; 0
    1cf0:	61 05       	cpc	r22, r1
    1cf2:	71 05       	cpc	r23, r1
    1cf4:	08 95       	ret
    1cf6:	9b 01       	movw	r18, r22
    1cf8:	ac 01       	movw	r20, r24
    1cfa:	0a 2e       	mov	r0, r26
    1cfc:	06 94       	lsr	r0
    1cfe:	57 95       	ror	r21
    1d00:	47 95       	ror	r20
    1d02:	37 95       	ror	r19
    1d04:	27 95       	ror	r18
    1d06:	ba 95       	dec	r27
    1d08:	c9 f7       	brne	.-14     	; 0x1cfc <__ultoa_invert+0xa2>
    1d0a:	62 0f       	add	r22, r18
    1d0c:	73 1f       	adc	r23, r19
    1d0e:	84 1f       	adc	r24, r20
    1d10:	95 1f       	adc	r25, r21
    1d12:	a0 1d       	adc	r26, r0
    1d14:	08 95       	ret

00001d16 <eeprom_read_word>:
    1d16:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <eeprom_mapen>
    1d1a:	80 81       	ld	r24, Z
    1d1c:	91 81       	ldd	r25, Z+1	; 0x01
    1d1e:	08 95       	ret

00001d20 <eeprom_read_byte>:
    1d20:	03 d0       	rcall	.+6      	; 0x1d28 <eeprom_mapen>
    1d22:	80 81       	ld	r24, Z
    1d24:	99 27       	eor	r25, r25
    1d26:	08 95       	ret

00001d28 <eeprom_mapen>:
    1d28:	fc 01       	movw	r30, r24
    1d2a:	e0 50       	subi	r30, 0x00	; 0
    1d2c:	fc 4e       	sbci	r31, 0xEC	; 236
    1d2e:	08 95       	ret

00001d30 <_exit>:
    1d30:	f8 94       	cli

00001d32 <__stop_program>:
    1d32:	ff cf       	rjmp	.-2      	; 0x1d32 <__stop_program>
