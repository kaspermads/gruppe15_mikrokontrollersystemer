
menysystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000ba4  00804000  00001cee  00001da2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cee  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000226  00804ba4  00804ba4  00002946  2**0
                  ALLOC
  3 .eeprom       00000004  00810000  00810000  00002946  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  0000294a  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000029a8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000001c0  00000000  00000000  000029e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000626e  00000000  00000000  00002ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000323c  00000000  00000000  00008e16  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000013e6  00000000  00000000  0000c052  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000658  00000000  00000000  0000d438  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00003d7b  00000000  00000000  0000da90  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001905  00000000  00000000  0001180b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001a0  00000000  00000000  00013110  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 00 	jmp	0x10e	; 0x10e <__ctors_end>
       4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      10:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      14:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      18:	0c 94 09 05 	jmp	0xa12	; 0xa12 <__vector_6>
      1c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      20:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      24:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      28:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      2c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      30:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      34:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      38:	0c 94 23 05 	jmp	0xa46	; 0xa46 <__vector_14>
      3c:	0c 94 5a 05 	jmp	0xab4	; 0xab4 <__vector_15>
      40:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      44:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      48:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      4c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      50:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      54:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      58:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      5c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      60:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      64:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      68:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      6c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      70:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      74:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      78:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      7c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      80:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      84:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      88:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      8c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      90:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      94:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      98:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      9c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      a0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      a4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      a8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      ac:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      b0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      b4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      b8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      bc:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      c0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      c4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      c8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      cc:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      d0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      d4:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__vector_53>
      d8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      dc:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      e0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      e4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      e8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      ec:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      f0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      f4:	2b 07       	cpc	r18, r27
      f6:	35 07       	cpc	r19, r21
      f8:	3f 07       	cpc	r19, r31
      fa:	49 07       	cpc	r20, r25
      fc:	53 07       	cpc	r21, r19
      fe:	5c 07       	cpc	r21, r28
     100:	6c 07       	cpc	r22, r28
     102:	75 07       	cpc	r23, r21
     104:	88 07       	cpc	r24, r24
     106:	a9 07       	cpc	r26, r25
     108:	a9 07       	cpc	r26, r25
     10a:	a9 07       	cpc	r26, r25
     10c:	8f 07       	cpc	r24, r31

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	cd bf       	out	0x3d, r28	; 61
     116:	df e7       	ldi	r29, 0x7F	; 127
     118:	de bf       	out	0x3e, r29	; 62

0000011a <__do_copy_data>:
     11a:	1b e4       	ldi	r17, 0x4B	; 75
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b0 e4       	ldi	r27, 0x40	; 64
     120:	ee ee       	ldi	r30, 0xEE	; 238
     122:	fc e1       	ldi	r31, 0x1C	; 28
     124:	00 e0       	ldi	r16, 0x00	; 0
     126:	0b bf       	out	0x3b, r16	; 59
     128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x14>
     12a:	07 90       	elpm	r0, Z+
     12c:	0d 92       	st	X+, r0
     12e:	a4 3a       	cpi	r26, 0xA4	; 164
     130:	b1 07       	cpc	r27, r17
     132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x10>

00000134 <__do_clear_bss>:
     134:	2d e4       	ldi	r18, 0x4D	; 77
     136:	a4 ea       	ldi	r26, 0xA4	; 164
     138:	bb e4       	ldi	r27, 0x4B	; 75
     13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
     13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
     13e:	aa 3c       	cpi	r26, 0xCA	; 202
     140:	b2 07       	cpc	r27, r18
     142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
     144:	0e 94 a4 08 	call	0x1148	; 0x1148 <main>
     148:	0c 94 75 0e 	jmp	0x1cea	; 0x1cea <_exit>

0000014c <__bad_interrupt>:
     14c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000150 <TWI0_M_init>:
	
	status_eeprom();
	
	read_value = eeprom_read_word((uint16_t*) address_fan1);
	return read_value;
}
     150:	e0 e0       	ldi	r30, 0x00	; 0
     152:	f4 e0       	ldi	r31, 0x04	; 4
     154:	8c e0       	ldi	r24, 0x0C	; 12
     156:	81 83       	std	Z+1, r24	; 0x01
     158:	98 e0       	ldi	r25, 0x08	; 8
     15a:	93 87       	std	Z+11, r25	; 0x0b
     15c:	84 87       	std	Z+12, r24	; 0x0c
     15e:	e0 e0       	ldi	r30, 0x00	; 0
     160:	f9 e0       	ldi	r31, 0x09	; 9
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	83 83       	std	Z+3, r24	; 0x03
     166:	16 82       	std	Z+6, r1	; 0x06
     168:	85 83       	std	Z+5, r24	; 0x05
     16a:	e0 e8       	ldi	r30, 0x80	; 128
     16c:	f4 e0       	ldi	r31, 0x04	; 4
     16e:	82 e0       	ldi	r24, 0x02	; 2
     170:	81 83       	std	Z+1, r24	; 0x01
     172:	84 83       	std	Z+4, r24	; 0x04
     174:	08 95       	ret

00000176 <I2C0_M_start>:
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	88 0f       	add	r24, r24
     17a:	99 1f       	adc	r25, r25
     17c:	86 2b       	or	r24, r22
     17e:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     182:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     186:	85 fd       	sbrc	r24, 5
     188:	0d c0       	rjmp	.+26     	; 0x1a4 <I2C0_M_start+0x2e>
     18a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     18e:	82 fd       	sbrc	r24, 2
     190:	09 c0       	rjmp	.+18     	; 0x1a4 <I2C0_M_start+0x2e>
     192:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     196:	83 fd       	sbrc	r24, 3
     198:	05 c0       	rjmp	.+10     	; 0x1a4 <I2C0_M_start+0x2e>
     19a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     19e:	83 70       	andi	r24, 0x03	; 3
     1a0:	83 30       	cpi	r24, 0x03	; 3
     1a2:	79 f7       	brne	.-34     	; 0x182 <I2C0_M_start+0xc>
     1a4:	08 95       	ret

000001a6 <I2C_M_write>:
     1a6:	cf 93       	push	r28
     1a8:	c6 2f       	mov	r28, r22
     1aa:	60 e0       	ldi	r22, 0x00	; 0
     1ac:	0e 94 bb 00 	call	0x176	; 0x176 <I2C0_M_start>
     1b0:	c0 93 08 09 	sts	0x0908, r28	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     1b4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1b8:	85 fd       	sbrc	r24, 5
     1ba:	0d c0       	rjmp	.+26     	; 0x1d6 <I2C_M_write+0x30>
     1bc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c0:	82 fd       	sbrc	r24, 2
     1c2:	09 c0       	rjmp	.+18     	; 0x1d6 <I2C_M_write+0x30>
     1c4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c8:	83 fd       	sbrc	r24, 3
     1ca:	05 c0       	rjmp	.+10     	; 0x1d6 <I2C_M_write+0x30>
     1cc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1d0:	83 70       	andi	r24, 0x03	; 3
     1d2:	83 30       	cpi	r24, 0x03	; 3
     1d4:	79 f7       	brne	.-34     	; 0x1b4 <I2C_M_write+0xe>
     1d6:	e0 e0       	ldi	r30, 0x00	; 0
     1d8:	f9 e0       	ldi	r31, 0x09	; 9
     1da:	85 81       	ldd	r24, Z+5	; 0x05
     1dc:	84 81       	ldd	r24, Z+4	; 0x04
     1de:	83 60       	ori	r24, 0x03	; 3
     1e0:	84 83       	std	Z+4, r24	; 0x04
     1e2:	cf 91       	pop	r28
     1e4:	08 95       	ret

000001e6 <I2C_M_read>:
     1e6:	0f 93       	push	r16
     1e8:	1f 93       	push	r17
     1ea:	cf 93       	push	r28
     1ec:	8b 01       	movw	r16, r22
     1ee:	c4 2f       	mov	r28, r20
     1f0:	61 e0       	ldi	r22, 0x01	; 1
     1f2:	0e 94 bb 00 	call	0x176	; 0x176 <I2C0_M_start>
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	1d c0       	rjmp	.+58     	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     1fa:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1fe:	85 fd       	sbrc	r24, 5
     200:	0d c0       	rjmp	.+26     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
     202:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     206:	82 fd       	sbrc	r24, 2
     208:	09 c0       	rjmp	.+18     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
     20a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     20e:	83 fd       	sbrc	r24, 3
     210:	05 c0       	rjmp	.+10     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
     212:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     216:	83 70       	andi	r24, 0x03	; 3
     218:	83 30       	cpi	r24, 0x03	; 3
     21a:	79 f7       	brne	.-34     	; 0x1fa <I2C_M_read+0x14>
     21c:	f8 01       	movw	r30, r16
     21e:	e9 0f       	add	r30, r25
     220:	f1 1d       	adc	r31, r1
     222:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     226:	80 83       	st	Z, r24
     228:	9f 5f       	subi	r25, 0xFF	; 255
     22a:	c9 17       	cp	r28, r25
     22c:	19 f0       	breq	.+6      	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     22e:	82 e0       	ldi	r24, 0x02	; 2
     230:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
     234:	9c 17       	cp	r25, r28
     236:	08 f3       	brcs	.-62     	; 0x1fa <I2C_M_read+0x14>
     238:	87 e0       	ldi	r24, 0x07	; 7
     23a:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
     23e:	cf 91       	pop	r28
     240:	1f 91       	pop	r17
     242:	0f 91       	pop	r16
     244:	08 95       	ret

00000246 <AHT10_init>:
     246:	61 ee       	ldi	r22, 0xE1	; 225
     248:	88 e3       	ldi	r24, 0x38	; 56
     24a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <I2C_M_write>
     24e:	2f e5       	ldi	r18, 0x5F	; 95
     250:	8a ee       	ldi	r24, 0xEA	; 234
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	21 50       	subi	r18, 0x01	; 1
     256:	80 40       	sbci	r24, 0x00	; 0
     258:	90 40       	sbci	r25, 0x00	; 0
     25a:	e1 f7       	brne	.-8      	; 0x254 <AHT10_init+0xe>
     25c:	00 c0       	rjmp	.+0      	; 0x25e <AHT10_init+0x18>
     25e:	00 00       	nop
     260:	6a eb       	ldi	r22, 0xBA	; 186
     262:	88 e3       	ldi	r24, 0x38	; 56
     264:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <I2C_M_write>
     268:	8f e1       	ldi	r24, 0x1F	; 31
     26a:	9e e4       	ldi	r25, 0x4E	; 78
     26c:	01 97       	sbiw	r24, 0x01	; 1
     26e:	f1 f7       	brne	.-4      	; 0x26c <AHT10_init+0x26>
     270:	00 c0       	rjmp	.+0      	; 0x272 <AHT10_init+0x2c>
     272:	00 00       	nop
     274:	08 95       	ret

00000276 <autoRPMmode>:
     276:	cb 97       	sbiw	r24, 0x3b	; 59
     278:	bc 01       	movw	r22, r24
     27a:	80 e0       	ldi	r24, 0x00	; 0
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__floatunsisf>
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	40 e0       	ldi	r20, 0x00	; 0
     288:	5f e3       	ldi	r21, 0x3F	; 63
     28a:	0e 94 ef 08 	call	0x11de	; 0x11de <__addsf3>
     28e:	0e 94 cd 09 	call	0x139a	; 0x139a <__fixunssfsi>
     292:	6e 31       	cpi	r22, 0x1E	; 30
     294:	18 f0       	brcs	.+6      	; 0x29c <autoRPMmode+0x26>
     296:	60 35       	cpi	r22, 0x50	; 80
     298:	18 f4       	brcc	.+6      	; 0x2a0 <autoRPMmode+0x2a>
     29a:	03 c0       	rjmp	.+6      	; 0x2a2 <autoRPMmode+0x2c>
     29c:	6e e1       	ldi	r22, 0x1E	; 30
     29e:	01 c0       	rjmp	.+2      	; 0x2a2 <autoRPMmode+0x2c>
     2a0:	6f e4       	ldi	r22, 0x4F	; 79
     2a2:	86 2f       	mov	r24, r22
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	08 95       	ret

000002a8 <handleFansInAuto>:
     2a8:	80 91 33 45 	lds	r24, 0x4533	; 0x804533 <fan1>
     2ac:	90 91 34 45 	lds	r25, 0x4534	; 0x804534 <fan1+0x1>
     2b0:	02 97       	sbiw	r24, 0x02	; 2
     2b2:	41 f4       	brne	.+16     	; 0x2c4 <handleFansInAuto+0x1c>
     2b4:	80 91 18 4c 	lds	r24, 0x4C18	; 0x804c18 <temperature>
     2b8:	90 91 19 4c 	lds	r25, 0x4C19	; 0x804c19 <temperature+0x1>
     2bc:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     2c0:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     2c4:	80 91 2f 45 	lds	r24, 0x452F	; 0x80452f <fan2>
     2c8:	90 91 30 45 	lds	r25, 0x4530	; 0x804530 <fan2+0x1>
     2cc:	02 97       	sbiw	r24, 0x02	; 2
     2ce:	41 f4       	brne	.+16     	; 0x2e0 <handleFansInAuto+0x38>
     2d0:	80 91 18 4c 	lds	r24, 0x4C18	; 0x804c18 <temperature>
     2d4:	90 91 19 4c 	lds	r25, 0x4C19	; 0x804c19 <temperature+0x1>
     2d8:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     2dc:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     2e0:	80 91 2b 45 	lds	r24, 0x452B	; 0x80452b <fan3>
     2e4:	90 91 2c 45 	lds	r25, 0x452C	; 0x80452c <fan3+0x1>
     2e8:	02 97       	sbiw	r24, 0x02	; 2
     2ea:	41 f4       	brne	.+16     	; 0x2fc <handleFansInAuto+0x54>
     2ec:	80 91 18 4c 	lds	r24, 0x4C18	; 0x804c18 <temperature>
     2f0:	90 91 19 4c 	lds	r25, 0x4C19	; 0x804c19 <temperature+0x1>
     2f4:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     2f8:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     2fc:	80 91 27 45 	lds	r24, 0x4527	; 0x804527 <fan4>
     300:	90 91 28 45 	lds	r25, 0x4528	; 0x804528 <fan4+0x1>
     304:	02 97       	sbiw	r24, 0x02	; 2
     306:	41 f4       	brne	.+16     	; 0x318 <handleFansInAuto+0x70>
     308:	80 91 18 4c 	lds	r24, 0x4C18	; 0x804c18 <temperature>
     30c:	90 91 19 4c 	lds	r25, 0x4C19	; 0x804c19 <temperature+0x1>
     310:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     314:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     318:	08 95       	ret

0000031a <startFansAfterDiagnose>:
     31a:	80 91 30 4c 	lds	r24, 0x4C30	; 0x804c30 <SavedFan1State>
     31e:	90 91 31 4c 	lds	r25, 0x4C31	; 0x804c31 <SavedFan1State+0x1>
     322:	81 30       	cpi	r24, 0x01	; 1
     324:	91 05       	cpc	r25, r1
     326:	49 f4       	brne	.+18     	; 0x33a <startFansAfterDiagnose+0x20>
     328:	81 e0       	ldi	r24, 0x01	; 1
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	80 93 33 45 	sts	0x4533, r24	; 0x804533 <fan1>
     330:	90 93 34 45 	sts	0x4534, r25	; 0x804534 <fan1+0x1>
     334:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     338:	10 c0       	rjmp	.+32     	; 0x35a <startFansAfterDiagnose+0x40>
     33a:	82 30       	cpi	r24, 0x02	; 2
     33c:	91 05       	cpc	r25, r1
     33e:	39 f4       	brne	.+14     	; 0x34e <startFansAfterDiagnose+0x34>
     340:	82 e0       	ldi	r24, 0x02	; 2
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	80 93 33 45 	sts	0x4533, r24	; 0x804533 <fan1>
     348:	90 93 34 45 	sts	0x4534, r25	; 0x804534 <fan1+0x1>
     34c:	06 c0       	rjmp	.+12     	; 0x35a <startFansAfterDiagnose+0x40>
     34e:	89 2b       	or	r24, r25
     350:	21 f4       	brne	.+8      	; 0x35a <startFansAfterDiagnose+0x40>
     352:	10 92 33 45 	sts	0x4533, r1	; 0x804533 <fan1>
     356:	10 92 34 45 	sts	0x4534, r1	; 0x804534 <fan1+0x1>
     35a:	80 91 29 4c 	lds	r24, 0x4C29	; 0x804c29 <SavedFan2State>
     35e:	90 91 2a 4c 	lds	r25, 0x4C2A	; 0x804c2a <SavedFan2State+0x1>
     362:	81 30       	cpi	r24, 0x01	; 1
     364:	91 05       	cpc	r25, r1
     366:	49 f4       	brne	.+18     	; 0x37a <startFansAfterDiagnose+0x60>
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	80 93 2f 45 	sts	0x452F, r24	; 0x80452f <fan2>
     370:	90 93 30 45 	sts	0x4530, r25	; 0x804530 <fan2+0x1>
     374:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     378:	10 c0       	rjmp	.+32     	; 0x39a <startFansAfterDiagnose+0x80>
     37a:	82 30       	cpi	r24, 0x02	; 2
     37c:	91 05       	cpc	r25, r1
     37e:	39 f4       	brne	.+14     	; 0x38e <startFansAfterDiagnose+0x74>
     380:	82 e0       	ldi	r24, 0x02	; 2
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	80 93 2f 45 	sts	0x452F, r24	; 0x80452f <fan2>
     388:	90 93 30 45 	sts	0x4530, r25	; 0x804530 <fan2+0x1>
     38c:	06 c0       	rjmp	.+12     	; 0x39a <startFansAfterDiagnose+0x80>
     38e:	89 2b       	or	r24, r25
     390:	21 f4       	brne	.+8      	; 0x39a <startFansAfterDiagnose+0x80>
     392:	10 92 2f 45 	sts	0x452F, r1	; 0x80452f <fan2>
     396:	10 92 30 45 	sts	0x4530, r1	; 0x804530 <fan2+0x1>
     39a:	80 91 1d 4c 	lds	r24, 0x4C1D	; 0x804c1d <SavedFan3State>
     39e:	90 91 1e 4c 	lds	r25, 0x4C1E	; 0x804c1e <SavedFan3State+0x1>
     3a2:	81 30       	cpi	r24, 0x01	; 1
     3a4:	91 05       	cpc	r25, r1
     3a6:	49 f4       	brne	.+18     	; 0x3ba <startFansAfterDiagnose+0xa0>
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	80 93 2b 45 	sts	0x452B, r24	; 0x80452b <fan3>
     3b0:	90 93 2c 45 	sts	0x452C, r25	; 0x80452c <fan3+0x1>
     3b4:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     3b8:	10 c0       	rjmp	.+32     	; 0x3da <startFansAfterDiagnose+0xc0>
     3ba:	82 30       	cpi	r24, 0x02	; 2
     3bc:	91 05       	cpc	r25, r1
     3be:	39 f4       	brne	.+14     	; 0x3ce <startFansAfterDiagnose+0xb4>
     3c0:	82 e0       	ldi	r24, 0x02	; 2
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	80 93 2b 45 	sts	0x452B, r24	; 0x80452b <fan3>
     3c8:	90 93 2c 45 	sts	0x452C, r25	; 0x80452c <fan3+0x1>
     3cc:	06 c0       	rjmp	.+12     	; 0x3da <startFansAfterDiagnose+0xc0>
     3ce:	89 2b       	or	r24, r25
     3d0:	21 f4       	brne	.+8      	; 0x3da <startFansAfterDiagnose+0xc0>
     3d2:	10 92 2b 45 	sts	0x452B, r1	; 0x80452b <fan3>
     3d6:	10 92 2c 45 	sts	0x452C, r1	; 0x80452c <fan3+0x1>
     3da:	80 91 ad 4b 	lds	r24, 0x4BAD	; 0x804bad <SavedFan4State>
     3de:	90 91 ae 4b 	lds	r25, 0x4BAE	; 0x804bae <SavedFan4State+0x1>
     3e2:	81 30       	cpi	r24, 0x01	; 1
     3e4:	91 05       	cpc	r25, r1
     3e6:	49 f4       	brne	.+18     	; 0x3fa <startFansAfterDiagnose+0xe0>
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <fan4>
     3f0:	90 93 28 45 	sts	0x4528, r25	; 0x804528 <fan4+0x1>
     3f4:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     3f8:	08 95       	ret
     3fa:	82 30       	cpi	r24, 0x02	; 2
     3fc:	91 05       	cpc	r25, r1
     3fe:	39 f4       	brne	.+14     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     400:	82 e0       	ldi	r24, 0x02	; 2
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <fan4>
     408:	90 93 28 45 	sts	0x4528, r25	; 0x804528 <fan4+0x1>
     40c:	08 95       	ret
     40e:	89 2b       	or	r24, r25
     410:	21 f4       	brne	.+8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     412:	10 92 27 45 	sts	0x4527, r1	; 0x804527 <fan4>
     416:	10 92 28 45 	sts	0x4528, r1	; 0x804528 <fan4+0x1>
     41a:	08 95       	ret

0000041c <saveFanModes>:
     41c:	80 91 33 45 	lds	r24, 0x4533	; 0x804533 <fan1>
     420:	90 91 34 45 	lds	r25, 0x4534	; 0x804534 <fan1+0x1>
     424:	80 93 30 4c 	sts	0x4C30, r24	; 0x804c30 <SavedFan1State>
     428:	90 93 31 4c 	sts	0x4C31, r25	; 0x804c31 <SavedFan1State+0x1>
     42c:	80 91 2f 45 	lds	r24, 0x452F	; 0x80452f <fan2>
     430:	90 91 30 45 	lds	r25, 0x4530	; 0x804530 <fan2+0x1>
     434:	80 93 29 4c 	sts	0x4C29, r24	; 0x804c29 <SavedFan2State>
     438:	90 93 2a 4c 	sts	0x4C2A, r25	; 0x804c2a <SavedFan2State+0x1>
     43c:	80 91 2b 45 	lds	r24, 0x452B	; 0x80452b <fan3>
     440:	90 91 2c 45 	lds	r25, 0x452C	; 0x80452c <fan3+0x1>
     444:	80 93 1d 4c 	sts	0x4C1D, r24	; 0x804c1d <SavedFan3State>
     448:	90 93 1e 4c 	sts	0x4C1E, r25	; 0x804c1e <SavedFan3State+0x1>
     44c:	80 91 27 45 	lds	r24, 0x4527	; 0x804527 <fan4>
     450:	90 91 28 45 	lds	r25, 0x4528	; 0x804528 <fan4+0x1>
     454:	80 93 ad 4b 	sts	0x4BAD, r24	; 0x804bad <SavedFan4State>
     458:	90 93 ae 4b 	sts	0x4BAE, r25	; 0x804bae <SavedFan4State+0x1>
     45c:	08 95       	ret

0000045e <AHT10_read>:
     45e:	cf 93       	push	r28
     460:	df 93       	push	r29
     462:	cd b7       	in	r28, 0x3d	; 61
     464:	de b7       	in	r29, 0x3e	; 62
     466:	26 97       	sbiw	r28, 0x06	; 6
     468:	cd bf       	out	0x3d, r28	; 61
     46a:	de bf       	out	0x3e, r29	; 62
     46c:	6c ea       	ldi	r22, 0xAC	; 172
     46e:	88 e3       	ldi	r24, 0x38	; 56
     470:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <I2C_M_write>
     474:	2f e5       	ldi	r18, 0x5F	; 95
     476:	8a ee       	ldi	r24, 0xEA	; 234
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	21 50       	subi	r18, 0x01	; 1
     47c:	80 40       	sbci	r24, 0x00	; 0
     47e:	90 40       	sbci	r25, 0x00	; 0
     480:	e1 f7       	brne	.-8      	; 0x47a <AHT10_read+0x1c>
     482:	00 c0       	rjmp	.+0      	; 0x484 <AHT10_read+0x26>
     484:	00 00       	nop
     486:	46 e0       	ldi	r20, 0x06	; 6
     488:	be 01       	movw	r22, r28
     48a:	6f 5f       	subi	r22, 0xFF	; 255
     48c:	7f 4f       	sbci	r23, 0xFF	; 255
     48e:	88 e3       	ldi	r24, 0x38	; 56
     490:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <I2C_M_read>
     494:	6c 81       	ldd	r22, Y+4	; 0x04
     496:	6f 70       	andi	r22, 0x0F	; 15
     498:	86 2f       	mov	r24, r22
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	a0 e0       	ldi	r26, 0x00	; 0
     49e:	b0 e0       	ldi	r27, 0x00	; 0
     4a0:	ba 2f       	mov	r27, r26
     4a2:	a9 2f       	mov	r26, r25
     4a4:	98 2f       	mov	r25, r24
     4a6:	88 27       	eor	r24, r24
     4a8:	2d 81       	ldd	r18, Y+5	; 0x05
     4aa:	82 2b       	or	r24, r18
     4ac:	ba 2f       	mov	r27, r26
     4ae:	a9 2f       	mov	r26, r25
     4b0:	98 2f       	mov	r25, r24
     4b2:	88 27       	eor	r24, r24
     4b4:	2e 81       	ldd	r18, Y+6	; 0x06
     4b6:	bc 01       	movw	r22, r24
     4b8:	cd 01       	movw	r24, r26
     4ba:	62 2b       	or	r22, r18
     4bc:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__floatunsisf>
     4c0:	20 e0       	ldi	r18, 0x00	; 0
     4c2:	30 e0       	ldi	r19, 0x00	; 0
     4c4:	48 e4       	ldi	r20, 0x48	; 72
     4c6:	53 e4       	ldi	r21, 0x43	; 67
     4c8:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__mulsf3>
     4cc:	20 e0       	ldi	r18, 0x00	; 0
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	40 e8       	ldi	r20, 0x80	; 128
     4d2:	55 e3       	ldi	r21, 0x35	; 53
     4d4:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__mulsf3>
     4d8:	0e 94 cd 09 	call	0x139a	; 0x139a <__fixunssfsi>
     4dc:	8e ec       	ldi	r24, 0xCE	; 206
     4de:	86 0f       	add	r24, r22
     4e0:	26 96       	adiw	r28, 0x06	; 6
     4e2:	cd bf       	out	0x3d, r28	; 61
     4e4:	de bf       	out	0x3e, r29	; 62
     4e6:	df 91       	pop	r29
     4e8:	cf 91       	pop	r28
     4ea:	08 95       	ret

000004ec <alarm>:
     4ec:	86 17       	cp	r24, r22
     4ee:	10 f4       	brcc	.+4      	; 0x4f4 <alarm+0x8>
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	08 95       	ret
     4f4:	80 e0       	ldi	r24, 0x00	; 0
     4f6:	08 95       	ret

000004f8 <calculate_percentage>:
     4f8:	cf 92       	push	r12
     4fa:	df 92       	push	r13
     4fc:	ef 92       	push	r14
     4fe:	ff 92       	push	r15
     500:	6b 01       	movw	r12, r22
     502:	7c 01       	movw	r14, r24
     504:	ba 01       	movw	r22, r20
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__floatunsisf>
     50e:	a7 01       	movw	r20, r14
     510:	96 01       	movw	r18, r12
     512:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <__divsf3>
     516:	20 e0       	ldi	r18, 0x00	; 0
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	48 ec       	ldi	r20, 0xC8	; 200
     51c:	52 e4       	ldi	r21, 0x42	; 66
     51e:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__mulsf3>
     522:	0e 94 cd 09 	call	0x139a	; 0x139a <__fixunssfsi>
     526:	86 2f       	mov	r24, r22
     528:	ff 90       	pop	r15
     52a:	ef 90       	pop	r14
     52c:	df 90       	pop	r13
     52e:	cf 90       	pop	r12
     530:	08 95       	ret

00000532 <printHomeScreen>:
     532:	85 ea       	ldi	r24, 0xA5	; 165
     534:	9a e4       	ldi	r25, 0x4A	; 74
     536:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     53a:	85 ea       	ldi	r24, 0xA5	; 165
     53c:	9a e4       	ldi	r25, 0x4A	; 74
     53e:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     542:	85 ea       	ldi	r24, 0xA5	; 165
     544:	9a e4       	ldi	r25, 0x4A	; 74
     546:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     54a:	8d e3       	ldi	r24, 0x3D	; 61
     54c:	95 e4       	ldi	r25, 0x45	; 69
     54e:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     552:	8a e4       	ldi	r24, 0x4A	; 74
     554:	95 e4       	ldi	r25, 0x45	; 69
     556:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     55a:	85 ea       	ldi	r24, 0xA5	; 165
     55c:	9a e4       	ldi	r25, 0x4A	; 74
     55e:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     562:	8e e5       	ldi	r24, 0x5E	; 94
     564:	95 e4       	ldi	r25, 0x45	; 69
     566:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     56a:	08 95       	ret

0000056c <fanOff>:
     56c:	80 91 aa 4b 	lds	r24, 0x4BAA	; 0x804baa <chosenFan>
     570:	80 ff       	sbrs	r24, 0
     572:	13 c0       	rjmp	.+38     	; 0x59a <fanOff+0x2e>
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	80 93 33 45 	sts	0x4533, r24	; 0x804533 <fan1>
     57c:	90 93 34 45 	sts	0x4534, r25	; 0x804534 <fan1+0x1>
     580:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     584:	89 e8       	ldi	r24, 0x89	; 137
     586:	95 e4       	ldi	r25, 0x45	; 69
     588:	9f 93       	push	r25
     58a:	8f 93       	push	r24
     58c:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     590:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     594:	0f 90       	pop	r0
     596:	0f 90       	pop	r0
     598:	08 95       	ret
     59a:	81 ff       	sbrs	r24, 1
     59c:	13 c0       	rjmp	.+38     	; 0x5c4 <fanOff+0x58>
     59e:	81 e0       	ldi	r24, 0x01	; 1
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	80 93 2f 45 	sts	0x452F, r24	; 0x80452f <fan2>
     5a6:	90 93 30 45 	sts	0x4530, r25	; 0x804530 <fan2+0x1>
     5aa:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     5ae:	82 ea       	ldi	r24, 0xA2	; 162
     5b0:	95 e4       	ldi	r25, 0x45	; 69
     5b2:	9f 93       	push	r25
     5b4:	8f 93       	push	r24
     5b6:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     5ba:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     5be:	0f 90       	pop	r0
     5c0:	0f 90       	pop	r0
     5c2:	08 95       	ret
     5c4:	82 ff       	sbrs	r24, 2
     5c6:	13 c0       	rjmp	.+38     	; 0x5ee <fanOff+0x82>
     5c8:	81 e0       	ldi	r24, 0x01	; 1
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	80 93 2b 45 	sts	0x452B, r24	; 0x80452b <fan3>
     5d0:	90 93 2c 45 	sts	0x452C, r25	; 0x80452c <fan3+0x1>
     5d4:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     5d8:	8b eb       	ldi	r24, 0xBB	; 187
     5da:	95 e4       	ldi	r25, 0x45	; 69
     5dc:	9f 93       	push	r25
     5de:	8f 93       	push	r24
     5e0:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     5e4:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     5e8:	0f 90       	pop	r0
     5ea:	0f 90       	pop	r0
     5ec:	08 95       	ret
     5ee:	83 ff       	sbrs	r24, 3
     5f0:	12 c0       	rjmp	.+36     	; 0x616 <fanOff+0xaa>
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <fan4>
     5fa:	90 93 28 45 	sts	0x4528, r25	; 0x804528 <fan4+0x1>
     5fe:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     602:	84 ed       	ldi	r24, 0xD4	; 212
     604:	95 e4       	ldi	r25, 0x45	; 69
     606:	9f 93       	push	r25
     608:	8f 93       	push	r24
     60a:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     60e:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     612:	0f 90       	pop	r0
     614:	0f 90       	pop	r0
     616:	08 95       	ret

00000618 <fanAuto>:
     618:	80 91 aa 4b 	lds	r24, 0x4BAA	; 0x804baa <chosenFan>
     61c:	80 ff       	sbrs	r24, 0
     61e:	11 c0       	rjmp	.+34     	; 0x642 <fanAuto+0x2a>
     620:	82 e0       	ldi	r24, 0x02	; 2
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	80 93 33 45 	sts	0x4533, r24	; 0x804533 <fan1>
     628:	90 93 34 45 	sts	0x4534, r25	; 0x804534 <fan1+0x1>
     62c:	8d ee       	ldi	r24, 0xED	; 237
     62e:	95 e4       	ldi	r25, 0x45	; 69
     630:	9f 93       	push	r25
     632:	8f 93       	push	r24
     634:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     638:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     63c:	0f 90       	pop	r0
     63e:	0f 90       	pop	r0
     640:	08 95       	ret
     642:	81 ff       	sbrs	r24, 1
     644:	11 c0       	rjmp	.+34     	; 0x668 <fanAuto+0x50>
     646:	82 e0       	ldi	r24, 0x02	; 2
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	80 93 2f 45 	sts	0x452F, r24	; 0x80452f <fan2>
     64e:	90 93 30 45 	sts	0x4530, r25	; 0x804530 <fan2+0x1>
     652:	87 e0       	ldi	r24, 0x07	; 7
     654:	96 e4       	ldi	r25, 0x46	; 70
     656:	9f 93       	push	r25
     658:	8f 93       	push	r24
     65a:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     65e:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     662:	0f 90       	pop	r0
     664:	0f 90       	pop	r0
     666:	08 95       	ret
     668:	82 ff       	sbrs	r24, 2
     66a:	11 c0       	rjmp	.+34     	; 0x68e <fanAuto+0x76>
     66c:	82 e0       	ldi	r24, 0x02	; 2
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	80 93 2b 45 	sts	0x452B, r24	; 0x80452b <fan3>
     674:	90 93 2c 45 	sts	0x452C, r25	; 0x80452c <fan3+0x1>
     678:	81 e2       	ldi	r24, 0x21	; 33
     67a:	96 e4       	ldi	r25, 0x46	; 70
     67c:	9f 93       	push	r25
     67e:	8f 93       	push	r24
     680:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     684:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	08 95       	ret
     68e:	83 ff       	sbrs	r24, 3
     690:	10 c0       	rjmp	.+32     	; 0x6b2 <fanAuto+0x9a>
     692:	82 e0       	ldi	r24, 0x02	; 2
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	80 93 27 45 	sts	0x4527, r24	; 0x804527 <fan4>
     69a:	90 93 28 45 	sts	0x4528, r25	; 0x804528 <fan4+0x1>
     69e:	8b e3       	ldi	r24, 0x3B	; 59
     6a0:	96 e4       	ldi	r25, 0x46	; 70
     6a2:	9f 93       	push	r25
     6a4:	8f 93       	push	r24
     6a6:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     6aa:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     6ae:	0f 90       	pop	r0
     6b0:	0f 90       	pop	r0
     6b2:	08 95       	ret

000006b4 <fanManual>:
     6b4:	80 91 aa 4b 	lds	r24, 0x4BAA	; 0x804baa <chosenFan>
     6b8:	80 ff       	sbrs	r24, 0
     6ba:	0f c0       	rjmp	.+30     	; 0x6da <fanManual+0x26>
     6bc:	10 92 33 45 	sts	0x4533, r1	; 0x804533 <fan1>
     6c0:	10 92 34 45 	sts	0x4534, r1	; 0x804534 <fan1+0x1>
     6c4:	80 91 b1 4b 	lds	r24, 0x4BB1	; 0x804bb1 <manual_rpm_value>
     6c8:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     6cc:	85 e5       	ldi	r24, 0x55	; 85
     6ce:	96 e4       	ldi	r25, 0x46	; 70
     6d0:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     6d4:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     6d8:	08 95       	ret
     6da:	81 ff       	sbrs	r24, 1
     6dc:	13 c0       	rjmp	.+38     	; 0x704 <fanManual+0x50>
     6de:	10 92 2f 45 	sts	0x452F, r1	; 0x80452f <fan2>
     6e2:	10 92 30 45 	sts	0x4530, r1	; 0x804530 <fan2+0x1>
     6e6:	80 91 b1 4b 	lds	r24, 0x4BB1	; 0x804bb1 <manual_rpm_value>
     6ea:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     6ee:	83 e7       	ldi	r24, 0x73	; 115
     6f0:	96 e4       	ldi	r25, 0x46	; 70
     6f2:	9f 93       	push	r25
     6f4:	8f 93       	push	r24
     6f6:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     6fa:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	08 95       	ret
     704:	82 ff       	sbrs	r24, 2
     706:	13 c0       	rjmp	.+38     	; 0x72e <fanManual+0x7a>
     708:	10 92 2b 45 	sts	0x452B, r1	; 0x80452b <fan3>
     70c:	10 92 2c 45 	sts	0x452C, r1	; 0x80452c <fan3+0x1>
     710:	80 91 b1 4b 	lds	r24, 0x4BB1	; 0x804bb1 <manual_rpm_value>
     714:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     718:	8f e8       	ldi	r24, 0x8F	; 143
     71a:	96 e4       	ldi	r25, 0x46	; 70
     71c:	9f 93       	push	r25
     71e:	8f 93       	push	r24
     720:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     724:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     728:	0f 90       	pop	r0
     72a:	0f 90       	pop	r0
     72c:	08 95       	ret
     72e:	83 ff       	sbrs	r24, 3
     730:	12 c0       	rjmp	.+36     	; 0x756 <fanManual+0xa2>
     732:	10 92 27 45 	sts	0x4527, r1	; 0x804527 <fan4>
     736:	10 92 28 45 	sts	0x4528, r1	; 0x804528 <fan4+0x1>
     73a:	80 91 b1 4b 	lds	r24, 0x4BB1	; 0x804bb1 <manual_rpm_value>
     73e:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     742:	8b ea       	ldi	r24, 0xAB	; 171
     744:	96 e4       	ldi	r25, 0x46	; 70
     746:	9f 93       	push	r25
     748:	8f 93       	push	r24
     74a:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     74e:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     752:	0f 90       	pop	r0
     754:	0f 90       	pop	r0
     756:	08 95       	ret

00000758 <PrintSelectFanMode>:
     758:	87 ec       	ldi	r24, 0xC7	; 199
     75a:	96 e4       	ldi	r25, 0x46	; 70
     75c:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     760:	85 ea       	ldi	r24, 0xA5	; 165
     762:	9a e4       	ldi	r25, 0x4A	; 74
     764:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     768:	89 ed       	ldi	r24, 0xD9	; 217
     76a:	96 e4       	ldi	r25, 0x46	; 70
     76c:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     770:	08 95       	ret

00000772 <printOverview>:
     772:	cf 93       	push	r28
     774:	df 93       	push	r29
     776:	8a ef       	ldi	r24, 0xFA	; 250
     778:	96 e4       	ldi	r25, 0x46	; 70
     77a:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     77e:	85 ea       	ldi	r24, 0xA5	; 165
     780:	9a e4       	ldi	r25, 0x4A	; 74
     782:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     786:	c3 e3       	ldi	r28, 0x33	; 51
     788:	d5 e4       	ldi	r29, 0x45	; 69
     78a:	8b 81       	ldd	r24, Y+3	; 0x03
     78c:	8f 93       	push	r24
     78e:	8a 81       	ldd	r24, Y+2	; 0x02
     790:	8f 93       	push	r24
     792:	85 e0       	ldi	r24, 0x05	; 5
     794:	97 e4       	ldi	r25, 0x47	; 71
     796:	9f 93       	push	r25
     798:	8f 93       	push	r24
     79a:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     79e:	e8 81       	ld	r30, Y
     7a0:	f9 81       	ldd	r31, Y+1	; 0x01
     7a2:	ee 0f       	add	r30, r30
     7a4:	ff 1f       	adc	r31, r31
     7a6:	e9 5c       	subi	r30, 0xC9	; 201
     7a8:	fa 4b       	sbci	r31, 0xBA	; 186
     7aa:	81 81       	ldd	r24, Z+1	; 0x01
     7ac:	8f 93       	push	r24
     7ae:	80 81       	ld	r24, Z
     7b0:	8f 93       	push	r24
     7b2:	85 e1       	ldi	r24, 0x15	; 21
     7b4:	97 e4       	ldi	r25, 0x47	; 71
     7b6:	9f 93       	push	r25
     7b8:	8f 93       	push	r24
     7ba:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     7be:	cf e2       	ldi	r28, 0x2F	; 47
     7c0:	d5 e4       	ldi	r29, 0x45	; 69
     7c2:	8b 81       	ldd	r24, Y+3	; 0x03
     7c4:	8f 93       	push	r24
     7c6:	8a 81       	ldd	r24, Y+2	; 0x02
     7c8:	8f 93       	push	r24
     7ca:	87 e2       	ldi	r24, 0x27	; 39
     7cc:	97 e4       	ldi	r25, 0x47	; 71
     7ce:	9f 93       	push	r25
     7d0:	8f 93       	push	r24
     7d2:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     7d6:	e8 81       	ld	r30, Y
     7d8:	f9 81       	ldd	r31, Y+1	; 0x01
     7da:	ee 0f       	add	r30, r30
     7dc:	ff 1f       	adc	r31, r31
     7de:	e9 5c       	subi	r30, 0xC9	; 201
     7e0:	fa 4b       	sbci	r31, 0xBA	; 186
     7e2:	81 81       	ldd	r24, Z+1	; 0x01
     7e4:	8f 93       	push	r24
     7e6:	80 81       	ld	r24, Z
     7e8:	8f 93       	push	r24
     7ea:	87 e3       	ldi	r24, 0x37	; 55
     7ec:	97 e4       	ldi	r25, 0x47	; 71
     7ee:	9f 93       	push	r25
     7f0:	8f 93       	push	r24
     7f2:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     7f6:	cb e2       	ldi	r28, 0x2B	; 43
     7f8:	d5 e4       	ldi	r29, 0x45	; 69
     7fa:	8b 81       	ldd	r24, Y+3	; 0x03
     7fc:	8f 93       	push	r24
     7fe:	8a 81       	ldd	r24, Y+2	; 0x02
     800:	8f 93       	push	r24
     802:	89 e4       	ldi	r24, 0x49	; 73
     804:	97 e4       	ldi	r25, 0x47	; 71
     806:	9f 93       	push	r25
     808:	8f 93       	push	r24
     80a:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     80e:	e8 81       	ld	r30, Y
     810:	f9 81       	ldd	r31, Y+1	; 0x01
     812:	ee 0f       	add	r30, r30
     814:	ff 1f       	adc	r31, r31
     816:	e9 5c       	subi	r30, 0xC9	; 201
     818:	fa 4b       	sbci	r31, 0xBA	; 186
     81a:	81 81       	ldd	r24, Z+1	; 0x01
     81c:	8f 93       	push	r24
     81e:	80 81       	ld	r24, Z
     820:	8f 93       	push	r24
     822:	89 e5       	ldi	r24, 0x59	; 89
     824:	97 e4       	ldi	r25, 0x47	; 71
     826:	9f 93       	push	r25
     828:	8f 93       	push	r24
     82a:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     82e:	c7 e2       	ldi	r28, 0x27	; 39
     830:	d5 e4       	ldi	r29, 0x45	; 69
     832:	8b 81       	ldd	r24, Y+3	; 0x03
     834:	8f 93       	push	r24
     836:	8a 81       	ldd	r24, Y+2	; 0x02
     838:	8f 93       	push	r24
     83a:	8b e6       	ldi	r24, 0x6B	; 107
     83c:	97 e4       	ldi	r25, 0x47	; 71
     83e:	9f 93       	push	r25
     840:	8f 93       	push	r24
     842:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     846:	e8 81       	ld	r30, Y
     848:	f9 81       	ldd	r31, Y+1	; 0x01
     84a:	ee 0f       	add	r30, r30
     84c:	ff 1f       	adc	r31, r31
     84e:	e9 5c       	subi	r30, 0xC9	; 201
     850:	fa 4b       	sbci	r31, 0xBA	; 186
     852:	81 81       	ldd	r24, Z+1	; 0x01
     854:	8f 93       	push	r24
     856:	80 81       	ld	r24, Z
     858:	8f 93       	push	r24
     85a:	8b e7       	ldi	r24, 0x7B	; 123
     85c:	97 e4       	ldi	r25, 0x47	; 71
     85e:	9f 93       	push	r25
     860:	8f 93       	push	r24
     862:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     866:	8d b7       	in	r24, 0x3d	; 61
     868:	9e b7       	in	r25, 0x3e	; 62
     86a:	80 96       	adiw	r24, 0x20	; 32
     86c:	8d bf       	out	0x3d, r24	; 61
     86e:	9e bf       	out	0x3e, r25	; 62
     870:	0e 94 2f 02 	call	0x45e	; 0x45e <AHT10_read>
     874:	28 2f       	mov	r18, r24
     876:	30 e0       	ldi	r19, 0x00	; 0
     878:	20 93 18 4c 	sts	0x4C18, r18	; 0x804c18 <temperature>
     87c:	30 93 19 4c 	sts	0x4C19, r19	; 0x804c19 <temperature+0x1>
     880:	1f 92       	push	r1
     882:	8f 93       	push	r24
     884:	8d e8       	ldi	r24, 0x8D	; 141
     886:	97 e4       	ldi	r25, 0x47	; 71
     888:	9f 93       	push	r25
     88a:	8f 93       	push	r24
     88c:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     890:	85 ea       	ldi	r24, 0xA5	; 165
     892:	9a e4       	ldi	r25, 0x4A	; 74
     894:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     898:	85 ea       	ldi	r24, 0xA5	; 165
     89a:	9a e4       	ldi	r25, 0x4A	; 74
     89c:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     8a0:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>
     8a4:	0f 90       	pop	r0
     8a6:	0f 90       	pop	r0
     8a8:	0f 90       	pop	r0
     8aa:	0f 90       	pop	r0
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	08 95       	ret

000008b2 <printSelectFan>:
     8b2:	8f e9       	ldi	r24, 0x9F	; 159
     8b4:	97 e4       	ldi	r25, 0x47	; 71
     8b6:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     8ba:	8b ea       	ldi	r24, 0xAB	; 171
     8bc:	97 e4       	ldi	r25, 0x47	; 71
     8be:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     8c2:	86 ec       	ldi	r24, 0xC6	; 198
     8c4:	97 e4       	ldi	r25, 0x47	; 71
     8c6:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
     8ca:	08 95       	ret

000008cc <compareCommands>:
     8cc:	0f 93       	push	r16
     8ce:	1f 93       	push	r17
     8d0:	cf 93       	push	r28
     8d2:	8c 01       	movw	r16, r24
     8d4:	c0 e0       	ldi	r28, 0x00	; 0
     8d6:	0c c0       	rjmp	.+24     	; 0x8f0 <compareCommands+0x24>
     8d8:	84 e6       	ldi	r24, 0x64	; 100
     8da:	c8 9f       	mul	r28, r24
     8dc:	b0 01       	movw	r22, r0
     8de:	11 24       	eor	r1, r1
     8e0:	62 5f       	subi	r22, 0xF2	; 242
     8e2:	7f 4b       	sbci	r23, 0xBF	; 191
     8e4:	c8 01       	movw	r24, r16
     8e6:	0e 94 5f 0b 	call	0x16be	; 0x16be <strcmp>
     8ea:	89 2b       	or	r24, r25
     8ec:	29 f0       	breq	.+10     	; 0x8f8 <compareCommands+0x2c>
     8ee:	cf 5f       	subi	r28, 0xFF	; 255
     8f0:	cd 30       	cpi	r28, 0x0D	; 13
     8f2:	90 f3       	brcs	.-28     	; 0x8d8 <compareCommands+0xc>
     8f4:	8f ef       	ldi	r24, 0xFF	; 255
     8f6:	01 c0       	rjmp	.+2      	; 0x8fa <compareCommands+0x2e>
     8f8:	8c 2f       	mov	r24, r28
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	0f 91       	pop	r16
     900:	08 95       	ret

00000902 <USART3_sendChar>:
     902:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     906:	95 ff       	sbrs	r25, 5
     908:	fc cf       	rjmp	.-8      	; 0x902 <USART3_sendChar>
     90a:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
     90e:	08 95       	ret

00000910 <USART3_printChar>:
     910:	0e 94 81 04 	call	0x902	; 0x902 <USART3_sendChar>
     914:	80 e0       	ldi	r24, 0x00	; 0
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	08 95       	ret

0000091a <USART3_readChar>:
     91a:	cf 93       	push	r28
     91c:	80 91 64 08 	lds	r24, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     920:	88 23       	and	r24, r24
     922:	e4 f7       	brge	.-8      	; 0x91c <USART3_readChar+0x2>
     924:	c0 91 60 08 	lds	r28, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7e0860>
     928:	8c 2f       	mov	r24, r28
     92a:	0e 94 81 04 	call	0x902	; 0x902 <USART3_sendChar>
     92e:	8c 2f       	mov	r24, r28
     930:	cf 91       	pop	r28
     932:	08 95       	ret

00000934 <USART3_init>:
     934:	e0 e2       	ldi	r30, 0x20	; 32
     936:	f4 e0       	ldi	r31, 0x04	; 4
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	81 83       	std	Z+1, r24	; 0x01
     93c:	82 e0       	ldi	r24, 0x02	; 2
     93e:	82 83       	std	Z+2, r24	; 0x02
     940:	e0 e6       	ldi	r30, 0x60	; 96
     942:	f8 e0       	ldi	r31, 0x08	; 8
     944:	85 81       	ldd	r24, Z+5	; 0x05
     946:	80 68       	ori	r24, 0x80	; 128
     948:	85 83       	std	Z+5, r24	; 0x05
     94a:	83 e8       	ldi	r24, 0x83	; 131
     94c:	96 e0       	ldi	r25, 0x06	; 6
     94e:	80 87       	std	Z+8, r24	; 0x08
     950:	91 87       	std	Z+9, r25	; 0x09
     952:	86 81       	ldd	r24, Z+6	; 0x06
     954:	80 6c       	ori	r24, 0xC0	; 192
     956:	86 83       	std	Z+6, r24	; 0x06
     958:	80 e0       	ldi	r24, 0x00	; 0
     95a:	90 e4       	ldi	r25, 0x40	; 64
     95c:	80 93 c6 4d 	sts	0x4DC6, r24	; 0x804dc6 <__iob+0x2>
     960:	90 93 c7 4d 	sts	0x4DC7, r25	; 0x804dc7 <__iob+0x3>
     964:	08 95       	ret

00000966 <PORT_init>:
     966:	8b e1       	ldi	r24, 0x1B	; 27
     968:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x7e0461>
     96c:	08 95       	ret

0000096e <TCA0_init>:
     96e:	83 e0       	ldi	r24, 0x03	; 3
     970:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
     974:	e0 e0       	ldi	r30, 0x00	; 0
     976:	fa e0       	ldi	r31, 0x0A	; 10
     978:	93 e3       	ldi	r25, 0x33	; 51
     97a:	91 83       	std	Z+1, r25	; 0x01
     97c:	21 e0       	ldi	r18, 0x01	; 1
     97e:	23 83       	std	Z+3, r18	; 0x03
     980:	91 83       	std	Z+1, r25	; 0x01
     982:	9f e4       	ldi	r25, 0x4F	; 79
     984:	96 a3       	std	Z+38, r25	; 0x26
     986:	10 a6       	std	Z+40, r1	; 0x28
     988:	97 a3       	std	Z+39, r25	; 0x27
     98a:	11 a6       	std	Z+41, r1	; 0x29
     98c:	12 a6       	std	Z+42, r1	; 0x2a
     98e:	13 a6       	std	Z+43, r1	; 0x2b
     990:	80 83       	st	Z, r24
     992:	08 95       	ret

00000994 <TCB0_init>:
     994:	e0 e2       	ldi	r30, 0x20	; 32
     996:	f4 e0       	ldi	r31, 0x04	; 4
     998:	80 81       	ld	r24, Z
     99a:	8f 7e       	andi	r24, 0xEF	; 239
     99c:	80 83       	st	Z, r24
     99e:	84 89       	ldd	r24, Z+20	; 0x14
     9a0:	88 60       	ori	r24, 0x08	; 8
     9a2:	84 8b       	std	Z+20, r24	; 0x14
     9a4:	e0 e0       	ldi	r30, 0x00	; 0
     9a6:	fb e0       	ldi	r31, 0x0B	; 11
     9a8:	85 e0       	ldi	r24, 0x05	; 5
     9aa:	80 83       	st	Z, r24
     9ac:	84 e0       	ldi	r24, 0x04	; 4
     9ae:	81 83       	std	Z+1, r24	; 0x01
     9b0:	81 e0       	ldi	r24, 0x01	; 1
     9b2:	85 83       	std	Z+5, r24	; 0x05
     9b4:	91 e4       	ldi	r25, 0x41	; 65
     9b6:	94 83       	std	Z+4, r25	; 0x04
     9b8:	e0 e0       	ldi	r30, 0x00	; 0
     9ba:	f2 e0       	ldi	r31, 0x02	; 2
     9bc:	9c e4       	ldi	r25, 0x4C	; 76
     9be:	90 8b       	std	Z+16, r25	; 0x10
     9c0:	86 af       	std	Z+62, r24	; 0x3e
     9c2:	08 95       	ret

000009c4 <TCB1_init>:
     9c4:	e0 e2       	ldi	r30, 0x20	; 32
     9c6:	f4 e0       	ldi	r31, 0x04	; 4
     9c8:	80 81       	ld	r24, Z
     9ca:	8f 7d       	andi	r24, 0xDF	; 223
     9cc:	80 83       	st	Z, r24
     9ce:	85 89       	ldd	r24, Z+21	; 0x15
     9d0:	88 60       	ori	r24, 0x08	; 8
     9d2:	85 8b       	std	Z+21, r24	; 0x15
     9d4:	e0 e1       	ldi	r30, 0x10	; 16
     9d6:	fb e0       	ldi	r31, 0x0B	; 11
     9d8:	85 e0       	ldi	r24, 0x05	; 5
     9da:	80 83       	st	Z, r24
     9dc:	84 e0       	ldi	r24, 0x04	; 4
     9de:	81 83       	std	Z+1, r24	; 0x01
     9e0:	81 e0       	ldi	r24, 0x01	; 1
     9e2:	85 83       	std	Z+5, r24	; 0x05
     9e4:	81 e4       	ldi	r24, 0x41	; 65
     9e6:	84 83       	std	Z+4, r24	; 0x04
     9e8:	8d e4       	ldi	r24, 0x4D	; 77
     9ea:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <__TEXT_REGION_LENGTH__+0x7e0211>
     9ee:	82 e0       	ldi	r24, 0x02	; 2
     9f0:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__TEXT_REGION_LENGTH__+0x7e0240>
     9f4:	08 95       	ret

000009f6 <status_eeprom>:
     9f6:	80 91 02 10 	lds	r24, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7e1002>
     9fa:	81 fd       	sbrc	r24, 1
     9fc:	fc cf       	rjmp	.-8      	; 0x9f6 <status_eeprom>
     9fe:	08 95       	ret

00000a00 <RTC_init>:


void RTC_init(void)
{
	// Enables the source clock for the RTC counter
	RTC.CTRLA = RTC_RTCEN_bm | RTC_PRESCALER_DIV1_gc; // Enable RTC, select presaler
     a00:	e0 e4       	ldi	r30, 0x40	; 64
     a02:	f1 e0       	ldi	r31, 0x01	; 1
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	80 83       	st	Z, r24
	//RTC.INTCTRL = RTC_OVF_bm;
	RTC.CLKSEL = RTC_CLKSEL_OSC1K_gc; // Select source for the RTC clock
     a08:	87 83       	std	Z+7, r24	; 0x07
	
	// Enables the PIT (Periodic Interrupt Timer)
	RTC.PITCTRLA = RTC_PITEN_bm | RTC_PERIOD_CYC1024_gc; // Enable PIT and select number of clock cycles between interrupt
     a0a:	99 e4       	ldi	r25, 0x49	; 73
     a0c:	90 8b       	std	Z+16, r25	; 0x10
	RTC.PITINTCTRL = RTC_PI_bm;	// Enable interrupt
     a0e:	82 8b       	std	Z+18, r24	; 0x12
     a10:	08 95       	ret

00000a12 <__vector_6>:
}

// RTC interrupt
ISR(RTC_PIT_vect)
{
     a12:	1f 92       	push	r1
     a14:	0f 92       	push	r0
     a16:	0f b6       	in	r0, 0x3f	; 63
     a18:	0f 92       	push	r0
     a1a:	11 24       	eor	r1, r1
     a1c:	8f 93       	push	r24
     a1e:	9f 93       	push	r25
	counter ++; // Counter represent seconds
     a20:	80 91 2c 4c 	lds	r24, 0x4C2C	; 0x804c2c <counter>
     a24:	90 91 2d 4c 	lds	r25, 0x4C2D	; 0x804c2d <counter+0x1>
     a28:	01 96       	adiw	r24, 0x01	; 1
     a2a:	80 93 2c 4c 	sts	0x4C2C, r24	; 0x804c2c <counter>
     a2e:	90 93 2d 4c 	sts	0x4C2D, r25	; 0x804c2d <counter+0x1>
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
     a32:	81 e0       	ldi	r24, 0x01	; 1
     a34:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x7e0153>
}
     a38:	9f 91       	pop	r25
     a3a:	8f 91       	pop	r24
     a3c:	0f 90       	pop	r0
     a3e:	0f be       	out	0x3f, r0	; 63
     a40:	0f 90       	pop	r0
     a42:	1f 90       	pop	r1
     a44:	18 95       	reti

00000a46 <__vector_14>:
{
	read_commands();
}

ISR(TCB0_INT_vect)// starting interrupt for reading pwm from fan1
{
     a46:	1f 92       	push	r1
     a48:	0f 92       	push	r0
     a4a:	0f b6       	in	r0, 0x3f	; 63
     a4c:	0f 92       	push	r0
     a4e:	11 24       	eor	r1, r1
     a50:	0b b6       	in	r0, 0x3b	; 59
     a52:	0f 92       	push	r0
     a54:	2f 93       	push	r18
     a56:	3f 93       	push	r19
     a58:	8f 93       	push	r24
     a5a:	af 93       	push	r26
     a5c:	bf 93       	push	r27
     a5e:	ef 93       	push	r30
     a60:	ff 93       	push	r31
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     a62:	a0 e0       	ldi	r26, 0x00	; 0
     a64:	bb e0       	ldi	r27, 0x0B	; 11
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	16 96       	adiw	r26, 0x06	; 6
     a6a:	8c 93       	st	X, r24
     a6c:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings1[pulseWidthIndex1] = TCB0.CCMP;
     a6e:	80 91 a6 4b 	lds	r24, 0x4BA6	; 0x804ba6 <pulseWidthIndex1>
     a72:	e8 2f       	mov	r30, r24
     a74:	f0 e0       	ldi	r31, 0x00	; 0
     a76:	1c 96       	adiw	r26, 0x0c	; 12
     a78:	2d 91       	ld	r18, X+
     a7a:	3c 91       	ld	r19, X
     a7c:	1d 97       	sbiw	r26, 0x0d	; 13
     a7e:	ee 0f       	add	r30, r30
     a80:	ff 1f       	adc	r31, r31
     a82:	e4 50       	subi	r30, 0x04	; 4
     a84:	f3 4b       	sbci	r31, 0xB3	; 179
     a86:	20 83       	st	Z, r18
     a88:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex1++;
     a8a:	8f 5f       	subi	r24, 0xFF	; 255
     a8c:	80 93 a6 4b 	sts	0x4BA6, r24	; 0x804ba6 <pulseWidthIndex1>
	if (pulseWidthIndex1 >= 100) {
     a90:	84 36       	cpi	r24, 0x64	; 100
     a92:	10 f0       	brcs	.+4      	; 0xa98 <__vector_14+0x52>
		pulseWidthIndex1 = 0; // Reset index when all readings are stored
     a94:	10 92 a6 4b 	sts	0x4BA6, r1	; 0x804ba6 <pulseWidthIndex1>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     a98:	ff 91       	pop	r31
     a9a:	ef 91       	pop	r30
     a9c:	bf 91       	pop	r27
     a9e:	af 91       	pop	r26
     aa0:	8f 91       	pop	r24
     aa2:	3f 91       	pop	r19
     aa4:	2f 91       	pop	r18
     aa6:	0f 90       	pop	r0
     aa8:	0b be       	out	0x3b, r0	; 59
     aaa:	0f 90       	pop	r0
     aac:	0f be       	out	0x3f, r0	; 63
     aae:	0f 90       	pop	r0
     ab0:	1f 90       	pop	r1
     ab2:	18 95       	reti

00000ab4 <__vector_15>:


ISR(TCB1_INT_vect)// starting interrupt for reading pwm from fan1
{
     ab4:	1f 92       	push	r1
     ab6:	0f 92       	push	r0
     ab8:	0f b6       	in	r0, 0x3f	; 63
     aba:	0f 92       	push	r0
     abc:	11 24       	eor	r1, r1
     abe:	0b b6       	in	r0, 0x3b	; 59
     ac0:	0f 92       	push	r0
     ac2:	2f 93       	push	r18
     ac4:	3f 93       	push	r19
     ac6:	8f 93       	push	r24
     ac8:	af 93       	push	r26
     aca:	bf 93       	push	r27
     acc:	ef 93       	push	r30
     ace:	ff 93       	push	r31
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     ad0:	a0 e1       	ldi	r26, 0x10	; 16
     ad2:	bb e0       	ldi	r27, 0x0B	; 11
     ad4:	81 e0       	ldi	r24, 0x01	; 1
     ad6:	16 96       	adiw	r26, 0x06	; 6
     ad8:	8c 93       	st	X, r24
     ada:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings2[pulseWidthIndex2] = TCB1.CCMP;
     adc:	80 91 a5 4b 	lds	r24, 0x4BA5	; 0x804ba5 <pulseWidthIndex2>
     ae0:	e8 2f       	mov	r30, r24
     ae2:	f0 e0       	ldi	r31, 0x00	; 0
     ae4:	1c 96       	adiw	r26, 0x0c	; 12
     ae6:	2d 91       	ld	r18, X+
     ae8:	3c 91       	ld	r19, X
     aea:	1d 97       	sbiw	r26, 0x0d	; 13
     aec:	ee 0f       	add	r30, r30
     aee:	ff 1f       	adc	r31, r31
     af0:	ec 5c       	subi	r30, 0xCC	; 204
     af2:	f3 4b       	sbci	r31, 0xB3	; 179
     af4:	20 83       	st	Z, r18
     af6:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex2++;
     af8:	8f 5f       	subi	r24, 0xFF	; 255
     afa:	80 93 a5 4b 	sts	0x4BA5, r24	; 0x804ba5 <pulseWidthIndex2>
	if (pulseWidthIndex2 >= 100) {
     afe:	84 36       	cpi	r24, 0x64	; 100
     b00:	10 f0       	brcs	.+4      	; 0xb06 <__vector_15+0x52>
		pulseWidthIndex2 = 0; // Reset index when all readings are stored
     b02:	10 92 a5 4b 	sts	0x4BA5, r1	; 0x804ba5 <pulseWidthIndex2>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     b06:	ff 91       	pop	r31
     b08:	ef 91       	pop	r30
     b0a:	bf 91       	pop	r27
     b0c:	af 91       	pop	r26
     b0e:	8f 91       	pop	r24
     b10:	3f 91       	pop	r19
     b12:	2f 91       	pop	r18
     b14:	0f 90       	pop	r0
     b16:	0b be       	out	0x3b, r0	; 59
     b18:	0f 90       	pop	r0
     b1a:	0f be       	out	0x3f, r0	; 63
     b1c:	0f 90       	pop	r0
     b1e:	1f 90       	pop	r1
     b20:	18 95       	reti

00000b22 <average>:
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
     b22:	0f 93       	push	r16
     b24:	1f 93       	push	r17
     b26:	9c 01       	movw	r18, r24
     b28:	06 2f       	mov	r16, r22
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     b2a:	90 e0       	ldi	r25, 0x00	; 0
	//readPulseWidth = TCB0.CCMP;
	
}
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
     b2c:	40 e0       	ldi	r20, 0x00	; 0
     b2e:	50 e0       	ldi	r21, 0x00	; 0
     b30:	ba 01       	movw	r22, r20
	for (uint8_t i = 0; i < size; i++) {
     b32:	0e c0       	rjmp	.+28     	; 0xb50 <average+0x2e>
		sum += array[i];
     b34:	e9 2f       	mov	r30, r25
     b36:	f0 e0       	ldi	r31, 0x00	; 0
     b38:	ee 0f       	add	r30, r30
     b3a:	ff 1f       	adc	r31, r31
     b3c:	e2 0f       	add	r30, r18
     b3e:	f3 1f       	adc	r31, r19
     b40:	01 90       	ld	r0, Z+
     b42:	f0 81       	ld	r31, Z
     b44:	e0 2d       	mov	r30, r0
     b46:	4e 0f       	add	r20, r30
     b48:	5f 1f       	adc	r21, r31
     b4a:	61 1d       	adc	r22, r1
     b4c:	71 1d       	adc	r23, r1
	
}
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     b4e:	9f 5f       	subi	r25, 0xFF	; 255
     b50:	90 17       	cp	r25, r16
     b52:	80 f3       	brcs	.-32     	; 0xb34 <average+0x12>
		sum += array[i];
	}
	return (uint16_t)(sum / size);
     b54:	10 e0       	ldi	r17, 0x00	; 0
     b56:	20 e0       	ldi	r18, 0x00	; 0
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	cb 01       	movw	r24, r22
     b5c:	ba 01       	movw	r22, r20
     b5e:	a9 01       	movw	r20, r18
     b60:	98 01       	movw	r18, r16
     b62:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__udivmodsi4>
}
     b66:	c9 01       	movw	r24, r18
     b68:	1f 91       	pop	r17
     b6a:	0f 91       	pop	r16
     b6c:	08 95       	ret

00000b6e <pwm_to_rpm1>:


uint16_t pwm_to_rpm1()
{
	uint16_t pulseWidthAverage1 = average(pulseWidthReadings1, 100);
     b6e:	64 e6       	ldi	r22, 0x64	; 100
     b70:	8c ef       	ldi	r24, 0xFC	; 252
     b72:	9c e4       	ldi	r25, 0x4C	; 76
     b74:	0e 94 91 05 	call	0xb22	; 0xb22 <average>
	uint32_t rpm1 = ((F_CPU*60)/(4*pulseWidthAverage1*2));
     b78:	88 0f       	add	r24, r24
     b7a:	99 1f       	adc	r25, r25
     b7c:	88 0f       	add	r24, r24
     b7e:	99 1f       	adc	r25, r25
     b80:	88 0f       	add	r24, r24
     b82:	99 1f       	adc	r25, r25
     b84:	9c 01       	movw	r18, r24
     b86:	40 e0       	ldi	r20, 0x00	; 0
     b88:	50 e0       	ldi	r21, 0x00	; 0
     b8a:	60 e0       	ldi	r22, 0x00	; 0
     b8c:	7c e1       	ldi	r23, 0x1C	; 28
     b8e:	8e e4       	ldi	r24, 0x4E	; 78
     b90:	9e e0       	ldi	r25, 0x0E	; 14
     b92:	0e 94 19 0b 	call	0x1632	; 0x1632 <__divmodsi4>
	return (uint16_t)rpm1;
	
}
     b96:	c9 01       	movw	r24, r18
     b98:	08 95       	ret

00000b9a <pwm_to_rpm2>:


uint16_t pwm_to_rpm2()
{
	uint16_t pulseWidthAverage2 = average(pulseWidthReadings2, 100);
     b9a:	64 e6       	ldi	r22, 0x64	; 100
     b9c:	84 e3       	ldi	r24, 0x34	; 52
     b9e:	9c e4       	ldi	r25, 0x4C	; 76
     ba0:	0e 94 91 05 	call	0xb22	; 0xb22 <average>
	uint32_t rpm2 = ((F_CPU*60)/(4*pulseWidthAverage2*2));
     ba4:	88 0f       	add	r24, r24
     ba6:	99 1f       	adc	r25, r25
     ba8:	88 0f       	add	r24, r24
     baa:	99 1f       	adc	r25, r25
     bac:	88 0f       	add	r24, r24
     bae:	99 1f       	adc	r25, r25
     bb0:	9c 01       	movw	r18, r24
     bb2:	40 e0       	ldi	r20, 0x00	; 0
     bb4:	50 e0       	ldi	r21, 0x00	; 0
     bb6:	60 e0       	ldi	r22, 0x00	; 0
     bb8:	7c e1       	ldi	r23, 0x1C	; 28
     bba:	8e e4       	ldi	r24, 0x4E	; 78
     bbc:	9e e0       	ldi	r25, 0x0E	; 14
     bbe:	0e 94 19 0b 	call	0x1632	; 0x1632 <__divmodsi4>
	return (uint16_t)rpm2;
	
}
     bc2:	c9 01       	movw	r24, r18
     bc4:	08 95       	ret

00000bc6 <average_values_for_tach>:
uint8_t alarm(uint8_t percentage, uint8_t threshold);
uint8_t calculate_percentage(float old_value, uint16_t current_value);

// Calculating average RPM at max fan speed
FanSpeeds average_values_for_tach()
{
     bc6:	4f 92       	push	r4
     bc8:	5f 92       	push	r5
     bca:	6f 92       	push	r6
     bcc:	7f 92       	push	r7
     bce:	8f 92       	push	r8
     bd0:	9f 92       	push	r9
     bd2:	af 92       	push	r10
     bd4:	bf 92       	push	r11
     bd6:	cf 92       	push	r12
     bd8:	df 92       	push	r13
     bda:	ef 92       	push	r14
     bdc:	ff 92       	push	r15
     bde:	0f 93       	push	r16
     be0:	1f 93       	push	r17
     be2:	cf 93       	push	r28
     be4:	df 93       	push	r29
	// SETT DETTE I IF MED FLAGG???
	
	// Set value to all fans
	TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MAX_VALUE;
     be6:	e0 e0       	ldi	r30, 0x00	; 0
     be8:	fa e0       	ldi	r31, 0x0A	; 10
     bea:	8f e4       	ldi	r24, 0x4F	; 79
     bec:	80 a7       	std	Z+40, r24	; 0x28
	TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MAX_VALUE;
     bee:	82 a7       	std	Z+42, r24	; 0x2a
	TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MAX_VALUE;
     bf0:	81 a7       	std	Z+41, r24	; 0x29
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
     bf2:	83 a7       	std	Z+43, r24	; 0x2b
	
	printf("Diagnose startet! \r\n");
     bf4:	81 e0       	ldi	r24, 0x01	; 1
     bf6:	98 e4       	ldi	r25, 0x48	; 72
     bf8:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
	uint32_t sum_RPM_fan2 = 0;
	uint16_t average_read_value_fan1;
	uint16_t average_read_value_fan2;
	
	uint16_t num_of_readings = 0;
	uint16_t compare_counter_time = counter; // reset counter for compare
     bfc:	20 91 2c 4c 	lds	r18, 0x4C2C	; 0x804c2c <counter>
     c00:	30 91 2d 4c 	lds	r19, 0x4C2D	; 0x804c2d <counter+0x1>
	
	while (counter - compare_counter_time <= 2)
     c04:	80 91 2c 4c 	lds	r24, 0x4C2C	; 0x804c2c <counter>
     c08:	90 91 2d 4c 	lds	r25, 0x4C2D	; 0x804c2d <counter+0x1>
     c0c:	82 1b       	sub	r24, r18
     c0e:	93 0b       	sbc	r25, r19
     c10:	03 97       	sbiw	r24, 0x03	; 3
     c12:	c0 f3       	brcs	.-16     	; 0xc04 <average_values_for_tach+0x3e>
	{
		;
	}
	compare_counter_time = counter;
     c14:	00 91 2c 4c 	lds	r16, 0x4C2C	; 0x804c2c <counter>
     c18:	10 91 2d 4c 	lds	r17, 0x4C2D	; 0x804c2d <counter+0x1>
	uint32_t sum_RPM_fan1 = 0;
	uint32_t sum_RPM_fan2 = 0;
	uint16_t average_read_value_fan1;
	uint16_t average_read_value_fan2;
	
	uint16_t num_of_readings = 0;
     c1c:	c0 e0       	ldi	r28, 0x00	; 0
     c1e:	d0 e0       	ldi	r29, 0x00	; 0
	
	printf("Diagnose startet! \r\n");
	
	// For average read values for two fans
	uint32_t sum_RPM_fan1 = 0;
	uint32_t sum_RPM_fan2 = 0;
     c20:	81 2c       	mov	r8, r1
     c22:	91 2c       	mov	r9, r1
     c24:	54 01       	movw	r10, r8
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
	
	printf("Diagnose startet! \r\n");
	
	// For average read values for two fans
	uint32_t sum_RPM_fan1 = 0;
     c26:	c1 2c       	mov	r12, r1
     c28:	d1 2c       	mov	r13, r1
     c2a:	76 01       	movw	r14, r12
	{
		;
	}
	compare_counter_time = counter;
	
	while (counter - compare_counter_time <= 10)
     c2c:	0d c0       	rjmp	.+26     	; 0xc48 <average_values_for_tach+0x82>
	{
		sum_RPM_fan1 += pwm_to_rpm1();
     c2e:	0e 94 b7 05 	call	0xb6e	; 0xb6e <pwm_to_rpm1>
     c32:	c8 0e       	add	r12, r24
     c34:	d9 1e       	adc	r13, r25
     c36:	e1 1c       	adc	r14, r1
     c38:	f1 1c       	adc	r15, r1
		sum_RPM_fan2 += pwm_to_rpm2();
     c3a:	0e 94 cd 05 	call	0xb9a	; 0xb9a <pwm_to_rpm2>
     c3e:	88 0e       	add	r8, r24
     c40:	99 1e       	adc	r9, r25
     c42:	a1 1c       	adc	r10, r1
     c44:	b1 1c       	adc	r11, r1
		
		num_of_readings ++;
     c46:	21 96       	adiw	r28, 0x01	; 1
	{
		;
	}
	compare_counter_time = counter;
	
	while (counter - compare_counter_time <= 10)
     c48:	80 91 2c 4c 	lds	r24, 0x4C2C	; 0x804c2c <counter>
     c4c:	90 91 2d 4c 	lds	r25, 0x4C2D	; 0x804c2d <counter+0x1>
     c50:	80 1b       	sub	r24, r16
     c52:	91 0b       	sbc	r25, r17
     c54:	0b 97       	sbiw	r24, 0x0b	; 11
     c56:	58 f3       	brcs	.-42     	; 0xc2e <average_values_for_tach+0x68>
		sum_RPM_fan2 += pwm_to_rpm2();
		
		num_of_readings ++;
	}
	
	average_read_value_fan1 = sum_RPM_fan1 / num_of_readings;
     c58:	2e 01       	movw	r4, r28
     c5a:	61 2c       	mov	r6, r1
     c5c:	71 2c       	mov	r7, r1
     c5e:	c7 01       	movw	r24, r14
     c60:	b6 01       	movw	r22, r12
     c62:	a3 01       	movw	r20, r6
     c64:	92 01       	movw	r18, r4
     c66:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__udivmodsi4>
     c6a:	69 01       	movw	r12, r18
     c6c:	7a 01       	movw	r14, r20
	average_read_value_fan2 = sum_RPM_fan2 / num_of_readings;
     c6e:	c5 01       	movw	r24, r10
     c70:	b4 01       	movw	r22, r8
     c72:	a3 01       	movw	r20, r6
     c74:	92 01       	movw	r18, r4
     c76:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__udivmodsi4>
     c7a:	49 01       	movw	r8, r18
     c7c:	5a 01       	movw	r10, r20
	
	printf("Number of readings: %d\r\n", num_of_readings);
     c7e:	df 93       	push	r29
     c80:	cf 93       	push	r28
     c82:	85 e1       	ldi	r24, 0x15	; 21
     c84:	98 e4       	ldi	r25, 0x48	; 72
     c86:	9f 93       	push	r25
     c88:	8f 93       	push	r24
     c8a:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
	
	// To return multiple values from the function
	FanSpeeds average_read_values;
	average_read_values.fan1 = average_read_value_fan1;
     c8e:	b6 01       	movw	r22, r12
	average_read_values.fan2 = average_read_value_fan2;
     c90:	c4 01       	movw	r24, r8
	
	// FJERNES, BARE FOR TESTING
	TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;
     c92:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
	
	return average_read_values;
     c96:	0f 90       	pop	r0
     c98:	0f 90       	pop	r0
     c9a:	0f 90       	pop	r0
     c9c:	0f 90       	pop	r0
}
     c9e:	df 91       	pop	r29
     ca0:	cf 91       	pop	r28
     ca2:	1f 91       	pop	r17
     ca4:	0f 91       	pop	r16
     ca6:	ff 90       	pop	r15
     ca8:	ef 90       	pop	r14
     caa:	df 90       	pop	r13
     cac:	cf 90       	pop	r12
     cae:	bf 90       	pop	r11
     cb0:	af 90       	pop	r10
     cb2:	9f 90       	pop	r9
     cb4:	8f 90       	pop	r8
     cb6:	7f 90       	pop	r7
     cb8:	6f 90       	pop	r6
     cba:	5f 90       	pop	r5
     cbc:	4f 90       	pop	r4
     cbe:	08 95       	ret

00000cc0 <predict_error>:

// Predicting failures with fans
void predict_error()
{	
     cc0:	cf 92       	push	r12
     cc2:	df 92       	push	r13
     cc4:	ef 92       	push	r14
     cc6:	ff 92       	push	r15
     cc8:	0f 93       	push	r16
     cca:	1f 93       	push	r17
     ccc:	cf 93       	push	r28
     cce:	df 93       	push	r29
	// Local struct for current RPM speeds fan1 and fan2
	FanSpeeds current_RPM_values;
	// Call function to get the average fan speeds and save in local variables
	current_RPM_values = average_values_for_tach();
     cd0:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <average_values_for_tach>
     cd4:	c6 2e       	mov	r12, r22
     cd6:	d7 2e       	mov	r13, r23
     cd8:	08 2f       	mov	r16, r24
     cda:	19 2f       	mov	r17, r25
	uint16_t current_RPM_value_fan1 = current_RPM_values.fan1;
	uint16_t current_RPM_value_fan2 = current_RPM_values.fan2;
	
	printf("Gjennomsnitt fan 1: %d\r\n", current_RPM_value_fan1);
     cdc:	7f 93       	push	r23
     cde:	6f 93       	push	r22
     ce0:	8e e2       	ldi	r24, 0x2E	; 46
     ce2:	98 e4       	ldi	r25, 0x48	; 72
     ce4:	9f 93       	push	r25
     ce6:	8f 93       	push	r24
     ce8:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
	printf("Gjennomsnitt fan 2: %d\r\n", current_RPM_value_fan2);
     cec:	1f 93       	push	r17
     cee:	0f 93       	push	r16
     cf0:	87 e4       	ldi	r24, 0x47	; 71
     cf2:	98 e4       	ldi	r25, 0x48	; 72
     cf4:	9f 93       	push	r25
     cf6:	8f 93       	push	r24
     cf8:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
	printf("\r\n");
     cfc:	85 ea       	ldi	r24, 0xA5	; 165
     cfe:	9a e4       	ldi	r25, 0x4A	; 74
     d00:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
	printf("\r\n");
     d04:	85 ea       	ldi	r24, 0xA5	; 165
     d06:	9a e4       	ldi	r25, 0x4A	; 74
     d08:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
	
	// EEPROM values
	uint16_t  old_value_fan1 = read_value_EE_fan1;
     d0c:	c0 91 23 4c 	lds	r28, 0x4C23	; 0x804c23 <read_value_EE_fan1>
     d10:	d0 91 24 4c 	lds	r29, 0x4C24	; 0x804c24 <read_value_EE_fan1+0x1>
	uint16_t  old_value_fan2 = read_value_EE_fan2;
     d14:	e0 90 1b 4c 	lds	r14, 0x4C1B	; 0x804c1b <read_value_EE_fan2>
     d18:	f0 90 1c 4c 	lds	r15, 0x4C1C	; 0x804c1c <read_value_EE_fan2+0x1>
	
	// More variables for instant prediction, it will be many with upscaling
	
	//TESTING
	printf("old fan 2: %d\r\n", old_value_fan1);
     d1c:	df 93       	push	r29
     d1e:	cf 93       	push	r28
     d20:	80 e6       	ldi	r24, 0x60	; 96
     d22:	98 e4       	ldi	r25, 0x48	; 72
     d24:	9f 93       	push	r25
     d26:	8f 93       	push	r24
     d28:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
	
	// Percentage for prediction of error
	uint8_t percentage_fan1_eeprom = calculate_percentage(old_value_fan1, current_RPM_value_fan1);
     d2c:	be 01       	movw	r22, r28
     d2e:	80 e0       	ldi	r24, 0x00	; 0
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__floatunsisf>
     d36:	4c 2d       	mov	r20, r12
     d38:	5d 2d       	mov	r21, r13
     d3a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <calculate_percentage>
     d3e:	d8 2f       	mov	r29, r24
	uint8_t percentage_fan2_eeprom = calculate_percentage(old_value_fan2, current_RPM_value_fan2);
     d40:	b7 01       	movw	r22, r14
     d42:	80 e0       	ldi	r24, 0x00	; 0
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__floatunsisf>
     d4a:	40 2f       	mov	r20, r16
     d4c:	51 2f       	mov	r21, r17
     d4e:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <calculate_percentage>
     d52:	c8 2f       	mov	r28, r24
	
	uint8_t percentage_fan1_previous = calculate_percentage(previous_RPM_fan1, current_RPM_value_fan1);
	uint8_t percentage_fan2_previous = calculate_percentage(previous_RPM_fan2, current_RPM_value_fan2);
	
	// For testing
	printf("PROSENT fan 1: %d\r\n", percentage_fan1_eeprom);
     d54:	1f 92       	push	r1
     d56:	df 93       	push	r29
     d58:	80 e7       	ldi	r24, 0x70	; 112
     d5a:	98 e4       	ldi	r25, 0x48	; 72
     d5c:	9f 93       	push	r25
     d5e:	8f 93       	push	r24
     d60:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
	printf("PROSENT fan 2: %d\r\n", percentage_fan2_eeprom);
     d64:	1f 92       	push	r1
     d66:	cf 93       	push	r28
     d68:	84 e8       	ldi	r24, 0x84	; 132
     d6a:	98 e4       	ldi	r25, 0x48	; 72
     d6c:	9f 93       	push	r25
     d6e:	8f 93       	push	r24
     d70:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
	
	// Send a threshold value can work
	// Under treshold percentage set of a alarm. originally set to 90% for both alarm
	uint8_t fan1_alarm_long_term =  alarm(percentage_fan1_eeprom, threshold_percentage);
     d74:	f0 90 22 45 	lds	r15, 0x4522	; 0x804522 <threshold_percentage>
     d78:	6f 2d       	mov	r22, r15
     d7a:	8d 2f       	mov	r24, r29
     d7c:	0e 94 76 02 	call	0x4ec	; 0x4ec <alarm>
     d80:	e8 2e       	mov	r14, r24
	uint8_t fan2_alarm_long_term = alarm(percentage_fan2_eeprom, threshold_percentage);
     d82:	6f 2d       	mov	r22, r15
     d84:	8c 2f       	mov	r24, r28
     d86:	0e 94 76 02 	call	0x4ec	; 0x4ec <alarm>
     d8a:	f8 2e       	mov	r15, r24
	
	uint8_t fan1_alarm_short_term = alarm(percentage_fan1_eeprom, 90);
     d8c:	6a e5       	ldi	r22, 0x5A	; 90
     d8e:	8d 2f       	mov	r24, r29
     d90:	0e 94 76 02 	call	0x4ec	; 0x4ec <alarm>
     d94:	d8 2f       	mov	r29, r24
	uint8_t fan2_alarm_short_term = alarm(percentage_fan2_eeprom, 90);
     d96:	6a e5       	ldi	r22, 0x5A	; 90
     d98:	8c 2f       	mov	r24, r28
     d9a:	0e 94 76 02 	call	0x4ec	; 0x4ec <alarm>
     d9e:	c8 2f       	mov	r28, r24
	
	// For testing
	printf("STATUS fan 1: %d\r\n", fan1_alarm_long_term);
     da0:	1f 92       	push	r1
     da2:	ef 92       	push	r14
     da4:	88 e9       	ldi	r24, 0x98	; 152
     da6:	98 e4       	ldi	r25, 0x48	; 72
     da8:	9f 93       	push	r25
     daa:	8f 93       	push	r24
     dac:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
	printf("STATUS fan 2: %d\r\n", fan2_alarm_long_term);
     db0:	1f 92       	push	r1
     db2:	ff 92       	push	r15
     db4:	8b ea       	ldi	r24, 0xAB	; 171
     db6:	98 e4       	ldi	r25, 0x48	; 72
     db8:	9f 93       	push	r25
     dba:	8f 93       	push	r24
     dbc:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
	
	if (fan1_alarm_long_term == 1)
     dc0:	8d b7       	in	r24, 0x3d	; 61
     dc2:	9e b7       	in	r25, 0x3e	; 62
     dc4:	4c 96       	adiw	r24, 0x1c	; 28
     dc6:	8d bf       	out	0x3d, r24	; 61
     dc8:	9e bf       	out	0x3e, r25	; 62
     dca:	91 e0       	ldi	r25, 0x01	; 1
     dcc:	e9 12       	cpse	r14, r25
     dce:	04 c0       	rjmp	.+8      	; 0xdd8 <predict_error+0x118>
	{
		// What alarm do we want?
		printf("ALARM fan 1! Type: wear and tear \r\n");
     dd0:	8e eb       	ldi	r24, 0xBE	; 190
     dd2:	98 e4       	ldi	r25, 0x48	; 72
     dd4:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		
	}
	if (fan2_alarm_long_term == 1)
     dd8:	81 e0       	ldi	r24, 0x01	; 1
     dda:	f8 12       	cpse	r15, r24
     ddc:	04 c0       	rjmp	.+8      	; 0xde6 <predict_error+0x126>
	{
		//what alarm do we want?
		printf("ALARM fan 2! Type: wear and tear \r\n");
     dde:	81 ee       	ldi	r24, 0xE1	; 225
     de0:	98 e4       	ldi	r25, 0x48	; 72
     de2:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
	}
	if (fan1_alarm_short_term == 1)
     de6:	d1 30       	cpi	r29, 0x01	; 1
     de8:	21 f4       	brne	.+8      	; 0xdf2 <predict_error+0x132>
	{
		//what alarm do we want?
		printf("ALARM fan 1! Type: momentarily\r\n");
     dea:	84 e0       	ldi	r24, 0x04	; 4
     dec:	99 e4       	ldi	r25, 0x49	; 73
     dee:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
	}
	if (fan2_alarm_short_term == 1)
     df2:	c1 30       	cpi	r28, 0x01	; 1
     df4:	21 f4       	brne	.+8      	; 0xdfe <predict_error+0x13e>
	{
		//what alarm do we want?
		printf("ALARM fan 1! Type: momentarily\r\n");
     df6:	84 e0       	ldi	r24, 0x04	; 4
     df8:	99 e4       	ldi	r25, 0x49	; 73
     dfa:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
	}
	
	// Updates the short term value to predict instant failure
	previous_RPM_fan1 = current_RPM_value_fan1;
     dfe:	c0 92 25 45 	sts	0x4525, r12	; 0x804525 <previous_RPM_fan1>
     e02:	d0 92 26 45 	sts	0x4526, r13	; 0x804526 <previous_RPM_fan1+0x1>
	previous_RPM_fan2 = current_RPM_value_fan2;
     e06:	00 93 23 45 	sts	0x4523, r16	; 0x804523 <previous_RPM_fan2>
     e0a:	10 93 24 45 	sts	0x4524, r17	; 0x804524 <previous_RPM_fan2+0x1>
	
}
     e0e:	df 91       	pop	r29
     e10:	cf 91       	pop	r28
     e12:	1f 91       	pop	r17
     e14:	0f 91       	pop	r16
     e16:	ff 90       	pop	r15
     e18:	ef 90       	pop	r14
     e1a:	df 90       	pop	r13
     e1c:	cf 90       	pop	r12
     e1e:	08 95       	ret

00000e20 <executeCommand>:


	

void executeCommand(uint8_t command_number, char *command)
{
     e20:	cf 93       	push	r28
     e22:	df 93       	push	r29
     e24:	9b 01       	movw	r18, r22
	if (diagnoseIsRunning) {
     e26:	90 91 1a 4c 	lds	r25, 0x4C1A	; 0x804c1a <diagnoseIsRunning>
     e2a:	99 23       	and	r25, r25
     e2c:	49 f0       	breq	.+18     	; 0xe40 <executeCommand+0x20>
		printf("Diagnose is running!\r\n ");
     e2e:	84 e2       	ldi	r24, 0x24	; 36
     e30:	99 e4       	ldi	r25, 0x49	; 73
     e32:	9f 93       	push	r25
     e34:	8f 93       	push	r24
     e36:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
     e3a:	0f 90       	pop	r0
     e3c:	0f 90       	pop	r0
     e3e:	1d c1       	rjmp	.+570    	; 0x107a <executeCommand+0x25a>
	}
	else {
		
	switch ( command_number )
     e40:	48 2f       	mov	r20, r24
     e42:	50 e0       	ldi	r21, 0x00	; 0
     e44:	4d 30       	cpi	r20, 0x0D	; 13
     e46:	51 05       	cpc	r21, r1
     e48:	08 f0       	brcs	.+2      	; 0xe4c <executeCommand+0x2c>
     e4a:	83 c0       	rjmp	.+262    	; 0xf52 <executeCommand+0x132>
     e4c:	fa 01       	movw	r30, r20
     e4e:	e6 58       	subi	r30, 0x86	; 134
     e50:	ff 4f       	sbci	r31, 0xFF	; 255
     e52:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__tablejump2__>
	{
		case 0:
		printf("Received command: fan1\r\n");
     e56:	8c e3       	ldi	r24, 0x3C	; 60
     e58:	99 e4       	ldi	r25, 0x49	; 73
     e5a:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		PrintSelectFanMode();
     e5e:	0e 94 ac 03 	call	0x758	; 0x758 <PrintSelectFanMode>
		chosenFan = FAN1_bm;
     e62:	81 e0       	ldi	r24, 0x01	; 1
     e64:	80 93 aa 4b 	sts	0x4BAA, r24	; 0x804baa <chosenFan>
		break ;
     e68:	08 c1       	rjmp	.+528    	; 0x107a <executeCommand+0x25a>
		
		case 1:
		printf("Received command: fan2\r\n");
     e6a:	84 e5       	ldi	r24, 0x54	; 84
     e6c:	99 e4       	ldi	r25, 0x49	; 73
     e6e:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		PrintSelectFanMode();
     e72:	0e 94 ac 03 	call	0x758	; 0x758 <PrintSelectFanMode>
		chosenFan = FAN2_bm;
     e76:	82 e0       	ldi	r24, 0x02	; 2
     e78:	80 93 aa 4b 	sts	0x4BAA, r24	; 0x804baa <chosenFan>
		break ;
     e7c:	fe c0       	rjmp	.+508    	; 0x107a <executeCommand+0x25a>
		
		case 2:
		printf("Received command: fan3\r\n");
     e7e:	8c e6       	ldi	r24, 0x6C	; 108
     e80:	99 e4       	ldi	r25, 0x49	; 73
     e82:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		PrintSelectFanMode();
     e86:	0e 94 ac 03 	call	0x758	; 0x758 <PrintSelectFanMode>
		chosenFan = FAN3_bm;
     e8a:	84 e0       	ldi	r24, 0x04	; 4
     e8c:	80 93 aa 4b 	sts	0x4BAA, r24	; 0x804baa <chosenFan>
		break ;
     e90:	f4 c0       	rjmp	.+488    	; 0x107a <executeCommand+0x25a>
		
		case 3:
		printf("Received command: fan4\r\n");
     e92:	84 e8       	ldi	r24, 0x84	; 132
     e94:	99 e4       	ldi	r25, 0x49	; 73
     e96:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		PrintSelectFanMode();
     e9a:	0e 94 ac 03 	call	0x758	; 0x758 <PrintSelectFanMode>
		chosenFan = FAN4_bm;
     e9e:	88 e0       	ldi	r24, 0x08	; 8
     ea0:	80 93 aa 4b 	sts	0x4BAA, r24	; 0x804baa <chosenFan>
		break ;
     ea4:	ea c0       	rjmp	.+468    	; 0x107a <executeCommand+0x25a>
		
		case 4:
		printf("Received command: off\r\n");
     ea6:	8c e9       	ldi	r24, 0x9C	; 156
     ea8:	99 e4       	ldi	r25, 0x49	; 73
     eaa:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		chosenModeIsManual = 0;
     eae:	10 92 21 4c 	sts	0x4C21, r1	; 0x804c21 <chosenModeIsManual>
		fanOff();
     eb2:	0e 94 b6 02 	call	0x56c	; 0x56c <fanOff>
		break ;
     eb6:	e1 c0       	rjmp	.+450    	; 0x107a <executeCommand+0x25a>
		
		case 5:
		printf("Received command: manual\r\n");
     eb8:	83 eb       	ldi	r24, 0xB3	; 179
     eba:	99 e4       	ldi	r25, 0x49	; 73
     ebc:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		printf("Type wanted rpm mode\r\n");
     ec0:	8d ec       	ldi	r24, 0xCD	; 205
     ec2:	99 e4       	ldi	r25, 0x49	; 73
     ec4:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		printf("Alternatives: low, medium, high or fan speed: 0-100 \r\n");
     ec8:	83 ee       	ldi	r24, 0xE3	; 227
     eca:	99 e4       	ldi	r25, 0x49	; 73
     ecc:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		chosenModeIsManual = 1;
     ed0:	81 e0       	ldi	r24, 0x01	; 1
     ed2:	80 93 21 4c 	sts	0x4C21, r24	; 0x804c21 <chosenModeIsManual>
		break ;
     ed6:	d1 c0       	rjmp	.+418    	; 0x107a <executeCommand+0x25a>
		
		case 6:
		printf("Received command: auto\r\n");
     ed8:	89 e1       	ldi	r24, 0x19	; 25
     eda:	9a e4       	ldi	r25, 0x4A	; 74
     edc:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		chosenModeIsManual = 0;
     ee0:	10 92 21 4c 	sts	0x4C21, r1	; 0x804c21 <chosenModeIsManual>
		fanAuto();
     ee4:	0e 94 0c 03 	call	0x618	; 0x618 <fanAuto>
		break ;
     ee8:	c8 c0       	rjmp	.+400    	; 0x107a <executeCommand+0x25a>
		
		case 7:
		printf("Received command: overview\r\n");
     eea:	81 e3       	ldi	r24, 0x31	; 49
     eec:	9a e4       	ldi	r25, 0x4A	; 74
     eee:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		fan1.rpm = pwm_to_rpm1();
     ef2:	0e 94 b7 05 	call	0xb6e	; 0xb6e <pwm_to_rpm1>
     ef6:	80 93 35 45 	sts	0x4535, r24	; 0x804535 <fan1+0x2>
     efa:	90 93 36 45 	sts	0x4536, r25	; 0x804536 <fan1+0x3>
		fan2.rpm = pwm_to_rpm2();
     efe:	0e 94 cd 05 	call	0xb9a	; 0xb9a <pwm_to_rpm2>
     f02:	80 93 31 45 	sts	0x4531, r24	; 0x804531 <fan2+0x2>
     f06:	90 93 32 45 	sts	0x4532, r25	; 0x804532 <fan2+0x3>
		printOverview();
     f0a:	0e 94 b9 03 	call	0x772	; 0x772 <printOverview>
		break ;
     f0e:	b5 c0       	rjmp	.+362    	; 0x107a <executeCommand+0x25a>
		
		case 8:
		printf("Received command: controller\r\n");
     f10:	8d e4       	ldi	r24, 0x4D	; 77
     f12:	9a e4       	ldi	r25, 0x4A	; 74
     f14:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		printSelectFan();
     f18:	0e 94 59 04 	call	0x8b2	; 0x8b2 <printSelectFan>
		break ;
     f1c:	ae c0       	rjmp	.+348    	; 0x107a <executeCommand+0x25a>
		
		case 12: // if command = alarm
		changeAlarmDeviation = 1;
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	80 93 a7 4b 	sts	0x4BA7, r24	; 0x804ba7 <changeAlarmDeviation>
		printf("Type wanted deviation percentage for wear and tear alarm \n\r");
     f24:	8b e6       	ldi	r24, 0x6B	; 107
     f26:	9a e4       	ldi	r25, 0x4A	; 74
     f28:	9f 93       	push	r25
     f2a:	8f 93       	push	r24
     f2c:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
		printf("Current alarm deviation percentage is: %d\n\r", threshold_percentage);
     f30:	80 91 22 45 	lds	r24, 0x4522	; 0x804522 <threshold_percentage>
     f34:	1f 92       	push	r1
     f36:	8f 93       	push	r24
     f38:	87 ea       	ldi	r24, 0xA7	; 167
     f3a:	9a e4       	ldi	r25, 0x4A	; 74
     f3c:	9f 93       	push	r25
     f3e:	8f 93       	push	r24
     f40:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
		break;
     f44:	0f 90       	pop	r0
     f46:	0f 90       	pop	r0
     f48:	0f 90       	pop	r0
     f4a:	0f 90       	pop	r0
     f4c:	0f 90       	pop	r0
     f4e:	0f 90       	pop	r0
     f50:	94 c0       	rjmp	.+296    	; 0x107a <executeCommand+0x25a>
		
		default :
		
		if (changeAlarmDeviation){
     f52:	90 91 a7 4b 	lds	r25, 0x4BA7	; 0x804ba7 <changeAlarmDeviation>
     f56:	99 23       	and	r25, r25
     f58:	a1 f0       	breq	.+40     	; 0xf82 <executeCommand+0x162>
				threshold_percentage = atoi(command); //change alarm deviaton for alarm type long
     f5a:	c9 01       	movw	r24, r18
     f5c:	0e 94 41 0b 	call	0x1682	; 0x1682 <atoi>
     f60:	80 93 22 45 	sts	0x4522, r24	; 0x804522 <threshold_percentage>
				changeAlarmDeviation = 0;
     f64:	10 92 a7 4b 	sts	0x4BA7, r1	; 0x804ba7 <changeAlarmDeviation>
				printf("wear and tear alarm devation percentage is changed to: %d\n\r", threshold_percentage);
     f68:	1f 92       	push	r1
     f6a:	8f 93       	push	r24
     f6c:	83 ed       	ldi	r24, 0xD3	; 211
     f6e:	9a e4       	ldi	r25, 0x4A	; 74
     f70:	9f 93       	push	r25
     f72:	8f 93       	push	r24
     f74:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
				break;
     f78:	0f 90       	pop	r0
     f7a:	0f 90       	pop	r0
     f7c:	0f 90       	pop	r0
     f7e:	0f 90       	pop	r0
     f80:	7c c0       	rjmp	.+248    	; 0x107a <executeCommand+0x25a>
			}
			
		
		
		
		if(chosenModeIsManual)
     f82:	90 91 21 4c 	lds	r25, 0x4C21	; 0x804c21 <chosenModeIsManual>
     f86:	99 23       	and	r25, r25
     f88:	09 f4       	brne	.+2      	; 0xf8c <executeCommand+0x16c>
     f8a:	73 c0       	rjmp	.+230    	; 0x1072 <executeCommand+0x252>
		{
			switch (command_number)
     f8c:	8a 30       	cpi	r24, 0x0A	; 10
     f8e:	89 f0       	breq	.+34     	; 0xfb2 <executeCommand+0x192>
     f90:	8b 30       	cpi	r24, 0x0B	; 11
     f92:	e1 f0       	breq	.+56     	; 0xfcc <executeCommand+0x1ac>
     f94:	89 30       	cpi	r24, 0x09	; 9
     f96:	39 f5       	brne	.+78     	; 0xfe6 <executeCommand+0x1c6>
			{
				case 9:
				
				printf("Received command: low\r\n");
     f98:	8f e0       	ldi	r24, 0x0F	; 15
     f9a:	9b e4       	ldi	r25, 0x4B	; 75
     f9c:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
				manual_rpm_value = FAN_RPM_LOW; //LOW
     fa0:	83 e2       	ldi	r24, 0x23	; 35
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	80 93 b1 4b 	sts	0x4BB1, r24	; 0x804bb1 <manual_rpm_value>
     fa8:	90 93 b2 4b 	sts	0x4BB2, r25	; 0x804bb2 <manual_rpm_value+0x1>
				fanManual();
     fac:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fanManual>
				break;
     fb0:	64 c0       	rjmp	.+200    	; 0x107a <executeCommand+0x25a>
				
				case 10:
				
				printf("Received command: medium\r\n");
     fb2:	86 e2       	ldi	r24, 0x26	; 38
     fb4:	9b e4       	ldi	r25, 0x4B	; 75
     fb6:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
				manual_rpm_value = FAN_RPM_MEDIUM; //MEDIUM
     fba:	8c e3       	ldi	r24, 0x3C	; 60
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	80 93 b1 4b 	sts	0x4BB1, r24	; 0x804bb1 <manual_rpm_value>
     fc2:	90 93 b2 4b 	sts	0x4BB2, r25	; 0x804bb2 <manual_rpm_value+0x1>
				fanManual();
     fc6:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fanManual>
				break;
     fca:	57 c0       	rjmp	.+174    	; 0x107a <executeCommand+0x25a>
				
				case 11:
				
				printf("Received command: high\r\n");
     fcc:	80 e4       	ldi	r24, 0x40	; 64
     fce:	9b e4       	ldi	r25, 0x4B	; 75
     fd0:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
				manual_rpm_value = FAN_RPM_HIGH; //HIGH
     fd4:	8f e4       	ldi	r24, 0x4F	; 79
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	80 93 b1 4b 	sts	0x4BB1, r24	; 0x804bb1 <manual_rpm_value>
     fdc:	90 93 b2 4b 	sts	0x4BB2, r25	; 0x804bb2 <manual_rpm_value+0x1>
				fanManual();
     fe0:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fanManual>
				break;
     fe4:	4a c0       	rjmp	.+148    	; 0x107a <executeCommand+0x25a>
				
				default:
				
				duty_cycle_input = atoi(command);
     fe6:	c9 01       	movw	r24, r18
     fe8:	0e 94 41 0b 	call	0x1682	; 0x1682 <atoi>
     fec:	80 93 27 4c 	sts	0x4C27, r24	; 0x804c27 <duty_cycle_input>
     ff0:	90 93 28 4c 	sts	0x4C28, r25	; 0x804c28 <duty_cycle_input+0x1>
				printf("%d\r\n", duty_cycle_input);
     ff4:	9f 93       	push	r25
     ff6:	8f 93       	push	r24
     ff8:	86 ea       	ldi	r24, 0xA6	; 166
     ffa:	98 e4       	ldi	r25, 0x48	; 72
     ffc:	9f 93       	push	r25
     ffe:	8f 93       	push	r24
    1000:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
				if (duty_cycle_input >= 0 && duty_cycle_input <= 100)
    1004:	60 91 27 4c 	lds	r22, 0x4C27	; 0x804c27 <duty_cycle_input>
    1008:	70 91 28 4c 	lds	r23, 0x4C28	; 0x804c28 <duty_cycle_input+0x1>
    100c:	0f 90       	pop	r0
    100e:	0f 90       	pop	r0
    1010:	0f 90       	pop	r0
    1012:	0f 90       	pop	r0
    1014:	65 36       	cpi	r22, 0x65	; 101
    1016:	71 05       	cpc	r23, r1
    1018:	38 f5       	brcc	.+78     	; 0x1068 <executeCommand+0x248>
				{
					uint16_t new_duty_cycle = (duty_cycle_input / 100.0) * FAN_RPM_HIGH;
    101a:	80 e0       	ldi	r24, 0x00	; 0
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__floatunsisf>
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	48 ec       	ldi	r20, 0xC8	; 200
    1028:	52 e4       	ldi	r21, 0x42	; 66
    102a:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <__divsf3>
    102e:	20 e0       	ldi	r18, 0x00	; 0
    1030:	30 e0       	ldi	r19, 0x00	; 0
    1032:	4e e9       	ldi	r20, 0x9E	; 158
    1034:	52 e4       	ldi	r21, 0x42	; 66
    1036:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__mulsf3>
    103a:	0e 94 cd 09 	call	0x139a	; 0x139a <__fixunssfsi>
    103e:	d6 2f       	mov	r29, r22
    1040:	c7 2f       	mov	r28, r23
					printf("%d\r\n", new_duty_cycle);
    1042:	7f 93       	push	r23
    1044:	6f 93       	push	r22
    1046:	86 ea       	ldi	r24, 0xA6	; 166
    1048:	98 e4       	ldi	r25, 0x48	; 72
    104a:	9f 93       	push	r25
    104c:	8f 93       	push	r24
    104e:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <printf>
					// Set the duty cycle to the new value
					// Assuming TCA0_SPLIT_LCMP0 is where the duty cycle is set
					manual_rpm_value = new_duty_cycle;
    1052:	d0 93 b1 4b 	sts	0x4BB1, r29	; 0x804bb1 <manual_rpm_value>
    1056:	c0 93 b2 4b 	sts	0x4BB2, r28	; 0x804bb2 <manual_rpm_value+0x1>
					fanManual();
    105a:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fanManual>
    105e:	0f 90       	pop	r0
    1060:	0f 90       	pop	r0
    1062:	0f 90       	pop	r0
    1064:	0f 90       	pop	r0
    1066:	09 c0       	rjmp	.+18     	; 0x107a <executeCommand+0x25a>
				}
				else
				{
					printf("Please insert a valid duty cycle (0-100)\r\n");
    1068:	88 e5       	ldi	r24, 0x58	; 88
    106a:	9b e4       	ldi	r25, 0x4B	; 75
    106c:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
    1070:	04 c0       	rjmp	.+8      	; 0x107a <executeCommand+0x25a>
		
		
		}
		
		
		else printf("unknown command \r\n");
    1072:	82 e8       	ldi	r24, 0x82	; 130
    1074:	9b e4       	ldi	r25, 0x4B	; 75
    1076:	0e 94 84 0b 	call	0x1708	; 0x1708 <puts>
		
	}

   }
}
    107a:	df 91       	pop	r29
    107c:	cf 91       	pop	r28
    107e:	08 95       	ret

00001080 <read_commands>:




void read_commands() //Reads Uart when enter is pressed
{
    1080:	cf 93       	push	r28
    1082:	df 93       	push	r29
    1084:	cd b7       	in	r28, 0x3d	; 61
    1086:	de b7       	in	r29, 0x3e	; 62
    1088:	c4 56       	subi	r28, 0x64	; 100
    108a:	d1 09       	sbc	r29, r1
    108c:	cd bf       	out	0x3d, r28	; 61
    108e:	de bf       	out	0x3e, r29	; 62
	char command[MAX_COMMAND_LEN];
	static uint8_t index = 0;
	char c = USART3_readChar();
    1090:	0e 94 8d 04 	call	0x91a	; 0x91a <USART3_readChar>
	
	if(c != '\n' && c != '\r' && index < MAX_COMMAND_LEN - 1)
    1094:	8a 30       	cpi	r24, 0x0A	; 10
    1096:	89 f0       	breq	.+34     	; 0x10ba <read_commands+0x3a>
    1098:	8d 30       	cpi	r24, 0x0D	; 13
    109a:	79 f0       	breq	.+30     	; 0x10ba <read_commands+0x3a>
    109c:	90 91 a4 4b 	lds	r25, 0x4BA4	; 0x804ba4 <__data_end>
    10a0:	93 36       	cpi	r25, 0x63	; 99
    10a2:	58 f4       	brcc	.+22     	; 0x10ba <read_commands+0x3a>
	{
		command[index++] = c;
    10a4:	21 e0       	ldi	r18, 0x01	; 1
    10a6:	29 0f       	add	r18, r25
    10a8:	20 93 a4 4b 	sts	0x4BA4, r18	; 0x804ba4 <__data_end>
    10ac:	e1 e0       	ldi	r30, 0x01	; 1
    10ae:	f0 e0       	ldi	r31, 0x00	; 0
    10b0:	ec 0f       	add	r30, r28
    10b2:	fd 1f       	adc	r31, r29
    10b4:	e9 0f       	add	r30, r25
    10b6:	f1 1d       	adc	r31, r1
    10b8:	80 83       	st	Z, r24
		
	}
	
	if(c == '\r'|| c=='\n')
    10ba:	8d 30       	cpi	r24, 0x0D	; 13
    10bc:	11 f0       	breq	.+4      	; 0x10c2 <read_commands+0x42>
    10be:	8a 30       	cpi	r24, 0x0A	; 10
    10c0:	a1 f4       	brne	.+40     	; 0x10ea <read_commands+0x6a>
	{
		command[index] = '\0';
    10c2:	80 91 a4 4b 	lds	r24, 0x4BA4	; 0x804ba4 <__data_end>
    10c6:	e1 e0       	ldi	r30, 0x01	; 1
    10c8:	f0 e0       	ldi	r31, 0x00	; 0
    10ca:	ec 0f       	add	r30, r28
    10cc:	fd 1f       	adc	r31, r29
    10ce:	e8 0f       	add	r30, r24
    10d0:	f1 1d       	adc	r31, r1
    10d2:	10 82       	st	Z, r1
		index = 0;
    10d4:	10 92 a4 4b 	sts	0x4BA4, r1	; 0x804ba4 <__data_end>
		//printf("test command1: %s\r\n",command);

		executeCommand(compareCommands(command), command); // executes actions based on command as an argument
    10d8:	ce 01       	movw	r24, r28
    10da:	01 96       	adiw	r24, 0x01	; 1
    10dc:	0e 94 66 04 	call	0x8cc	; 0x8cc <compareCommands>
    10e0:	be 01       	movw	r22, r28
    10e2:	6f 5f       	subi	r22, 0xFF	; 255
    10e4:	7f 4f       	sbci	r23, 0xFF	; 255
    10e6:	0e 94 10 07 	call	0xe20	; 0xe20 <executeCommand>
		
		
	}
}
    10ea:	cc 59       	subi	r28, 0x9C	; 156
    10ec:	df 4f       	sbci	r29, 0xFF	; 255
    10ee:	cd bf       	out	0x3d, r28	; 61
    10f0:	de bf       	out	0x3e, r29	; 62
    10f2:	df 91       	pop	r29
    10f4:	cf 91       	pop	r28
    10f6:	08 95       	ret

000010f8 <__vector_53>:
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
}


ISR(USART3_RXC_vect)
{
    10f8:	1f 92       	push	r1
    10fa:	0f 92       	push	r0
    10fc:	0f b6       	in	r0, 0x3f	; 63
    10fe:	0f 92       	push	r0
    1100:	11 24       	eor	r1, r1
    1102:	0b b6       	in	r0, 0x3b	; 59
    1104:	0f 92       	push	r0
    1106:	2f 93       	push	r18
    1108:	3f 93       	push	r19
    110a:	4f 93       	push	r20
    110c:	5f 93       	push	r21
    110e:	6f 93       	push	r22
    1110:	7f 93       	push	r23
    1112:	8f 93       	push	r24
    1114:	9f 93       	push	r25
    1116:	af 93       	push	r26
    1118:	bf 93       	push	r27
    111a:	ef 93       	push	r30
    111c:	ff 93       	push	r31
	read_commands();
    111e:	0e 94 40 08 	call	0x1080	; 0x1080 <read_commands>
}
    1122:	ff 91       	pop	r31
    1124:	ef 91       	pop	r30
    1126:	bf 91       	pop	r27
    1128:	af 91       	pop	r26
    112a:	9f 91       	pop	r25
    112c:	8f 91       	pop	r24
    112e:	7f 91       	pop	r23
    1130:	6f 91       	pop	r22
    1132:	5f 91       	pop	r21
    1134:	4f 91       	pop	r20
    1136:	3f 91       	pop	r19
    1138:	2f 91       	pop	r18
    113a:	0f 90       	pop	r0
    113c:	0b be       	out	0x3b, r0	; 59
    113e:	0f 90       	pop	r0
    1140:	0f be       	out	0x3f, r0	; 63
    1142:	0f 90       	pop	r0
    1144:	1f 90       	pop	r1
    1146:	18 95       	reti

00001148 <main>:


int main(void)
{
	
	USART3_init();
    1148:	0e 94 9a 04 	call	0x934	; 0x934 <USART3_init>
	sei(); // Enable Global Interrupts
    114c:	78 94       	sei

	// PWM initialize
	PORT_init();
    114e:	0e 94 b3 04 	call	0x966	; 0x966 <PORT_init>
	TCA0_init();
    1152:	0e 94 b7 04 	call	0x96e	; 0x96e <TCA0_init>
	TCB0_init();
    1156:	0e 94 ca 04 	call	0x994	; 0x994 <TCB0_init>
	TCB1_init();
    115a:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <TCB1_init>
	
	// I2C initialize

	TWI0_M_init();
    115e:	0e 94 a8 00 	call	0x150	; 0x150 <TWI0_M_init>
	AHT10_init();
    1162:	0e 94 23 01 	call	0x246	; 0x246 <AHT10_init>
	
	// RTC initialize
	RTC_init();
    1166:	0e 94 00 05 	call	0xa00	; 0xa00 <RTC_init>
	
	// Get values for prediction from eeprom
	status_eeprom();
    116a:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <status_eeprom>
	read_value_EE_fan1 = eeprom_read_word((uint16_t*) address_fan1);
    116e:	80 91 02 00 	lds	r24, 0x0002	; 0x800002 <__TEXT_REGION_LENGTH__+0x7e0002>
    1172:	90 91 03 00 	lds	r25, 0x0003	; 0x800003 <__TEXT_REGION_LENGTH__+0x7e0003>
    1176:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <eeprom_read_word>
    117a:	80 93 23 4c 	sts	0x4C23, r24	; 0x804c23 <read_value_EE_fan1>
    117e:	90 93 24 4c 	sts	0x4C24, r25	; 0x804c24 <read_value_EE_fan1+0x1>
	status_eeprom();
    1182:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <status_eeprom>
	read_value_EE_fan2 = eeprom_read_word((uint16_t*) address_fan2);
    1186:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__TEXT_REGION_LENGTH__+0x7e0000>
    118a:	90 91 01 00 	lds	r25, 0x0001	; 0x800001 <__TEXT_REGION_LENGTH__+0x7e0001>
    118e:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <eeprom_read_word>
    1192:	80 93 1b 4c 	sts	0x4C1B, r24	; 0x804c1b <read_value_EE_fan2>
    1196:	90 93 1c 4c 	sts	0x4C1C, r25	; 0x804c1c <read_value_EE_fan2+0x1>
	
	printHomeScreen();
    119a:	0e 94 99 02 	call	0x532	; 0x532 <printHomeScreen>

	
	while(1){
		
		
		if(counter == 2000)
    119e:	80 91 2c 4c 	lds	r24, 0x4C2C	; 0x804c2c <counter>
    11a2:	90 91 2d 4c 	lds	r25, 0x4C2D	; 0x804c2d <counter+0x1>
    11a6:	80 3d       	cpi	r24, 0xD0	; 208
    11a8:	97 40       	sbci	r25, 0x07	; 7
    11aa:	79 f4       	brne	.+30     	; 0x11ca <main+0x82>
		{
			saveFanModes();
    11ac:	0e 94 0e 02 	call	0x41c	; 0x41c <saveFanModes>
			diagnoseIsRunning = 1;
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	80 93 1a 4c 	sts	0x4C1A, r24	; 0x804c1a <diagnoseIsRunning>
			predict_error();
    11b6:	0e 94 60 06 	call	0xcc0	; 0xcc0 <predict_error>
			startFansAfterDiagnose();
    11ba:	0e 94 8d 01 	call	0x31a	; 0x31a <startFansAfterDiagnose>
			diagnoseIsRunning = 0;
    11be:	10 92 1a 4c 	sts	0x4C1A, r1	; 0x804c1a <diagnoseIsRunning>
			counter = 0;
    11c2:	10 92 2c 4c 	sts	0x4C2C, r1	; 0x804c2c <counter>
    11c6:	10 92 2d 4c 	sts	0x4C2D, r1	; 0x804c2d <counter+0x1>
		}
		
		
		
		handleFansInAuto(); //changes the rpm of the fans in mode auto based on temperature
    11ca:	0e 94 54 01 	call	0x2a8	; 0x2a8 <handleFansInAuto>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11ce:	8f e0       	ldi	r24, 0x0F	; 15
    11d0:	97 e2       	ldi	r25, 0x27	; 39
    11d2:	01 97       	sbiw	r24, 0x01	; 1
    11d4:	f1 f7       	brne	.-4      	; 0x11d2 <main+0x8a>
    11d6:	00 c0       	rjmp	.+0      	; 0x11d8 <main+0x90>
    11d8:	00 00       	nop
    11da:	e1 cf       	rjmp	.-62     	; 0x119e <main+0x56>

000011dc <__subsf3>:
    11dc:	50 58       	subi	r21, 0x80	; 128

000011de <__addsf3>:
    11de:	bb 27       	eor	r27, r27
    11e0:	aa 27       	eor	r26, r26
    11e2:	0e 94 06 09 	call	0x120c	; 0x120c <__addsf3x>
    11e6:	0c 94 50 0a 	jmp	0x14a0	; 0x14a0 <__fp_round>
    11ea:	0e 94 42 0a 	call	0x1484	; 0x1484 <__fp_pscA>
    11ee:	38 f0       	brcs	.+14     	; 0x11fe <__addsf3+0x20>
    11f0:	0e 94 49 0a 	call	0x1492	; 0x1492 <__fp_pscB>
    11f4:	20 f0       	brcs	.+8      	; 0x11fe <__addsf3+0x20>
    11f6:	39 f4       	brne	.+14     	; 0x1206 <__addsf3+0x28>
    11f8:	9f 3f       	cpi	r25, 0xFF	; 255
    11fa:	19 f4       	brne	.+6      	; 0x1202 <__addsf3+0x24>
    11fc:	26 f4       	brtc	.+8      	; 0x1206 <__addsf3+0x28>
    11fe:	0c 94 3f 0a 	jmp	0x147e	; 0x147e <__fp_nan>
    1202:	0e f4       	brtc	.+2      	; 0x1206 <__addsf3+0x28>
    1204:	e0 95       	com	r30
    1206:	e7 fb       	bst	r30, 7
    1208:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__fp_inf>

0000120c <__addsf3x>:
    120c:	e9 2f       	mov	r30, r25
    120e:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <__fp_split3>
    1212:	58 f3       	brcs	.-42     	; 0x11ea <__addsf3+0xc>
    1214:	ba 17       	cp	r27, r26
    1216:	62 07       	cpc	r22, r18
    1218:	73 07       	cpc	r23, r19
    121a:	84 07       	cpc	r24, r20
    121c:	95 07       	cpc	r25, r21
    121e:	20 f0       	brcs	.+8      	; 0x1228 <__addsf3x+0x1c>
    1220:	79 f4       	brne	.+30     	; 0x1240 <__addsf3x+0x34>
    1222:	a6 f5       	brtc	.+104    	; 0x128c <__addsf3x+0x80>
    1224:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <__fp_zero>
    1228:	0e f4       	brtc	.+2      	; 0x122c <__addsf3x+0x20>
    122a:	e0 95       	com	r30
    122c:	0b 2e       	mov	r0, r27
    122e:	ba 2f       	mov	r27, r26
    1230:	a0 2d       	mov	r26, r0
    1232:	0b 01       	movw	r0, r22
    1234:	b9 01       	movw	r22, r18
    1236:	90 01       	movw	r18, r0
    1238:	0c 01       	movw	r0, r24
    123a:	ca 01       	movw	r24, r20
    123c:	a0 01       	movw	r20, r0
    123e:	11 24       	eor	r1, r1
    1240:	ff 27       	eor	r31, r31
    1242:	59 1b       	sub	r21, r25
    1244:	99 f0       	breq	.+38     	; 0x126c <__addsf3x+0x60>
    1246:	59 3f       	cpi	r21, 0xF9	; 249
    1248:	50 f4       	brcc	.+20     	; 0x125e <__addsf3x+0x52>
    124a:	50 3e       	cpi	r21, 0xE0	; 224
    124c:	68 f1       	brcs	.+90     	; 0x12a8 <__addsf3x+0x9c>
    124e:	1a 16       	cp	r1, r26
    1250:	f0 40       	sbci	r31, 0x00	; 0
    1252:	a2 2f       	mov	r26, r18
    1254:	23 2f       	mov	r18, r19
    1256:	34 2f       	mov	r19, r20
    1258:	44 27       	eor	r20, r20
    125a:	58 5f       	subi	r21, 0xF8	; 248
    125c:	f3 cf       	rjmp	.-26     	; 0x1244 <__addsf3x+0x38>
    125e:	46 95       	lsr	r20
    1260:	37 95       	ror	r19
    1262:	27 95       	ror	r18
    1264:	a7 95       	ror	r26
    1266:	f0 40       	sbci	r31, 0x00	; 0
    1268:	53 95       	inc	r21
    126a:	c9 f7       	brne	.-14     	; 0x125e <__addsf3x+0x52>
    126c:	7e f4       	brtc	.+30     	; 0x128c <__addsf3x+0x80>
    126e:	1f 16       	cp	r1, r31
    1270:	ba 0b       	sbc	r27, r26
    1272:	62 0b       	sbc	r22, r18
    1274:	73 0b       	sbc	r23, r19
    1276:	84 0b       	sbc	r24, r20
    1278:	ba f0       	brmi	.+46     	; 0x12a8 <__addsf3x+0x9c>
    127a:	91 50       	subi	r25, 0x01	; 1
    127c:	a1 f0       	breq	.+40     	; 0x12a6 <__addsf3x+0x9a>
    127e:	ff 0f       	add	r31, r31
    1280:	bb 1f       	adc	r27, r27
    1282:	66 1f       	adc	r22, r22
    1284:	77 1f       	adc	r23, r23
    1286:	88 1f       	adc	r24, r24
    1288:	c2 f7       	brpl	.-16     	; 0x127a <__addsf3x+0x6e>
    128a:	0e c0       	rjmp	.+28     	; 0x12a8 <__addsf3x+0x9c>
    128c:	ba 0f       	add	r27, r26
    128e:	62 1f       	adc	r22, r18
    1290:	73 1f       	adc	r23, r19
    1292:	84 1f       	adc	r24, r20
    1294:	48 f4       	brcc	.+18     	; 0x12a8 <__addsf3x+0x9c>
    1296:	87 95       	ror	r24
    1298:	77 95       	ror	r23
    129a:	67 95       	ror	r22
    129c:	b7 95       	ror	r27
    129e:	f7 95       	ror	r31
    12a0:	9e 3f       	cpi	r25, 0xFE	; 254
    12a2:	08 f0       	brcs	.+2      	; 0x12a6 <__addsf3x+0x9a>
    12a4:	b0 cf       	rjmp	.-160    	; 0x1206 <__addsf3+0x28>
    12a6:	93 95       	inc	r25
    12a8:	88 0f       	add	r24, r24
    12aa:	08 f0       	brcs	.+2      	; 0x12ae <__addsf3x+0xa2>
    12ac:	99 27       	eor	r25, r25
    12ae:	ee 0f       	add	r30, r30
    12b0:	97 95       	ror	r25
    12b2:	87 95       	ror	r24
    12b4:	08 95       	ret

000012b6 <__divsf3>:
    12b6:	0e 94 6f 09 	call	0x12de	; 0x12de <__divsf3x>
    12ba:	0c 94 50 0a 	jmp	0x14a0	; 0x14a0 <__fp_round>
    12be:	0e 94 49 0a 	call	0x1492	; 0x1492 <__fp_pscB>
    12c2:	58 f0       	brcs	.+22     	; 0x12da <__divsf3+0x24>
    12c4:	0e 94 42 0a 	call	0x1484	; 0x1484 <__fp_pscA>
    12c8:	40 f0       	brcs	.+16     	; 0x12da <__divsf3+0x24>
    12ca:	29 f4       	brne	.+10     	; 0x12d6 <__divsf3+0x20>
    12cc:	5f 3f       	cpi	r21, 0xFF	; 255
    12ce:	29 f0       	breq	.+10     	; 0x12da <__divsf3+0x24>
    12d0:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__fp_inf>
    12d4:	51 11       	cpse	r21, r1
    12d6:	0c 94 84 0a 	jmp	0x1508	; 0x1508 <__fp_szero>
    12da:	0c 94 3f 0a 	jmp	0x147e	; 0x147e <__fp_nan>

000012de <__divsf3x>:
    12de:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <__fp_split3>
    12e2:	68 f3       	brcs	.-38     	; 0x12be <__divsf3+0x8>

000012e4 <__divsf3_pse>:
    12e4:	99 23       	and	r25, r25
    12e6:	b1 f3       	breq	.-20     	; 0x12d4 <__divsf3+0x1e>
    12e8:	55 23       	and	r21, r21
    12ea:	91 f3       	breq	.-28     	; 0x12d0 <__divsf3+0x1a>
    12ec:	95 1b       	sub	r25, r21
    12ee:	55 0b       	sbc	r21, r21
    12f0:	bb 27       	eor	r27, r27
    12f2:	aa 27       	eor	r26, r26
    12f4:	62 17       	cp	r22, r18
    12f6:	73 07       	cpc	r23, r19
    12f8:	84 07       	cpc	r24, r20
    12fa:	38 f0       	brcs	.+14     	; 0x130a <__divsf3_pse+0x26>
    12fc:	9f 5f       	subi	r25, 0xFF	; 255
    12fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1300:	22 0f       	add	r18, r18
    1302:	33 1f       	adc	r19, r19
    1304:	44 1f       	adc	r20, r20
    1306:	aa 1f       	adc	r26, r26
    1308:	a9 f3       	breq	.-22     	; 0x12f4 <__divsf3_pse+0x10>
    130a:	35 d0       	rcall	.+106    	; 0x1376 <__divsf3_pse+0x92>
    130c:	0e 2e       	mov	r0, r30
    130e:	3a f0       	brmi	.+14     	; 0x131e <__divsf3_pse+0x3a>
    1310:	e0 e8       	ldi	r30, 0x80	; 128
    1312:	32 d0       	rcall	.+100    	; 0x1378 <__divsf3_pse+0x94>
    1314:	91 50       	subi	r25, 0x01	; 1
    1316:	50 40       	sbci	r21, 0x00	; 0
    1318:	e6 95       	lsr	r30
    131a:	00 1c       	adc	r0, r0
    131c:	ca f7       	brpl	.-14     	; 0x1310 <__divsf3_pse+0x2c>
    131e:	2b d0       	rcall	.+86     	; 0x1376 <__divsf3_pse+0x92>
    1320:	fe 2f       	mov	r31, r30
    1322:	29 d0       	rcall	.+82     	; 0x1376 <__divsf3_pse+0x92>
    1324:	66 0f       	add	r22, r22
    1326:	77 1f       	adc	r23, r23
    1328:	88 1f       	adc	r24, r24
    132a:	bb 1f       	adc	r27, r27
    132c:	26 17       	cp	r18, r22
    132e:	37 07       	cpc	r19, r23
    1330:	48 07       	cpc	r20, r24
    1332:	ab 07       	cpc	r26, r27
    1334:	b0 e8       	ldi	r27, 0x80	; 128
    1336:	09 f0       	breq	.+2      	; 0x133a <__divsf3_pse+0x56>
    1338:	bb 0b       	sbc	r27, r27
    133a:	80 2d       	mov	r24, r0
    133c:	bf 01       	movw	r22, r30
    133e:	ff 27       	eor	r31, r31
    1340:	93 58       	subi	r25, 0x83	; 131
    1342:	5f 4f       	sbci	r21, 0xFF	; 255
    1344:	3a f0       	brmi	.+14     	; 0x1354 <__divsf3_pse+0x70>
    1346:	9e 3f       	cpi	r25, 0xFE	; 254
    1348:	51 05       	cpc	r21, r1
    134a:	78 f0       	brcs	.+30     	; 0x136a <__divsf3_pse+0x86>
    134c:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__fp_inf>
    1350:	0c 94 84 0a 	jmp	0x1508	; 0x1508 <__fp_szero>
    1354:	5f 3f       	cpi	r21, 0xFF	; 255
    1356:	e4 f3       	brlt	.-8      	; 0x1350 <__divsf3_pse+0x6c>
    1358:	98 3e       	cpi	r25, 0xE8	; 232
    135a:	d4 f3       	brlt	.-12     	; 0x1350 <__divsf3_pse+0x6c>
    135c:	86 95       	lsr	r24
    135e:	77 95       	ror	r23
    1360:	67 95       	ror	r22
    1362:	b7 95       	ror	r27
    1364:	f7 95       	ror	r31
    1366:	9f 5f       	subi	r25, 0xFF	; 255
    1368:	c9 f7       	brne	.-14     	; 0x135c <__divsf3_pse+0x78>
    136a:	88 0f       	add	r24, r24
    136c:	91 1d       	adc	r25, r1
    136e:	96 95       	lsr	r25
    1370:	87 95       	ror	r24
    1372:	97 f9       	bld	r25, 7
    1374:	08 95       	ret
    1376:	e1 e0       	ldi	r30, 0x01	; 1
    1378:	66 0f       	add	r22, r22
    137a:	77 1f       	adc	r23, r23
    137c:	88 1f       	adc	r24, r24
    137e:	bb 1f       	adc	r27, r27
    1380:	62 17       	cp	r22, r18
    1382:	73 07       	cpc	r23, r19
    1384:	84 07       	cpc	r24, r20
    1386:	ba 07       	cpc	r27, r26
    1388:	20 f0       	brcs	.+8      	; 0x1392 <__divsf3_pse+0xae>
    138a:	62 1b       	sub	r22, r18
    138c:	73 0b       	sbc	r23, r19
    138e:	84 0b       	sbc	r24, r20
    1390:	ba 0b       	sbc	r27, r26
    1392:	ee 1f       	adc	r30, r30
    1394:	88 f7       	brcc	.-30     	; 0x1378 <__divsf3_pse+0x94>
    1396:	e0 95       	com	r30
    1398:	08 95       	ret

0000139a <__fixunssfsi>:
    139a:	0e 94 69 0a 	call	0x14d2	; 0x14d2 <__fp_splitA>
    139e:	88 f0       	brcs	.+34     	; 0x13c2 <__fixunssfsi+0x28>
    13a0:	9f 57       	subi	r25, 0x7F	; 127
    13a2:	98 f0       	brcs	.+38     	; 0x13ca <__fixunssfsi+0x30>
    13a4:	b9 2f       	mov	r27, r25
    13a6:	99 27       	eor	r25, r25
    13a8:	b7 51       	subi	r27, 0x17	; 23
    13aa:	b0 f0       	brcs	.+44     	; 0x13d8 <__fixunssfsi+0x3e>
    13ac:	e1 f0       	breq	.+56     	; 0x13e6 <__fixunssfsi+0x4c>
    13ae:	66 0f       	add	r22, r22
    13b0:	77 1f       	adc	r23, r23
    13b2:	88 1f       	adc	r24, r24
    13b4:	99 1f       	adc	r25, r25
    13b6:	1a f0       	brmi	.+6      	; 0x13be <__fixunssfsi+0x24>
    13b8:	ba 95       	dec	r27
    13ba:	c9 f7       	brne	.-14     	; 0x13ae <__fixunssfsi+0x14>
    13bc:	14 c0       	rjmp	.+40     	; 0x13e6 <__fixunssfsi+0x4c>
    13be:	b1 30       	cpi	r27, 0x01	; 1
    13c0:	91 f0       	breq	.+36     	; 0x13e6 <__fixunssfsi+0x4c>
    13c2:	0e 94 83 0a 	call	0x1506	; 0x1506 <__fp_zero>
    13c6:	b1 e0       	ldi	r27, 0x01	; 1
    13c8:	08 95       	ret
    13ca:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <__fp_zero>
    13ce:	67 2f       	mov	r22, r23
    13d0:	78 2f       	mov	r23, r24
    13d2:	88 27       	eor	r24, r24
    13d4:	b8 5f       	subi	r27, 0xF8	; 248
    13d6:	39 f0       	breq	.+14     	; 0x13e6 <__fixunssfsi+0x4c>
    13d8:	b9 3f       	cpi	r27, 0xF9	; 249
    13da:	cc f3       	brlt	.-14     	; 0x13ce <__fixunssfsi+0x34>
    13dc:	86 95       	lsr	r24
    13de:	77 95       	ror	r23
    13e0:	67 95       	ror	r22
    13e2:	b3 95       	inc	r27
    13e4:	d9 f7       	brne	.-10     	; 0x13dc <__fixunssfsi+0x42>
    13e6:	3e f4       	brtc	.+14     	; 0x13f6 <__fixunssfsi+0x5c>
    13e8:	90 95       	com	r25
    13ea:	80 95       	com	r24
    13ec:	70 95       	com	r23
    13ee:	61 95       	neg	r22
    13f0:	7f 4f       	sbci	r23, 0xFF	; 255
    13f2:	8f 4f       	sbci	r24, 0xFF	; 255
    13f4:	9f 4f       	sbci	r25, 0xFF	; 255
    13f6:	08 95       	ret

000013f8 <__floatunsisf>:
    13f8:	e8 94       	clt
    13fa:	09 c0       	rjmp	.+18     	; 0x140e <__floatsisf+0x12>

000013fc <__floatsisf>:
    13fc:	97 fb       	bst	r25, 7
    13fe:	3e f4       	brtc	.+14     	; 0x140e <__floatsisf+0x12>
    1400:	90 95       	com	r25
    1402:	80 95       	com	r24
    1404:	70 95       	com	r23
    1406:	61 95       	neg	r22
    1408:	7f 4f       	sbci	r23, 0xFF	; 255
    140a:	8f 4f       	sbci	r24, 0xFF	; 255
    140c:	9f 4f       	sbci	r25, 0xFF	; 255
    140e:	99 23       	and	r25, r25
    1410:	a9 f0       	breq	.+42     	; 0x143c <__floatsisf+0x40>
    1412:	f9 2f       	mov	r31, r25
    1414:	96 e9       	ldi	r25, 0x96	; 150
    1416:	bb 27       	eor	r27, r27
    1418:	93 95       	inc	r25
    141a:	f6 95       	lsr	r31
    141c:	87 95       	ror	r24
    141e:	77 95       	ror	r23
    1420:	67 95       	ror	r22
    1422:	b7 95       	ror	r27
    1424:	f1 11       	cpse	r31, r1
    1426:	f8 cf       	rjmp	.-16     	; 0x1418 <__floatsisf+0x1c>
    1428:	fa f4       	brpl	.+62     	; 0x1468 <__floatsisf+0x6c>
    142a:	bb 0f       	add	r27, r27
    142c:	11 f4       	brne	.+4      	; 0x1432 <__floatsisf+0x36>
    142e:	60 ff       	sbrs	r22, 0
    1430:	1b c0       	rjmp	.+54     	; 0x1468 <__floatsisf+0x6c>
    1432:	6f 5f       	subi	r22, 0xFF	; 255
    1434:	7f 4f       	sbci	r23, 0xFF	; 255
    1436:	8f 4f       	sbci	r24, 0xFF	; 255
    1438:	9f 4f       	sbci	r25, 0xFF	; 255
    143a:	16 c0       	rjmp	.+44     	; 0x1468 <__floatsisf+0x6c>
    143c:	88 23       	and	r24, r24
    143e:	11 f0       	breq	.+4      	; 0x1444 <__floatsisf+0x48>
    1440:	96 e9       	ldi	r25, 0x96	; 150
    1442:	11 c0       	rjmp	.+34     	; 0x1466 <__floatsisf+0x6a>
    1444:	77 23       	and	r23, r23
    1446:	21 f0       	breq	.+8      	; 0x1450 <__floatsisf+0x54>
    1448:	9e e8       	ldi	r25, 0x8E	; 142
    144a:	87 2f       	mov	r24, r23
    144c:	76 2f       	mov	r23, r22
    144e:	05 c0       	rjmp	.+10     	; 0x145a <__floatsisf+0x5e>
    1450:	66 23       	and	r22, r22
    1452:	71 f0       	breq	.+28     	; 0x1470 <__floatsisf+0x74>
    1454:	96 e8       	ldi	r25, 0x86	; 134
    1456:	86 2f       	mov	r24, r22
    1458:	70 e0       	ldi	r23, 0x00	; 0
    145a:	60 e0       	ldi	r22, 0x00	; 0
    145c:	2a f0       	brmi	.+10     	; 0x1468 <__floatsisf+0x6c>
    145e:	9a 95       	dec	r25
    1460:	66 0f       	add	r22, r22
    1462:	77 1f       	adc	r23, r23
    1464:	88 1f       	adc	r24, r24
    1466:	da f7       	brpl	.-10     	; 0x145e <__floatsisf+0x62>
    1468:	88 0f       	add	r24, r24
    146a:	96 95       	lsr	r25
    146c:	87 95       	ror	r24
    146e:	97 f9       	bld	r25, 7
    1470:	08 95       	ret

00001472 <__fp_inf>:
    1472:	97 f9       	bld	r25, 7
    1474:	9f 67       	ori	r25, 0x7F	; 127
    1476:	80 e8       	ldi	r24, 0x80	; 128
    1478:	70 e0       	ldi	r23, 0x00	; 0
    147a:	60 e0       	ldi	r22, 0x00	; 0
    147c:	08 95       	ret

0000147e <__fp_nan>:
    147e:	9f ef       	ldi	r25, 0xFF	; 255
    1480:	80 ec       	ldi	r24, 0xC0	; 192
    1482:	08 95       	ret

00001484 <__fp_pscA>:
    1484:	00 24       	eor	r0, r0
    1486:	0a 94       	dec	r0
    1488:	16 16       	cp	r1, r22
    148a:	17 06       	cpc	r1, r23
    148c:	18 06       	cpc	r1, r24
    148e:	09 06       	cpc	r0, r25
    1490:	08 95       	ret

00001492 <__fp_pscB>:
    1492:	00 24       	eor	r0, r0
    1494:	0a 94       	dec	r0
    1496:	12 16       	cp	r1, r18
    1498:	13 06       	cpc	r1, r19
    149a:	14 06       	cpc	r1, r20
    149c:	05 06       	cpc	r0, r21
    149e:	08 95       	ret

000014a0 <__fp_round>:
    14a0:	09 2e       	mov	r0, r25
    14a2:	03 94       	inc	r0
    14a4:	00 0c       	add	r0, r0
    14a6:	11 f4       	brne	.+4      	; 0x14ac <__fp_round+0xc>
    14a8:	88 23       	and	r24, r24
    14aa:	52 f0       	brmi	.+20     	; 0x14c0 <__fp_round+0x20>
    14ac:	bb 0f       	add	r27, r27
    14ae:	40 f4       	brcc	.+16     	; 0x14c0 <__fp_round+0x20>
    14b0:	bf 2b       	or	r27, r31
    14b2:	11 f4       	brne	.+4      	; 0x14b8 <__fp_round+0x18>
    14b4:	60 ff       	sbrs	r22, 0
    14b6:	04 c0       	rjmp	.+8      	; 0x14c0 <__fp_round+0x20>
    14b8:	6f 5f       	subi	r22, 0xFF	; 255
    14ba:	7f 4f       	sbci	r23, 0xFF	; 255
    14bc:	8f 4f       	sbci	r24, 0xFF	; 255
    14be:	9f 4f       	sbci	r25, 0xFF	; 255
    14c0:	08 95       	ret

000014c2 <__fp_split3>:
    14c2:	57 fd       	sbrc	r21, 7
    14c4:	90 58       	subi	r25, 0x80	; 128
    14c6:	44 0f       	add	r20, r20
    14c8:	55 1f       	adc	r21, r21
    14ca:	59 f0       	breq	.+22     	; 0x14e2 <__fp_splitA+0x10>
    14cc:	5f 3f       	cpi	r21, 0xFF	; 255
    14ce:	71 f0       	breq	.+28     	; 0x14ec <__fp_splitA+0x1a>
    14d0:	47 95       	ror	r20

000014d2 <__fp_splitA>:
    14d2:	88 0f       	add	r24, r24
    14d4:	97 fb       	bst	r25, 7
    14d6:	99 1f       	adc	r25, r25
    14d8:	61 f0       	breq	.+24     	; 0x14f2 <__fp_splitA+0x20>
    14da:	9f 3f       	cpi	r25, 0xFF	; 255
    14dc:	79 f0       	breq	.+30     	; 0x14fc <__fp_splitA+0x2a>
    14de:	87 95       	ror	r24
    14e0:	08 95       	ret
    14e2:	12 16       	cp	r1, r18
    14e4:	13 06       	cpc	r1, r19
    14e6:	14 06       	cpc	r1, r20
    14e8:	55 1f       	adc	r21, r21
    14ea:	f2 cf       	rjmp	.-28     	; 0x14d0 <__fp_split3+0xe>
    14ec:	46 95       	lsr	r20
    14ee:	f1 df       	rcall	.-30     	; 0x14d2 <__fp_splitA>
    14f0:	08 c0       	rjmp	.+16     	; 0x1502 <__fp_splitA+0x30>
    14f2:	16 16       	cp	r1, r22
    14f4:	17 06       	cpc	r1, r23
    14f6:	18 06       	cpc	r1, r24
    14f8:	99 1f       	adc	r25, r25
    14fa:	f1 cf       	rjmp	.-30     	; 0x14de <__fp_splitA+0xc>
    14fc:	86 95       	lsr	r24
    14fe:	71 05       	cpc	r23, r1
    1500:	61 05       	cpc	r22, r1
    1502:	08 94       	sec
    1504:	08 95       	ret

00001506 <__fp_zero>:
    1506:	e8 94       	clt

00001508 <__fp_szero>:
    1508:	bb 27       	eor	r27, r27
    150a:	66 27       	eor	r22, r22
    150c:	77 27       	eor	r23, r23
    150e:	cb 01       	movw	r24, r22
    1510:	97 f9       	bld	r25, 7
    1512:	08 95       	ret

00001514 <__mulsf3>:
    1514:	0e 94 9d 0a 	call	0x153a	; 0x153a <__mulsf3x>
    1518:	0c 94 50 0a 	jmp	0x14a0	; 0x14a0 <__fp_round>
    151c:	0e 94 42 0a 	call	0x1484	; 0x1484 <__fp_pscA>
    1520:	38 f0       	brcs	.+14     	; 0x1530 <__mulsf3+0x1c>
    1522:	0e 94 49 0a 	call	0x1492	; 0x1492 <__fp_pscB>
    1526:	20 f0       	brcs	.+8      	; 0x1530 <__mulsf3+0x1c>
    1528:	95 23       	and	r25, r21
    152a:	11 f0       	breq	.+4      	; 0x1530 <__mulsf3+0x1c>
    152c:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__fp_inf>
    1530:	0c 94 3f 0a 	jmp	0x147e	; 0x147e <__fp_nan>
    1534:	11 24       	eor	r1, r1
    1536:	0c 94 84 0a 	jmp	0x1508	; 0x1508 <__fp_szero>

0000153a <__mulsf3x>:
    153a:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <__fp_split3>
    153e:	70 f3       	brcs	.-36     	; 0x151c <__mulsf3+0x8>

00001540 <__mulsf3_pse>:
    1540:	95 9f       	mul	r25, r21
    1542:	c1 f3       	breq	.-16     	; 0x1534 <__mulsf3+0x20>
    1544:	95 0f       	add	r25, r21
    1546:	50 e0       	ldi	r21, 0x00	; 0
    1548:	55 1f       	adc	r21, r21
    154a:	62 9f       	mul	r22, r18
    154c:	f0 01       	movw	r30, r0
    154e:	72 9f       	mul	r23, r18
    1550:	bb 27       	eor	r27, r27
    1552:	f0 0d       	add	r31, r0
    1554:	b1 1d       	adc	r27, r1
    1556:	63 9f       	mul	r22, r19
    1558:	aa 27       	eor	r26, r26
    155a:	f0 0d       	add	r31, r0
    155c:	b1 1d       	adc	r27, r1
    155e:	aa 1f       	adc	r26, r26
    1560:	64 9f       	mul	r22, r20
    1562:	66 27       	eor	r22, r22
    1564:	b0 0d       	add	r27, r0
    1566:	a1 1d       	adc	r26, r1
    1568:	66 1f       	adc	r22, r22
    156a:	82 9f       	mul	r24, r18
    156c:	22 27       	eor	r18, r18
    156e:	b0 0d       	add	r27, r0
    1570:	a1 1d       	adc	r26, r1
    1572:	62 1f       	adc	r22, r18
    1574:	73 9f       	mul	r23, r19
    1576:	b0 0d       	add	r27, r0
    1578:	a1 1d       	adc	r26, r1
    157a:	62 1f       	adc	r22, r18
    157c:	83 9f       	mul	r24, r19
    157e:	a0 0d       	add	r26, r0
    1580:	61 1d       	adc	r22, r1
    1582:	22 1f       	adc	r18, r18
    1584:	74 9f       	mul	r23, r20
    1586:	33 27       	eor	r19, r19
    1588:	a0 0d       	add	r26, r0
    158a:	61 1d       	adc	r22, r1
    158c:	23 1f       	adc	r18, r19
    158e:	84 9f       	mul	r24, r20
    1590:	60 0d       	add	r22, r0
    1592:	21 1d       	adc	r18, r1
    1594:	82 2f       	mov	r24, r18
    1596:	76 2f       	mov	r23, r22
    1598:	6a 2f       	mov	r22, r26
    159a:	11 24       	eor	r1, r1
    159c:	9f 57       	subi	r25, 0x7F	; 127
    159e:	50 40       	sbci	r21, 0x00	; 0
    15a0:	9a f0       	brmi	.+38     	; 0x15c8 <__mulsf3_pse+0x88>
    15a2:	f1 f0       	breq	.+60     	; 0x15e0 <__mulsf3_pse+0xa0>
    15a4:	88 23       	and	r24, r24
    15a6:	4a f0       	brmi	.+18     	; 0x15ba <__mulsf3_pse+0x7a>
    15a8:	ee 0f       	add	r30, r30
    15aa:	ff 1f       	adc	r31, r31
    15ac:	bb 1f       	adc	r27, r27
    15ae:	66 1f       	adc	r22, r22
    15b0:	77 1f       	adc	r23, r23
    15b2:	88 1f       	adc	r24, r24
    15b4:	91 50       	subi	r25, 0x01	; 1
    15b6:	50 40       	sbci	r21, 0x00	; 0
    15b8:	a9 f7       	brne	.-22     	; 0x15a4 <__mulsf3_pse+0x64>
    15ba:	9e 3f       	cpi	r25, 0xFE	; 254
    15bc:	51 05       	cpc	r21, r1
    15be:	80 f0       	brcs	.+32     	; 0x15e0 <__mulsf3_pse+0xa0>
    15c0:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__fp_inf>
    15c4:	0c 94 84 0a 	jmp	0x1508	; 0x1508 <__fp_szero>
    15c8:	5f 3f       	cpi	r21, 0xFF	; 255
    15ca:	e4 f3       	brlt	.-8      	; 0x15c4 <__mulsf3_pse+0x84>
    15cc:	98 3e       	cpi	r25, 0xE8	; 232
    15ce:	d4 f3       	brlt	.-12     	; 0x15c4 <__mulsf3_pse+0x84>
    15d0:	86 95       	lsr	r24
    15d2:	77 95       	ror	r23
    15d4:	67 95       	ror	r22
    15d6:	b7 95       	ror	r27
    15d8:	f7 95       	ror	r31
    15da:	e7 95       	ror	r30
    15dc:	9f 5f       	subi	r25, 0xFF	; 255
    15de:	c1 f7       	brne	.-16     	; 0x15d0 <__mulsf3_pse+0x90>
    15e0:	fe 2b       	or	r31, r30
    15e2:	88 0f       	add	r24, r24
    15e4:	91 1d       	adc	r25, r1
    15e6:	96 95       	lsr	r25
    15e8:	87 95       	ror	r24
    15ea:	97 f9       	bld	r25, 7
    15ec:	08 95       	ret

000015ee <__udivmodsi4>:
    15ee:	a1 e2       	ldi	r26, 0x21	; 33
    15f0:	1a 2e       	mov	r1, r26
    15f2:	aa 1b       	sub	r26, r26
    15f4:	bb 1b       	sub	r27, r27
    15f6:	fd 01       	movw	r30, r26
    15f8:	0d c0       	rjmp	.+26     	; 0x1614 <__udivmodsi4_ep>

000015fa <__udivmodsi4_loop>:
    15fa:	aa 1f       	adc	r26, r26
    15fc:	bb 1f       	adc	r27, r27
    15fe:	ee 1f       	adc	r30, r30
    1600:	ff 1f       	adc	r31, r31
    1602:	a2 17       	cp	r26, r18
    1604:	b3 07       	cpc	r27, r19
    1606:	e4 07       	cpc	r30, r20
    1608:	f5 07       	cpc	r31, r21
    160a:	20 f0       	brcs	.+8      	; 0x1614 <__udivmodsi4_ep>
    160c:	a2 1b       	sub	r26, r18
    160e:	b3 0b       	sbc	r27, r19
    1610:	e4 0b       	sbc	r30, r20
    1612:	f5 0b       	sbc	r31, r21

00001614 <__udivmodsi4_ep>:
    1614:	66 1f       	adc	r22, r22
    1616:	77 1f       	adc	r23, r23
    1618:	88 1f       	adc	r24, r24
    161a:	99 1f       	adc	r25, r25
    161c:	1a 94       	dec	r1
    161e:	69 f7       	brne	.-38     	; 0x15fa <__udivmodsi4_loop>
    1620:	60 95       	com	r22
    1622:	70 95       	com	r23
    1624:	80 95       	com	r24
    1626:	90 95       	com	r25
    1628:	9b 01       	movw	r18, r22
    162a:	ac 01       	movw	r20, r24
    162c:	bd 01       	movw	r22, r26
    162e:	cf 01       	movw	r24, r30
    1630:	08 95       	ret

00001632 <__divmodsi4>:
    1632:	05 2e       	mov	r0, r21
    1634:	97 fb       	bst	r25, 7
    1636:	1e f4       	brtc	.+6      	; 0x163e <__divmodsi4+0xc>
    1638:	00 94       	com	r0
    163a:	0e 94 30 0b 	call	0x1660	; 0x1660 <__negsi2>
    163e:	57 fd       	sbrc	r21, 7
    1640:	07 d0       	rcall	.+14     	; 0x1650 <__divmodsi4_neg2>
    1642:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__udivmodsi4>
    1646:	07 fc       	sbrc	r0, 7
    1648:	03 d0       	rcall	.+6      	; 0x1650 <__divmodsi4_neg2>
    164a:	4e f4       	brtc	.+18     	; 0x165e <__divmodsi4_exit>
    164c:	0c 94 30 0b 	jmp	0x1660	; 0x1660 <__negsi2>

00001650 <__divmodsi4_neg2>:
    1650:	50 95       	com	r21
    1652:	40 95       	com	r20
    1654:	30 95       	com	r19
    1656:	21 95       	neg	r18
    1658:	3f 4f       	sbci	r19, 0xFF	; 255
    165a:	4f 4f       	sbci	r20, 0xFF	; 255
    165c:	5f 4f       	sbci	r21, 0xFF	; 255

0000165e <__divmodsi4_exit>:
    165e:	08 95       	ret

00001660 <__negsi2>:
    1660:	90 95       	com	r25
    1662:	80 95       	com	r24
    1664:	70 95       	com	r23
    1666:	61 95       	neg	r22
    1668:	7f 4f       	sbci	r23, 0xFF	; 255
    166a:	8f 4f       	sbci	r24, 0xFF	; 255
    166c:	9f 4f       	sbci	r25, 0xFF	; 255
    166e:	08 95       	ret

00001670 <__tablejump2__>:
    1670:	ee 0f       	add	r30, r30
    1672:	ff 1f       	adc	r31, r31
    1674:	00 24       	eor	r0, r0
    1676:	00 1c       	adc	r0, r0
    1678:	0b be       	out	0x3b, r0	; 59
    167a:	07 90       	elpm	r0, Z+
    167c:	f6 91       	elpm	r31, Z
    167e:	e0 2d       	mov	r30, r0
    1680:	09 94       	ijmp

00001682 <atoi>:
    1682:	fc 01       	movw	r30, r24
    1684:	88 27       	eor	r24, r24
    1686:	99 27       	eor	r25, r25
    1688:	e8 94       	clt
    168a:	21 91       	ld	r18, Z+
    168c:	20 32       	cpi	r18, 0x20	; 32
    168e:	e9 f3       	breq	.-6      	; 0x168a <atoi+0x8>
    1690:	29 30       	cpi	r18, 0x09	; 9
    1692:	10 f0       	brcs	.+4      	; 0x1698 <atoi+0x16>
    1694:	2e 30       	cpi	r18, 0x0E	; 14
    1696:	c8 f3       	brcs	.-14     	; 0x168a <atoi+0x8>
    1698:	2b 32       	cpi	r18, 0x2B	; 43
    169a:	41 f0       	breq	.+16     	; 0x16ac <atoi+0x2a>
    169c:	2d 32       	cpi	r18, 0x2D	; 45
    169e:	39 f4       	brne	.+14     	; 0x16ae <atoi+0x2c>
    16a0:	68 94       	set
    16a2:	04 c0       	rjmp	.+8      	; 0x16ac <atoi+0x2a>
    16a4:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <__mulhi_const_10>
    16a8:	82 0f       	add	r24, r18
    16aa:	91 1d       	adc	r25, r1
    16ac:	21 91       	ld	r18, Z+
    16ae:	20 53       	subi	r18, 0x30	; 48
    16b0:	2a 30       	cpi	r18, 0x0A	; 10
    16b2:	c0 f3       	brcs	.-16     	; 0x16a4 <atoi+0x22>
    16b4:	1e f4       	brtc	.+6      	; 0x16bc <atoi+0x3a>
    16b6:	90 95       	com	r25
    16b8:	81 95       	neg	r24
    16ba:	9f 4f       	sbci	r25, 0xFF	; 255
    16bc:	08 95       	ret

000016be <strcmp>:
    16be:	fb 01       	movw	r30, r22
    16c0:	dc 01       	movw	r26, r24
    16c2:	8d 91       	ld	r24, X+
    16c4:	01 90       	ld	r0, Z+
    16c6:	80 19       	sub	r24, r0
    16c8:	01 10       	cpse	r0, r1
    16ca:	d9 f3       	breq	.-10     	; 0x16c2 <strcmp+0x4>
    16cc:	99 0b       	sbc	r25, r25
    16ce:	08 95       	ret

000016d0 <__mulhi_const_10>:
    16d0:	7a e0       	ldi	r23, 0x0A	; 10
    16d2:	97 9f       	mul	r25, r23
    16d4:	90 2d       	mov	r25, r0
    16d6:	87 9f       	mul	r24, r23
    16d8:	80 2d       	mov	r24, r0
    16da:	91 0d       	add	r25, r1
    16dc:	11 24       	eor	r1, r1
    16de:	08 95       	ret

000016e0 <printf>:
    16e0:	cf 93       	push	r28
    16e2:	df 93       	push	r29
    16e4:	cd b7       	in	r28, 0x3d	; 61
    16e6:	de b7       	in	r29, 0x3e	; 62
    16e8:	ae 01       	movw	r20, r28
    16ea:	4b 5f       	subi	r20, 0xFB	; 251
    16ec:	5f 4f       	sbci	r21, 0xFF	; 255
    16ee:	fa 01       	movw	r30, r20
    16f0:	61 91       	ld	r22, Z+
    16f2:	71 91       	ld	r23, Z+
    16f4:	af 01       	movw	r20, r30
    16f6:	80 91 c6 4d 	lds	r24, 0x4DC6	; 0x804dc6 <__iob+0x2>
    16fa:	90 91 c7 4d 	lds	r25, 0x4DC7	; 0x804dc7 <__iob+0x3>
    16fe:	0e 94 b4 0b 	call	0x1768	; 0x1768 <vfprintf>
    1702:	df 91       	pop	r29
    1704:	cf 91       	pop	r28
    1706:	08 95       	ret

00001708 <puts>:
    1708:	0f 93       	push	r16
    170a:	1f 93       	push	r17
    170c:	cf 93       	push	r28
    170e:	df 93       	push	r29
    1710:	e0 91 c6 4d 	lds	r30, 0x4DC6	; 0x804dc6 <__iob+0x2>
    1714:	f0 91 c7 4d 	lds	r31, 0x4DC7	; 0x804dc7 <__iob+0x3>
    1718:	23 81       	ldd	r18, Z+3	; 0x03
    171a:	21 ff       	sbrs	r18, 1
    171c:	1b c0       	rjmp	.+54     	; 0x1754 <puts+0x4c>
    171e:	8c 01       	movw	r16, r24
    1720:	d0 e0       	ldi	r29, 0x00	; 0
    1722:	c0 e0       	ldi	r28, 0x00	; 0
    1724:	f8 01       	movw	r30, r16
    1726:	81 91       	ld	r24, Z+
    1728:	8f 01       	movw	r16, r30
    172a:	60 91 c6 4d 	lds	r22, 0x4DC6	; 0x804dc6 <__iob+0x2>
    172e:	70 91 c7 4d 	lds	r23, 0x4DC7	; 0x804dc7 <__iob+0x3>
    1732:	db 01       	movw	r26, r22
    1734:	18 96       	adiw	r26, 0x08	; 8
    1736:	ed 91       	ld	r30, X+
    1738:	fc 91       	ld	r31, X
    173a:	19 97       	sbiw	r26, 0x09	; 9
    173c:	88 23       	and	r24, r24
    173e:	31 f0       	breq	.+12     	; 0x174c <puts+0x44>
    1740:	09 95       	icall
    1742:	89 2b       	or	r24, r25
    1744:	79 f3       	breq	.-34     	; 0x1724 <puts+0x1c>
    1746:	df ef       	ldi	r29, 0xFF	; 255
    1748:	cf ef       	ldi	r28, 0xFF	; 255
    174a:	ec cf       	rjmp	.-40     	; 0x1724 <puts+0x1c>
    174c:	8a e0       	ldi	r24, 0x0A	; 10
    174e:	09 95       	icall
    1750:	89 2b       	or	r24, r25
    1752:	19 f0       	breq	.+6      	; 0x175a <puts+0x52>
    1754:	8f ef       	ldi	r24, 0xFF	; 255
    1756:	9f ef       	ldi	r25, 0xFF	; 255
    1758:	02 c0       	rjmp	.+4      	; 0x175e <puts+0x56>
    175a:	8d 2f       	mov	r24, r29
    175c:	9c 2f       	mov	r25, r28
    175e:	df 91       	pop	r29
    1760:	cf 91       	pop	r28
    1762:	1f 91       	pop	r17
    1764:	0f 91       	pop	r16
    1766:	08 95       	ret

00001768 <vfprintf>:
    1768:	2f 92       	push	r2
    176a:	3f 92       	push	r3
    176c:	4f 92       	push	r4
    176e:	5f 92       	push	r5
    1770:	6f 92       	push	r6
    1772:	7f 92       	push	r7
    1774:	8f 92       	push	r8
    1776:	9f 92       	push	r9
    1778:	af 92       	push	r10
    177a:	bf 92       	push	r11
    177c:	cf 92       	push	r12
    177e:	df 92       	push	r13
    1780:	ef 92       	push	r14
    1782:	ff 92       	push	r15
    1784:	0f 93       	push	r16
    1786:	1f 93       	push	r17
    1788:	cf 93       	push	r28
    178a:	df 93       	push	r29
    178c:	cd b7       	in	r28, 0x3d	; 61
    178e:	de b7       	in	r29, 0x3e	; 62
    1790:	2b 97       	sbiw	r28, 0x0b	; 11
    1792:	cd bf       	out	0x3d, r28	; 61
    1794:	de bf       	out	0x3e, r29	; 62
    1796:	6c 01       	movw	r12, r24
    1798:	7b 01       	movw	r14, r22
    179a:	8a 01       	movw	r16, r20
    179c:	fc 01       	movw	r30, r24
    179e:	16 82       	std	Z+6, r1	; 0x06
    17a0:	17 82       	std	Z+7, r1	; 0x07
    17a2:	83 81       	ldd	r24, Z+3	; 0x03
    17a4:	81 ff       	sbrs	r24, 1
    17a6:	cc c1       	rjmp	.+920    	; 0x1b40 <vfprintf+0x3d8>
    17a8:	ce 01       	movw	r24, r28
    17aa:	01 96       	adiw	r24, 0x01	; 1
    17ac:	3c 01       	movw	r6, r24
    17ae:	f6 01       	movw	r30, r12
    17b0:	93 81       	ldd	r25, Z+3	; 0x03
    17b2:	f7 01       	movw	r30, r14
    17b4:	93 fd       	sbrc	r25, 3
    17b6:	85 91       	lpm	r24, Z+
    17b8:	93 ff       	sbrs	r25, 3
    17ba:	81 91       	ld	r24, Z+
    17bc:	7f 01       	movw	r14, r30
    17be:	88 23       	and	r24, r24
    17c0:	09 f4       	brne	.+2      	; 0x17c4 <vfprintf+0x5c>
    17c2:	ba c1       	rjmp	.+884    	; 0x1b38 <vfprintf+0x3d0>
    17c4:	85 32       	cpi	r24, 0x25	; 37
    17c6:	39 f4       	brne	.+14     	; 0x17d6 <vfprintf+0x6e>
    17c8:	93 fd       	sbrc	r25, 3
    17ca:	85 91       	lpm	r24, Z+
    17cc:	93 ff       	sbrs	r25, 3
    17ce:	81 91       	ld	r24, Z+
    17d0:	7f 01       	movw	r14, r30
    17d2:	85 32       	cpi	r24, 0x25	; 37
    17d4:	29 f4       	brne	.+10     	; 0x17e0 <vfprintf+0x78>
    17d6:	b6 01       	movw	r22, r12
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <fputc>
    17de:	e7 cf       	rjmp	.-50     	; 0x17ae <vfprintf+0x46>
    17e0:	91 2c       	mov	r9, r1
    17e2:	21 2c       	mov	r2, r1
    17e4:	31 2c       	mov	r3, r1
    17e6:	ff e1       	ldi	r31, 0x1F	; 31
    17e8:	f3 15       	cp	r31, r3
    17ea:	d8 f0       	brcs	.+54     	; 0x1822 <vfprintf+0xba>
    17ec:	8b 32       	cpi	r24, 0x2B	; 43
    17ee:	79 f0       	breq	.+30     	; 0x180e <vfprintf+0xa6>
    17f0:	38 f4       	brcc	.+14     	; 0x1800 <vfprintf+0x98>
    17f2:	80 32       	cpi	r24, 0x20	; 32
    17f4:	79 f0       	breq	.+30     	; 0x1814 <vfprintf+0xac>
    17f6:	83 32       	cpi	r24, 0x23	; 35
    17f8:	a1 f4       	brne	.+40     	; 0x1822 <vfprintf+0xba>
    17fa:	23 2d       	mov	r18, r3
    17fc:	20 61       	ori	r18, 0x10	; 16
    17fe:	1d c0       	rjmp	.+58     	; 0x183a <vfprintf+0xd2>
    1800:	8d 32       	cpi	r24, 0x2D	; 45
    1802:	61 f0       	breq	.+24     	; 0x181c <vfprintf+0xb4>
    1804:	80 33       	cpi	r24, 0x30	; 48
    1806:	69 f4       	brne	.+26     	; 0x1822 <vfprintf+0xba>
    1808:	23 2d       	mov	r18, r3
    180a:	21 60       	ori	r18, 0x01	; 1
    180c:	16 c0       	rjmp	.+44     	; 0x183a <vfprintf+0xd2>
    180e:	83 2d       	mov	r24, r3
    1810:	82 60       	ori	r24, 0x02	; 2
    1812:	38 2e       	mov	r3, r24
    1814:	e3 2d       	mov	r30, r3
    1816:	e4 60       	ori	r30, 0x04	; 4
    1818:	3e 2e       	mov	r3, r30
    181a:	2a c0       	rjmp	.+84     	; 0x1870 <vfprintf+0x108>
    181c:	f3 2d       	mov	r31, r3
    181e:	f8 60       	ori	r31, 0x08	; 8
    1820:	1d c0       	rjmp	.+58     	; 0x185c <vfprintf+0xf4>
    1822:	37 fc       	sbrc	r3, 7
    1824:	2d c0       	rjmp	.+90     	; 0x1880 <vfprintf+0x118>
    1826:	20 ed       	ldi	r18, 0xD0	; 208
    1828:	28 0f       	add	r18, r24
    182a:	2a 30       	cpi	r18, 0x0A	; 10
    182c:	40 f0       	brcs	.+16     	; 0x183e <vfprintf+0xd6>
    182e:	8e 32       	cpi	r24, 0x2E	; 46
    1830:	b9 f4       	brne	.+46     	; 0x1860 <vfprintf+0xf8>
    1832:	36 fc       	sbrc	r3, 6
    1834:	81 c1       	rjmp	.+770    	; 0x1b38 <vfprintf+0x3d0>
    1836:	23 2d       	mov	r18, r3
    1838:	20 64       	ori	r18, 0x40	; 64
    183a:	32 2e       	mov	r3, r18
    183c:	19 c0       	rjmp	.+50     	; 0x1870 <vfprintf+0x108>
    183e:	36 fe       	sbrs	r3, 6
    1840:	06 c0       	rjmp	.+12     	; 0x184e <vfprintf+0xe6>
    1842:	8a e0       	ldi	r24, 0x0A	; 10
    1844:	98 9e       	mul	r9, r24
    1846:	20 0d       	add	r18, r0
    1848:	11 24       	eor	r1, r1
    184a:	92 2e       	mov	r9, r18
    184c:	11 c0       	rjmp	.+34     	; 0x1870 <vfprintf+0x108>
    184e:	ea e0       	ldi	r30, 0x0A	; 10
    1850:	2e 9e       	mul	r2, r30
    1852:	20 0d       	add	r18, r0
    1854:	11 24       	eor	r1, r1
    1856:	22 2e       	mov	r2, r18
    1858:	f3 2d       	mov	r31, r3
    185a:	f0 62       	ori	r31, 0x20	; 32
    185c:	3f 2e       	mov	r3, r31
    185e:	08 c0       	rjmp	.+16     	; 0x1870 <vfprintf+0x108>
    1860:	8c 36       	cpi	r24, 0x6C	; 108
    1862:	21 f4       	brne	.+8      	; 0x186c <vfprintf+0x104>
    1864:	83 2d       	mov	r24, r3
    1866:	80 68       	ori	r24, 0x80	; 128
    1868:	38 2e       	mov	r3, r24
    186a:	02 c0       	rjmp	.+4      	; 0x1870 <vfprintf+0x108>
    186c:	88 36       	cpi	r24, 0x68	; 104
    186e:	41 f4       	brne	.+16     	; 0x1880 <vfprintf+0x118>
    1870:	f7 01       	movw	r30, r14
    1872:	93 fd       	sbrc	r25, 3
    1874:	85 91       	lpm	r24, Z+
    1876:	93 ff       	sbrs	r25, 3
    1878:	81 91       	ld	r24, Z+
    187a:	7f 01       	movw	r14, r30
    187c:	81 11       	cpse	r24, r1
    187e:	b3 cf       	rjmp	.-154    	; 0x17e6 <vfprintf+0x7e>
    1880:	98 2f       	mov	r25, r24
    1882:	9f 7d       	andi	r25, 0xDF	; 223
    1884:	95 54       	subi	r25, 0x45	; 69
    1886:	93 30       	cpi	r25, 0x03	; 3
    1888:	28 f4       	brcc	.+10     	; 0x1894 <vfprintf+0x12c>
    188a:	0c 5f       	subi	r16, 0xFC	; 252
    188c:	1f 4f       	sbci	r17, 0xFF	; 255
    188e:	9f e3       	ldi	r25, 0x3F	; 63
    1890:	99 83       	std	Y+1, r25	; 0x01
    1892:	0d c0       	rjmp	.+26     	; 0x18ae <vfprintf+0x146>
    1894:	83 36       	cpi	r24, 0x63	; 99
    1896:	31 f0       	breq	.+12     	; 0x18a4 <vfprintf+0x13c>
    1898:	83 37       	cpi	r24, 0x73	; 115
    189a:	71 f0       	breq	.+28     	; 0x18b8 <vfprintf+0x150>
    189c:	83 35       	cpi	r24, 0x53	; 83
    189e:	09 f0       	breq	.+2      	; 0x18a2 <vfprintf+0x13a>
    18a0:	59 c0       	rjmp	.+178    	; 0x1954 <vfprintf+0x1ec>
    18a2:	21 c0       	rjmp	.+66     	; 0x18e6 <vfprintf+0x17e>
    18a4:	f8 01       	movw	r30, r16
    18a6:	80 81       	ld	r24, Z
    18a8:	89 83       	std	Y+1, r24	; 0x01
    18aa:	0e 5f       	subi	r16, 0xFE	; 254
    18ac:	1f 4f       	sbci	r17, 0xFF	; 255
    18ae:	88 24       	eor	r8, r8
    18b0:	83 94       	inc	r8
    18b2:	91 2c       	mov	r9, r1
    18b4:	53 01       	movw	r10, r6
    18b6:	13 c0       	rjmp	.+38     	; 0x18de <vfprintf+0x176>
    18b8:	28 01       	movw	r4, r16
    18ba:	f2 e0       	ldi	r31, 0x02	; 2
    18bc:	4f 0e       	add	r4, r31
    18be:	51 1c       	adc	r5, r1
    18c0:	f8 01       	movw	r30, r16
    18c2:	a0 80       	ld	r10, Z
    18c4:	b1 80       	ldd	r11, Z+1	; 0x01
    18c6:	36 fe       	sbrs	r3, 6
    18c8:	03 c0       	rjmp	.+6      	; 0x18d0 <vfprintf+0x168>
    18ca:	69 2d       	mov	r22, r9
    18cc:	70 e0       	ldi	r23, 0x00	; 0
    18ce:	02 c0       	rjmp	.+4      	; 0x18d4 <vfprintf+0x16c>
    18d0:	6f ef       	ldi	r22, 0xFF	; 255
    18d2:	7f ef       	ldi	r23, 0xFF	; 255
    18d4:	c5 01       	movw	r24, r10
    18d6:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <strnlen>
    18da:	4c 01       	movw	r8, r24
    18dc:	82 01       	movw	r16, r4
    18de:	f3 2d       	mov	r31, r3
    18e0:	ff 77       	andi	r31, 0x7F	; 127
    18e2:	3f 2e       	mov	r3, r31
    18e4:	16 c0       	rjmp	.+44     	; 0x1912 <vfprintf+0x1aa>
    18e6:	28 01       	movw	r4, r16
    18e8:	22 e0       	ldi	r18, 0x02	; 2
    18ea:	42 0e       	add	r4, r18
    18ec:	51 1c       	adc	r5, r1
    18ee:	f8 01       	movw	r30, r16
    18f0:	a0 80       	ld	r10, Z
    18f2:	b1 80       	ldd	r11, Z+1	; 0x01
    18f4:	36 fe       	sbrs	r3, 6
    18f6:	03 c0       	rjmp	.+6      	; 0x18fe <vfprintf+0x196>
    18f8:	69 2d       	mov	r22, r9
    18fa:	70 e0       	ldi	r23, 0x00	; 0
    18fc:	02 c0       	rjmp	.+4      	; 0x1902 <vfprintf+0x19a>
    18fe:	6f ef       	ldi	r22, 0xFF	; 255
    1900:	7f ef       	ldi	r23, 0xFF	; 255
    1902:	c5 01       	movw	r24, r10
    1904:	0e 94 b8 0d 	call	0x1b70	; 0x1b70 <strnlen_P>
    1908:	4c 01       	movw	r8, r24
    190a:	f3 2d       	mov	r31, r3
    190c:	f0 68       	ori	r31, 0x80	; 128
    190e:	3f 2e       	mov	r3, r31
    1910:	82 01       	movw	r16, r4
    1912:	33 fc       	sbrc	r3, 3
    1914:	1b c0       	rjmp	.+54     	; 0x194c <vfprintf+0x1e4>
    1916:	82 2d       	mov	r24, r2
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	88 16       	cp	r8, r24
    191c:	99 06       	cpc	r9, r25
    191e:	b0 f4       	brcc	.+44     	; 0x194c <vfprintf+0x1e4>
    1920:	b6 01       	movw	r22, r12
    1922:	80 e2       	ldi	r24, 0x20	; 32
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <fputc>
    192a:	2a 94       	dec	r2
    192c:	f4 cf       	rjmp	.-24     	; 0x1916 <vfprintf+0x1ae>
    192e:	f5 01       	movw	r30, r10
    1930:	37 fc       	sbrc	r3, 7
    1932:	85 91       	lpm	r24, Z+
    1934:	37 fe       	sbrs	r3, 7
    1936:	81 91       	ld	r24, Z+
    1938:	5f 01       	movw	r10, r30
    193a:	b6 01       	movw	r22, r12
    193c:	90 e0       	ldi	r25, 0x00	; 0
    193e:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <fputc>
    1942:	21 10       	cpse	r2, r1
    1944:	2a 94       	dec	r2
    1946:	21 e0       	ldi	r18, 0x01	; 1
    1948:	82 1a       	sub	r8, r18
    194a:	91 08       	sbc	r9, r1
    194c:	81 14       	cp	r8, r1
    194e:	91 04       	cpc	r9, r1
    1950:	71 f7       	brne	.-36     	; 0x192e <vfprintf+0x1c6>
    1952:	e8 c0       	rjmp	.+464    	; 0x1b24 <vfprintf+0x3bc>
    1954:	84 36       	cpi	r24, 0x64	; 100
    1956:	11 f0       	breq	.+4      	; 0x195c <vfprintf+0x1f4>
    1958:	89 36       	cpi	r24, 0x69	; 105
    195a:	41 f5       	brne	.+80     	; 0x19ac <vfprintf+0x244>
    195c:	f8 01       	movw	r30, r16
    195e:	37 fe       	sbrs	r3, 7
    1960:	07 c0       	rjmp	.+14     	; 0x1970 <vfprintf+0x208>
    1962:	60 81       	ld	r22, Z
    1964:	71 81       	ldd	r23, Z+1	; 0x01
    1966:	82 81       	ldd	r24, Z+2	; 0x02
    1968:	93 81       	ldd	r25, Z+3	; 0x03
    196a:	0c 5f       	subi	r16, 0xFC	; 252
    196c:	1f 4f       	sbci	r17, 0xFF	; 255
    196e:	08 c0       	rjmp	.+16     	; 0x1980 <vfprintf+0x218>
    1970:	60 81       	ld	r22, Z
    1972:	71 81       	ldd	r23, Z+1	; 0x01
    1974:	07 2e       	mov	r0, r23
    1976:	00 0c       	add	r0, r0
    1978:	88 0b       	sbc	r24, r24
    197a:	99 0b       	sbc	r25, r25
    197c:	0e 5f       	subi	r16, 0xFE	; 254
    197e:	1f 4f       	sbci	r17, 0xFF	; 255
    1980:	f3 2d       	mov	r31, r3
    1982:	ff 76       	andi	r31, 0x6F	; 111
    1984:	3f 2e       	mov	r3, r31
    1986:	97 ff       	sbrs	r25, 7
    1988:	09 c0       	rjmp	.+18     	; 0x199c <vfprintf+0x234>
    198a:	90 95       	com	r25
    198c:	80 95       	com	r24
    198e:	70 95       	com	r23
    1990:	61 95       	neg	r22
    1992:	7f 4f       	sbci	r23, 0xFF	; 255
    1994:	8f 4f       	sbci	r24, 0xFF	; 255
    1996:	9f 4f       	sbci	r25, 0xFF	; 255
    1998:	f0 68       	ori	r31, 0x80	; 128
    199a:	3f 2e       	mov	r3, r31
    199c:	2a e0       	ldi	r18, 0x0A	; 10
    199e:	30 e0       	ldi	r19, 0x00	; 0
    19a0:	a3 01       	movw	r20, r6
    19a2:	0e 94 0a 0e 	call	0x1c14	; 0x1c14 <__ultoa_invert>
    19a6:	88 2e       	mov	r8, r24
    19a8:	86 18       	sub	r8, r6
    19aa:	45 c0       	rjmp	.+138    	; 0x1a36 <vfprintf+0x2ce>
    19ac:	85 37       	cpi	r24, 0x75	; 117
    19ae:	31 f4       	brne	.+12     	; 0x19bc <vfprintf+0x254>
    19b0:	23 2d       	mov	r18, r3
    19b2:	2f 7e       	andi	r18, 0xEF	; 239
    19b4:	b2 2e       	mov	r11, r18
    19b6:	2a e0       	ldi	r18, 0x0A	; 10
    19b8:	30 e0       	ldi	r19, 0x00	; 0
    19ba:	25 c0       	rjmp	.+74     	; 0x1a06 <vfprintf+0x29e>
    19bc:	93 2d       	mov	r25, r3
    19be:	99 7f       	andi	r25, 0xF9	; 249
    19c0:	b9 2e       	mov	r11, r25
    19c2:	8f 36       	cpi	r24, 0x6F	; 111
    19c4:	c1 f0       	breq	.+48     	; 0x19f6 <vfprintf+0x28e>
    19c6:	18 f4       	brcc	.+6      	; 0x19ce <vfprintf+0x266>
    19c8:	88 35       	cpi	r24, 0x58	; 88
    19ca:	79 f0       	breq	.+30     	; 0x19ea <vfprintf+0x282>
    19cc:	b5 c0       	rjmp	.+362    	; 0x1b38 <vfprintf+0x3d0>
    19ce:	80 37       	cpi	r24, 0x70	; 112
    19d0:	19 f0       	breq	.+6      	; 0x19d8 <vfprintf+0x270>
    19d2:	88 37       	cpi	r24, 0x78	; 120
    19d4:	21 f0       	breq	.+8      	; 0x19de <vfprintf+0x276>
    19d6:	b0 c0       	rjmp	.+352    	; 0x1b38 <vfprintf+0x3d0>
    19d8:	e9 2f       	mov	r30, r25
    19da:	e0 61       	ori	r30, 0x10	; 16
    19dc:	be 2e       	mov	r11, r30
    19de:	b4 fe       	sbrs	r11, 4
    19e0:	0d c0       	rjmp	.+26     	; 0x19fc <vfprintf+0x294>
    19e2:	fb 2d       	mov	r31, r11
    19e4:	f4 60       	ori	r31, 0x04	; 4
    19e6:	bf 2e       	mov	r11, r31
    19e8:	09 c0       	rjmp	.+18     	; 0x19fc <vfprintf+0x294>
    19ea:	34 fe       	sbrs	r3, 4
    19ec:	0a c0       	rjmp	.+20     	; 0x1a02 <vfprintf+0x29a>
    19ee:	29 2f       	mov	r18, r25
    19f0:	26 60       	ori	r18, 0x06	; 6
    19f2:	b2 2e       	mov	r11, r18
    19f4:	06 c0       	rjmp	.+12     	; 0x1a02 <vfprintf+0x29a>
    19f6:	28 e0       	ldi	r18, 0x08	; 8
    19f8:	30 e0       	ldi	r19, 0x00	; 0
    19fa:	05 c0       	rjmp	.+10     	; 0x1a06 <vfprintf+0x29e>
    19fc:	20 e1       	ldi	r18, 0x10	; 16
    19fe:	30 e0       	ldi	r19, 0x00	; 0
    1a00:	02 c0       	rjmp	.+4      	; 0x1a06 <vfprintf+0x29e>
    1a02:	20 e1       	ldi	r18, 0x10	; 16
    1a04:	32 e0       	ldi	r19, 0x02	; 2
    1a06:	f8 01       	movw	r30, r16
    1a08:	b7 fe       	sbrs	r11, 7
    1a0a:	07 c0       	rjmp	.+14     	; 0x1a1a <vfprintf+0x2b2>
    1a0c:	60 81       	ld	r22, Z
    1a0e:	71 81       	ldd	r23, Z+1	; 0x01
    1a10:	82 81       	ldd	r24, Z+2	; 0x02
    1a12:	93 81       	ldd	r25, Z+3	; 0x03
    1a14:	0c 5f       	subi	r16, 0xFC	; 252
    1a16:	1f 4f       	sbci	r17, 0xFF	; 255
    1a18:	06 c0       	rjmp	.+12     	; 0x1a26 <vfprintf+0x2be>
    1a1a:	60 81       	ld	r22, Z
    1a1c:	71 81       	ldd	r23, Z+1	; 0x01
    1a1e:	80 e0       	ldi	r24, 0x00	; 0
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	0e 5f       	subi	r16, 0xFE	; 254
    1a24:	1f 4f       	sbci	r17, 0xFF	; 255
    1a26:	a3 01       	movw	r20, r6
    1a28:	0e 94 0a 0e 	call	0x1c14	; 0x1c14 <__ultoa_invert>
    1a2c:	88 2e       	mov	r8, r24
    1a2e:	86 18       	sub	r8, r6
    1a30:	fb 2d       	mov	r31, r11
    1a32:	ff 77       	andi	r31, 0x7F	; 127
    1a34:	3f 2e       	mov	r3, r31
    1a36:	36 fe       	sbrs	r3, 6
    1a38:	0d c0       	rjmp	.+26     	; 0x1a54 <vfprintf+0x2ec>
    1a3a:	23 2d       	mov	r18, r3
    1a3c:	2e 7f       	andi	r18, 0xFE	; 254
    1a3e:	a2 2e       	mov	r10, r18
    1a40:	89 14       	cp	r8, r9
    1a42:	58 f4       	brcc	.+22     	; 0x1a5a <vfprintf+0x2f2>
    1a44:	34 fe       	sbrs	r3, 4
    1a46:	0b c0       	rjmp	.+22     	; 0x1a5e <vfprintf+0x2f6>
    1a48:	32 fc       	sbrc	r3, 2
    1a4a:	09 c0       	rjmp	.+18     	; 0x1a5e <vfprintf+0x2f6>
    1a4c:	83 2d       	mov	r24, r3
    1a4e:	8e 7e       	andi	r24, 0xEE	; 238
    1a50:	a8 2e       	mov	r10, r24
    1a52:	05 c0       	rjmp	.+10     	; 0x1a5e <vfprintf+0x2f6>
    1a54:	b8 2c       	mov	r11, r8
    1a56:	a3 2c       	mov	r10, r3
    1a58:	03 c0       	rjmp	.+6      	; 0x1a60 <vfprintf+0x2f8>
    1a5a:	b8 2c       	mov	r11, r8
    1a5c:	01 c0       	rjmp	.+2      	; 0x1a60 <vfprintf+0x2f8>
    1a5e:	b9 2c       	mov	r11, r9
    1a60:	a4 fe       	sbrs	r10, 4
    1a62:	0f c0       	rjmp	.+30     	; 0x1a82 <vfprintf+0x31a>
    1a64:	fe 01       	movw	r30, r28
    1a66:	e8 0d       	add	r30, r8
    1a68:	f1 1d       	adc	r31, r1
    1a6a:	80 81       	ld	r24, Z
    1a6c:	80 33       	cpi	r24, 0x30	; 48
    1a6e:	21 f4       	brne	.+8      	; 0x1a78 <vfprintf+0x310>
    1a70:	9a 2d       	mov	r25, r10
    1a72:	99 7e       	andi	r25, 0xE9	; 233
    1a74:	a9 2e       	mov	r10, r25
    1a76:	09 c0       	rjmp	.+18     	; 0x1a8a <vfprintf+0x322>
    1a78:	a2 fe       	sbrs	r10, 2
    1a7a:	06 c0       	rjmp	.+12     	; 0x1a88 <vfprintf+0x320>
    1a7c:	b3 94       	inc	r11
    1a7e:	b3 94       	inc	r11
    1a80:	04 c0       	rjmp	.+8      	; 0x1a8a <vfprintf+0x322>
    1a82:	8a 2d       	mov	r24, r10
    1a84:	86 78       	andi	r24, 0x86	; 134
    1a86:	09 f0       	breq	.+2      	; 0x1a8a <vfprintf+0x322>
    1a88:	b3 94       	inc	r11
    1a8a:	a3 fc       	sbrc	r10, 3
    1a8c:	11 c0       	rjmp	.+34     	; 0x1ab0 <vfprintf+0x348>
    1a8e:	a0 fe       	sbrs	r10, 0
    1a90:	06 c0       	rjmp	.+12     	; 0x1a9e <vfprintf+0x336>
    1a92:	b2 14       	cp	r11, r2
    1a94:	88 f4       	brcc	.+34     	; 0x1ab8 <vfprintf+0x350>
    1a96:	28 0c       	add	r2, r8
    1a98:	92 2c       	mov	r9, r2
    1a9a:	9b 18       	sub	r9, r11
    1a9c:	0e c0       	rjmp	.+28     	; 0x1aba <vfprintf+0x352>
    1a9e:	b2 14       	cp	r11, r2
    1aa0:	60 f4       	brcc	.+24     	; 0x1aba <vfprintf+0x352>
    1aa2:	b6 01       	movw	r22, r12
    1aa4:	80 e2       	ldi	r24, 0x20	; 32
    1aa6:	90 e0       	ldi	r25, 0x00	; 0
    1aa8:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <fputc>
    1aac:	b3 94       	inc	r11
    1aae:	f7 cf       	rjmp	.-18     	; 0x1a9e <vfprintf+0x336>
    1ab0:	b2 14       	cp	r11, r2
    1ab2:	18 f4       	brcc	.+6      	; 0x1aba <vfprintf+0x352>
    1ab4:	2b 18       	sub	r2, r11
    1ab6:	02 c0       	rjmp	.+4      	; 0x1abc <vfprintf+0x354>
    1ab8:	98 2c       	mov	r9, r8
    1aba:	21 2c       	mov	r2, r1
    1abc:	a4 fe       	sbrs	r10, 4
    1abe:	10 c0       	rjmp	.+32     	; 0x1ae0 <vfprintf+0x378>
    1ac0:	b6 01       	movw	r22, r12
    1ac2:	80 e3       	ldi	r24, 0x30	; 48
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <fputc>
    1aca:	a2 fe       	sbrs	r10, 2
    1acc:	17 c0       	rjmp	.+46     	; 0x1afc <vfprintf+0x394>
    1ace:	a1 fc       	sbrc	r10, 1
    1ad0:	03 c0       	rjmp	.+6      	; 0x1ad8 <vfprintf+0x370>
    1ad2:	88 e7       	ldi	r24, 0x78	; 120
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	02 c0       	rjmp	.+4      	; 0x1adc <vfprintf+0x374>
    1ad8:	88 e5       	ldi	r24, 0x58	; 88
    1ada:	90 e0       	ldi	r25, 0x00	; 0
    1adc:	b6 01       	movw	r22, r12
    1ade:	0c c0       	rjmp	.+24     	; 0x1af8 <vfprintf+0x390>
    1ae0:	8a 2d       	mov	r24, r10
    1ae2:	86 78       	andi	r24, 0x86	; 134
    1ae4:	59 f0       	breq	.+22     	; 0x1afc <vfprintf+0x394>
    1ae6:	a1 fe       	sbrs	r10, 1
    1ae8:	02 c0       	rjmp	.+4      	; 0x1aee <vfprintf+0x386>
    1aea:	8b e2       	ldi	r24, 0x2B	; 43
    1aec:	01 c0       	rjmp	.+2      	; 0x1af0 <vfprintf+0x388>
    1aee:	80 e2       	ldi	r24, 0x20	; 32
    1af0:	a7 fc       	sbrc	r10, 7
    1af2:	8d e2       	ldi	r24, 0x2D	; 45
    1af4:	b6 01       	movw	r22, r12
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <fputc>
    1afc:	89 14       	cp	r8, r9
    1afe:	38 f4       	brcc	.+14     	; 0x1b0e <vfprintf+0x3a6>
    1b00:	b6 01       	movw	r22, r12
    1b02:	80 e3       	ldi	r24, 0x30	; 48
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <fputc>
    1b0a:	9a 94       	dec	r9
    1b0c:	f7 cf       	rjmp	.-18     	; 0x1afc <vfprintf+0x394>
    1b0e:	8a 94       	dec	r8
    1b10:	f3 01       	movw	r30, r6
    1b12:	e8 0d       	add	r30, r8
    1b14:	f1 1d       	adc	r31, r1
    1b16:	80 81       	ld	r24, Z
    1b18:	b6 01       	movw	r22, r12
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <fputc>
    1b20:	81 10       	cpse	r8, r1
    1b22:	f5 cf       	rjmp	.-22     	; 0x1b0e <vfprintf+0x3a6>
    1b24:	22 20       	and	r2, r2
    1b26:	09 f4       	brne	.+2      	; 0x1b2a <vfprintf+0x3c2>
    1b28:	42 ce       	rjmp	.-892    	; 0x17ae <vfprintf+0x46>
    1b2a:	b6 01       	movw	r22, r12
    1b2c:	80 e2       	ldi	r24, 0x20	; 32
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <fputc>
    1b34:	2a 94       	dec	r2
    1b36:	f6 cf       	rjmp	.-20     	; 0x1b24 <vfprintf+0x3bc>
    1b38:	f6 01       	movw	r30, r12
    1b3a:	86 81       	ldd	r24, Z+6	; 0x06
    1b3c:	97 81       	ldd	r25, Z+7	; 0x07
    1b3e:	02 c0       	rjmp	.+4      	; 0x1b44 <vfprintf+0x3dc>
    1b40:	8f ef       	ldi	r24, 0xFF	; 255
    1b42:	9f ef       	ldi	r25, 0xFF	; 255
    1b44:	2b 96       	adiw	r28, 0x0b	; 11
    1b46:	cd bf       	out	0x3d, r28	; 61
    1b48:	de bf       	out	0x3e, r29	; 62
    1b4a:	df 91       	pop	r29
    1b4c:	cf 91       	pop	r28
    1b4e:	1f 91       	pop	r17
    1b50:	0f 91       	pop	r16
    1b52:	ff 90       	pop	r15
    1b54:	ef 90       	pop	r14
    1b56:	df 90       	pop	r13
    1b58:	cf 90       	pop	r12
    1b5a:	bf 90       	pop	r11
    1b5c:	af 90       	pop	r10
    1b5e:	9f 90       	pop	r9
    1b60:	8f 90       	pop	r8
    1b62:	7f 90       	pop	r7
    1b64:	6f 90       	pop	r6
    1b66:	5f 90       	pop	r5
    1b68:	4f 90       	pop	r4
    1b6a:	3f 90       	pop	r3
    1b6c:	2f 90       	pop	r2
    1b6e:	08 95       	ret

00001b70 <strnlen_P>:
    1b70:	fc 01       	movw	r30, r24
    1b72:	05 90       	lpm	r0, Z+
    1b74:	61 50       	subi	r22, 0x01	; 1
    1b76:	70 40       	sbci	r23, 0x00	; 0
    1b78:	01 10       	cpse	r0, r1
    1b7a:	d8 f7       	brcc	.-10     	; 0x1b72 <strnlen_P+0x2>
    1b7c:	80 95       	com	r24
    1b7e:	90 95       	com	r25
    1b80:	8e 0f       	add	r24, r30
    1b82:	9f 1f       	adc	r25, r31
    1b84:	08 95       	ret

00001b86 <strnlen>:
    1b86:	fc 01       	movw	r30, r24
    1b88:	61 50       	subi	r22, 0x01	; 1
    1b8a:	70 40       	sbci	r23, 0x00	; 0
    1b8c:	01 90       	ld	r0, Z+
    1b8e:	01 10       	cpse	r0, r1
    1b90:	d8 f7       	brcc	.-10     	; 0x1b88 <strnlen+0x2>
    1b92:	80 95       	com	r24
    1b94:	90 95       	com	r25
    1b96:	8e 0f       	add	r24, r30
    1b98:	9f 1f       	adc	r25, r31
    1b9a:	08 95       	ret

00001b9c <fputc>:
    1b9c:	0f 93       	push	r16
    1b9e:	1f 93       	push	r17
    1ba0:	cf 93       	push	r28
    1ba2:	df 93       	push	r29
    1ba4:	fb 01       	movw	r30, r22
    1ba6:	23 81       	ldd	r18, Z+3	; 0x03
    1ba8:	21 fd       	sbrc	r18, 1
    1baa:	03 c0       	rjmp	.+6      	; 0x1bb2 <fputc+0x16>
    1bac:	8f ef       	ldi	r24, 0xFF	; 255
    1bae:	9f ef       	ldi	r25, 0xFF	; 255
    1bb0:	2c c0       	rjmp	.+88     	; 0x1c0a <fputc+0x6e>
    1bb2:	22 ff       	sbrs	r18, 2
    1bb4:	16 c0       	rjmp	.+44     	; 0x1be2 <fputc+0x46>
    1bb6:	46 81       	ldd	r20, Z+6	; 0x06
    1bb8:	57 81       	ldd	r21, Z+7	; 0x07
    1bba:	24 81       	ldd	r18, Z+4	; 0x04
    1bbc:	35 81       	ldd	r19, Z+5	; 0x05
    1bbe:	42 17       	cp	r20, r18
    1bc0:	53 07       	cpc	r21, r19
    1bc2:	44 f4       	brge	.+16     	; 0x1bd4 <fputc+0x38>
    1bc4:	a0 81       	ld	r26, Z
    1bc6:	b1 81       	ldd	r27, Z+1	; 0x01
    1bc8:	9d 01       	movw	r18, r26
    1bca:	2f 5f       	subi	r18, 0xFF	; 255
    1bcc:	3f 4f       	sbci	r19, 0xFF	; 255
    1bce:	20 83       	st	Z, r18
    1bd0:	31 83       	std	Z+1, r19	; 0x01
    1bd2:	8c 93       	st	X, r24
    1bd4:	26 81       	ldd	r18, Z+6	; 0x06
    1bd6:	37 81       	ldd	r19, Z+7	; 0x07
    1bd8:	2f 5f       	subi	r18, 0xFF	; 255
    1bda:	3f 4f       	sbci	r19, 0xFF	; 255
    1bdc:	26 83       	std	Z+6, r18	; 0x06
    1bde:	37 83       	std	Z+7, r19	; 0x07
    1be0:	14 c0       	rjmp	.+40     	; 0x1c0a <fputc+0x6e>
    1be2:	8b 01       	movw	r16, r22
    1be4:	ec 01       	movw	r28, r24
    1be6:	fb 01       	movw	r30, r22
    1be8:	00 84       	ldd	r0, Z+8	; 0x08
    1bea:	f1 85       	ldd	r31, Z+9	; 0x09
    1bec:	e0 2d       	mov	r30, r0
    1bee:	09 95       	icall
    1bf0:	89 2b       	or	r24, r25
    1bf2:	e1 f6       	brne	.-72     	; 0x1bac <fputc+0x10>
    1bf4:	d8 01       	movw	r26, r16
    1bf6:	16 96       	adiw	r26, 0x06	; 6
    1bf8:	8d 91       	ld	r24, X+
    1bfa:	9c 91       	ld	r25, X
    1bfc:	17 97       	sbiw	r26, 0x07	; 7
    1bfe:	01 96       	adiw	r24, 0x01	; 1
    1c00:	16 96       	adiw	r26, 0x06	; 6
    1c02:	8d 93       	st	X+, r24
    1c04:	9c 93       	st	X, r25
    1c06:	17 97       	sbiw	r26, 0x07	; 7
    1c08:	ce 01       	movw	r24, r28
    1c0a:	df 91       	pop	r29
    1c0c:	cf 91       	pop	r28
    1c0e:	1f 91       	pop	r17
    1c10:	0f 91       	pop	r16
    1c12:	08 95       	ret

00001c14 <__ultoa_invert>:
    1c14:	fa 01       	movw	r30, r20
    1c16:	aa 27       	eor	r26, r26
    1c18:	28 30       	cpi	r18, 0x08	; 8
    1c1a:	51 f1       	breq	.+84     	; 0x1c70 <__ultoa_invert+0x5c>
    1c1c:	20 31       	cpi	r18, 0x10	; 16
    1c1e:	81 f1       	breq	.+96     	; 0x1c80 <__ultoa_invert+0x6c>
    1c20:	e8 94       	clt
    1c22:	6f 93       	push	r22
    1c24:	6e 7f       	andi	r22, 0xFE	; 254
    1c26:	6e 5f       	subi	r22, 0xFE	; 254
    1c28:	7f 4f       	sbci	r23, 0xFF	; 255
    1c2a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c2c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c2e:	af 4f       	sbci	r26, 0xFF	; 255
    1c30:	b1 e0       	ldi	r27, 0x01	; 1
    1c32:	3e d0       	rcall	.+124    	; 0x1cb0 <__ultoa_invert+0x9c>
    1c34:	b4 e0       	ldi	r27, 0x04	; 4
    1c36:	3c d0       	rcall	.+120    	; 0x1cb0 <__ultoa_invert+0x9c>
    1c38:	67 0f       	add	r22, r23
    1c3a:	78 1f       	adc	r23, r24
    1c3c:	89 1f       	adc	r24, r25
    1c3e:	9a 1f       	adc	r25, r26
    1c40:	a1 1d       	adc	r26, r1
    1c42:	68 0f       	add	r22, r24
    1c44:	79 1f       	adc	r23, r25
    1c46:	8a 1f       	adc	r24, r26
    1c48:	91 1d       	adc	r25, r1
    1c4a:	a1 1d       	adc	r26, r1
    1c4c:	6a 0f       	add	r22, r26
    1c4e:	71 1d       	adc	r23, r1
    1c50:	81 1d       	adc	r24, r1
    1c52:	91 1d       	adc	r25, r1
    1c54:	a1 1d       	adc	r26, r1
    1c56:	20 d0       	rcall	.+64     	; 0x1c98 <__ultoa_invert+0x84>
    1c58:	09 f4       	brne	.+2      	; 0x1c5c <__ultoa_invert+0x48>
    1c5a:	68 94       	set
    1c5c:	3f 91       	pop	r19
    1c5e:	2a e0       	ldi	r18, 0x0A	; 10
    1c60:	26 9f       	mul	r18, r22
    1c62:	11 24       	eor	r1, r1
    1c64:	30 19       	sub	r19, r0
    1c66:	30 5d       	subi	r19, 0xD0	; 208
    1c68:	31 93       	st	Z+, r19
    1c6a:	de f6       	brtc	.-74     	; 0x1c22 <__ultoa_invert+0xe>
    1c6c:	cf 01       	movw	r24, r30
    1c6e:	08 95       	ret
    1c70:	46 2f       	mov	r20, r22
    1c72:	47 70       	andi	r20, 0x07	; 7
    1c74:	40 5d       	subi	r20, 0xD0	; 208
    1c76:	41 93       	st	Z+, r20
    1c78:	b3 e0       	ldi	r27, 0x03	; 3
    1c7a:	0f d0       	rcall	.+30     	; 0x1c9a <__ultoa_invert+0x86>
    1c7c:	c9 f7       	brne	.-14     	; 0x1c70 <__ultoa_invert+0x5c>
    1c7e:	f6 cf       	rjmp	.-20     	; 0x1c6c <__ultoa_invert+0x58>
    1c80:	46 2f       	mov	r20, r22
    1c82:	4f 70       	andi	r20, 0x0F	; 15
    1c84:	40 5d       	subi	r20, 0xD0	; 208
    1c86:	4a 33       	cpi	r20, 0x3A	; 58
    1c88:	18 f0       	brcs	.+6      	; 0x1c90 <__ultoa_invert+0x7c>
    1c8a:	49 5d       	subi	r20, 0xD9	; 217
    1c8c:	31 fd       	sbrc	r19, 1
    1c8e:	40 52       	subi	r20, 0x20	; 32
    1c90:	41 93       	st	Z+, r20
    1c92:	02 d0       	rcall	.+4      	; 0x1c98 <__ultoa_invert+0x84>
    1c94:	a9 f7       	brne	.-22     	; 0x1c80 <__ultoa_invert+0x6c>
    1c96:	ea cf       	rjmp	.-44     	; 0x1c6c <__ultoa_invert+0x58>
    1c98:	b4 e0       	ldi	r27, 0x04	; 4
    1c9a:	a6 95       	lsr	r26
    1c9c:	97 95       	ror	r25
    1c9e:	87 95       	ror	r24
    1ca0:	77 95       	ror	r23
    1ca2:	67 95       	ror	r22
    1ca4:	ba 95       	dec	r27
    1ca6:	c9 f7       	brne	.-14     	; 0x1c9a <__ultoa_invert+0x86>
    1ca8:	00 97       	sbiw	r24, 0x00	; 0
    1caa:	61 05       	cpc	r22, r1
    1cac:	71 05       	cpc	r23, r1
    1cae:	08 95       	ret
    1cb0:	9b 01       	movw	r18, r22
    1cb2:	ac 01       	movw	r20, r24
    1cb4:	0a 2e       	mov	r0, r26
    1cb6:	06 94       	lsr	r0
    1cb8:	57 95       	ror	r21
    1cba:	47 95       	ror	r20
    1cbc:	37 95       	ror	r19
    1cbe:	27 95       	ror	r18
    1cc0:	ba 95       	dec	r27
    1cc2:	c9 f7       	brne	.-14     	; 0x1cb6 <__ultoa_invert+0xa2>
    1cc4:	62 0f       	add	r22, r18
    1cc6:	73 1f       	adc	r23, r19
    1cc8:	84 1f       	adc	r24, r20
    1cca:	95 1f       	adc	r25, r21
    1ccc:	a0 1d       	adc	r26, r0
    1cce:	08 95       	ret

00001cd0 <eeprom_read_word>:
    1cd0:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <eeprom_mapen>
    1cd4:	80 81       	ld	r24, Z
    1cd6:	91 81       	ldd	r25, Z+1	; 0x01
    1cd8:	08 95       	ret

00001cda <eeprom_read_byte>:
    1cda:	03 d0       	rcall	.+6      	; 0x1ce2 <eeprom_mapen>
    1cdc:	80 81       	ld	r24, Z
    1cde:	99 27       	eor	r25, r25
    1ce0:	08 95       	ret

00001ce2 <eeprom_mapen>:
    1ce2:	fc 01       	movw	r30, r24
    1ce4:	e0 50       	subi	r30, 0x00	; 0
    1ce6:	fc 4e       	sbci	r31, 0xEC	; 236
    1ce8:	08 95       	ret

00001cea <_exit>:
    1cea:	f8 94       	cli

00001cec <__stop_program>:
    1cec:	ff cf       	rjmp	.-2      	; 0x1cec <__stop_program>
