
PWM_SPLIT_OG_USART_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002a2  00804000  00000da0  00000e34  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000da0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d6  008042a2  008042a2  000010d6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010d6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001134  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00001174  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000050ba  00000000  00000000  0000124c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003234  00000000  00000000  00006306  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009c1  00000000  00000000  0000953a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  00009efc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000311b  00000000  00000000  0000a15c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005e1  00000000  00000000  0000d277  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  0000d858  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  10:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  14:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  18:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  1c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  20:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  24:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  28:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  2c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  30:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  34:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  38:	0c 94 13 01 	jmp	0x226	; 0x226 <__vector_14>
  3c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  40:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  44:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  48:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  4c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  50:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  54:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  58:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  5c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  60:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  64:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  68:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  6c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  70:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  74:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  78:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  7c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  80:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  84:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  88:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  8c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  90:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  94:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  98:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  9c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ac:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  bc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  cc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__vector_53>
  d8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  dc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ec:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  f0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62

00000100 <__do_copy_data>:
 100:	12 e4       	ldi	r17, 0x42	; 66
 102:	a0 e0       	ldi	r26, 0x00	; 0
 104:	b0 e4       	ldi	r27, 0x40	; 64
 106:	e0 ea       	ldi	r30, 0xA0	; 160
 108:	fd e0       	ldi	r31, 0x0D	; 13
 10a:	00 e0       	ldi	r16, 0x00	; 0
 10c:	0b bf       	out	0x3b, r16	; 59
 10e:	02 c0       	rjmp	.+4      	; 0x114 <__do_copy_data+0x14>
 110:	07 90       	elpm	r0, Z+
 112:	0d 92       	st	X+, r0
 114:	a2 3a       	cpi	r26, 0xA2	; 162
 116:	b1 07       	cpc	r27, r17
 118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x10>

0000011a <__do_clear_bss>:
 11a:	23 e4       	ldi	r18, 0x43	; 67
 11c:	a2 ea       	ldi	r26, 0xA2	; 162
 11e:	b2 e4       	ldi	r27, 0x42	; 66
 120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
 122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
 124:	a8 37       	cpi	r26, 0x78	; 120
 126:	b2 07       	cpc	r27, r18
 128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
 12a:	0e 94 8c 01 	call	0x318	; 0x318 <main>
 12e:	0c 94 ce 06 	jmp	0xd9c	; 0xd9c <_exit>

00000132 <__bad_interrupt>:
 132:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000136 <TCA0_init>:


void TCA0_init(void)
{
	//set waveform output on PORT D
	PORTMUX.TCAROUTEA = PORTMUX_TCA0_PORTD_gc;
 136:	83 e0       	ldi	r24, 0x03	; 3
 138:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
	
	// enable compare channel 0, 1 and set single-slope PWM mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_CMP0EN_bm | TCA_SINGLE_CMP1EN_bm | TCA_SINGLE_WGMODE_SINGLESLOPE_gc;
 13c:	e0 e0       	ldi	r30, 0x00	; 0
 13e:	fa e0       	ldi	r31, 0x0A	; 10
 140:	93 e3       	ldi	r25, 0x33	; 51
 142:	91 83       	std	Z+1, r25	; 0x01
	
	 // enable split mode
    TCA0.SPLIT.CTRLD = TCA_SPLIT_SPLITM_bm; 
 144:	21 e0       	ldi	r18, 0x01	; 1
 146:	23 83       	std	Z+3, r18	; 0x03
	
	// enable compare channel 0 for the higher byte, enable compare channel 0 for the lower byte
	TCA0.SPLIT.CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_LCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm | TCA_SPLIT_LCMP1EN_bm;    
 148:	91 83       	std	Z+1, r25	; 0x01
	
	
	// L0 = PIN0, L1=PIN1, H0=PIN3, H1=PIN4
	// set the PWM frequencies and duty cycles
    TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
 14a:	9f e4       	ldi	r25, 0x4F	; 79
 14c:	96 a3       	std	Z+38, r25	; 0x26
    TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MIN_VALUE;                           
 14e:	10 a6       	std	Z+40, r1	; 0x28
    TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
 150:	97 a3       	std	Z+39, r25	; 0x27
    TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MIN_VALUE;
 152:	11 a6       	std	Z+41, r1	; 0x29
	
	//TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
    TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;                           
 154:	12 a6       	std	Z+42, r1	; 0x2a
    //TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
    TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MIN_VALUE; 
 156:	13 a6       	std	Z+43, r1	; 0x2b
	
	TCA0.SPLIT.CTRLA = TCA_SPLIT_CLKSEL_DIV2_gc | TCA_SPLIT_ENABLE_bm;   // set clock source (sys_clk/4), and start timer         
 158:	80 83       	st	Z, r24
 15a:	08 95       	ret

0000015c <TCB0_init>:
}


void TCB0_init(void)
{
	PORTB.DIR &= ~PIN4_bm;
 15c:	e0 e2       	ldi	r30, 0x20	; 32
 15e:	f4 e0       	ldi	r31, 0x04	; 4
 160:	80 81       	ld	r24, Z
 162:	8f 7e       	andi	r24, 0xEF	; 239
 164:	80 83       	st	Z, r24
	PORTB.PIN4CTRL |= PORT_PULLUPEN_bm;
 166:	84 89       	ldd	r24, Z+20	; 0x14
 168:	88 60       	ori	r24, 0x08	; 8
 16a:	84 8b       	std	Z+20, r24	; 0x14
	
	TCB0.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
 16c:	e0 e0       	ldi	r30, 0x00	; 0
 16e:	fb e0       	ldi	r31, 0x0B	; 11
 170:	85 e0       	ldi	r24, 0x05	; 5
 172:	80 83       	st	Z, r24
	TCB0.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
 174:	84 e0       	ldi	r24, 0x04	; 4
 176:	81 83       	std	Z+1, r24	; 0x01
	
	TCB0.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	85 83       	std	Z+5, r24	; 0x05
	
	TCB0.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm ; // Capture event input enable
 17c:	91 e4       	ldi	r25, 0x41	; 65
 17e:	94 83       	std	Z+4, r25	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL0 = EVSYS_CHANNEL0_PORTB_PIN4_gc; //	input event channel 0, port b on pin 4
 180:	e0 e0       	ldi	r30, 0x00	; 0
 182:	f2 e0       	ldi	r31, 0x02	; 2
 184:	9c e4       	ldi	r25, 0x4C	; 76
 186:	90 8b       	std	Z+16, r25	; 0x10
	EVSYS.USERTCB0CAPT = EVSYS_USER_CHANNEL0_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
 188:	86 af       	std	Z+62, r24	; 0x3e
 18a:	08 95       	ret

0000018c <ADC0_init>:
bool ADC0_conersionDone(void);

void ADC0_init(void)
{
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
 18c:	e0 e6       	ldi	r30, 0x60	; 96
 18e:	f4 e0       	ldi	r31, 0x04	; 4
 190:	86 89       	ldd	r24, Z+22	; 0x16
 192:	88 7f       	andi	r24, 0xF8	; 248
 194:	86 8b       	std	Z+22, r24	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
 196:	86 89       	ldd	r24, Z+22	; 0x16
 198:	84 60       	ori	r24, 0x04	; 4
 19a:	86 8b       	std	Z+22, r24	; 0x16

	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
 19c:	86 89       	ldd	r24, Z+22	; 0x16
 19e:	87 7f       	andi	r24, 0xF7	; 247
 1a0:	86 8b       	std	Z+22, r24	; 0x16

	ADC0.CTRLC = ADC_PRESC_DIV2_gc; /* CLK_PER divided by 4 */
 1a2:	e0 e0       	ldi	r30, 0x00	; 0
 1a4:	f6 e0       	ldi	r31, 0x06	; 6
 1a6:	12 82       	std	Z+2, r1	; 0x02
	
	VREF.ADC0REF = VREF_REFSEL_VDD_gc ; /* VDD as reference */
 1a8:	85 e0       	ldi	r24, 0x05	; 5
 1aa:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>

	ADC0.CTRLA = ADC_ENABLE_bm | ADC_RESSEL_10BIT_gc; /* 10-bit mode */
 1ae:	80 83       	st	Z, r24

	/* Select ADC channel */
	ADC0.MUXPOS = ADC_MUXPOS_AIN6_gc;
 1b0:	86 e0       	ldi	r24, 0x06	; 6
 1b2:	80 87       	std	Z+8, r24	; 0x08

	/* Enable FreeRun mode */
	ADC0.CTRLA |= ADC_FREERUN_bm;
 1b4:	80 81       	ld	r24, Z
 1b6:	82 60       	ori	r24, 0x02	; 2
 1b8:	80 83       	st	Z, r24
 1ba:	08 95       	ret

000001bc <ADC0_read>:
}
uint16_t ADC0_read(void)
{
	/* Clear the interrupt flag by writing 1: */
	ADC0.INTFLAGS = ADC_RESRDY_bm;
 1bc:	e0 e0       	ldi	r30, 0x00	; 0
 1be:	f6 e0       	ldi	r31, 0x06	; 6
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	85 87       	std	Z+13, r24	; 0x0d

	return ADC0.RES;
 1c4:	80 89       	ldd	r24, Z+16	; 0x10
 1c6:	91 89       	ldd	r25, Z+17	; 0x11
}
 1c8:	08 95       	ret

000001ca <ADC0_start>:
void ADC0_start(void)
{
	/* Start conversion */
	ADC0.COMMAND = ADC_STCONV_bm;
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
 1d0:	08 95       	ret

000001d2 <ADC0_conersionDone>:
}
bool ADC0_conersionDone(void)
{
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
 1d2:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
}
 1d6:	81 70       	andi	r24, 0x01	; 1
 1d8:	08 95       	ret

000001da <average>:
uint16_t readPulseWidth;
int readFreq;
uint16_t rpm;

// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
 1da:	0f 93       	push	r16
 1dc:	1f 93       	push	r17
 1de:	9c 01       	movw	r18, r24
 1e0:	06 2f       	mov	r16, r22
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
 1e2:	90 e0       	ldi	r25, 0x00	; 0
int readFreq;
uint16_t rpm;

// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
 1e4:	40 e0       	ldi	r20, 0x00	; 0
 1e6:	50 e0       	ldi	r21, 0x00	; 0
 1e8:	ba 01       	movw	r22, r20
	for (uint8_t i = 0; i < size; i++) {
 1ea:	0e c0       	rjmp	.+28     	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
		sum += array[i];
 1ec:	e9 2f       	mov	r30, r25
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	ee 0f       	add	r30, r30
 1f2:	ff 1f       	adc	r31, r31
 1f4:	e2 0f       	add	r30, r18
 1f6:	f3 1f       	adc	r31, r19
 1f8:	01 90       	ld	r0, Z+
 1fa:	f0 81       	ld	r31, Z
 1fc:	e0 2d       	mov	r30, r0
 1fe:	4e 0f       	add	r20, r30
 200:	5f 1f       	adc	r21, r31
 202:	61 1d       	adc	r22, r1
 204:	71 1d       	adc	r23, r1
uint16_t rpm;

// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
 206:	9f 5f       	subi	r25, 0xFF	; 255
 208:	90 17       	cp	r25, r16
 20a:	80 f3       	brcs	.-32     	; 0x1ec <average+0x12>
		sum += array[i];
	}
	return (uint16_t)(sum / size);
 20c:	10 e0       	ldi	r17, 0x00	; 0
 20e:	20 e0       	ldi	r18, 0x00	; 0
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	cb 01       	movw	r24, r22
 214:	ba 01       	movw	r22, r20
 216:	a9 01       	movw	r20, r18
 218:	98 01       	movw	r18, r16
 21a:	0e 94 ab 03 	call	0x756	; 0x756 <__udivmodsi4>
}
 21e:	c9 01       	movw	r24, r18
 220:	1f 91       	pop	r17
 222:	0f 91       	pop	r16
 224:	08 95       	ret

00000226 <__vector_14>:

ISR(TCB0_INT_vect)
{
 226:	1f 92       	push	r1
 228:	0f 92       	push	r0
 22a:	0f b6       	in	r0, 0x3f	; 63
 22c:	0f 92       	push	r0
 22e:	11 24       	eor	r1, r1
 230:	0b b6       	in	r0, 0x3b	; 59
 232:	0f 92       	push	r0
 234:	2f 93       	push	r18
 236:	3f 93       	push	r19
 238:	8f 93       	push	r24
 23a:	af 93       	push	r26
 23c:	bf 93       	push	r27
 23e:	ef 93       	push	r30
 240:	ff 93       	push	r31
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
 242:	a0 e0       	ldi	r26, 0x00	; 0
 244:	bb e0       	ldi	r27, 0x0B	; 11
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	16 96       	adiw	r26, 0x06	; 6
 24a:	8c 93       	st	X, r24
 24c:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings[pulseWidthIndex] = TCB0.CCMP;
 24e:	80 91 a2 42 	lds	r24, 0x42A2	; 0x8042a2 <__data_end>
 252:	e8 2f       	mov	r30, r24
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	1c 96       	adiw	r26, 0x0c	; 12
 258:	2d 91       	ld	r18, X+
 25a:	3c 91       	ld	r19, X
 25c:	1d 97       	sbiw	r26, 0x0d	; 13
 25e:	ee 0f       	add	r30, r30
 260:	ff 1f       	adc	r31, r31
 262:	ec 55       	subi	r30, 0x5C	; 92
 264:	fd 4b       	sbci	r31, 0xBD	; 189
 266:	20 83       	st	Z, r18
 268:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex++;
 26a:	8f 5f       	subi	r24, 0xFF	; 255
 26c:	80 93 a2 42 	sts	0x42A2, r24	; 0x8042a2 <__data_end>
	if (pulseWidthIndex >= 100) {
 270:	84 36       	cpi	r24, 0x64	; 100
 272:	10 f0       	brcs	.+4      	; 0x278 <__vector_14+0x52>
		pulseWidthIndex = 0; // Reset index when all readings are stored
 274:	10 92 a2 42 	sts	0x42A2, r1	; 0x8042a2 <__data_end>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
 278:	ff 91       	pop	r31
 27a:	ef 91       	pop	r30
 27c:	bf 91       	pop	r27
 27e:	af 91       	pop	r26
 280:	8f 91       	pop	r24
 282:	3f 91       	pop	r19
 284:	2f 91       	pop	r18
 286:	0f 90       	pop	r0
 288:	0b be       	out	0x3b, r0	; 59
 28a:	0f 90       	pop	r0
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	0f 90       	pop	r0
 290:	1f 90       	pop	r1
 292:	18 95       	reti

00000294 <__vector_53>:

ISR(USART3_RXC_vect)
{
 294:	1f 92       	push	r1
 296:	0f 92       	push	r0
 298:	0f b6       	in	r0, 0x3f	; 63
 29a:	0f 92       	push	r0
 29c:	11 24       	eor	r1, r1
 29e:	0b b6       	in	r0, 0x3b	; 59
 2a0:	0f 92       	push	r0
 2a2:	2f 93       	push	r18
 2a4:	3f 93       	push	r19
 2a6:	4f 93       	push	r20
 2a8:	5f 93       	push	r21
 2aa:	6f 93       	push	r22
 2ac:	7f 93       	push	r23
 2ae:	8f 93       	push	r24
 2b0:	9f 93       	push	r25
 2b2:	af 93       	push	r26
 2b4:	bf 93       	push	r27
 2b6:	ef 93       	push	r30
 2b8:	ff 93       	push	r31
	read_commands();
 2ba:	0e 94 48 02 	call	0x490	; 0x490 <read_commands>
}
 2be:	ff 91       	pop	r31
 2c0:	ef 91       	pop	r30
 2c2:	bf 91       	pop	r27
 2c4:	af 91       	pop	r26
 2c6:	9f 91       	pop	r25
 2c8:	8f 91       	pop	r24
 2ca:	7f 91       	pop	r23
 2cc:	6f 91       	pop	r22
 2ce:	5f 91       	pop	r21
 2d0:	4f 91       	pop	r20
 2d2:	3f 91       	pop	r19
 2d4:	2f 91       	pop	r18
 2d6:	0f 90       	pop	r0
 2d8:	0b be       	out	0x3b, r0	; 59
 2da:	0f 90       	pop	r0
 2dc:	0f be       	out	0x3f, r0	; 63
 2de:	0f 90       	pop	r0
 2e0:	1f 90       	pop	r1
 2e2:	18 95       	reti

000002e4 <PORT_init>:


void PORT_init(void)
{
	// Setter PIN0 som output (PWM-out)
	PORTD.DIRSET = PIN0_bm | PIN1_bm | PIN4_bm | PIN3_bm;
 2e4:	8b e1       	ldi	r24, 0x1B	; 27
 2e6:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x7e0461>
 2ea:	08 95       	ret

000002ec <pwm_to_rpm>:



uint16_t pwm_to_rpm()
{
	uint16_t pulseWidthAverage = average(pulseWidthReadings, 100);
 2ec:	64 e6       	ldi	r22, 0x64	; 100
 2ee:	84 ea       	ldi	r24, 0xA4	; 164
 2f0:	92 e4       	ldi	r25, 0x42	; 66
 2f2:	0e 94 ed 00 	call	0x1da	; 0x1da <average>
	uint32_t rpm = ((F_CPU*60)/(4*pulseWidthAverage*2));
 2f6:	88 0f       	add	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	9c 01       	movw	r18, r24
 304:	40 e0       	ldi	r20, 0x00	; 0
 306:	50 e0       	ldi	r21, 0x00	; 0
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	7c e1       	ldi	r23, 0x1C	; 28
 30c:	8e e4       	ldi	r24, 0x4E	; 78
 30e:	9e e0       	ldi	r25, 0x0E	; 14
 310:	0e 94 ab 03 	call	0x756	; 0x756 <__udivmodsi4>
	
	return (uint16_t)rpm;
	
}
 314:	c9 01       	movw	r24, r18
 316:	08 95       	ret

00000318 <main>:



int main(void)
{
	USART3_init();	// Funksjonskall for ? sette i gang USART
 318:	0e 94 09 02 	call	0x412	; 0x412 <USART3_init>
	
	
	// PWM initialize
	PORT_init();
 31c:	0e 94 72 01 	call	0x2e4	; 0x2e4 <PORT_init>
	TCA0_init();
 320:	0e 94 9b 00 	call	0x136	; 0x136 <TCA0_init>
	TCB0_init();
 324:	0e 94 ae 00 	call	0x15c	; 0x15c <TCB0_init>
	
	// ADC initialize
	ADC0_init();
 328:	0e 94 c6 00 	call	0x18c	; 0x18c <ADC0_init>
	ADC0_start();
 32c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <ADC0_start>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 330:	8f e0       	ldi	r24, 0x0F	; 15
 332:	97 e2       	ldi	r25, 0x27	; 39
 334:	01 97       	sbiw	r24, 0x01	; 1
 336:	f1 f7       	brne	.-4      	; 0x334 <main+0x1c>
 338:	00 c0       	rjmp	.+0      	; 0x33a <main+0x22>
 33a:	00 00       	nop
	_delay_ms(10);
	//printf("Welcome. Please choose between AUTO or MANUAL.\r\n");



	sei(); // Enable Global Interrupts
 33c:	78 94       	sei
	
	while (1)

	{
		if (ADC0_conersionDone())
 33e:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <ADC0_conersionDone>
 342:	88 23       	and	r24, r24
 344:	e1 f3       	breq	.-8      	; 0x33e <main+0x26>
		{
			// Read potentiometer
			uint16_t adc_value = ADC0_read();
 346:	0e 94 de 00 	call	0x1bc	; 0x1bc <ADC0_read>
			// Convert ADC-value to PWM signal
			uint16_t fanPeriod = ((79.0/1023.0)*adc_value);
 34a:	bc 01       	movw	r22, r24
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	0e 94 b0 02 	call	0x560	; 0x560 <__floatunsisf>
 354:	2a e8       	ldi	r18, 0x8A	; 138
 356:	37 e2       	ldi	r19, 0x27	; 39
 358:	4e e9       	ldi	r20, 0x9E	; 158
 35a:	5d e3       	ldi	r21, 0x3D	; 61
 35c:	0e 94 16 03 	call	0x62c	; 0x62c <__mulsf3>
 360:	0e 94 81 02 	call	0x502	; 0x502 <__fixunssfsi>
 364:	c6 2f       	mov	r28, r22
			//printf("ADC Value: %d\r\n", adc_value);
			printf("Fan speed/period: %d\r\n", fanPeriod);
 366:	7f 93       	push	r23
 368:	6f 93       	push	r22
 36a:	8e e9       	ldi	r24, 0x9E	; 158
 36c:	91 e4       	ldi	r25, 0x41	; 65
 36e:	9f 93       	push	r25
 370:	8f 93       	push	r24
 372:	0e 94 d6 03 	call	0x7ac	; 0x7ac <printf>
			//printf("PWM read: %d\r\n", readPulseWidth);
			printf("RPM %d\r\n",pwm_to_rpm());
 376:	0e 94 76 01 	call	0x2ec	; 0x2ec <pwm_to_rpm>
 37a:	9f 93       	push	r25
 37c:	8f 93       	push	r24
 37e:	85 eb       	ldi	r24, 0xB5	; 181
 380:	91 e4       	ldi	r25, 0x41	; 65
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	0e 94 d6 03 	call	0x7ac	; 0x7ac <printf>
			printf("\r\n");
 38a:	8e e0       	ldi	r24, 0x0E	; 14
 38c:	92 e4       	ldi	r25, 0x42	; 66
 38e:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <puts>
			printf("\r\n");
 392:	8e e0       	ldi	r24, 0x0E	; 14
 394:	92 e4       	ldi	r25, 0x42	; 66
 396:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <puts>
			TCA0.SPLIT.LCMP0 = fanPeriod;
 39a:	c0 93 28 0a 	sts	0x0A28, r28	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
 39e:	8d b7       	in	r24, 0x3d	; 61
 3a0:	9e b7       	in	r25, 0x3e	; 62
 3a2:	08 96       	adiw	r24, 0x08	; 8
 3a4:	8d bf       	out	0x3d, r24	; 61
 3a6:	9e bf       	out	0x3e, r25	; 62
 3a8:	ca cf       	rjmp	.-108    	; 0x33e <main+0x26>

000003aa <compareCommands>:
		
		} else {
		// Invalid command
		printf("Invalid command. Please use LOW, MEDIUM, or MAX.\r\n");
	}
}
 3aa:	0f 93       	push	r16
 3ac:	1f 93       	push	r17
 3ae:	cf 93       	push	r28
 3b0:	8c 01       	movw	r16, r24
 3b2:	c0 e0       	ldi	r28, 0x00	; 0
 3b4:	0c c0       	rjmp	.+24     	; 0x3ce <compareCommands+0x24>
 3b6:	84 e6       	ldi	r24, 0x64	; 100
 3b8:	c8 9f       	mul	r28, r24
 3ba:	b0 01       	movw	r22, r0
 3bc:	11 24       	eor	r1, r1
 3be:	62 5f       	subi	r22, 0xF2	; 242
 3c0:	7f 4b       	sbci	r23, 0xBF	; 191
 3c2:	c8 01       	movw	r24, r16
 3c4:	0e 94 cd 03 	call	0x79a	; 0x79a <strcmp>
 3c8:	89 2b       	or	r24, r25
 3ca:	29 f0       	breq	.+10     	; 0x3d6 <compareCommands+0x2c>
 3cc:	cf 5f       	subi	r28, 0xFF	; 255
 3ce:	c4 30       	cpi	r28, 0x04	; 4
 3d0:	90 f3       	brcs	.-28     	; 0x3b6 <compareCommands+0xc>
 3d2:	8f ef       	ldi	r24, 0xFF	; 255
 3d4:	01 c0       	rjmp	.+2      	; 0x3d8 <compareCommands+0x2e>
 3d6:	8c 2f       	mov	r24, r28
 3d8:	cf 91       	pop	r28
 3da:	1f 91       	pop	r17
 3dc:	0f 91       	pop	r16
 3de:	08 95       	ret

000003e0 <USART3_sendChar>:
 3e0:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
 3e4:	95 ff       	sbrs	r25, 5
 3e6:	fc cf       	rjmp	.-8      	; 0x3e0 <USART3_sendChar>
 3e8:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
 3ec:	08 95       	ret

000003ee <USART3_printChar>:
 3ee:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <USART3_sendChar>
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	08 95       	ret

000003f8 <USART3_readChar>:
 3f8:	cf 93       	push	r28
 3fa:	80 91 64 08 	lds	r24, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
 3fe:	88 23       	and	r24, r24
 400:	e4 f7       	brge	.-8      	; 0x3fa <USART3_readChar+0x2>
 402:	c0 91 60 08 	lds	r28, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7e0860>
 406:	8c 2f       	mov	r24, r28
 408:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <USART3_sendChar>
 40c:	8c 2f       	mov	r24, r28
 40e:	cf 91       	pop	r28
 410:	08 95       	ret

00000412 <USART3_init>:
 412:	e0 e2       	ldi	r30, 0x20	; 32
 414:	f4 e0       	ldi	r31, 0x04	; 4
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	81 83       	std	Z+1, r24	; 0x01
 41a:	82 e0       	ldi	r24, 0x02	; 2
 41c:	82 83       	std	Z+2, r24	; 0x02
 41e:	e0 e6       	ldi	r30, 0x60	; 96
 420:	f8 e0       	ldi	r31, 0x08	; 8
 422:	85 81       	ldd	r24, Z+5	; 0x05
 424:	80 68       	ori	r24, 0x80	; 128
 426:	85 83       	std	Z+5, r24	; 0x05
 428:	83 e8       	ldi	r24, 0x83	; 131
 42a:	96 e0       	ldi	r25, 0x06	; 6
 42c:	80 87       	std	Z+8, r24	; 0x08
 42e:	91 87       	std	Z+9, r25	; 0x09
 430:	86 81       	ldd	r24, Z+6	; 0x06
 432:	80 6c       	ori	r24, 0xC0	; 192
 434:	86 83       	std	Z+6, r24	; 0x06
 436:	80 e0       	ldi	r24, 0x00	; 0
 438:	90 e4       	ldi	r25, 0x40	; 64
 43a:	80 93 74 43 	sts	0x4374, r24	; 0x804374 <__iob+0x2>
 43e:	90 93 75 43 	sts	0x4375, r25	; 0x804375 <__iob+0x3>
 442:	08 95       	ret

00000444 <executeCommand>:
//void automaticMode()

void executeCommand(uint8_t command_number)
{
	
	switch ( command_number )
 444:	81 30       	cpi	r24, 0x01	; 1
 446:	69 f0       	breq	.+26     	; 0x462 <executeCommand+0x1e>
 448:	28 f0       	brcs	.+10     	; 0x454 <executeCommand+0x10>
 44a:	82 30       	cpi	r24, 0x02	; 2
 44c:	91 f0       	breq	.+36     	; 0x472 <executeCommand+0x2e>
 44e:	83 30       	cpi	r24, 0x03	; 3
 450:	a9 f0       	breq	.+42     	; 0x47c <executeCommand+0x38>
 452:	19 c0       	rjmp	.+50     	; 0x486 <executeCommand+0x42>
	{
		case 0:
		
		printf("Received command: off\r\n");
 454:	82 e4       	ldi	r24, 0x42	; 66
 456:	92 e4       	ldi	r25, 0x42	; 66
 458:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <puts>
		TCA0_SPLIT_LCMP0 = 0;
 45c:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
		break ;
 460:	08 95       	ret
		
		case 1:
	
		printf("Received command: on\r\n") ;
 462:	89 e5       	ldi	r24, 0x59	; 89
 464:	92 e4       	ldi	r25, 0x42	; 66
 466:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <puts>
		TCA0_SPLIT_LCMP0 = FAN_MEDIUM;
 46a:	8c e3       	ldi	r24, 0x3C	; 60
 46c:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
		break ;
 470:	08 95       	ret
		
		case 2:
	
		printf("Received command: manual\r\n");
 472:	8f e6       	ldi	r24, 0x6F	; 111
 474:	92 e4       	ldi	r25, 0x42	; 66
 476:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <puts>
		//manualMode();
		
		break ;
 47a:	08 95       	ret
		
		case 3:
	
		printf("auto\r\n");
 47c:	89 e8       	ldi	r24, 0x89	; 137
 47e:	92 e4       	ldi	r25, 0x42	; 66
 480:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <puts>
		break ;
 484:	08 95       	ret
		
		default :
		printf("unknown command \r\n");
 486:	8f e8       	ldi	r24, 0x8F	; 143
 488:	92 e4       	ldi	r25, 0x42	; 66
 48a:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <puts>
 48e:	08 95       	ret

00000490 <read_commands>:
// 	}
}


void read_commands()
{
 490:	cf 93       	push	r28
 492:	df 93       	push	r29
 494:	cd b7       	in	r28, 0x3d	; 61
 496:	de b7       	in	r29, 0x3e	; 62
 498:	c4 56       	subi	r28, 0x64	; 100
 49a:	d1 09       	sbc	r29, r1
 49c:	cd bf       	out	0x3d, r28	; 61
 49e:	de bf       	out	0x3e, r29	; 62
	char command[MAX_COMMAND_LEN];
	static uint8_t index = 0;
	char c = USART3_readChar();
 4a0:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <USART3_readChar>
	
	if(c != '\n' && c != '\r' && index < MAX_COMMAND_LEN - 1)
 4a4:	8a 30       	cpi	r24, 0x0A	; 10
 4a6:	89 f0       	breq	.+34     	; 0x4ca <read_commands+0x3a>
 4a8:	8d 30       	cpi	r24, 0x0D	; 13
 4aa:	79 f0       	breq	.+30     	; 0x4ca <read_commands+0x3a>
 4ac:	90 91 a3 42 	lds	r25, 0x42A3	; 0x8042a3 <index.4688>
 4b0:	93 36       	cpi	r25, 0x63	; 99
 4b2:	58 f4       	brcc	.+22     	; 0x4ca <read_commands+0x3a>
	{
		command[index++] = c;
 4b4:	21 e0       	ldi	r18, 0x01	; 1
 4b6:	29 0f       	add	r18, r25
 4b8:	20 93 a3 42 	sts	0x42A3, r18	; 0x8042a3 <index.4688>
 4bc:	e1 e0       	ldi	r30, 0x01	; 1
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	ec 0f       	add	r30, r28
 4c2:	fd 1f       	adc	r31, r29
 4c4:	e9 0f       	add	r30, r25
 4c6:	f1 1d       	adc	r31, r1
 4c8:	80 83       	st	Z, r24
		
	}
	
	if(c == '\r'|| c=='\n')
 4ca:	8d 30       	cpi	r24, 0x0D	; 13
 4cc:	11 f0       	breq	.+4      	; 0x4d2 <read_commands+0x42>
 4ce:	8a 30       	cpi	r24, 0x0A	; 10
 4d0:	89 f4       	brne	.+34     	; 0x4f4 <read_commands+0x64>
	{
		command[index] = '\0';
 4d2:	80 91 a3 42 	lds	r24, 0x42A3	; 0x8042a3 <index.4688>
 4d6:	e1 e0       	ldi	r30, 0x01	; 1
 4d8:	f0 e0       	ldi	r31, 0x00	; 0
 4da:	ec 0f       	add	r30, r28
 4dc:	fd 1f       	adc	r31, r29
 4de:	e8 0f       	add	r30, r24
 4e0:	f1 1d       	adc	r31, r1
 4e2:	10 82       	st	Z, r1
		index = 0;
 4e4:	10 92 a3 42 	sts	0x42A3, r1	; 0x8042a3 <index.4688>
		executeCommand(compareCommands(command));
 4e8:	ce 01       	movw	r24, r28
 4ea:	01 96       	adiw	r24, 0x01	; 1
 4ec:	0e 94 d5 01 	call	0x3aa	; 0x3aa <compareCommands>
 4f0:	0e 94 22 02 	call	0x444	; 0x444 <executeCommand>
		
	}
}
 4f4:	cc 59       	subi	r28, 0x9C	; 156
 4f6:	df 4f       	sbci	r29, 0xFF	; 255
 4f8:	cd bf       	out	0x3d, r28	; 61
 4fa:	de bf       	out	0x3e, r29	; 62
 4fc:	df 91       	pop	r29
 4fe:	cf 91       	pop	r28
 500:	08 95       	ret

00000502 <__fixunssfsi>:
 502:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__fp_splitA>
 506:	88 f0       	brcs	.+34     	; 0x52a <__fixunssfsi+0x28>
 508:	9f 57       	subi	r25, 0x7F	; 127
 50a:	98 f0       	brcs	.+38     	; 0x532 <__fixunssfsi+0x30>
 50c:	b9 2f       	mov	r27, r25
 50e:	99 27       	eor	r25, r25
 510:	b7 51       	subi	r27, 0x17	; 23
 512:	b0 f0       	brcs	.+44     	; 0x540 <__fixunssfsi+0x3e>
 514:	e1 f0       	breq	.+56     	; 0x54e <__fixunssfsi+0x4c>
 516:	66 0f       	add	r22, r22
 518:	77 1f       	adc	r23, r23
 51a:	88 1f       	adc	r24, r24
 51c:	99 1f       	adc	r25, r25
 51e:	1a f0       	brmi	.+6      	; 0x526 <__fixunssfsi+0x24>
 520:	ba 95       	dec	r27
 522:	c9 f7       	brne	.-14     	; 0x516 <__fixunssfsi+0x14>
 524:	14 c0       	rjmp	.+40     	; 0x54e <__fixunssfsi+0x4c>
 526:	b1 30       	cpi	r27, 0x01	; 1
 528:	91 f0       	breq	.+36     	; 0x54e <__fixunssfsi+0x4c>
 52a:	0e 94 0f 03 	call	0x61e	; 0x61e <__fp_zero>
 52e:	b1 e0       	ldi	r27, 0x01	; 1
 530:	08 95       	ret
 532:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_zero>
 536:	67 2f       	mov	r22, r23
 538:	78 2f       	mov	r23, r24
 53a:	88 27       	eor	r24, r24
 53c:	b8 5f       	subi	r27, 0xF8	; 248
 53e:	39 f0       	breq	.+14     	; 0x54e <__fixunssfsi+0x4c>
 540:	b9 3f       	cpi	r27, 0xF9	; 249
 542:	cc f3       	brlt	.-14     	; 0x536 <__fixunssfsi+0x34>
 544:	86 95       	lsr	r24
 546:	77 95       	ror	r23
 548:	67 95       	ror	r22
 54a:	b3 95       	inc	r27
 54c:	d9 f7       	brne	.-10     	; 0x544 <__fixunssfsi+0x42>
 54e:	3e f4       	brtc	.+14     	; 0x55e <__fixunssfsi+0x5c>
 550:	90 95       	com	r25
 552:	80 95       	com	r24
 554:	70 95       	com	r23
 556:	61 95       	neg	r22
 558:	7f 4f       	sbci	r23, 0xFF	; 255
 55a:	8f 4f       	sbci	r24, 0xFF	; 255
 55c:	9f 4f       	sbci	r25, 0xFF	; 255
 55e:	08 95       	ret

00000560 <__floatunsisf>:
 560:	e8 94       	clt
 562:	09 c0       	rjmp	.+18     	; 0x576 <__floatsisf+0x12>

00000564 <__floatsisf>:
 564:	97 fb       	bst	r25, 7
 566:	3e f4       	brtc	.+14     	; 0x576 <__floatsisf+0x12>
 568:	90 95       	com	r25
 56a:	80 95       	com	r24
 56c:	70 95       	com	r23
 56e:	61 95       	neg	r22
 570:	7f 4f       	sbci	r23, 0xFF	; 255
 572:	8f 4f       	sbci	r24, 0xFF	; 255
 574:	9f 4f       	sbci	r25, 0xFF	; 255
 576:	99 23       	and	r25, r25
 578:	a9 f0       	breq	.+42     	; 0x5a4 <__floatsisf+0x40>
 57a:	f9 2f       	mov	r31, r25
 57c:	96 e9       	ldi	r25, 0x96	; 150
 57e:	bb 27       	eor	r27, r27
 580:	93 95       	inc	r25
 582:	f6 95       	lsr	r31
 584:	87 95       	ror	r24
 586:	77 95       	ror	r23
 588:	67 95       	ror	r22
 58a:	b7 95       	ror	r27
 58c:	f1 11       	cpse	r31, r1
 58e:	f8 cf       	rjmp	.-16     	; 0x580 <__floatsisf+0x1c>
 590:	fa f4       	brpl	.+62     	; 0x5d0 <__floatsisf+0x6c>
 592:	bb 0f       	add	r27, r27
 594:	11 f4       	brne	.+4      	; 0x59a <__floatsisf+0x36>
 596:	60 ff       	sbrs	r22, 0
 598:	1b c0       	rjmp	.+54     	; 0x5d0 <__floatsisf+0x6c>
 59a:	6f 5f       	subi	r22, 0xFF	; 255
 59c:	7f 4f       	sbci	r23, 0xFF	; 255
 59e:	8f 4f       	sbci	r24, 0xFF	; 255
 5a0:	9f 4f       	sbci	r25, 0xFF	; 255
 5a2:	16 c0       	rjmp	.+44     	; 0x5d0 <__floatsisf+0x6c>
 5a4:	88 23       	and	r24, r24
 5a6:	11 f0       	breq	.+4      	; 0x5ac <__floatsisf+0x48>
 5a8:	96 e9       	ldi	r25, 0x96	; 150
 5aa:	11 c0       	rjmp	.+34     	; 0x5ce <__floatsisf+0x6a>
 5ac:	77 23       	and	r23, r23
 5ae:	21 f0       	breq	.+8      	; 0x5b8 <__floatsisf+0x54>
 5b0:	9e e8       	ldi	r25, 0x8E	; 142
 5b2:	87 2f       	mov	r24, r23
 5b4:	76 2f       	mov	r23, r22
 5b6:	05 c0       	rjmp	.+10     	; 0x5c2 <__floatsisf+0x5e>
 5b8:	66 23       	and	r22, r22
 5ba:	71 f0       	breq	.+28     	; 0x5d8 <__floatsisf+0x74>
 5bc:	96 e8       	ldi	r25, 0x86	; 134
 5be:	86 2f       	mov	r24, r22
 5c0:	70 e0       	ldi	r23, 0x00	; 0
 5c2:	60 e0       	ldi	r22, 0x00	; 0
 5c4:	2a f0       	brmi	.+10     	; 0x5d0 <__floatsisf+0x6c>
 5c6:	9a 95       	dec	r25
 5c8:	66 0f       	add	r22, r22
 5ca:	77 1f       	adc	r23, r23
 5cc:	88 1f       	adc	r24, r24
 5ce:	da f7       	brpl	.-10     	; 0x5c6 <__floatsisf+0x62>
 5d0:	88 0f       	add	r24, r24
 5d2:	96 95       	lsr	r25
 5d4:	87 95       	ror	r24
 5d6:	97 f9       	bld	r25, 7
 5d8:	08 95       	ret

000005da <__fp_split3>:
 5da:	57 fd       	sbrc	r21, 7
 5dc:	90 58       	subi	r25, 0x80	; 128
 5de:	44 0f       	add	r20, r20
 5e0:	55 1f       	adc	r21, r21
 5e2:	59 f0       	breq	.+22     	; 0x5fa <__fp_splitA+0x10>
 5e4:	5f 3f       	cpi	r21, 0xFF	; 255
 5e6:	71 f0       	breq	.+28     	; 0x604 <__fp_splitA+0x1a>
 5e8:	47 95       	ror	r20

000005ea <__fp_splitA>:
 5ea:	88 0f       	add	r24, r24
 5ec:	97 fb       	bst	r25, 7
 5ee:	99 1f       	adc	r25, r25
 5f0:	61 f0       	breq	.+24     	; 0x60a <__fp_splitA+0x20>
 5f2:	9f 3f       	cpi	r25, 0xFF	; 255
 5f4:	79 f0       	breq	.+30     	; 0x614 <__fp_splitA+0x2a>
 5f6:	87 95       	ror	r24
 5f8:	08 95       	ret
 5fa:	12 16       	cp	r1, r18
 5fc:	13 06       	cpc	r1, r19
 5fe:	14 06       	cpc	r1, r20
 600:	55 1f       	adc	r21, r21
 602:	f2 cf       	rjmp	.-28     	; 0x5e8 <__fp_split3+0xe>
 604:	46 95       	lsr	r20
 606:	f1 df       	rcall	.-30     	; 0x5ea <__fp_splitA>
 608:	08 c0       	rjmp	.+16     	; 0x61a <__fp_splitA+0x30>
 60a:	16 16       	cp	r1, r22
 60c:	17 06       	cpc	r1, r23
 60e:	18 06       	cpc	r1, r24
 610:	99 1f       	adc	r25, r25
 612:	f1 cf       	rjmp	.-30     	; 0x5f6 <__fp_splitA+0xc>
 614:	86 95       	lsr	r24
 616:	71 05       	cpc	r23, r1
 618:	61 05       	cpc	r22, r1
 61a:	08 94       	sec
 61c:	08 95       	ret

0000061e <__fp_zero>:
 61e:	e8 94       	clt

00000620 <__fp_szero>:
 620:	bb 27       	eor	r27, r27
 622:	66 27       	eor	r22, r22
 624:	77 27       	eor	r23, r23
 626:	cb 01       	movw	r24, r22
 628:	97 f9       	bld	r25, 7
 62a:	08 95       	ret

0000062c <__mulsf3>:
 62c:	0e 94 29 03 	call	0x652	; 0x652 <__mulsf3x>
 630:	0c 94 9a 03 	jmp	0x734	; 0x734 <__fp_round>
 634:	0e 94 8c 03 	call	0x718	; 0x718 <__fp_pscA>
 638:	38 f0       	brcs	.+14     	; 0x648 <__mulsf3+0x1c>
 63a:	0e 94 93 03 	call	0x726	; 0x726 <__fp_pscB>
 63e:	20 f0       	brcs	.+8      	; 0x648 <__mulsf3+0x1c>
 640:	95 23       	and	r25, r21
 642:	11 f0       	breq	.+4      	; 0x648 <__mulsf3+0x1c>
 644:	0c 94 83 03 	jmp	0x706	; 0x706 <__fp_inf>
 648:	0c 94 89 03 	jmp	0x712	; 0x712 <__fp_nan>
 64c:	11 24       	eor	r1, r1
 64e:	0c 94 10 03 	jmp	0x620	; 0x620 <__fp_szero>

00000652 <__mulsf3x>:
 652:	0e 94 ed 02 	call	0x5da	; 0x5da <__fp_split3>
 656:	70 f3       	brcs	.-36     	; 0x634 <__mulsf3+0x8>

00000658 <__mulsf3_pse>:
 658:	95 9f       	mul	r25, r21
 65a:	c1 f3       	breq	.-16     	; 0x64c <__mulsf3+0x20>
 65c:	95 0f       	add	r25, r21
 65e:	50 e0       	ldi	r21, 0x00	; 0
 660:	55 1f       	adc	r21, r21
 662:	62 9f       	mul	r22, r18
 664:	f0 01       	movw	r30, r0
 666:	72 9f       	mul	r23, r18
 668:	bb 27       	eor	r27, r27
 66a:	f0 0d       	add	r31, r0
 66c:	b1 1d       	adc	r27, r1
 66e:	63 9f       	mul	r22, r19
 670:	aa 27       	eor	r26, r26
 672:	f0 0d       	add	r31, r0
 674:	b1 1d       	adc	r27, r1
 676:	aa 1f       	adc	r26, r26
 678:	64 9f       	mul	r22, r20
 67a:	66 27       	eor	r22, r22
 67c:	b0 0d       	add	r27, r0
 67e:	a1 1d       	adc	r26, r1
 680:	66 1f       	adc	r22, r22
 682:	82 9f       	mul	r24, r18
 684:	22 27       	eor	r18, r18
 686:	b0 0d       	add	r27, r0
 688:	a1 1d       	adc	r26, r1
 68a:	62 1f       	adc	r22, r18
 68c:	73 9f       	mul	r23, r19
 68e:	b0 0d       	add	r27, r0
 690:	a1 1d       	adc	r26, r1
 692:	62 1f       	adc	r22, r18
 694:	83 9f       	mul	r24, r19
 696:	a0 0d       	add	r26, r0
 698:	61 1d       	adc	r22, r1
 69a:	22 1f       	adc	r18, r18
 69c:	74 9f       	mul	r23, r20
 69e:	33 27       	eor	r19, r19
 6a0:	a0 0d       	add	r26, r0
 6a2:	61 1d       	adc	r22, r1
 6a4:	23 1f       	adc	r18, r19
 6a6:	84 9f       	mul	r24, r20
 6a8:	60 0d       	add	r22, r0
 6aa:	21 1d       	adc	r18, r1
 6ac:	82 2f       	mov	r24, r18
 6ae:	76 2f       	mov	r23, r22
 6b0:	6a 2f       	mov	r22, r26
 6b2:	11 24       	eor	r1, r1
 6b4:	9f 57       	subi	r25, 0x7F	; 127
 6b6:	50 40       	sbci	r21, 0x00	; 0
 6b8:	9a f0       	brmi	.+38     	; 0x6e0 <__mulsf3_pse+0x88>
 6ba:	f1 f0       	breq	.+60     	; 0x6f8 <__mulsf3_pse+0xa0>
 6bc:	88 23       	and	r24, r24
 6be:	4a f0       	brmi	.+18     	; 0x6d2 <__mulsf3_pse+0x7a>
 6c0:	ee 0f       	add	r30, r30
 6c2:	ff 1f       	adc	r31, r31
 6c4:	bb 1f       	adc	r27, r27
 6c6:	66 1f       	adc	r22, r22
 6c8:	77 1f       	adc	r23, r23
 6ca:	88 1f       	adc	r24, r24
 6cc:	91 50       	subi	r25, 0x01	; 1
 6ce:	50 40       	sbci	r21, 0x00	; 0
 6d0:	a9 f7       	brne	.-22     	; 0x6bc <__mulsf3_pse+0x64>
 6d2:	9e 3f       	cpi	r25, 0xFE	; 254
 6d4:	51 05       	cpc	r21, r1
 6d6:	80 f0       	brcs	.+32     	; 0x6f8 <__mulsf3_pse+0xa0>
 6d8:	0c 94 83 03 	jmp	0x706	; 0x706 <__fp_inf>
 6dc:	0c 94 10 03 	jmp	0x620	; 0x620 <__fp_szero>
 6e0:	5f 3f       	cpi	r21, 0xFF	; 255
 6e2:	e4 f3       	brlt	.-8      	; 0x6dc <__mulsf3_pse+0x84>
 6e4:	98 3e       	cpi	r25, 0xE8	; 232
 6e6:	d4 f3       	brlt	.-12     	; 0x6dc <__mulsf3_pse+0x84>
 6e8:	86 95       	lsr	r24
 6ea:	77 95       	ror	r23
 6ec:	67 95       	ror	r22
 6ee:	b7 95       	ror	r27
 6f0:	f7 95       	ror	r31
 6f2:	e7 95       	ror	r30
 6f4:	9f 5f       	subi	r25, 0xFF	; 255
 6f6:	c1 f7       	brne	.-16     	; 0x6e8 <__mulsf3_pse+0x90>
 6f8:	fe 2b       	or	r31, r30
 6fa:	88 0f       	add	r24, r24
 6fc:	91 1d       	adc	r25, r1
 6fe:	96 95       	lsr	r25
 700:	87 95       	ror	r24
 702:	97 f9       	bld	r25, 7
 704:	08 95       	ret

00000706 <__fp_inf>:
 706:	97 f9       	bld	r25, 7
 708:	9f 67       	ori	r25, 0x7F	; 127
 70a:	80 e8       	ldi	r24, 0x80	; 128
 70c:	70 e0       	ldi	r23, 0x00	; 0
 70e:	60 e0       	ldi	r22, 0x00	; 0
 710:	08 95       	ret

00000712 <__fp_nan>:
 712:	9f ef       	ldi	r25, 0xFF	; 255
 714:	80 ec       	ldi	r24, 0xC0	; 192
 716:	08 95       	ret

00000718 <__fp_pscA>:
 718:	00 24       	eor	r0, r0
 71a:	0a 94       	dec	r0
 71c:	16 16       	cp	r1, r22
 71e:	17 06       	cpc	r1, r23
 720:	18 06       	cpc	r1, r24
 722:	09 06       	cpc	r0, r25
 724:	08 95       	ret

00000726 <__fp_pscB>:
 726:	00 24       	eor	r0, r0
 728:	0a 94       	dec	r0
 72a:	12 16       	cp	r1, r18
 72c:	13 06       	cpc	r1, r19
 72e:	14 06       	cpc	r1, r20
 730:	05 06       	cpc	r0, r21
 732:	08 95       	ret

00000734 <__fp_round>:
 734:	09 2e       	mov	r0, r25
 736:	03 94       	inc	r0
 738:	00 0c       	add	r0, r0
 73a:	11 f4       	brne	.+4      	; 0x740 <__fp_round+0xc>
 73c:	88 23       	and	r24, r24
 73e:	52 f0       	brmi	.+20     	; 0x754 <__fp_round+0x20>
 740:	bb 0f       	add	r27, r27
 742:	40 f4       	brcc	.+16     	; 0x754 <__fp_round+0x20>
 744:	bf 2b       	or	r27, r31
 746:	11 f4       	brne	.+4      	; 0x74c <__fp_round+0x18>
 748:	60 ff       	sbrs	r22, 0
 74a:	04 c0       	rjmp	.+8      	; 0x754 <__fp_round+0x20>
 74c:	6f 5f       	subi	r22, 0xFF	; 255
 74e:	7f 4f       	sbci	r23, 0xFF	; 255
 750:	8f 4f       	sbci	r24, 0xFF	; 255
 752:	9f 4f       	sbci	r25, 0xFF	; 255
 754:	08 95       	ret

00000756 <__udivmodsi4>:
 756:	a1 e2       	ldi	r26, 0x21	; 33
 758:	1a 2e       	mov	r1, r26
 75a:	aa 1b       	sub	r26, r26
 75c:	bb 1b       	sub	r27, r27
 75e:	fd 01       	movw	r30, r26
 760:	0d c0       	rjmp	.+26     	; 0x77c <__udivmodsi4_ep>

00000762 <__udivmodsi4_loop>:
 762:	aa 1f       	adc	r26, r26
 764:	bb 1f       	adc	r27, r27
 766:	ee 1f       	adc	r30, r30
 768:	ff 1f       	adc	r31, r31
 76a:	a2 17       	cp	r26, r18
 76c:	b3 07       	cpc	r27, r19
 76e:	e4 07       	cpc	r30, r20
 770:	f5 07       	cpc	r31, r21
 772:	20 f0       	brcs	.+8      	; 0x77c <__udivmodsi4_ep>
 774:	a2 1b       	sub	r26, r18
 776:	b3 0b       	sbc	r27, r19
 778:	e4 0b       	sbc	r30, r20
 77a:	f5 0b       	sbc	r31, r21

0000077c <__udivmodsi4_ep>:
 77c:	66 1f       	adc	r22, r22
 77e:	77 1f       	adc	r23, r23
 780:	88 1f       	adc	r24, r24
 782:	99 1f       	adc	r25, r25
 784:	1a 94       	dec	r1
 786:	69 f7       	brne	.-38     	; 0x762 <__udivmodsi4_loop>
 788:	60 95       	com	r22
 78a:	70 95       	com	r23
 78c:	80 95       	com	r24
 78e:	90 95       	com	r25
 790:	9b 01       	movw	r18, r22
 792:	ac 01       	movw	r20, r24
 794:	bd 01       	movw	r22, r26
 796:	cf 01       	movw	r24, r30
 798:	08 95       	ret

0000079a <strcmp>:
 79a:	fb 01       	movw	r30, r22
 79c:	dc 01       	movw	r26, r24
 79e:	8d 91       	ld	r24, X+
 7a0:	01 90       	ld	r0, Z+
 7a2:	80 19       	sub	r24, r0
 7a4:	01 10       	cpse	r0, r1
 7a6:	d9 f3       	breq	.-10     	; 0x79e <strcmp+0x4>
 7a8:	99 0b       	sbc	r25, r25
 7aa:	08 95       	ret

000007ac <printf>:
 7ac:	cf 93       	push	r28
 7ae:	df 93       	push	r29
 7b0:	cd b7       	in	r28, 0x3d	; 61
 7b2:	de b7       	in	r29, 0x3e	; 62
 7b4:	ae 01       	movw	r20, r28
 7b6:	4b 5f       	subi	r20, 0xFB	; 251
 7b8:	5f 4f       	sbci	r21, 0xFF	; 255
 7ba:	fa 01       	movw	r30, r20
 7bc:	61 91       	ld	r22, Z+
 7be:	71 91       	ld	r23, Z+
 7c0:	af 01       	movw	r20, r30
 7c2:	80 91 74 43 	lds	r24, 0x4374	; 0x804374 <__iob+0x2>
 7c6:	90 91 75 43 	lds	r25, 0x4375	; 0x804375 <__iob+0x3>
 7ca:	0e 94 1a 04 	call	0x834	; 0x834 <vfprintf>
 7ce:	df 91       	pop	r29
 7d0:	cf 91       	pop	r28
 7d2:	08 95       	ret

000007d4 <puts>:
 7d4:	0f 93       	push	r16
 7d6:	1f 93       	push	r17
 7d8:	cf 93       	push	r28
 7da:	df 93       	push	r29
 7dc:	e0 91 74 43 	lds	r30, 0x4374	; 0x804374 <__iob+0x2>
 7e0:	f0 91 75 43 	lds	r31, 0x4375	; 0x804375 <__iob+0x3>
 7e4:	23 81       	ldd	r18, Z+3	; 0x03
 7e6:	21 ff       	sbrs	r18, 1
 7e8:	1b c0       	rjmp	.+54     	; 0x820 <puts+0x4c>
 7ea:	8c 01       	movw	r16, r24
 7ec:	d0 e0       	ldi	r29, 0x00	; 0
 7ee:	c0 e0       	ldi	r28, 0x00	; 0
 7f0:	f8 01       	movw	r30, r16
 7f2:	81 91       	ld	r24, Z+
 7f4:	8f 01       	movw	r16, r30
 7f6:	60 91 74 43 	lds	r22, 0x4374	; 0x804374 <__iob+0x2>
 7fa:	70 91 75 43 	lds	r23, 0x4375	; 0x804375 <__iob+0x3>
 7fe:	db 01       	movw	r26, r22
 800:	18 96       	adiw	r26, 0x08	; 8
 802:	ed 91       	ld	r30, X+
 804:	fc 91       	ld	r31, X
 806:	19 97       	sbiw	r26, 0x09	; 9
 808:	88 23       	and	r24, r24
 80a:	31 f0       	breq	.+12     	; 0x818 <puts+0x44>
 80c:	09 95       	icall
 80e:	89 2b       	or	r24, r25
 810:	79 f3       	breq	.-34     	; 0x7f0 <puts+0x1c>
 812:	df ef       	ldi	r29, 0xFF	; 255
 814:	cf ef       	ldi	r28, 0xFF	; 255
 816:	ec cf       	rjmp	.-40     	; 0x7f0 <puts+0x1c>
 818:	8a e0       	ldi	r24, 0x0A	; 10
 81a:	09 95       	icall
 81c:	89 2b       	or	r24, r25
 81e:	19 f0       	breq	.+6      	; 0x826 <puts+0x52>
 820:	8f ef       	ldi	r24, 0xFF	; 255
 822:	9f ef       	ldi	r25, 0xFF	; 255
 824:	02 c0       	rjmp	.+4      	; 0x82a <puts+0x56>
 826:	8d 2f       	mov	r24, r29
 828:	9c 2f       	mov	r25, r28
 82a:	df 91       	pop	r29
 82c:	cf 91       	pop	r28
 82e:	1f 91       	pop	r17
 830:	0f 91       	pop	r16
 832:	08 95       	ret

00000834 <vfprintf>:
 834:	2f 92       	push	r2
 836:	3f 92       	push	r3
 838:	4f 92       	push	r4
 83a:	5f 92       	push	r5
 83c:	6f 92       	push	r6
 83e:	7f 92       	push	r7
 840:	8f 92       	push	r8
 842:	9f 92       	push	r9
 844:	af 92       	push	r10
 846:	bf 92       	push	r11
 848:	cf 92       	push	r12
 84a:	df 92       	push	r13
 84c:	ef 92       	push	r14
 84e:	ff 92       	push	r15
 850:	0f 93       	push	r16
 852:	1f 93       	push	r17
 854:	cf 93       	push	r28
 856:	df 93       	push	r29
 858:	cd b7       	in	r28, 0x3d	; 61
 85a:	de b7       	in	r29, 0x3e	; 62
 85c:	2b 97       	sbiw	r28, 0x0b	; 11
 85e:	cd bf       	out	0x3d, r28	; 61
 860:	de bf       	out	0x3e, r29	; 62
 862:	6c 01       	movw	r12, r24
 864:	7b 01       	movw	r14, r22
 866:	8a 01       	movw	r16, r20
 868:	fc 01       	movw	r30, r24
 86a:	16 82       	std	Z+6, r1	; 0x06
 86c:	17 82       	std	Z+7, r1	; 0x07
 86e:	83 81       	ldd	r24, Z+3	; 0x03
 870:	81 ff       	sbrs	r24, 1
 872:	cc c1       	rjmp	.+920    	; 0xc0c <vfprintf+0x3d8>
 874:	ce 01       	movw	r24, r28
 876:	01 96       	adiw	r24, 0x01	; 1
 878:	3c 01       	movw	r6, r24
 87a:	f6 01       	movw	r30, r12
 87c:	93 81       	ldd	r25, Z+3	; 0x03
 87e:	f7 01       	movw	r30, r14
 880:	93 fd       	sbrc	r25, 3
 882:	85 91       	lpm	r24, Z+
 884:	93 ff       	sbrs	r25, 3
 886:	81 91       	ld	r24, Z+
 888:	7f 01       	movw	r14, r30
 88a:	88 23       	and	r24, r24
 88c:	09 f4       	brne	.+2      	; 0x890 <vfprintf+0x5c>
 88e:	ba c1       	rjmp	.+884    	; 0xc04 <vfprintf+0x3d0>
 890:	85 32       	cpi	r24, 0x25	; 37
 892:	39 f4       	brne	.+14     	; 0x8a2 <vfprintf+0x6e>
 894:	93 fd       	sbrc	r25, 3
 896:	85 91       	lpm	r24, Z+
 898:	93 ff       	sbrs	r25, 3
 89a:	81 91       	ld	r24, Z+
 89c:	7f 01       	movw	r14, r30
 89e:	85 32       	cpi	r24, 0x25	; 37
 8a0:	29 f4       	brne	.+10     	; 0x8ac <vfprintf+0x78>
 8a2:	b6 01       	movw	r22, r12
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	0e 94 34 06 	call	0xc68	; 0xc68 <fputc>
 8aa:	e7 cf       	rjmp	.-50     	; 0x87a <vfprintf+0x46>
 8ac:	91 2c       	mov	r9, r1
 8ae:	21 2c       	mov	r2, r1
 8b0:	31 2c       	mov	r3, r1
 8b2:	ff e1       	ldi	r31, 0x1F	; 31
 8b4:	f3 15       	cp	r31, r3
 8b6:	d8 f0       	brcs	.+54     	; 0x8ee <vfprintf+0xba>
 8b8:	8b 32       	cpi	r24, 0x2B	; 43
 8ba:	79 f0       	breq	.+30     	; 0x8da <vfprintf+0xa6>
 8bc:	38 f4       	brcc	.+14     	; 0x8cc <vfprintf+0x98>
 8be:	80 32       	cpi	r24, 0x20	; 32
 8c0:	79 f0       	breq	.+30     	; 0x8e0 <vfprintf+0xac>
 8c2:	83 32       	cpi	r24, 0x23	; 35
 8c4:	a1 f4       	brne	.+40     	; 0x8ee <vfprintf+0xba>
 8c6:	23 2d       	mov	r18, r3
 8c8:	20 61       	ori	r18, 0x10	; 16
 8ca:	1d c0       	rjmp	.+58     	; 0x906 <vfprintf+0xd2>
 8cc:	8d 32       	cpi	r24, 0x2D	; 45
 8ce:	61 f0       	breq	.+24     	; 0x8e8 <vfprintf+0xb4>
 8d0:	80 33       	cpi	r24, 0x30	; 48
 8d2:	69 f4       	brne	.+26     	; 0x8ee <vfprintf+0xba>
 8d4:	23 2d       	mov	r18, r3
 8d6:	21 60       	ori	r18, 0x01	; 1
 8d8:	16 c0       	rjmp	.+44     	; 0x906 <vfprintf+0xd2>
 8da:	83 2d       	mov	r24, r3
 8dc:	82 60       	ori	r24, 0x02	; 2
 8de:	38 2e       	mov	r3, r24
 8e0:	e3 2d       	mov	r30, r3
 8e2:	e4 60       	ori	r30, 0x04	; 4
 8e4:	3e 2e       	mov	r3, r30
 8e6:	2a c0       	rjmp	.+84     	; 0x93c <vfprintf+0x108>
 8e8:	f3 2d       	mov	r31, r3
 8ea:	f8 60       	ori	r31, 0x08	; 8
 8ec:	1d c0       	rjmp	.+58     	; 0x928 <vfprintf+0xf4>
 8ee:	37 fc       	sbrc	r3, 7
 8f0:	2d c0       	rjmp	.+90     	; 0x94c <vfprintf+0x118>
 8f2:	20 ed       	ldi	r18, 0xD0	; 208
 8f4:	28 0f       	add	r18, r24
 8f6:	2a 30       	cpi	r18, 0x0A	; 10
 8f8:	40 f0       	brcs	.+16     	; 0x90a <vfprintf+0xd6>
 8fa:	8e 32       	cpi	r24, 0x2E	; 46
 8fc:	b9 f4       	brne	.+46     	; 0x92c <vfprintf+0xf8>
 8fe:	36 fc       	sbrc	r3, 6
 900:	81 c1       	rjmp	.+770    	; 0xc04 <vfprintf+0x3d0>
 902:	23 2d       	mov	r18, r3
 904:	20 64       	ori	r18, 0x40	; 64
 906:	32 2e       	mov	r3, r18
 908:	19 c0       	rjmp	.+50     	; 0x93c <vfprintf+0x108>
 90a:	36 fe       	sbrs	r3, 6
 90c:	06 c0       	rjmp	.+12     	; 0x91a <vfprintf+0xe6>
 90e:	8a e0       	ldi	r24, 0x0A	; 10
 910:	98 9e       	mul	r9, r24
 912:	20 0d       	add	r18, r0
 914:	11 24       	eor	r1, r1
 916:	92 2e       	mov	r9, r18
 918:	11 c0       	rjmp	.+34     	; 0x93c <vfprintf+0x108>
 91a:	ea e0       	ldi	r30, 0x0A	; 10
 91c:	2e 9e       	mul	r2, r30
 91e:	20 0d       	add	r18, r0
 920:	11 24       	eor	r1, r1
 922:	22 2e       	mov	r2, r18
 924:	f3 2d       	mov	r31, r3
 926:	f0 62       	ori	r31, 0x20	; 32
 928:	3f 2e       	mov	r3, r31
 92a:	08 c0       	rjmp	.+16     	; 0x93c <vfprintf+0x108>
 92c:	8c 36       	cpi	r24, 0x6C	; 108
 92e:	21 f4       	brne	.+8      	; 0x938 <vfprintf+0x104>
 930:	83 2d       	mov	r24, r3
 932:	80 68       	ori	r24, 0x80	; 128
 934:	38 2e       	mov	r3, r24
 936:	02 c0       	rjmp	.+4      	; 0x93c <vfprintf+0x108>
 938:	88 36       	cpi	r24, 0x68	; 104
 93a:	41 f4       	brne	.+16     	; 0x94c <vfprintf+0x118>
 93c:	f7 01       	movw	r30, r14
 93e:	93 fd       	sbrc	r25, 3
 940:	85 91       	lpm	r24, Z+
 942:	93 ff       	sbrs	r25, 3
 944:	81 91       	ld	r24, Z+
 946:	7f 01       	movw	r14, r30
 948:	81 11       	cpse	r24, r1
 94a:	b3 cf       	rjmp	.-154    	; 0x8b2 <vfprintf+0x7e>
 94c:	98 2f       	mov	r25, r24
 94e:	9f 7d       	andi	r25, 0xDF	; 223
 950:	95 54       	subi	r25, 0x45	; 69
 952:	93 30       	cpi	r25, 0x03	; 3
 954:	28 f4       	brcc	.+10     	; 0x960 <vfprintf+0x12c>
 956:	0c 5f       	subi	r16, 0xFC	; 252
 958:	1f 4f       	sbci	r17, 0xFF	; 255
 95a:	9f e3       	ldi	r25, 0x3F	; 63
 95c:	99 83       	std	Y+1, r25	; 0x01
 95e:	0d c0       	rjmp	.+26     	; 0x97a <vfprintf+0x146>
 960:	83 36       	cpi	r24, 0x63	; 99
 962:	31 f0       	breq	.+12     	; 0x970 <vfprintf+0x13c>
 964:	83 37       	cpi	r24, 0x73	; 115
 966:	71 f0       	breq	.+28     	; 0x984 <vfprintf+0x150>
 968:	83 35       	cpi	r24, 0x53	; 83
 96a:	09 f0       	breq	.+2      	; 0x96e <vfprintf+0x13a>
 96c:	59 c0       	rjmp	.+178    	; 0xa20 <vfprintf+0x1ec>
 96e:	21 c0       	rjmp	.+66     	; 0x9b2 <vfprintf+0x17e>
 970:	f8 01       	movw	r30, r16
 972:	80 81       	ld	r24, Z
 974:	89 83       	std	Y+1, r24	; 0x01
 976:	0e 5f       	subi	r16, 0xFE	; 254
 978:	1f 4f       	sbci	r17, 0xFF	; 255
 97a:	88 24       	eor	r8, r8
 97c:	83 94       	inc	r8
 97e:	91 2c       	mov	r9, r1
 980:	53 01       	movw	r10, r6
 982:	13 c0       	rjmp	.+38     	; 0x9aa <vfprintf+0x176>
 984:	28 01       	movw	r4, r16
 986:	f2 e0       	ldi	r31, 0x02	; 2
 988:	4f 0e       	add	r4, r31
 98a:	51 1c       	adc	r5, r1
 98c:	f8 01       	movw	r30, r16
 98e:	a0 80       	ld	r10, Z
 990:	b1 80       	ldd	r11, Z+1	; 0x01
 992:	36 fe       	sbrs	r3, 6
 994:	03 c0       	rjmp	.+6      	; 0x99c <vfprintf+0x168>
 996:	69 2d       	mov	r22, r9
 998:	70 e0       	ldi	r23, 0x00	; 0
 99a:	02 c0       	rjmp	.+4      	; 0x9a0 <vfprintf+0x16c>
 99c:	6f ef       	ldi	r22, 0xFF	; 255
 99e:	7f ef       	ldi	r23, 0xFF	; 255
 9a0:	c5 01       	movw	r24, r10
 9a2:	0e 94 29 06 	call	0xc52	; 0xc52 <strnlen>
 9a6:	4c 01       	movw	r8, r24
 9a8:	82 01       	movw	r16, r4
 9aa:	f3 2d       	mov	r31, r3
 9ac:	ff 77       	andi	r31, 0x7F	; 127
 9ae:	3f 2e       	mov	r3, r31
 9b0:	16 c0       	rjmp	.+44     	; 0x9de <vfprintf+0x1aa>
 9b2:	28 01       	movw	r4, r16
 9b4:	22 e0       	ldi	r18, 0x02	; 2
 9b6:	42 0e       	add	r4, r18
 9b8:	51 1c       	adc	r5, r1
 9ba:	f8 01       	movw	r30, r16
 9bc:	a0 80       	ld	r10, Z
 9be:	b1 80       	ldd	r11, Z+1	; 0x01
 9c0:	36 fe       	sbrs	r3, 6
 9c2:	03 c0       	rjmp	.+6      	; 0x9ca <vfprintf+0x196>
 9c4:	69 2d       	mov	r22, r9
 9c6:	70 e0       	ldi	r23, 0x00	; 0
 9c8:	02 c0       	rjmp	.+4      	; 0x9ce <vfprintf+0x19a>
 9ca:	6f ef       	ldi	r22, 0xFF	; 255
 9cc:	7f ef       	ldi	r23, 0xFF	; 255
 9ce:	c5 01       	movw	r24, r10
 9d0:	0e 94 1e 06 	call	0xc3c	; 0xc3c <strnlen_P>
 9d4:	4c 01       	movw	r8, r24
 9d6:	f3 2d       	mov	r31, r3
 9d8:	f0 68       	ori	r31, 0x80	; 128
 9da:	3f 2e       	mov	r3, r31
 9dc:	82 01       	movw	r16, r4
 9de:	33 fc       	sbrc	r3, 3
 9e0:	1b c0       	rjmp	.+54     	; 0xa18 <vfprintf+0x1e4>
 9e2:	82 2d       	mov	r24, r2
 9e4:	90 e0       	ldi	r25, 0x00	; 0
 9e6:	88 16       	cp	r8, r24
 9e8:	99 06       	cpc	r9, r25
 9ea:	b0 f4       	brcc	.+44     	; 0xa18 <vfprintf+0x1e4>
 9ec:	b6 01       	movw	r22, r12
 9ee:	80 e2       	ldi	r24, 0x20	; 32
 9f0:	90 e0       	ldi	r25, 0x00	; 0
 9f2:	0e 94 34 06 	call	0xc68	; 0xc68 <fputc>
 9f6:	2a 94       	dec	r2
 9f8:	f4 cf       	rjmp	.-24     	; 0x9e2 <vfprintf+0x1ae>
 9fa:	f5 01       	movw	r30, r10
 9fc:	37 fc       	sbrc	r3, 7
 9fe:	85 91       	lpm	r24, Z+
 a00:	37 fe       	sbrs	r3, 7
 a02:	81 91       	ld	r24, Z+
 a04:	5f 01       	movw	r10, r30
 a06:	b6 01       	movw	r22, r12
 a08:	90 e0       	ldi	r25, 0x00	; 0
 a0a:	0e 94 34 06 	call	0xc68	; 0xc68 <fputc>
 a0e:	21 10       	cpse	r2, r1
 a10:	2a 94       	dec	r2
 a12:	21 e0       	ldi	r18, 0x01	; 1
 a14:	82 1a       	sub	r8, r18
 a16:	91 08       	sbc	r9, r1
 a18:	81 14       	cp	r8, r1
 a1a:	91 04       	cpc	r9, r1
 a1c:	71 f7       	brne	.-36     	; 0x9fa <vfprintf+0x1c6>
 a1e:	e8 c0       	rjmp	.+464    	; 0xbf0 <vfprintf+0x3bc>
 a20:	84 36       	cpi	r24, 0x64	; 100
 a22:	11 f0       	breq	.+4      	; 0xa28 <vfprintf+0x1f4>
 a24:	89 36       	cpi	r24, 0x69	; 105
 a26:	41 f5       	brne	.+80     	; 0xa78 <vfprintf+0x244>
 a28:	f8 01       	movw	r30, r16
 a2a:	37 fe       	sbrs	r3, 7
 a2c:	07 c0       	rjmp	.+14     	; 0xa3c <vfprintf+0x208>
 a2e:	60 81       	ld	r22, Z
 a30:	71 81       	ldd	r23, Z+1	; 0x01
 a32:	82 81       	ldd	r24, Z+2	; 0x02
 a34:	93 81       	ldd	r25, Z+3	; 0x03
 a36:	0c 5f       	subi	r16, 0xFC	; 252
 a38:	1f 4f       	sbci	r17, 0xFF	; 255
 a3a:	08 c0       	rjmp	.+16     	; 0xa4c <vfprintf+0x218>
 a3c:	60 81       	ld	r22, Z
 a3e:	71 81       	ldd	r23, Z+1	; 0x01
 a40:	07 2e       	mov	r0, r23
 a42:	00 0c       	add	r0, r0
 a44:	88 0b       	sbc	r24, r24
 a46:	99 0b       	sbc	r25, r25
 a48:	0e 5f       	subi	r16, 0xFE	; 254
 a4a:	1f 4f       	sbci	r17, 0xFF	; 255
 a4c:	f3 2d       	mov	r31, r3
 a4e:	ff 76       	andi	r31, 0x6F	; 111
 a50:	3f 2e       	mov	r3, r31
 a52:	97 ff       	sbrs	r25, 7
 a54:	09 c0       	rjmp	.+18     	; 0xa68 <vfprintf+0x234>
 a56:	90 95       	com	r25
 a58:	80 95       	com	r24
 a5a:	70 95       	com	r23
 a5c:	61 95       	neg	r22
 a5e:	7f 4f       	sbci	r23, 0xFF	; 255
 a60:	8f 4f       	sbci	r24, 0xFF	; 255
 a62:	9f 4f       	sbci	r25, 0xFF	; 255
 a64:	f0 68       	ori	r31, 0x80	; 128
 a66:	3f 2e       	mov	r3, r31
 a68:	2a e0       	ldi	r18, 0x0A	; 10
 a6a:	30 e0       	ldi	r19, 0x00	; 0
 a6c:	a3 01       	movw	r20, r6
 a6e:	0e 94 70 06 	call	0xce0	; 0xce0 <__ultoa_invert>
 a72:	88 2e       	mov	r8, r24
 a74:	86 18       	sub	r8, r6
 a76:	45 c0       	rjmp	.+138    	; 0xb02 <vfprintf+0x2ce>
 a78:	85 37       	cpi	r24, 0x75	; 117
 a7a:	31 f4       	brne	.+12     	; 0xa88 <vfprintf+0x254>
 a7c:	23 2d       	mov	r18, r3
 a7e:	2f 7e       	andi	r18, 0xEF	; 239
 a80:	b2 2e       	mov	r11, r18
 a82:	2a e0       	ldi	r18, 0x0A	; 10
 a84:	30 e0       	ldi	r19, 0x00	; 0
 a86:	25 c0       	rjmp	.+74     	; 0xad2 <vfprintf+0x29e>
 a88:	93 2d       	mov	r25, r3
 a8a:	99 7f       	andi	r25, 0xF9	; 249
 a8c:	b9 2e       	mov	r11, r25
 a8e:	8f 36       	cpi	r24, 0x6F	; 111
 a90:	c1 f0       	breq	.+48     	; 0xac2 <vfprintf+0x28e>
 a92:	18 f4       	brcc	.+6      	; 0xa9a <vfprintf+0x266>
 a94:	88 35       	cpi	r24, 0x58	; 88
 a96:	79 f0       	breq	.+30     	; 0xab6 <vfprintf+0x282>
 a98:	b5 c0       	rjmp	.+362    	; 0xc04 <vfprintf+0x3d0>
 a9a:	80 37       	cpi	r24, 0x70	; 112
 a9c:	19 f0       	breq	.+6      	; 0xaa4 <vfprintf+0x270>
 a9e:	88 37       	cpi	r24, 0x78	; 120
 aa0:	21 f0       	breq	.+8      	; 0xaaa <vfprintf+0x276>
 aa2:	b0 c0       	rjmp	.+352    	; 0xc04 <vfprintf+0x3d0>
 aa4:	e9 2f       	mov	r30, r25
 aa6:	e0 61       	ori	r30, 0x10	; 16
 aa8:	be 2e       	mov	r11, r30
 aaa:	b4 fe       	sbrs	r11, 4
 aac:	0d c0       	rjmp	.+26     	; 0xac8 <vfprintf+0x294>
 aae:	fb 2d       	mov	r31, r11
 ab0:	f4 60       	ori	r31, 0x04	; 4
 ab2:	bf 2e       	mov	r11, r31
 ab4:	09 c0       	rjmp	.+18     	; 0xac8 <vfprintf+0x294>
 ab6:	34 fe       	sbrs	r3, 4
 ab8:	0a c0       	rjmp	.+20     	; 0xace <vfprintf+0x29a>
 aba:	29 2f       	mov	r18, r25
 abc:	26 60       	ori	r18, 0x06	; 6
 abe:	b2 2e       	mov	r11, r18
 ac0:	06 c0       	rjmp	.+12     	; 0xace <vfprintf+0x29a>
 ac2:	28 e0       	ldi	r18, 0x08	; 8
 ac4:	30 e0       	ldi	r19, 0x00	; 0
 ac6:	05 c0       	rjmp	.+10     	; 0xad2 <vfprintf+0x29e>
 ac8:	20 e1       	ldi	r18, 0x10	; 16
 aca:	30 e0       	ldi	r19, 0x00	; 0
 acc:	02 c0       	rjmp	.+4      	; 0xad2 <vfprintf+0x29e>
 ace:	20 e1       	ldi	r18, 0x10	; 16
 ad0:	32 e0       	ldi	r19, 0x02	; 2
 ad2:	f8 01       	movw	r30, r16
 ad4:	b7 fe       	sbrs	r11, 7
 ad6:	07 c0       	rjmp	.+14     	; 0xae6 <vfprintf+0x2b2>
 ad8:	60 81       	ld	r22, Z
 ada:	71 81       	ldd	r23, Z+1	; 0x01
 adc:	82 81       	ldd	r24, Z+2	; 0x02
 ade:	93 81       	ldd	r25, Z+3	; 0x03
 ae0:	0c 5f       	subi	r16, 0xFC	; 252
 ae2:	1f 4f       	sbci	r17, 0xFF	; 255
 ae4:	06 c0       	rjmp	.+12     	; 0xaf2 <vfprintf+0x2be>
 ae6:	60 81       	ld	r22, Z
 ae8:	71 81       	ldd	r23, Z+1	; 0x01
 aea:	80 e0       	ldi	r24, 0x00	; 0
 aec:	90 e0       	ldi	r25, 0x00	; 0
 aee:	0e 5f       	subi	r16, 0xFE	; 254
 af0:	1f 4f       	sbci	r17, 0xFF	; 255
 af2:	a3 01       	movw	r20, r6
 af4:	0e 94 70 06 	call	0xce0	; 0xce0 <__ultoa_invert>
 af8:	88 2e       	mov	r8, r24
 afa:	86 18       	sub	r8, r6
 afc:	fb 2d       	mov	r31, r11
 afe:	ff 77       	andi	r31, 0x7F	; 127
 b00:	3f 2e       	mov	r3, r31
 b02:	36 fe       	sbrs	r3, 6
 b04:	0d c0       	rjmp	.+26     	; 0xb20 <vfprintf+0x2ec>
 b06:	23 2d       	mov	r18, r3
 b08:	2e 7f       	andi	r18, 0xFE	; 254
 b0a:	a2 2e       	mov	r10, r18
 b0c:	89 14       	cp	r8, r9
 b0e:	58 f4       	brcc	.+22     	; 0xb26 <vfprintf+0x2f2>
 b10:	34 fe       	sbrs	r3, 4
 b12:	0b c0       	rjmp	.+22     	; 0xb2a <vfprintf+0x2f6>
 b14:	32 fc       	sbrc	r3, 2
 b16:	09 c0       	rjmp	.+18     	; 0xb2a <vfprintf+0x2f6>
 b18:	83 2d       	mov	r24, r3
 b1a:	8e 7e       	andi	r24, 0xEE	; 238
 b1c:	a8 2e       	mov	r10, r24
 b1e:	05 c0       	rjmp	.+10     	; 0xb2a <vfprintf+0x2f6>
 b20:	b8 2c       	mov	r11, r8
 b22:	a3 2c       	mov	r10, r3
 b24:	03 c0       	rjmp	.+6      	; 0xb2c <vfprintf+0x2f8>
 b26:	b8 2c       	mov	r11, r8
 b28:	01 c0       	rjmp	.+2      	; 0xb2c <vfprintf+0x2f8>
 b2a:	b9 2c       	mov	r11, r9
 b2c:	a4 fe       	sbrs	r10, 4
 b2e:	0f c0       	rjmp	.+30     	; 0xb4e <vfprintf+0x31a>
 b30:	fe 01       	movw	r30, r28
 b32:	e8 0d       	add	r30, r8
 b34:	f1 1d       	adc	r31, r1
 b36:	80 81       	ld	r24, Z
 b38:	80 33       	cpi	r24, 0x30	; 48
 b3a:	21 f4       	brne	.+8      	; 0xb44 <vfprintf+0x310>
 b3c:	9a 2d       	mov	r25, r10
 b3e:	99 7e       	andi	r25, 0xE9	; 233
 b40:	a9 2e       	mov	r10, r25
 b42:	09 c0       	rjmp	.+18     	; 0xb56 <vfprintf+0x322>
 b44:	a2 fe       	sbrs	r10, 2
 b46:	06 c0       	rjmp	.+12     	; 0xb54 <vfprintf+0x320>
 b48:	b3 94       	inc	r11
 b4a:	b3 94       	inc	r11
 b4c:	04 c0       	rjmp	.+8      	; 0xb56 <vfprintf+0x322>
 b4e:	8a 2d       	mov	r24, r10
 b50:	86 78       	andi	r24, 0x86	; 134
 b52:	09 f0       	breq	.+2      	; 0xb56 <vfprintf+0x322>
 b54:	b3 94       	inc	r11
 b56:	a3 fc       	sbrc	r10, 3
 b58:	11 c0       	rjmp	.+34     	; 0xb7c <vfprintf+0x348>
 b5a:	a0 fe       	sbrs	r10, 0
 b5c:	06 c0       	rjmp	.+12     	; 0xb6a <vfprintf+0x336>
 b5e:	b2 14       	cp	r11, r2
 b60:	88 f4       	brcc	.+34     	; 0xb84 <vfprintf+0x350>
 b62:	28 0c       	add	r2, r8
 b64:	92 2c       	mov	r9, r2
 b66:	9b 18       	sub	r9, r11
 b68:	0e c0       	rjmp	.+28     	; 0xb86 <vfprintf+0x352>
 b6a:	b2 14       	cp	r11, r2
 b6c:	60 f4       	brcc	.+24     	; 0xb86 <vfprintf+0x352>
 b6e:	b6 01       	movw	r22, r12
 b70:	80 e2       	ldi	r24, 0x20	; 32
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	0e 94 34 06 	call	0xc68	; 0xc68 <fputc>
 b78:	b3 94       	inc	r11
 b7a:	f7 cf       	rjmp	.-18     	; 0xb6a <vfprintf+0x336>
 b7c:	b2 14       	cp	r11, r2
 b7e:	18 f4       	brcc	.+6      	; 0xb86 <vfprintf+0x352>
 b80:	2b 18       	sub	r2, r11
 b82:	02 c0       	rjmp	.+4      	; 0xb88 <vfprintf+0x354>
 b84:	98 2c       	mov	r9, r8
 b86:	21 2c       	mov	r2, r1
 b88:	a4 fe       	sbrs	r10, 4
 b8a:	10 c0       	rjmp	.+32     	; 0xbac <vfprintf+0x378>
 b8c:	b6 01       	movw	r22, r12
 b8e:	80 e3       	ldi	r24, 0x30	; 48
 b90:	90 e0       	ldi	r25, 0x00	; 0
 b92:	0e 94 34 06 	call	0xc68	; 0xc68 <fputc>
 b96:	a2 fe       	sbrs	r10, 2
 b98:	17 c0       	rjmp	.+46     	; 0xbc8 <vfprintf+0x394>
 b9a:	a1 fc       	sbrc	r10, 1
 b9c:	03 c0       	rjmp	.+6      	; 0xba4 <vfprintf+0x370>
 b9e:	88 e7       	ldi	r24, 0x78	; 120
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	02 c0       	rjmp	.+4      	; 0xba8 <vfprintf+0x374>
 ba4:	88 e5       	ldi	r24, 0x58	; 88
 ba6:	90 e0       	ldi	r25, 0x00	; 0
 ba8:	b6 01       	movw	r22, r12
 baa:	0c c0       	rjmp	.+24     	; 0xbc4 <vfprintf+0x390>
 bac:	8a 2d       	mov	r24, r10
 bae:	86 78       	andi	r24, 0x86	; 134
 bb0:	59 f0       	breq	.+22     	; 0xbc8 <vfprintf+0x394>
 bb2:	a1 fe       	sbrs	r10, 1
 bb4:	02 c0       	rjmp	.+4      	; 0xbba <vfprintf+0x386>
 bb6:	8b e2       	ldi	r24, 0x2B	; 43
 bb8:	01 c0       	rjmp	.+2      	; 0xbbc <vfprintf+0x388>
 bba:	80 e2       	ldi	r24, 0x20	; 32
 bbc:	a7 fc       	sbrc	r10, 7
 bbe:	8d e2       	ldi	r24, 0x2D	; 45
 bc0:	b6 01       	movw	r22, r12
 bc2:	90 e0       	ldi	r25, 0x00	; 0
 bc4:	0e 94 34 06 	call	0xc68	; 0xc68 <fputc>
 bc8:	89 14       	cp	r8, r9
 bca:	38 f4       	brcc	.+14     	; 0xbda <vfprintf+0x3a6>
 bcc:	b6 01       	movw	r22, r12
 bce:	80 e3       	ldi	r24, 0x30	; 48
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	0e 94 34 06 	call	0xc68	; 0xc68 <fputc>
 bd6:	9a 94       	dec	r9
 bd8:	f7 cf       	rjmp	.-18     	; 0xbc8 <vfprintf+0x394>
 bda:	8a 94       	dec	r8
 bdc:	f3 01       	movw	r30, r6
 bde:	e8 0d       	add	r30, r8
 be0:	f1 1d       	adc	r31, r1
 be2:	80 81       	ld	r24, Z
 be4:	b6 01       	movw	r22, r12
 be6:	90 e0       	ldi	r25, 0x00	; 0
 be8:	0e 94 34 06 	call	0xc68	; 0xc68 <fputc>
 bec:	81 10       	cpse	r8, r1
 bee:	f5 cf       	rjmp	.-22     	; 0xbda <vfprintf+0x3a6>
 bf0:	22 20       	and	r2, r2
 bf2:	09 f4       	brne	.+2      	; 0xbf6 <vfprintf+0x3c2>
 bf4:	42 ce       	rjmp	.-892    	; 0x87a <vfprintf+0x46>
 bf6:	b6 01       	movw	r22, r12
 bf8:	80 e2       	ldi	r24, 0x20	; 32
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	0e 94 34 06 	call	0xc68	; 0xc68 <fputc>
 c00:	2a 94       	dec	r2
 c02:	f6 cf       	rjmp	.-20     	; 0xbf0 <vfprintf+0x3bc>
 c04:	f6 01       	movw	r30, r12
 c06:	86 81       	ldd	r24, Z+6	; 0x06
 c08:	97 81       	ldd	r25, Z+7	; 0x07
 c0a:	02 c0       	rjmp	.+4      	; 0xc10 <vfprintf+0x3dc>
 c0c:	8f ef       	ldi	r24, 0xFF	; 255
 c0e:	9f ef       	ldi	r25, 0xFF	; 255
 c10:	2b 96       	adiw	r28, 0x0b	; 11
 c12:	cd bf       	out	0x3d, r28	; 61
 c14:	de bf       	out	0x3e, r29	; 62
 c16:	df 91       	pop	r29
 c18:	cf 91       	pop	r28
 c1a:	1f 91       	pop	r17
 c1c:	0f 91       	pop	r16
 c1e:	ff 90       	pop	r15
 c20:	ef 90       	pop	r14
 c22:	df 90       	pop	r13
 c24:	cf 90       	pop	r12
 c26:	bf 90       	pop	r11
 c28:	af 90       	pop	r10
 c2a:	9f 90       	pop	r9
 c2c:	8f 90       	pop	r8
 c2e:	7f 90       	pop	r7
 c30:	6f 90       	pop	r6
 c32:	5f 90       	pop	r5
 c34:	4f 90       	pop	r4
 c36:	3f 90       	pop	r3
 c38:	2f 90       	pop	r2
 c3a:	08 95       	ret

00000c3c <strnlen_P>:
 c3c:	fc 01       	movw	r30, r24
 c3e:	05 90       	lpm	r0, Z+
 c40:	61 50       	subi	r22, 0x01	; 1
 c42:	70 40       	sbci	r23, 0x00	; 0
 c44:	01 10       	cpse	r0, r1
 c46:	d8 f7       	brcc	.-10     	; 0xc3e <strnlen_P+0x2>
 c48:	80 95       	com	r24
 c4a:	90 95       	com	r25
 c4c:	8e 0f       	add	r24, r30
 c4e:	9f 1f       	adc	r25, r31
 c50:	08 95       	ret

00000c52 <strnlen>:
 c52:	fc 01       	movw	r30, r24
 c54:	61 50       	subi	r22, 0x01	; 1
 c56:	70 40       	sbci	r23, 0x00	; 0
 c58:	01 90       	ld	r0, Z+
 c5a:	01 10       	cpse	r0, r1
 c5c:	d8 f7       	brcc	.-10     	; 0xc54 <strnlen+0x2>
 c5e:	80 95       	com	r24
 c60:	90 95       	com	r25
 c62:	8e 0f       	add	r24, r30
 c64:	9f 1f       	adc	r25, r31
 c66:	08 95       	ret

00000c68 <fputc>:
 c68:	0f 93       	push	r16
 c6a:	1f 93       	push	r17
 c6c:	cf 93       	push	r28
 c6e:	df 93       	push	r29
 c70:	fb 01       	movw	r30, r22
 c72:	23 81       	ldd	r18, Z+3	; 0x03
 c74:	21 fd       	sbrc	r18, 1
 c76:	03 c0       	rjmp	.+6      	; 0xc7e <fputc+0x16>
 c78:	8f ef       	ldi	r24, 0xFF	; 255
 c7a:	9f ef       	ldi	r25, 0xFF	; 255
 c7c:	2c c0       	rjmp	.+88     	; 0xcd6 <fputc+0x6e>
 c7e:	22 ff       	sbrs	r18, 2
 c80:	16 c0       	rjmp	.+44     	; 0xcae <fputc+0x46>
 c82:	46 81       	ldd	r20, Z+6	; 0x06
 c84:	57 81       	ldd	r21, Z+7	; 0x07
 c86:	24 81       	ldd	r18, Z+4	; 0x04
 c88:	35 81       	ldd	r19, Z+5	; 0x05
 c8a:	42 17       	cp	r20, r18
 c8c:	53 07       	cpc	r21, r19
 c8e:	44 f4       	brge	.+16     	; 0xca0 <fputc+0x38>
 c90:	a0 81       	ld	r26, Z
 c92:	b1 81       	ldd	r27, Z+1	; 0x01
 c94:	9d 01       	movw	r18, r26
 c96:	2f 5f       	subi	r18, 0xFF	; 255
 c98:	3f 4f       	sbci	r19, 0xFF	; 255
 c9a:	20 83       	st	Z, r18
 c9c:	31 83       	std	Z+1, r19	; 0x01
 c9e:	8c 93       	st	X, r24
 ca0:	26 81       	ldd	r18, Z+6	; 0x06
 ca2:	37 81       	ldd	r19, Z+7	; 0x07
 ca4:	2f 5f       	subi	r18, 0xFF	; 255
 ca6:	3f 4f       	sbci	r19, 0xFF	; 255
 ca8:	26 83       	std	Z+6, r18	; 0x06
 caa:	37 83       	std	Z+7, r19	; 0x07
 cac:	14 c0       	rjmp	.+40     	; 0xcd6 <fputc+0x6e>
 cae:	8b 01       	movw	r16, r22
 cb0:	ec 01       	movw	r28, r24
 cb2:	fb 01       	movw	r30, r22
 cb4:	00 84       	ldd	r0, Z+8	; 0x08
 cb6:	f1 85       	ldd	r31, Z+9	; 0x09
 cb8:	e0 2d       	mov	r30, r0
 cba:	09 95       	icall
 cbc:	89 2b       	or	r24, r25
 cbe:	e1 f6       	brne	.-72     	; 0xc78 <fputc+0x10>
 cc0:	d8 01       	movw	r26, r16
 cc2:	16 96       	adiw	r26, 0x06	; 6
 cc4:	8d 91       	ld	r24, X+
 cc6:	9c 91       	ld	r25, X
 cc8:	17 97       	sbiw	r26, 0x07	; 7
 cca:	01 96       	adiw	r24, 0x01	; 1
 ccc:	16 96       	adiw	r26, 0x06	; 6
 cce:	8d 93       	st	X+, r24
 cd0:	9c 93       	st	X, r25
 cd2:	17 97       	sbiw	r26, 0x07	; 7
 cd4:	ce 01       	movw	r24, r28
 cd6:	df 91       	pop	r29
 cd8:	cf 91       	pop	r28
 cda:	1f 91       	pop	r17
 cdc:	0f 91       	pop	r16
 cde:	08 95       	ret

00000ce0 <__ultoa_invert>:
 ce0:	fa 01       	movw	r30, r20
 ce2:	aa 27       	eor	r26, r26
 ce4:	28 30       	cpi	r18, 0x08	; 8
 ce6:	51 f1       	breq	.+84     	; 0xd3c <__ultoa_invert+0x5c>
 ce8:	20 31       	cpi	r18, 0x10	; 16
 cea:	81 f1       	breq	.+96     	; 0xd4c <__ultoa_invert+0x6c>
 cec:	e8 94       	clt
 cee:	6f 93       	push	r22
 cf0:	6e 7f       	andi	r22, 0xFE	; 254
 cf2:	6e 5f       	subi	r22, 0xFE	; 254
 cf4:	7f 4f       	sbci	r23, 0xFF	; 255
 cf6:	8f 4f       	sbci	r24, 0xFF	; 255
 cf8:	9f 4f       	sbci	r25, 0xFF	; 255
 cfa:	af 4f       	sbci	r26, 0xFF	; 255
 cfc:	b1 e0       	ldi	r27, 0x01	; 1
 cfe:	3e d0       	rcall	.+124    	; 0xd7c <__ultoa_invert+0x9c>
 d00:	b4 e0       	ldi	r27, 0x04	; 4
 d02:	3c d0       	rcall	.+120    	; 0xd7c <__ultoa_invert+0x9c>
 d04:	67 0f       	add	r22, r23
 d06:	78 1f       	adc	r23, r24
 d08:	89 1f       	adc	r24, r25
 d0a:	9a 1f       	adc	r25, r26
 d0c:	a1 1d       	adc	r26, r1
 d0e:	68 0f       	add	r22, r24
 d10:	79 1f       	adc	r23, r25
 d12:	8a 1f       	adc	r24, r26
 d14:	91 1d       	adc	r25, r1
 d16:	a1 1d       	adc	r26, r1
 d18:	6a 0f       	add	r22, r26
 d1a:	71 1d       	adc	r23, r1
 d1c:	81 1d       	adc	r24, r1
 d1e:	91 1d       	adc	r25, r1
 d20:	a1 1d       	adc	r26, r1
 d22:	20 d0       	rcall	.+64     	; 0xd64 <__ultoa_invert+0x84>
 d24:	09 f4       	brne	.+2      	; 0xd28 <__ultoa_invert+0x48>
 d26:	68 94       	set
 d28:	3f 91       	pop	r19
 d2a:	2a e0       	ldi	r18, 0x0A	; 10
 d2c:	26 9f       	mul	r18, r22
 d2e:	11 24       	eor	r1, r1
 d30:	30 19       	sub	r19, r0
 d32:	30 5d       	subi	r19, 0xD0	; 208
 d34:	31 93       	st	Z+, r19
 d36:	de f6       	brtc	.-74     	; 0xcee <__ultoa_invert+0xe>
 d38:	cf 01       	movw	r24, r30
 d3a:	08 95       	ret
 d3c:	46 2f       	mov	r20, r22
 d3e:	47 70       	andi	r20, 0x07	; 7
 d40:	40 5d       	subi	r20, 0xD0	; 208
 d42:	41 93       	st	Z+, r20
 d44:	b3 e0       	ldi	r27, 0x03	; 3
 d46:	0f d0       	rcall	.+30     	; 0xd66 <__ultoa_invert+0x86>
 d48:	c9 f7       	brne	.-14     	; 0xd3c <__ultoa_invert+0x5c>
 d4a:	f6 cf       	rjmp	.-20     	; 0xd38 <__ultoa_invert+0x58>
 d4c:	46 2f       	mov	r20, r22
 d4e:	4f 70       	andi	r20, 0x0F	; 15
 d50:	40 5d       	subi	r20, 0xD0	; 208
 d52:	4a 33       	cpi	r20, 0x3A	; 58
 d54:	18 f0       	brcs	.+6      	; 0xd5c <__ultoa_invert+0x7c>
 d56:	49 5d       	subi	r20, 0xD9	; 217
 d58:	31 fd       	sbrc	r19, 1
 d5a:	40 52       	subi	r20, 0x20	; 32
 d5c:	41 93       	st	Z+, r20
 d5e:	02 d0       	rcall	.+4      	; 0xd64 <__ultoa_invert+0x84>
 d60:	a9 f7       	brne	.-22     	; 0xd4c <__ultoa_invert+0x6c>
 d62:	ea cf       	rjmp	.-44     	; 0xd38 <__ultoa_invert+0x58>
 d64:	b4 e0       	ldi	r27, 0x04	; 4
 d66:	a6 95       	lsr	r26
 d68:	97 95       	ror	r25
 d6a:	87 95       	ror	r24
 d6c:	77 95       	ror	r23
 d6e:	67 95       	ror	r22
 d70:	ba 95       	dec	r27
 d72:	c9 f7       	brne	.-14     	; 0xd66 <__ultoa_invert+0x86>
 d74:	00 97       	sbiw	r24, 0x00	; 0
 d76:	61 05       	cpc	r22, r1
 d78:	71 05       	cpc	r23, r1
 d7a:	08 95       	ret
 d7c:	9b 01       	movw	r18, r22
 d7e:	ac 01       	movw	r20, r24
 d80:	0a 2e       	mov	r0, r26
 d82:	06 94       	lsr	r0
 d84:	57 95       	ror	r21
 d86:	47 95       	ror	r20
 d88:	37 95       	ror	r19
 d8a:	27 95       	ror	r18
 d8c:	ba 95       	dec	r27
 d8e:	c9 f7       	brne	.-14     	; 0xd82 <__ultoa_invert+0xa2>
 d90:	62 0f       	add	r22, r18
 d92:	73 1f       	adc	r23, r19
 d94:	84 1f       	adc	r24, r20
 d96:	95 1f       	adc	r25, r21
 d98:	a0 1d       	adc	r26, r0
 d9a:	08 95       	ret

00000d9c <_exit>:
 d9c:	f8 94       	cli

00000d9e <__stop_program>:
 d9e:	ff cf       	rjmp	.-2      	; 0xd9e <__stop_program>
