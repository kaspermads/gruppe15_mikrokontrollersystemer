
menysystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000946  00804000  00001700  00001794  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001700  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000218  00804946  00804946  000020da  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000020da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002138  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00002178  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005852  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003196  00000000  00000000  00007b02  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fbc  00000000  00000000  0000ac98  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000478  00000000  00000000  0000bc54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000036f0  00000000  00000000  0000c0cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010f0  00000000  00000000  0000f7bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  000108ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__ctors_end>
       4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
       8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
       c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      10:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      14:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      18:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      1c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      20:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      24:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      28:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      2c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      30:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      34:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      38:	0c 94 ba 03 	jmp	0x774	; 0x774 <__vector_14>
      3c:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <__vector_15>
      40:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      44:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      48:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      4c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      50:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      54:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      58:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      5c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      60:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      64:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      68:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      6c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      70:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      74:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      78:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      7c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      80:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      84:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      88:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      8c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      90:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      94:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      98:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      9c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      a0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      a4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      a8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      ac:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      b0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      b4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      b8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      bc:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      c0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      c4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      c8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      cc:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      d0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      d4:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <__vector_53>
      d8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      dc:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      e0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      e4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      e8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      ec:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      f0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      f4:	88 04       	cpc	r8, r8
      f6:	92 04       	cpc	r9, r2
      f8:	9c 04       	cpc	r9, r12
      fa:	a6 04       	cpc	r10, r6
      fc:	b0 04       	cpc	r11, r0
      fe:	b9 04       	cpc	r11, r9
     100:	c9 04       	cpc	r12, r9
     102:	d2 04       	cpc	r13, r2
     104:	e5 04       	cpc	r14, r5
     106:	ec 04       	cpc	r14, r12
     108:	f5 04       	cpc	r15, r5
     10a:	fe 04       	cpc	r15, r14

0000010c <__ctors_end>:
     10c:	11 24       	eor	r1, r1
     10e:	1f be       	out	0x3f, r1	; 63
     110:	cf ef       	ldi	r28, 0xFF	; 255
     112:	cd bf       	out	0x3d, r28	; 61
     114:	df e7       	ldi	r29, 0x7F	; 127
     116:	de bf       	out	0x3e, r29	; 62

00000118 <__do_copy_data>:
     118:	19 e4       	ldi	r17, 0x49	; 73
     11a:	a0 e0       	ldi	r26, 0x00	; 0
     11c:	b0 e4       	ldi	r27, 0x40	; 64
     11e:	e0 e0       	ldi	r30, 0x00	; 0
     120:	f7 e1       	ldi	r31, 0x17	; 23
     122:	00 e0       	ldi	r16, 0x00	; 0
     124:	0b bf       	out	0x3b, r16	; 59
     126:	02 c0       	rjmp	.+4      	; 0x12c <__do_copy_data+0x14>
     128:	07 90       	elpm	r0, Z+
     12a:	0d 92       	st	X+, r0
     12c:	a6 34       	cpi	r26, 0x46	; 70
     12e:	b1 07       	cpc	r27, r17
     130:	d9 f7       	brne	.-10     	; 0x128 <__do_copy_data+0x10>

00000132 <__do_clear_bss>:
     132:	2b e4       	ldi	r18, 0x4B	; 75
     134:	a6 e4       	ldi	r26, 0x46	; 70
     136:	b9 e4       	ldi	r27, 0x49	; 73
     138:	01 c0       	rjmp	.+2      	; 0x13c <.do_clear_bss_start>

0000013a <.do_clear_bss_loop>:
     13a:	1d 92       	st	X+, r1

0000013c <.do_clear_bss_start>:
     13c:	ae 35       	cpi	r26, 0x5E	; 94
     13e:	b2 07       	cpc	r27, r18
     140:	e1 f7       	brne	.-8      	; 0x13a <.do_clear_bss_loop>
     142:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <main>
     146:	0c 94 7e 0b 	jmp	0x16fc	; 0x16fc <_exit>

0000014a <__bad_interrupt>:
     14a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014e <TWI0_M_init>:
{
	for(size_t i = 0; i < strlen(str); i++)
	{
		USART3_sendChar(str[i]);
	}
}
     14e:	e0 e0       	ldi	r30, 0x00	; 0
     150:	f4 e0       	ldi	r31, 0x04	; 4
     152:	8c e0       	ldi	r24, 0x0C	; 12
     154:	81 83       	std	Z+1, r24	; 0x01
     156:	98 e0       	ldi	r25, 0x08	; 8
     158:	93 87       	std	Z+11, r25	; 0x0b
     15a:	84 87       	std	Z+12, r24	; 0x0c
     15c:	e0 e0       	ldi	r30, 0x00	; 0
     15e:	f9 e0       	ldi	r31, 0x09	; 9
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	83 83       	std	Z+3, r24	; 0x03
     164:	16 82       	std	Z+6, r1	; 0x06
     166:	85 83       	std	Z+5, r24	; 0x05
     168:	e0 e8       	ldi	r30, 0x80	; 128
     16a:	f4 e0       	ldi	r31, 0x04	; 4
     16c:	82 e0       	ldi	r24, 0x02	; 2
     16e:	81 83       	std	Z+1, r24	; 0x01
     170:	84 83       	std	Z+4, r24	; 0x04
     172:	08 95       	ret

00000174 <I2C0_M_start>:
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	88 0f       	add	r24, r24
     178:	99 1f       	adc	r25, r25
     17a:	86 2b       	or	r24, r22
     17c:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     180:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     184:	85 fd       	sbrc	r24, 5
     186:	0d c0       	rjmp	.+26     	; 0x1a2 <I2C0_M_start+0x2e>
     188:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     18c:	82 fd       	sbrc	r24, 2
     18e:	09 c0       	rjmp	.+18     	; 0x1a2 <I2C0_M_start+0x2e>
     190:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     194:	83 fd       	sbrc	r24, 3
     196:	05 c0       	rjmp	.+10     	; 0x1a2 <I2C0_M_start+0x2e>
     198:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     19c:	83 70       	andi	r24, 0x03	; 3
     19e:	83 30       	cpi	r24, 0x03	; 3
     1a0:	79 f7       	brne	.-34     	; 0x180 <I2C0_M_start+0xc>
     1a2:	08 95       	ret

000001a4 <I2C_M_write>:
     1a4:	cf 93       	push	r28
     1a6:	c6 2f       	mov	r28, r22
     1a8:	60 e0       	ldi	r22, 0x00	; 0
     1aa:	0e 94 ba 00 	call	0x174	; 0x174 <I2C0_M_start>
     1ae:	c0 93 08 09 	sts	0x0908, r28	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     1b2:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1b6:	85 fd       	sbrc	r24, 5
     1b8:	0d c0       	rjmp	.+26     	; 0x1d4 <I2C_M_write+0x30>
     1ba:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1be:	82 fd       	sbrc	r24, 2
     1c0:	09 c0       	rjmp	.+18     	; 0x1d4 <I2C_M_write+0x30>
     1c2:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c6:	83 fd       	sbrc	r24, 3
     1c8:	05 c0       	rjmp	.+10     	; 0x1d4 <I2C_M_write+0x30>
     1ca:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1ce:	83 70       	andi	r24, 0x03	; 3
     1d0:	83 30       	cpi	r24, 0x03	; 3
     1d2:	79 f7       	brne	.-34     	; 0x1b2 <I2C_M_write+0xe>
     1d4:	e0 e0       	ldi	r30, 0x00	; 0
     1d6:	f9 e0       	ldi	r31, 0x09	; 9
     1d8:	85 81       	ldd	r24, Z+5	; 0x05
     1da:	84 81       	ldd	r24, Z+4	; 0x04
     1dc:	83 60       	ori	r24, 0x03	; 3
     1de:	84 83       	std	Z+4, r24	; 0x04
     1e0:	cf 91       	pop	r28
     1e2:	08 95       	ret

000001e4 <AHT10_init>:
     1e4:	61 ee       	ldi	r22, 0xE1	; 225
     1e6:	88 e3       	ldi	r24, 0x38	; 56
     1e8:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <I2C_M_write>
     1ec:	2f e5       	ldi	r18, 0x5F	; 95
     1ee:	8a ee       	ldi	r24, 0xEA	; 234
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	21 50       	subi	r18, 0x01	; 1
     1f4:	80 40       	sbci	r24, 0x00	; 0
     1f6:	90 40       	sbci	r25, 0x00	; 0
     1f8:	e1 f7       	brne	.-8      	; 0x1f2 <AHT10_init+0xe>
     1fa:	00 c0       	rjmp	.+0      	; 0x1fc <AHT10_init+0x18>
     1fc:	00 00       	nop
     1fe:	6a eb       	ldi	r22, 0xBA	; 186
     200:	88 e3       	ldi	r24, 0x38	; 56
     202:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <I2C_M_write>
     206:	8f e1       	ldi	r24, 0x1F	; 31
     208:	9e e4       	ldi	r25, 0x4E	; 78
     20a:	01 97       	sbiw	r24, 0x01	; 1
     20c:	f1 f7       	brne	.-4      	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
     20e:	00 c0       	rjmp	.+0      	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
     210:	00 00       	nop
     212:	08 95       	ret

00000214 <autoRPMmode>:
     214:	cb 97       	sbiw	r24, 0x3b	; 59
     216:	bc 01       	movw	r22, r24
     218:	80 e0       	ldi	r24, 0x00	; 0
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	0e 94 12 07 	call	0xe24	; 0xe24 <__floatunsisf>
     220:	20 e0       	ldi	r18, 0x00	; 0
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	5f e3       	ldi	r21, 0x3F	; 63
     228:	0e 94 05 06 	call	0xc0a	; 0xc0a <__addsf3>
     22c:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <__fixunssfsi>
     230:	6e 31       	cpi	r22, 0x1E	; 30
     232:	18 f0       	brcs	.+6      	; 0x23a <autoRPMmode+0x26>
     234:	60 35       	cpi	r22, 0x50	; 80
     236:	18 f4       	brcc	.+6      	; 0x23e <autoRPMmode+0x2a>
     238:	03 c0       	rjmp	.+6      	; 0x240 <autoRPMmode+0x2c>
     23a:	6e e1       	ldi	r22, 0x1E	; 30
     23c:	01 c0       	rjmp	.+2      	; 0x240 <autoRPMmode+0x2c>
     23e:	6f e4       	ldi	r22, 0x4F	; 79
     240:	86 2f       	mov	r24, r22
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	08 95       	ret

00000246 <handleFansInAuto>:
     246:	80 91 ca 44 	lds	r24, 0x44CA	; 0x8044ca <fan1>
     24a:	90 91 cb 44 	lds	r25, 0x44CB	; 0x8044cb <fan1+0x1>
     24e:	02 97       	sbiw	r24, 0x02	; 2
     250:	41 f4       	brne	.+16     	; 0x262 <handleFansInAuto+0x1c>
     252:	80 91 d4 44 	lds	r24, 0x44D4	; 0x8044d4 <temperature>
     256:	90 91 d5 44 	lds	r25, 0x44D5	; 0x8044d5 <temperature+0x1>
     25a:	0e 94 0a 01 	call	0x214	; 0x214 <autoRPMmode>
     25e:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     262:	80 91 c6 44 	lds	r24, 0x44C6	; 0x8044c6 <fan2>
     266:	90 91 c7 44 	lds	r25, 0x44C7	; 0x8044c7 <fan2+0x1>
     26a:	02 97       	sbiw	r24, 0x02	; 2
     26c:	41 f4       	brne	.+16     	; 0x27e <handleFansInAuto+0x38>
     26e:	80 91 d4 44 	lds	r24, 0x44D4	; 0x8044d4 <temperature>
     272:	90 91 d5 44 	lds	r25, 0x44D5	; 0x8044d5 <temperature+0x1>
     276:	0e 94 0a 01 	call	0x214	; 0x214 <autoRPMmode>
     27a:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     27e:	80 91 c2 44 	lds	r24, 0x44C2	; 0x8044c2 <fan3>
     282:	90 91 c3 44 	lds	r25, 0x44C3	; 0x8044c3 <fan3+0x1>
     286:	02 97       	sbiw	r24, 0x02	; 2
     288:	41 f4       	brne	.+16     	; 0x29a <handleFansInAuto+0x54>
     28a:	80 91 d4 44 	lds	r24, 0x44D4	; 0x8044d4 <temperature>
     28e:	90 91 d5 44 	lds	r25, 0x44D5	; 0x8044d5 <temperature+0x1>
     292:	0e 94 0a 01 	call	0x214	; 0x214 <autoRPMmode>
     296:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     29a:	80 91 be 44 	lds	r24, 0x44BE	; 0x8044be <fan4>
     29e:	90 91 bf 44 	lds	r25, 0x44BF	; 0x8044bf <fan4+0x1>
     2a2:	02 97       	sbiw	r24, 0x02	; 2
     2a4:	41 f4       	brne	.+16     	; 0x2b6 <handleFansInAuto+0x70>
     2a6:	80 91 d4 44 	lds	r24, 0x44D4	; 0x8044d4 <temperature>
     2aa:	90 91 d5 44 	lds	r25, 0x44D5	; 0x8044d5 <temperature+0x1>
     2ae:	0e 94 0a 01 	call	0x214	; 0x214 <autoRPMmode>
     2b2:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     2b6:	08 95       	ret

000002b8 <printHomeScreen>:
     2b8:	8c e5       	ldi	r24, 0x5C	; 92
     2ba:	98 e4       	ldi	r25, 0x48	; 72
     2bc:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     2c0:	8c e5       	ldi	r24, 0x5C	; 92
     2c2:	98 e4       	ldi	r25, 0x48	; 72
     2c4:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     2c8:	8c e5       	ldi	r24, 0x5C	; 92
     2ca:	98 e4       	ldi	r25, 0x48	; 72
     2cc:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     2d0:	86 ed       	ldi	r24, 0xD6	; 214
     2d2:	94 e4       	ldi	r25, 0x44	; 68
     2d4:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     2d8:	83 ee       	ldi	r24, 0xE3	; 227
     2da:	94 e4       	ldi	r25, 0x44	; 68
     2dc:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     2e0:	8c e5       	ldi	r24, 0x5C	; 92
     2e2:	98 e4       	ldi	r25, 0x48	; 72
     2e4:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     2e8:	87 ef       	ldi	r24, 0xF7	; 247
     2ea:	94 e4       	ldi	r25, 0x44	; 68
     2ec:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     2f0:	08 95       	ret

000002f2 <fanOff>:
     2f2:	80 91 4b 49 	lds	r24, 0x494B	; 0x80494b <chosenFan>
     2f6:	80 ff       	sbrs	r24, 0
     2f8:	13 c0       	rjmp	.+38     	; 0x320 <fanOff+0x2e>
     2fa:	81 e0       	ldi	r24, 0x01	; 1
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	80 93 ca 44 	sts	0x44CA, r24	; 0x8044ca <fan1>
     302:	90 93 cb 44 	sts	0x44CB, r25	; 0x8044cb <fan1+0x1>
     306:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     30a:	8b e1       	ldi	r24, 0x1B	; 27
     30c:	95 e4       	ldi	r25, 0x45	; 69
     30e:	9f 93       	push	r25
     310:	8f 93       	push	r24
     312:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     316:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     31a:	0f 90       	pop	r0
     31c:	0f 90       	pop	r0
     31e:	08 95       	ret
     320:	81 ff       	sbrs	r24, 1
     322:	13 c0       	rjmp	.+38     	; 0x34a <fanOff+0x58>
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	80 93 c6 44 	sts	0x44C6, r24	; 0x8044c6 <fan2>
     32c:	90 93 c7 44 	sts	0x44C7, r25	; 0x8044c7 <fan2+0x1>
     330:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     334:	84 e3       	ldi	r24, 0x34	; 52
     336:	95 e4       	ldi	r25, 0x45	; 69
     338:	9f 93       	push	r25
     33a:	8f 93       	push	r24
     33c:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     340:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     344:	0f 90       	pop	r0
     346:	0f 90       	pop	r0
     348:	08 95       	ret
     34a:	82 ff       	sbrs	r24, 2
     34c:	13 c0       	rjmp	.+38     	; 0x374 <fanOff+0x82>
     34e:	81 e0       	ldi	r24, 0x01	; 1
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	80 93 c2 44 	sts	0x44C2, r24	; 0x8044c2 <fan3>
     356:	90 93 c3 44 	sts	0x44C3, r25	; 0x8044c3 <fan3+0x1>
     35a:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     35e:	8d e4       	ldi	r24, 0x4D	; 77
     360:	95 e4       	ldi	r25, 0x45	; 69
     362:	9f 93       	push	r25
     364:	8f 93       	push	r24
     366:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     36a:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	08 95       	ret
     374:	83 ff       	sbrs	r24, 3
     376:	12 c0       	rjmp	.+36     	; 0x39c <fanOff+0xaa>
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	80 93 be 44 	sts	0x44BE, r24	; 0x8044be <fan4>
     380:	90 93 bf 44 	sts	0x44BF, r25	; 0x8044bf <fan4+0x1>
     384:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     388:	86 e6       	ldi	r24, 0x66	; 102
     38a:	95 e4       	ldi	r25, 0x45	; 69
     38c:	9f 93       	push	r25
     38e:	8f 93       	push	r24
     390:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     394:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     398:	0f 90       	pop	r0
     39a:	0f 90       	pop	r0
     39c:	08 95       	ret

0000039e <fanAuto>:
     39e:	80 91 4b 49 	lds	r24, 0x494B	; 0x80494b <chosenFan>
     3a2:	80 ff       	sbrs	r24, 0
     3a4:	11 c0       	rjmp	.+34     	; 0x3c8 <fanAuto+0x2a>
     3a6:	82 e0       	ldi	r24, 0x02	; 2
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	80 93 ca 44 	sts	0x44CA, r24	; 0x8044ca <fan1>
     3ae:	90 93 cb 44 	sts	0x44CB, r25	; 0x8044cb <fan1+0x1>
     3b2:	8f e7       	ldi	r24, 0x7F	; 127
     3b4:	95 e4       	ldi	r25, 0x45	; 69
     3b6:	9f 93       	push	r25
     3b8:	8f 93       	push	r24
     3ba:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     3be:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     3c2:	0f 90       	pop	r0
     3c4:	0f 90       	pop	r0
     3c6:	08 95       	ret
     3c8:	81 ff       	sbrs	r24, 1
     3ca:	11 c0       	rjmp	.+34     	; 0x3ee <fanAuto+0x50>
     3cc:	82 e0       	ldi	r24, 0x02	; 2
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	80 93 c6 44 	sts	0x44C6, r24	; 0x8044c6 <fan2>
     3d4:	90 93 c7 44 	sts	0x44C7, r25	; 0x8044c7 <fan2+0x1>
     3d8:	89 e9       	ldi	r24, 0x99	; 153
     3da:	95 e4       	ldi	r25, 0x45	; 69
     3dc:	9f 93       	push	r25
     3de:	8f 93       	push	r24
     3e0:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     3e4:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     3e8:	0f 90       	pop	r0
     3ea:	0f 90       	pop	r0
     3ec:	08 95       	ret
     3ee:	82 ff       	sbrs	r24, 2
     3f0:	11 c0       	rjmp	.+34     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     3f2:	82 e0       	ldi	r24, 0x02	; 2
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	80 93 c2 44 	sts	0x44C2, r24	; 0x8044c2 <fan3>
     3fa:	90 93 c3 44 	sts	0x44C3, r25	; 0x8044c3 <fan3+0x1>
     3fe:	83 eb       	ldi	r24, 0xB3	; 179
     400:	95 e4       	ldi	r25, 0x45	; 69
     402:	9f 93       	push	r25
     404:	8f 93       	push	r24
     406:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     40a:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     40e:	0f 90       	pop	r0
     410:	0f 90       	pop	r0
     412:	08 95       	ret
     414:	83 ff       	sbrs	r24, 3
     416:	10 c0       	rjmp	.+32     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     418:	82 e0       	ldi	r24, 0x02	; 2
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	80 93 be 44 	sts	0x44BE, r24	; 0x8044be <fan4>
     420:	90 93 bf 44 	sts	0x44BF, r25	; 0x8044bf <fan4+0x1>
     424:	8d ec       	ldi	r24, 0xCD	; 205
     426:	95 e4       	ldi	r25, 0x45	; 69
     428:	9f 93       	push	r25
     42a:	8f 93       	push	r24
     42c:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     430:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     434:	0f 90       	pop	r0
     436:	0f 90       	pop	r0
     438:	08 95       	ret

0000043a <fanManual>:
     43a:	80 91 4b 49 	lds	r24, 0x494B	; 0x80494b <chosenFan>
     43e:	80 ff       	sbrs	r24, 0
     440:	0f c0       	rjmp	.+30     	; 0x460 <fanManual+0x26>
     442:	10 92 ca 44 	sts	0x44CA, r1	; 0x8044ca <fan1>
     446:	10 92 cb 44 	sts	0x44CB, r1	; 0x8044cb <fan1+0x1>
     44a:	80 91 50 49 	lds	r24, 0x4950	; 0x804950 <manual_rpm_value>
     44e:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     452:	87 ee       	ldi	r24, 0xE7	; 231
     454:	95 e4       	ldi	r25, 0x45	; 69
     456:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     45a:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     45e:	08 95       	ret
     460:	81 ff       	sbrs	r24, 1
     462:	13 c0       	rjmp	.+38     	; 0x48a <fanManual+0x50>
     464:	10 92 c6 44 	sts	0x44C6, r1	; 0x8044c6 <fan2>
     468:	10 92 c7 44 	sts	0x44C7, r1	; 0x8044c7 <fan2+0x1>
     46c:	80 91 50 49 	lds	r24, 0x4950	; 0x804950 <manual_rpm_value>
     470:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     474:	85 e0       	ldi	r24, 0x05	; 5
     476:	96 e4       	ldi	r25, 0x46	; 70
     478:	9f 93       	push	r25
     47a:	8f 93       	push	r24
     47c:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     480:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     484:	0f 90       	pop	r0
     486:	0f 90       	pop	r0
     488:	08 95       	ret
     48a:	82 ff       	sbrs	r24, 2
     48c:	13 c0       	rjmp	.+38     	; 0x4b4 <fanManual+0x7a>
     48e:	10 92 c2 44 	sts	0x44C2, r1	; 0x8044c2 <fan3>
     492:	10 92 c3 44 	sts	0x44C3, r1	; 0x8044c3 <fan3+0x1>
     496:	80 91 50 49 	lds	r24, 0x4950	; 0x804950 <manual_rpm_value>
     49a:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     49e:	81 e2       	ldi	r24, 0x21	; 33
     4a0:	96 e4       	ldi	r25, 0x46	; 70
     4a2:	9f 93       	push	r25
     4a4:	8f 93       	push	r24
     4a6:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     4aa:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     4ae:	0f 90       	pop	r0
     4b0:	0f 90       	pop	r0
     4b2:	08 95       	ret
     4b4:	83 ff       	sbrs	r24, 3
     4b6:	12 c0       	rjmp	.+36     	; 0x4dc <fanManual+0xa2>
     4b8:	10 92 be 44 	sts	0x44BE, r1	; 0x8044be <fan4>
     4bc:	10 92 bf 44 	sts	0x44BF, r1	; 0x8044bf <fan4+0x1>
     4c0:	80 91 50 49 	lds	r24, 0x4950	; 0x804950 <manual_rpm_value>
     4c4:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     4c8:	8d e3       	ldi	r24, 0x3D	; 61
     4ca:	96 e4       	ldi	r25, 0x46	; 70
     4cc:	9f 93       	push	r25
     4ce:	8f 93       	push	r24
     4d0:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     4d4:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     4d8:	0f 90       	pop	r0
     4da:	0f 90       	pop	r0
     4dc:	08 95       	ret

000004de <PrintSelectFanMode>:
     4de:	89 e5       	ldi	r24, 0x59	; 89
     4e0:	96 e4       	ldi	r25, 0x46	; 70
     4e2:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     4e6:	8c e5       	ldi	r24, 0x5C	; 92
     4e8:	98 e4       	ldi	r25, 0x48	; 72
     4ea:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     4ee:	8b e6       	ldi	r24, 0x6B	; 107
     4f0:	96 e4       	ldi	r25, 0x46	; 70
     4f2:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     4f6:	08 95       	ret

000004f8 <printOverview>:
     4f8:	cf 93       	push	r28
     4fa:	df 93       	push	r29
     4fc:	8c e8       	ldi	r24, 0x8C	; 140
     4fe:	96 e4       	ldi	r25, 0x46	; 70
     500:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     504:	8c e5       	ldi	r24, 0x5C	; 92
     506:	98 e4       	ldi	r25, 0x48	; 72
     508:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     50c:	ca ec       	ldi	r28, 0xCA	; 202
     50e:	d4 e4       	ldi	r29, 0x44	; 68
     510:	8b 81       	ldd	r24, Y+3	; 0x03
     512:	8f 93       	push	r24
     514:	8a 81       	ldd	r24, Y+2	; 0x02
     516:	8f 93       	push	r24
     518:	87 e9       	ldi	r24, 0x97	; 151
     51a:	96 e4       	ldi	r25, 0x46	; 70
     51c:	9f 93       	push	r25
     51e:	8f 93       	push	r24
     520:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     524:	e8 81       	ld	r30, Y
     526:	f9 81       	ldd	r31, Y+1	; 0x01
     528:	ee 0f       	add	r30, r30
     52a:	ff 1f       	adc	r31, r31
     52c:	e2 53       	subi	r30, 0x32	; 50
     52e:	fb 4b       	sbci	r31, 0xBB	; 187
     530:	81 81       	ldd	r24, Z+1	; 0x01
     532:	8f 93       	push	r24
     534:	80 81       	ld	r24, Z
     536:	8f 93       	push	r24
     538:	87 ea       	ldi	r24, 0xA7	; 167
     53a:	96 e4       	ldi	r25, 0x46	; 70
     53c:	9f 93       	push	r25
     53e:	8f 93       	push	r24
     540:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     544:	c6 ec       	ldi	r28, 0xC6	; 198
     546:	d4 e4       	ldi	r29, 0x44	; 68
     548:	8b 81       	ldd	r24, Y+3	; 0x03
     54a:	8f 93       	push	r24
     54c:	8a 81       	ldd	r24, Y+2	; 0x02
     54e:	8f 93       	push	r24
     550:	89 eb       	ldi	r24, 0xB9	; 185
     552:	96 e4       	ldi	r25, 0x46	; 70
     554:	9f 93       	push	r25
     556:	8f 93       	push	r24
     558:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     55c:	e8 81       	ld	r30, Y
     55e:	f9 81       	ldd	r31, Y+1	; 0x01
     560:	ee 0f       	add	r30, r30
     562:	ff 1f       	adc	r31, r31
     564:	e2 53       	subi	r30, 0x32	; 50
     566:	fb 4b       	sbci	r31, 0xBB	; 187
     568:	81 81       	ldd	r24, Z+1	; 0x01
     56a:	8f 93       	push	r24
     56c:	80 81       	ld	r24, Z
     56e:	8f 93       	push	r24
     570:	89 ec       	ldi	r24, 0xC9	; 201
     572:	96 e4       	ldi	r25, 0x46	; 70
     574:	9f 93       	push	r25
     576:	8f 93       	push	r24
     578:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     57c:	c2 ec       	ldi	r28, 0xC2	; 194
     57e:	d4 e4       	ldi	r29, 0x44	; 68
     580:	8b 81       	ldd	r24, Y+3	; 0x03
     582:	8f 93       	push	r24
     584:	8a 81       	ldd	r24, Y+2	; 0x02
     586:	8f 93       	push	r24
     588:	8b ed       	ldi	r24, 0xDB	; 219
     58a:	96 e4       	ldi	r25, 0x46	; 70
     58c:	9f 93       	push	r25
     58e:	8f 93       	push	r24
     590:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     594:	e8 81       	ld	r30, Y
     596:	f9 81       	ldd	r31, Y+1	; 0x01
     598:	ee 0f       	add	r30, r30
     59a:	ff 1f       	adc	r31, r31
     59c:	e2 53       	subi	r30, 0x32	; 50
     59e:	fb 4b       	sbci	r31, 0xBB	; 187
     5a0:	81 81       	ldd	r24, Z+1	; 0x01
     5a2:	8f 93       	push	r24
     5a4:	80 81       	ld	r24, Z
     5a6:	8f 93       	push	r24
     5a8:	8b ee       	ldi	r24, 0xEB	; 235
     5aa:	96 e4       	ldi	r25, 0x46	; 70
     5ac:	9f 93       	push	r25
     5ae:	8f 93       	push	r24
     5b0:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     5b4:	ce eb       	ldi	r28, 0xBE	; 190
     5b6:	d4 e4       	ldi	r29, 0x44	; 68
     5b8:	8b 81       	ldd	r24, Y+3	; 0x03
     5ba:	8f 93       	push	r24
     5bc:	8a 81       	ldd	r24, Y+2	; 0x02
     5be:	8f 93       	push	r24
     5c0:	8d ef       	ldi	r24, 0xFD	; 253
     5c2:	96 e4       	ldi	r25, 0x46	; 70
     5c4:	9f 93       	push	r25
     5c6:	8f 93       	push	r24
     5c8:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     5cc:	e8 81       	ld	r30, Y
     5ce:	f9 81       	ldd	r31, Y+1	; 0x01
     5d0:	ee 0f       	add	r30, r30
     5d2:	ff 1f       	adc	r31, r31
     5d4:	e2 53       	subi	r30, 0x32	; 50
     5d6:	fb 4b       	sbci	r31, 0xBB	; 187
     5d8:	81 81       	ldd	r24, Z+1	; 0x01
     5da:	8f 93       	push	r24
     5dc:	80 81       	ld	r24, Z
     5de:	8f 93       	push	r24
     5e0:	8d e0       	ldi	r24, 0x0D	; 13
     5e2:	97 e4       	ldi	r25, 0x47	; 71
     5e4:	9f 93       	push	r25
     5e6:	8f 93       	push	r24
     5e8:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     5ec:	8d b7       	in	r24, 0x3d	; 61
     5ee:	9e b7       	in	r25, 0x3e	; 62
     5f0:	80 96       	adiw	r24, 0x20	; 32
     5f2:	8d bf       	out	0x3d, r24	; 61
     5f4:	9e bf       	out	0x3e, r25	; 62
     5f6:	80 91 d5 44 	lds	r24, 0x44D5	; 0x8044d5 <temperature+0x1>
     5fa:	8f 93       	push	r24
     5fc:	80 91 d4 44 	lds	r24, 0x44D4	; 0x8044d4 <temperature>
     600:	8f 93       	push	r24
     602:	8f e1       	ldi	r24, 0x1F	; 31
     604:	97 e4       	ldi	r25, 0x47	; 71
     606:	9f 93       	push	r25
     608:	8f 93       	push	r24
     60a:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
     60e:	8c e5       	ldi	r24, 0x5C	; 92
     610:	98 e4       	ldi	r25, 0x48	; 72
     612:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     616:	8c e5       	ldi	r24, 0x5C	; 92
     618:	98 e4       	ldi	r25, 0x48	; 72
     61a:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     61e:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
     622:	0f 90       	pop	r0
     624:	0f 90       	pop	r0
     626:	0f 90       	pop	r0
     628:	0f 90       	pop	r0
     62a:	df 91       	pop	r29
     62c:	cf 91       	pop	r28
     62e:	08 95       	ret

00000630 <printSelectFan>:
     630:	81 e3       	ldi	r24, 0x31	; 49
     632:	97 e4       	ldi	r25, 0x47	; 71
     634:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     638:	8d e3       	ldi	r24, 0x3D	; 61
     63a:	97 e4       	ldi	r25, 0x47	; 71
     63c:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     640:	88 e5       	ldi	r24, 0x58	; 88
     642:	97 e4       	ldi	r25, 0x47	; 71
     644:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     648:	08 95       	ret

0000064a <compareCommands>:
     64a:	0f 93       	push	r16
     64c:	1f 93       	push	r17
     64e:	cf 93       	push	r28
     650:	8c 01       	movw	r16, r24
     652:	c0 e0       	ldi	r28, 0x00	; 0
     654:	0c c0       	rjmp	.+24     	; 0x66e <compareCommands+0x24>
     656:	84 e6       	ldi	r24, 0x64	; 100
     658:	c8 9f       	mul	r28, r24
     65a:	b0 01       	movw	r22, r0
     65c:	11 24       	eor	r1, r1
     65e:	62 5f       	subi	r22, 0xF2	; 242
     660:	7f 4b       	sbci	r23, 0xBF	; 191
     662:	c8 01       	movw	r24, r16
     664:	0e 94 75 08 	call	0x10ea	; 0x10ea <strcmp>
     668:	89 2b       	or	r24, r25
     66a:	29 f0       	breq	.+10     	; 0x676 <compareCommands+0x2c>
     66c:	cf 5f       	subi	r28, 0xFF	; 255
     66e:	cc 30       	cpi	r28, 0x0C	; 12
     670:	90 f3       	brcs	.-28     	; 0x656 <compareCommands+0xc>
     672:	8f ef       	ldi	r24, 0xFF	; 255
     674:	01 c0       	rjmp	.+2      	; 0x678 <compareCommands+0x2e>
     676:	8c 2f       	mov	r24, r28
     678:	cf 91       	pop	r28
     67a:	1f 91       	pop	r17
     67c:	0f 91       	pop	r16
     67e:	08 95       	ret

00000680 <USART3_sendChar>:
     680:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     684:	95 ff       	sbrs	r25, 5
     686:	fc cf       	rjmp	.-8      	; 0x680 <USART3_sendChar>
     688:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
     68c:	08 95       	ret

0000068e <USART3_printChar>:
     68e:	0e 94 40 03 	call	0x680	; 0x680 <USART3_sendChar>
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	08 95       	ret

00000698 <USART3_readChar>:


char USART3_readChar(void) //reading characters from Uart
{
     698:	cf 93       	push	r28
	while (!(USART3.STATUS & USART_RXCIF_bm))
     69a:	80 91 64 08 	lds	r24, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     69e:	88 23       	and	r24, r24
     6a0:	e4 f7       	brge	.-8      	; 0x69a <USART3_readChar+0x2>
	{
		;
	}
	//return USART3.RXDATAL;
	uint8_t src = USART3.RXDATAL ;
     6a2:	c0 91 60 08 	lds	r28, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7e0860>
	USART3_sendChar(src);
     6a6:	8c 2f       	mov	r24, r28
     6a8:	0e 94 40 03 	call	0x680	; 0x680 <USART3_sendChar>
	return src;
}
     6ac:	8c 2f       	mov	r24, r28
     6ae:	cf 91       	pop	r28
     6b0:	08 95       	ret

000006b2 <USART3_init>:

void USART3_init(void)
{
	
	PORTB.DIRSET = PIN0_bm ; //TX -pin as output
     6b2:	e0 e2       	ldi	r30, 0x20	; 32
     6b4:	f4 e0       	ldi	r31, 0x04	; 4
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRCLR = PIN1_bm ; //RX -pin as input
     6ba:	82 e0       	ldi	r24, 0x02	; 2
     6bc:	82 83       	std	Z+2, r24	; 0x02
	USART3.CTRLA |= (1 << USART_RXCIE_bp);
     6be:	e0 e6       	ldi	r30, 0x60	; 96
     6c0:	f8 e0       	ldi	r31, 0x08	; 8
     6c2:	85 81       	ldd	r24, Z+5	; 0x05
     6c4:	80 68       	ori	r24, 0x80	; 128
     6c6:	85 83       	std	Z+5, r24	; 0x05
	//PORTC.DIR &= ~PIN1_bm;
	//PORTC.DIR |= PIN0_bm;
	USART3.BAUD = (uint16_t)USART3_BAUD_RATE(9600);
     6c8:	83 e8       	ldi	r24, 0x83	; 131
     6ca:	96 e0       	ldi	r25, 0x06	; 6
     6cc:	80 87       	std	Z+8, r24	; 0x08
     6ce:	91 87       	std	Z+9, r25	; 0x09
	USART3.CTRLB |= USART_RXEN_bm | USART_TXEN_bm ; // Enable both TX and RX
     6d0:	86 81       	ldd	r24, Z+6	; 0x06
     6d2:	80 6c       	ori	r24, 0xC0	; 192
     6d4:	86 83       	std	Z+6, r24	; 0x06
	stdout = &USART_stream;
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	90 e4       	ldi	r25, 0x40	; 64
     6da:	80 93 5a 4b 	sts	0x4B5A, r24	; 0x804b5a <__iob+0x2>
     6de:	90 93 5b 4b 	sts	0x4B5B, r25	; 0x804b5b <__iob+0x3>
     6e2:	08 95       	ret

000006e4 <PORT_init>:


void PORT_init(void)
{
	// Setter PIN0 som output (PWM-out)
	PORTD.DIRSET = PIN0_bm | PIN1_bm | PIN4_bm | PIN3_bm;
     6e4:	8b e1       	ldi	r24, 0x1B	; 27
     6e6:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x7e0461>
     6ea:	08 95       	ret

000006ec <TCA0_init>:


void TCA0_init(void)
{
	//set waveform output on PORT D
	PORTMUX.TCAROUTEA = PORTMUX_TCA0_PORTD_gc;
     6ec:	83 e0       	ldi	r24, 0x03	; 3
     6ee:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
	
	// enable compare channel 0, 1 and set single-slope PWM mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_CMP0EN_bm | TCA_SINGLE_CMP1EN_bm | TCA_SINGLE_WGMODE_SINGLESLOPE_gc;
     6f2:	e0 e0       	ldi	r30, 0x00	; 0
     6f4:	fa e0       	ldi	r31, 0x0A	; 10
     6f6:	93 e3       	ldi	r25, 0x33	; 51
     6f8:	91 83       	std	Z+1, r25	; 0x01
	
	 // enable split mode
    TCA0.SPLIT.CTRLD = TCA_SPLIT_SPLITM_bm; 
     6fa:	21 e0       	ldi	r18, 0x01	; 1
     6fc:	23 83       	std	Z+3, r18	; 0x03
	
	// enable compare channel 0 for the higher byte, enable compare channel 0 for the lower byte
	TCA0.SPLIT.CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_LCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm | TCA_SPLIT_LCMP1EN_bm;    
     6fe:	91 83       	std	Z+1, r25	; 0x01
	
	
	// L0 = PIN0, L1=PIN1, H0=PIN3, H1=PIN4
	// set the PWM frequencies and duty cycles
    TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
     700:	9f e4       	ldi	r25, 0x4F	; 79
     702:	96 a3       	std	Z+38, r25	; 0x26
    TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MIN_VALUE;                           
     704:	10 a6       	std	Z+40, r1	; 0x28
    TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
     706:	97 a3       	std	Z+39, r25	; 0x27
    TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MIN_VALUE;
     708:	11 a6       	std	Z+41, r1	; 0x29
	
	//TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
    TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;                           
     70a:	12 a6       	std	Z+42, r1	; 0x2a
    //TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
    TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MIN_VALUE; 
     70c:	13 a6       	std	Z+43, r1	; 0x2b
	
	TCA0.SPLIT.CTRLA = TCA_SPLIT_CLKSEL_DIV2_gc | TCA_SPLIT_ENABLE_bm;   // set clock source (sys_clk/4), and start timer         
     70e:	80 83       	st	Z, r24
     710:	08 95       	ret

00000712 <TCB0_init>:
}


void TCB0_init(void)
{
	PORTB.DIR &= ~PIN4_bm;
     712:	e0 e2       	ldi	r30, 0x20	; 32
     714:	f4 e0       	ldi	r31, 0x04	; 4
     716:	80 81       	ld	r24, Z
     718:	8f 7e       	andi	r24, 0xEF	; 239
     71a:	80 83       	st	Z, r24
	PORTB.PIN4CTRL |= PORT_PULLUPEN_bm;
     71c:	84 89       	ldd	r24, Z+20	; 0x14
     71e:	88 60       	ori	r24, 0x08	; 8
     720:	84 8b       	std	Z+20, r24	; 0x14
	
	TCB0.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
     722:	e0 e0       	ldi	r30, 0x00	; 0
     724:	fb e0       	ldi	r31, 0x0B	; 11
     726:	85 e0       	ldi	r24, 0x05	; 5
     728:	80 83       	st	Z, r24
	TCB0.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
     72a:	84 e0       	ldi	r24, 0x04	; 4
     72c:	81 83       	std	Z+1, r24	; 0x01
	
	TCB0.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
     72e:	81 e0       	ldi	r24, 0x01	; 1
     730:	85 83       	std	Z+5, r24	; 0x05
	
	TCB0.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm ; // Capture event input enable
     732:	91 e4       	ldi	r25, 0x41	; 65
     734:	94 83       	std	Z+4, r25	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL0 = EVSYS_CHANNEL0_PORTB_PIN4_gc; //	input event channel 0, port b on pin 4
     736:	e0 e0       	ldi	r30, 0x00	; 0
     738:	f2 e0       	ldi	r31, 0x02	; 2
     73a:	9c e4       	ldi	r25, 0x4C	; 76
     73c:	90 8b       	std	Z+16, r25	; 0x10
	EVSYS.USERTCB0CAPT = EVSYS_USER_CHANNEL0_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
     73e:	86 af       	std	Z+62, r24	; 0x3e
     740:	08 95       	ret

00000742 <TCB1_init>:
}


void TCB1_init(void)
{
	PORTB.DIR &= ~PIN5_bm;
     742:	e0 e2       	ldi	r30, 0x20	; 32
     744:	f4 e0       	ldi	r31, 0x04	; 4
     746:	80 81       	ld	r24, Z
     748:	8f 7d       	andi	r24, 0xDF	; 223
     74a:	80 83       	st	Z, r24
	PORTB.PIN5CTRL |= PORT_PULLUPEN_bm;
     74c:	85 89       	ldd	r24, Z+21	; 0x15
     74e:	88 60       	ori	r24, 0x08	; 8
     750:	85 8b       	std	Z+21, r24	; 0x15
	
	
	TCB1.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
     752:	e0 e1       	ldi	r30, 0x10	; 16
     754:	fb e0       	ldi	r31, 0x0B	; 11
     756:	85 e0       	ldi	r24, 0x05	; 5
     758:	80 83       	st	Z, r24
	TCB1.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
     75a:	84 e0       	ldi	r24, 0x04	; 4
     75c:	81 83       	std	Z+1, r24	; 0x01
	
	TCB1.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	85 83       	std	Z+5, r24	; 0x05
	
	TCB1.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm ; // Capture event input enable
     762:	81 e4       	ldi	r24, 0x41	; 65
     764:	84 83       	std	Z+4, r24	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL1 = EVSYS_CHANNEL1_PORTB_PIN5_gc; //	input event channel 0, port b on pin 4
     766:	8d e4       	ldi	r24, 0x4D	; 77
     768:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <__TEXT_REGION_LENGTH__+0x7e0211>
	EVSYS.USERTCB1CAPT = EVSYS_USER_CHANNEL1_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
     76c:	82 e0       	ldi	r24, 0x02	; 2
     76e:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__TEXT_REGION_LENGTH__+0x7e0240>
     772:	08 95       	ret

00000774 <__vector_14>:
{
	read_commands();
}

ISR(TCB0_INT_vect)// starting interrupt for reading pwm from fan1
{
     774:	1f 92       	push	r1
     776:	0f 92       	push	r0
     778:	0f b6       	in	r0, 0x3f	; 63
     77a:	0f 92       	push	r0
     77c:	11 24       	eor	r1, r1
     77e:	0b b6       	in	r0, 0x3b	; 59
     780:	0f 92       	push	r0
     782:	2f 93       	push	r18
     784:	3f 93       	push	r19
     786:	8f 93       	push	r24
     788:	af 93       	push	r26
     78a:	bf 93       	push	r27
     78c:	ef 93       	push	r30
     78e:	ff 93       	push	r31
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     790:	a0 e0       	ldi	r26, 0x00	; 0
     792:	bb e0       	ldi	r27, 0x0B	; 11
     794:	81 e0       	ldi	r24, 0x01	; 1
     796:	16 96       	adiw	r26, 0x06	; 6
     798:	8c 93       	st	X, r24
     79a:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings1[pulseWidthIndex1] = TCB0.CCMP;
     79c:	80 91 48 49 	lds	r24, 0x4948	; 0x804948 <pulseWidthIndex1>
     7a0:	e8 2f       	mov	r30, r24
     7a2:	f0 e0       	ldi	r31, 0x00	; 0
     7a4:	1c 96       	adiw	r26, 0x0c	; 12
     7a6:	2d 91       	ld	r18, X+
     7a8:	3c 91       	ld	r19, X
     7aa:	1d 97       	sbiw	r26, 0x0d	; 13
     7ac:	ee 0f       	add	r30, r30
     7ae:	ff 1f       	adc	r31, r31
     7b0:	e0 57       	subi	r30, 0x70	; 112
     7b2:	f5 4b       	sbci	r31, 0xB5	; 181
     7b4:	20 83       	st	Z, r18
     7b6:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex1++;
     7b8:	8f 5f       	subi	r24, 0xFF	; 255
     7ba:	80 93 48 49 	sts	0x4948, r24	; 0x804948 <pulseWidthIndex1>
	if (pulseWidthIndex1 >= 100) {
     7be:	84 36       	cpi	r24, 0x64	; 100
     7c0:	10 f0       	brcs	.+4      	; 0x7c6 <__vector_14+0x52>
		pulseWidthIndex1 = 0; // Reset index when all readings are stored
     7c2:	10 92 48 49 	sts	0x4948, r1	; 0x804948 <pulseWidthIndex1>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     7c6:	ff 91       	pop	r31
     7c8:	ef 91       	pop	r30
     7ca:	bf 91       	pop	r27
     7cc:	af 91       	pop	r26
     7ce:	8f 91       	pop	r24
     7d0:	3f 91       	pop	r19
     7d2:	2f 91       	pop	r18
     7d4:	0f 90       	pop	r0
     7d6:	0b be       	out	0x3b, r0	; 59
     7d8:	0f 90       	pop	r0
     7da:	0f be       	out	0x3f, r0	; 63
     7dc:	0f 90       	pop	r0
     7de:	1f 90       	pop	r1
     7e0:	18 95       	reti

000007e2 <__vector_15>:


ISR(TCB1_INT_vect)// starting interrupt for reading pwm from fan1
{
     7e2:	1f 92       	push	r1
     7e4:	0f 92       	push	r0
     7e6:	0f b6       	in	r0, 0x3f	; 63
     7e8:	0f 92       	push	r0
     7ea:	11 24       	eor	r1, r1
     7ec:	0b b6       	in	r0, 0x3b	; 59
     7ee:	0f 92       	push	r0
     7f0:	2f 93       	push	r18
     7f2:	3f 93       	push	r19
     7f4:	8f 93       	push	r24
     7f6:	af 93       	push	r26
     7f8:	bf 93       	push	r27
     7fa:	ef 93       	push	r30
     7fc:	ff 93       	push	r31
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     7fe:	a0 e1       	ldi	r26, 0x10	; 16
     800:	bb e0       	ldi	r27, 0x0B	; 11
     802:	81 e0       	ldi	r24, 0x01	; 1
     804:	16 96       	adiw	r26, 0x06	; 6
     806:	8c 93       	st	X, r24
     808:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings2[pulseWidthIndex2] = TCB1.CCMP;
     80a:	80 91 47 49 	lds	r24, 0x4947	; 0x804947 <pulseWidthIndex2>
     80e:	e8 2f       	mov	r30, r24
     810:	f0 e0       	ldi	r31, 0x00	; 0
     812:	1c 96       	adiw	r26, 0x0c	; 12
     814:	2d 91       	ld	r18, X+
     816:	3c 91       	ld	r19, X
     818:	1d 97       	sbiw	r26, 0x0d	; 13
     81a:	ee 0f       	add	r30, r30
     81c:	ff 1f       	adc	r31, r31
     81e:	e8 53       	subi	r30, 0x38	; 56
     820:	f6 4b       	sbci	r31, 0xB6	; 182
     822:	20 83       	st	Z, r18
     824:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex2++;
     826:	8f 5f       	subi	r24, 0xFF	; 255
     828:	80 93 47 49 	sts	0x4947, r24	; 0x804947 <pulseWidthIndex2>
	if (pulseWidthIndex2 >= 100) {
     82c:	84 36       	cpi	r24, 0x64	; 100
     82e:	10 f0       	brcs	.+4      	; 0x834 <__vector_15+0x52>
		pulseWidthIndex2 = 0; // Reset index when all readings are stored
     830:	10 92 47 49 	sts	0x4947, r1	; 0x804947 <pulseWidthIndex2>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     834:	ff 91       	pop	r31
     836:	ef 91       	pop	r30
     838:	bf 91       	pop	r27
     83a:	af 91       	pop	r26
     83c:	8f 91       	pop	r24
     83e:	3f 91       	pop	r19
     840:	2f 91       	pop	r18
     842:	0f 90       	pop	r0
     844:	0b be       	out	0x3b, r0	; 59
     846:	0f 90       	pop	r0
     848:	0f be       	out	0x3f, r0	; 63
     84a:	0f 90       	pop	r0
     84c:	1f 90       	pop	r1
     84e:	18 95       	reti

00000850 <average>:
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
     850:	0f 93       	push	r16
     852:	1f 93       	push	r17
     854:	9c 01       	movw	r18, r24
     856:	06 2f       	mov	r16, r22
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     858:	90 e0       	ldi	r25, 0x00	; 0
	//readPulseWidth = TCB0.CCMP;
	
}
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	ba 01       	movw	r22, r20
	for (uint8_t i = 0; i < size; i++) {
     860:	0e c0       	rjmp	.+28     	; 0x87e <average+0x2e>
		sum += array[i];
     862:	e9 2f       	mov	r30, r25
     864:	f0 e0       	ldi	r31, 0x00	; 0
     866:	ee 0f       	add	r30, r30
     868:	ff 1f       	adc	r31, r31
     86a:	e2 0f       	add	r30, r18
     86c:	f3 1f       	adc	r31, r19
     86e:	01 90       	ld	r0, Z+
     870:	f0 81       	ld	r31, Z
     872:	e0 2d       	mov	r30, r0
     874:	4e 0f       	add	r20, r30
     876:	5f 1f       	adc	r21, r31
     878:	61 1d       	adc	r22, r1
     87a:	71 1d       	adc	r23, r1
	
}
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     87c:	9f 5f       	subi	r25, 0xFF	; 255
     87e:	90 17       	cp	r25, r16
     880:	80 f3       	brcs	.-32     	; 0x862 <average+0x12>
		sum += array[i];
	}
	return (uint16_t)(sum / size);
     882:	10 e0       	ldi	r17, 0x00	; 0
     884:	20 e0       	ldi	r18, 0x00	; 0
     886:	30 e0       	ldi	r19, 0x00	; 0
     888:	cb 01       	movw	r24, r22
     88a:	ba 01       	movw	r22, r20
     88c:	a9 01       	movw	r20, r18
     88e:	98 01       	movw	r18, r16
     890:	0e 94 0d 08 	call	0x101a	; 0x101a <__udivmodsi4>
}
     894:	c9 01       	movw	r24, r18
     896:	1f 91       	pop	r17
     898:	0f 91       	pop	r16
     89a:	08 95       	ret

0000089c <pwm_to_rpm1>:


uint16_t pwm_to_rpm1()
{
	uint16_t pulseWidthAverage1 = average(pulseWidthReadings1, 100);
     89c:	64 e6       	ldi	r22, 0x64	; 100
     89e:	80 e9       	ldi	r24, 0x90	; 144
     8a0:	9a e4       	ldi	r25, 0x4A	; 74
     8a2:	0e 94 28 04 	call	0x850	; 0x850 <average>
	uint32_t rpm1 = ((F_CPU*60)/(4*pulseWidthAverage1*2));
     8a6:	88 0f       	add	r24, r24
     8a8:	99 1f       	adc	r25, r25
     8aa:	88 0f       	add	r24, r24
     8ac:	99 1f       	adc	r25, r25
     8ae:	88 0f       	add	r24, r24
     8b0:	99 1f       	adc	r25, r25
     8b2:	9c 01       	movw	r18, r24
     8b4:	40 e0       	ldi	r20, 0x00	; 0
     8b6:	50 e0       	ldi	r21, 0x00	; 0
     8b8:	60 e0       	ldi	r22, 0x00	; 0
     8ba:	7c e1       	ldi	r23, 0x1C	; 28
     8bc:	8e e4       	ldi	r24, 0x4E	; 78
     8be:	9e e0       	ldi	r25, 0x0E	; 14
     8c0:	0e 94 2f 08 	call	0x105e	; 0x105e <__divmodsi4>
	return (uint16_t)rpm1;
	
}
     8c4:	c9 01       	movw	r24, r18
     8c6:	08 95       	ret

000008c8 <pwm_to_rpm2>:


uint16_t pwm_to_rpm2()
{
	uint16_t pulseWidthAverage2 = average(pulseWidthReadings2, 100);
     8c8:	64 e6       	ldi	r22, 0x64	; 100
     8ca:	88 ec       	ldi	r24, 0xC8	; 200
     8cc:	99 e4       	ldi	r25, 0x49	; 73
     8ce:	0e 94 28 04 	call	0x850	; 0x850 <average>
	uint32_t rpm2 = ((F_CPU*60)/(4*pulseWidthAverage2*2));
     8d2:	88 0f       	add	r24, r24
     8d4:	99 1f       	adc	r25, r25
     8d6:	88 0f       	add	r24, r24
     8d8:	99 1f       	adc	r25, r25
     8da:	88 0f       	add	r24, r24
     8dc:	99 1f       	adc	r25, r25
     8de:	9c 01       	movw	r18, r24
     8e0:	40 e0       	ldi	r20, 0x00	; 0
     8e2:	50 e0       	ldi	r21, 0x00	; 0
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	7c e1       	ldi	r23, 0x1C	; 28
     8e8:	8e e4       	ldi	r24, 0x4E	; 78
     8ea:	9e e0       	ldi	r25, 0x0E	; 14
     8ec:	0e 94 2f 08 	call	0x105e	; 0x105e <__divmodsi4>
	return (uint16_t)rpm2;
	
}
     8f0:	c9 01       	movw	r24, r18
     8f2:	08 95       	ret

000008f4 <executeCommand>:


	

void executeCommand(uint8_t command_number, char *command)
{
     8f4:	cf 93       	push	r28
     8f6:	df 93       	push	r29
     8f8:	9b 01       	movw	r18, r22
	
	
	switch ( command_number )
     8fa:	48 2f       	mov	r20, r24
     8fc:	50 e0       	ldi	r21, 0x00	; 0
     8fe:	4c 30       	cpi	r20, 0x0C	; 12
     900:	51 05       	cpc	r21, r1
     902:	08 f0       	brcs	.+2      	; 0x906 <executeCommand+0x12>
     904:	84 c0       	rjmp	.+264    	; 0xa0e <executeCommand+0x11a>
     906:	fa 01       	movw	r30, r20
     908:	e6 58       	subi	r30, 0x86	; 134
     90a:	ff 4f       	sbci	r31, 0xFF	; 255
     90c:	0c 94 4e 08 	jmp	0x109c	; 0x109c <__tablejump2__>
	{
		case 0:
		printf("Received command: fan1\r\n");
     910:	81 e8       	ldi	r24, 0x81	; 129
     912:	97 e4       	ldi	r25, 0x47	; 71
     914:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		PrintSelectFanMode();
     918:	0e 94 6f 02 	call	0x4de	; 0x4de <PrintSelectFanMode>
		chosenFan = FAN1_bm;
     91c:	81 e0       	ldi	r24, 0x01	; 1
     91e:	80 93 4b 49 	sts	0x494B, r24	; 0x80494b <chosenFan>
		break ;
     922:	f1 c0       	rjmp	.+482    	; 0xb06 <executeCommand+0x212>
		
		case 1:
		printf("Received command: fan2\r\n");
     924:	89 e9       	ldi	r24, 0x99	; 153
     926:	97 e4       	ldi	r25, 0x47	; 71
     928:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		PrintSelectFanMode();
     92c:	0e 94 6f 02 	call	0x4de	; 0x4de <PrintSelectFanMode>
		chosenFan = FAN2_bm;
     930:	82 e0       	ldi	r24, 0x02	; 2
     932:	80 93 4b 49 	sts	0x494B, r24	; 0x80494b <chosenFan>
		break ;
     936:	e7 c0       	rjmp	.+462    	; 0xb06 <executeCommand+0x212>
		
		case 2:
		printf("Received command: fan3\r\n");
     938:	81 eb       	ldi	r24, 0xB1	; 177
     93a:	97 e4       	ldi	r25, 0x47	; 71
     93c:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		PrintSelectFanMode();
     940:	0e 94 6f 02 	call	0x4de	; 0x4de <PrintSelectFanMode>
		chosenFan = FAN3_bm;
     944:	84 e0       	ldi	r24, 0x04	; 4
     946:	80 93 4b 49 	sts	0x494B, r24	; 0x80494b <chosenFan>
		break ;
     94a:	dd c0       	rjmp	.+442    	; 0xb06 <executeCommand+0x212>
		
		case 3:
		printf("Received command: fan4\r\n");
     94c:	89 ec       	ldi	r24, 0xC9	; 201
     94e:	97 e4       	ldi	r25, 0x47	; 71
     950:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		PrintSelectFanMode();
     954:	0e 94 6f 02 	call	0x4de	; 0x4de <PrintSelectFanMode>
		chosenFan = FAN4_bm;
     958:	88 e0       	ldi	r24, 0x08	; 8
     95a:	80 93 4b 49 	sts	0x494B, r24	; 0x80494b <chosenFan>
		break ;
     95e:	d3 c0       	rjmp	.+422    	; 0xb06 <executeCommand+0x212>
		
		case 4:
		printf("Received command: off\r\n");
     960:	81 ee       	ldi	r24, 0xE1	; 225
     962:	97 e4       	ldi	r25, 0x47	; 71
     964:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		chosenModeIsManual = 0;
     968:	10 92 b9 49 	sts	0x49B9, r1	; 0x8049b9 <chosenModeIsManual>
		fanOff();
     96c:	0e 94 79 01 	call	0x2f2	; 0x2f2 <fanOff>
		break ;
     970:	ca c0       	rjmp	.+404    	; 0xb06 <executeCommand+0x212>
		
		case 5:
		printf("Received command: manual\r\n");
     972:	88 ef       	ldi	r24, 0xF8	; 248
     974:	97 e4       	ldi	r25, 0x47	; 71
     976:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		printf("Type wanted rpm mode\r\n");
     97a:	82 e1       	ldi	r24, 0x12	; 18
     97c:	98 e4       	ldi	r25, 0x48	; 72
     97e:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		printf("Alternatives: low, medium, high or fan speed: 0-100 \r\n");
     982:	88 e2       	ldi	r24, 0x28	; 40
     984:	98 e4       	ldi	r25, 0x48	; 72
     986:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		chosenModeIsManual = 1;
     98a:	81 e0       	ldi	r24, 0x01	; 1
     98c:	80 93 b9 49 	sts	0x49B9, r24	; 0x8049b9 <chosenModeIsManual>
		break ;
     990:	ba c0       	rjmp	.+372    	; 0xb06 <executeCommand+0x212>
		
		case 6:
		printf("Received command: auto\r\n");
     992:	8e e5       	ldi	r24, 0x5E	; 94
     994:	98 e4       	ldi	r25, 0x48	; 72
     996:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		chosenModeIsManual = 0;
     99a:	10 92 b9 49 	sts	0x49B9, r1	; 0x8049b9 <chosenModeIsManual>
		fanAuto();
     99e:	0e 94 cf 01 	call	0x39e	; 0x39e <fanAuto>
		break ;
     9a2:	b1 c0       	rjmp	.+354    	; 0xb06 <executeCommand+0x212>
		
		case 7:
		printf("Received command: overview\r\n");
     9a4:	86 e7       	ldi	r24, 0x76	; 118
     9a6:	98 e4       	ldi	r25, 0x48	; 72
     9a8:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		fan1.rpm = pwm_to_rpm1();
     9ac:	0e 94 4e 04 	call	0x89c	; 0x89c <pwm_to_rpm1>
     9b0:	80 93 cc 44 	sts	0x44CC, r24	; 0x8044cc <fan1+0x2>
     9b4:	90 93 cd 44 	sts	0x44CD, r25	; 0x8044cd <fan1+0x3>
		fan2.rpm = pwm_to_rpm2();
     9b8:	0e 94 64 04 	call	0x8c8	; 0x8c8 <pwm_to_rpm2>
     9bc:	80 93 c8 44 	sts	0x44C8, r24	; 0x8044c8 <fan2+0x2>
     9c0:	90 93 c9 44 	sts	0x44C9, r25	; 0x8044c9 <fan2+0x3>
		printOverview();
     9c4:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <printOverview>
		break ;
     9c8:	9e c0       	rjmp	.+316    	; 0xb06 <executeCommand+0x212>
		
		case 8:
		printf("Received command: controller\r\n");
     9ca:	82 e9       	ldi	r24, 0x92	; 146
     9cc:	98 e4       	ldi	r25, 0x48	; 72
     9ce:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		printSelectFan();
     9d2:	0e 94 18 03 	call	0x630	; 0x630 <printSelectFan>
		break ;
     9d6:	97 c0       	rjmp	.+302    	; 0xb06 <executeCommand+0x212>
		
		case 9:
		manual_rpm_value = FAN_RPM_LOW; //LOW
     9d8:	83 e2       	ldi	r24, 0x23	; 35
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	80 93 50 49 	sts	0x4950, r24	; 0x804950 <manual_rpm_value>
     9e0:	90 93 51 49 	sts	0x4951, r25	; 0x804951 <manual_rpm_value+0x1>
		fanManual();
     9e4:	0e 94 1d 02 	call	0x43a	; 0x43a <fanManual>
		break ;
     9e8:	8e c0       	rjmp	.+284    	; 0xb06 <executeCommand+0x212>
		
		case 10:
		manual_rpm_value = FAN_RPM_MEDIUM; //MEDIUM
     9ea:	8c e3       	ldi	r24, 0x3C	; 60
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	80 93 50 49 	sts	0x4950, r24	; 0x804950 <manual_rpm_value>
     9f2:	90 93 51 49 	sts	0x4951, r25	; 0x804951 <manual_rpm_value+0x1>
		fanManual();
     9f6:	0e 94 1d 02 	call	0x43a	; 0x43a <fanManual>
		break ;
     9fa:	85 c0       	rjmp	.+266    	; 0xb06 <executeCommand+0x212>
		
		case 11:
		manual_rpm_value = FAN_RPM_HIGH; //HIGH
     9fc:	8f e4       	ldi	r24, 0x4F	; 79
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	80 93 50 49 	sts	0x4950, r24	; 0x804950 <manual_rpm_value>
     a04:	90 93 51 49 	sts	0x4951, r25	; 0x804951 <manual_rpm_value+0x1>
		fanManual();
     a08:	0e 94 1d 02 	call	0x43a	; 0x43a <fanManual>
		break ;
     a0c:	7c c0       	rjmp	.+248    	; 0xb06 <executeCommand+0x212>
		
		default :
		
		if(chosenModeIsManual)
     a0e:	90 91 b9 49 	lds	r25, 0x49B9	; 0x8049b9 <chosenModeIsManual>
     a12:	99 23       	and	r25, r25
     a14:	09 f4       	brne	.+2      	; 0xa18 <executeCommand+0x124>
     a16:	73 c0       	rjmp	.+230    	; 0xafe <executeCommand+0x20a>
		{
			switch (command_number)
     a18:	8a 30       	cpi	r24, 0x0A	; 10
     a1a:	89 f0       	breq	.+34     	; 0xa3e <executeCommand+0x14a>
     a1c:	8b 30       	cpi	r24, 0x0B	; 11
     a1e:	e1 f0       	breq	.+56     	; 0xa58 <executeCommand+0x164>
     a20:	89 30       	cpi	r24, 0x09	; 9
     a22:	39 f5       	brne	.+78     	; 0xa72 <executeCommand+0x17e>
			{
				case 9:
				
				printf("Received command: low\r\n");
     a24:	80 eb       	ldi	r24, 0xB0	; 176
     a26:	98 e4       	ldi	r25, 0x48	; 72
     a28:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
				manual_rpm_value = FAN_RPM_LOW; //LOW
     a2c:	83 e2       	ldi	r24, 0x23	; 35
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	80 93 50 49 	sts	0x4950, r24	; 0x804950 <manual_rpm_value>
     a34:	90 93 51 49 	sts	0x4951, r25	; 0x804951 <manual_rpm_value+0x1>
				fanManual();
     a38:	0e 94 1d 02 	call	0x43a	; 0x43a <fanManual>
				break;
     a3c:	64 c0       	rjmp	.+200    	; 0xb06 <executeCommand+0x212>
				
				case 10:
				
				printf("Received command: medium\r\n");
     a3e:	87 ec       	ldi	r24, 0xC7	; 199
     a40:	98 e4       	ldi	r25, 0x48	; 72
     a42:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
				manual_rpm_value = FAN_RPM_MEDIUM; //MEDIUM
     a46:	8c e3       	ldi	r24, 0x3C	; 60
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	80 93 50 49 	sts	0x4950, r24	; 0x804950 <manual_rpm_value>
     a4e:	90 93 51 49 	sts	0x4951, r25	; 0x804951 <manual_rpm_value+0x1>
				fanManual();
     a52:	0e 94 1d 02 	call	0x43a	; 0x43a <fanManual>
				break;
     a56:	57 c0       	rjmp	.+174    	; 0xb06 <executeCommand+0x212>
				
				case 11:
				
				printf("Received command: high\r\n");
     a58:	81 ee       	ldi	r24, 0xE1	; 225
     a5a:	98 e4       	ldi	r25, 0x48	; 72
     a5c:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
				manual_rpm_value = FAN_RPM_HIGH; //HIGH
     a60:	8f e4       	ldi	r24, 0x4F	; 79
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	80 93 50 49 	sts	0x4950, r24	; 0x804950 <manual_rpm_value>
     a68:	90 93 51 49 	sts	0x4951, r25	; 0x804951 <manual_rpm_value+0x1>
				fanManual();
     a6c:	0e 94 1d 02 	call	0x43a	; 0x43a <fanManual>
				break;
     a70:	4a c0       	rjmp	.+148    	; 0xb06 <executeCommand+0x212>
				
				default:
				
				duty_cycle_input = atoi(command);
     a72:	c9 01       	movw	r24, r18
     a74:	0e 94 57 08 	call	0x10ae	; 0x10ae <atoi>
     a78:	80 93 bd 49 	sts	0x49BD, r24	; 0x8049bd <duty_cycle_input>
     a7c:	90 93 be 49 	sts	0x49BE, r25	; 0x8049be <duty_cycle_input+0x1>
				printf("%d\r\n", duty_cycle_input);
     a80:	9f 93       	push	r25
     a82:	8f 93       	push	r24
     a84:	8c e2       	ldi	r24, 0x2C	; 44
     a86:	97 e4       	ldi	r25, 0x47	; 71
     a88:	9f 93       	push	r25
     a8a:	8f 93       	push	r24
     a8c:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
				if (duty_cycle_input >= 0 && duty_cycle_input <= 100)
     a90:	60 91 bd 49 	lds	r22, 0x49BD	; 0x8049bd <duty_cycle_input>
     a94:	70 91 be 49 	lds	r23, 0x49BE	; 0x8049be <duty_cycle_input+0x1>
     a98:	0f 90       	pop	r0
     a9a:	0f 90       	pop	r0
     a9c:	0f 90       	pop	r0
     a9e:	0f 90       	pop	r0
     aa0:	65 36       	cpi	r22, 0x65	; 101
     aa2:	71 05       	cpc	r23, r1
     aa4:	38 f5       	brcc	.+78     	; 0xaf4 <executeCommand+0x200>
				{
					uint16_t new_duty_cycle = (duty_cycle_input / 100.0) * FAN_RPM_HIGH;
     aa6:	80 e0       	ldi	r24, 0x00	; 0
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	0e 94 12 07 	call	0xe24	; 0xe24 <__floatunsisf>
     aae:	20 e0       	ldi	r18, 0x00	; 0
     ab0:	30 e0       	ldi	r19, 0x00	; 0
     ab2:	48 ec       	ldi	r20, 0xC8	; 200
     ab4:	52 e4       	ldi	r21, 0x42	; 66
     ab6:	0e 94 71 06 	call	0xce2	; 0xce2 <__divsf3>
     aba:	20 e0       	ldi	r18, 0x00	; 0
     abc:	30 e0       	ldi	r19, 0x00	; 0
     abe:	4e e9       	ldi	r20, 0x9E	; 158
     ac0:	52 e4       	ldi	r21, 0x42	; 66
     ac2:	0e 94 a0 07 	call	0xf40	; 0xf40 <__mulsf3>
     ac6:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <__fixunssfsi>
     aca:	d6 2f       	mov	r29, r22
     acc:	c7 2f       	mov	r28, r23
					printf("%d\r\n", new_duty_cycle);
     ace:	7f 93       	push	r23
     ad0:	6f 93       	push	r22
     ad2:	8c e2       	ldi	r24, 0x2C	; 44
     ad4:	97 e4       	ldi	r25, 0x47	; 71
     ad6:	9f 93       	push	r25
     ad8:	8f 93       	push	r24
     ada:	0e 94 86 08 	call	0x110c	; 0x110c <printf>
					// Set the duty cycle to the new value
					// Assuming TCA0_SPLIT_LCMP0 is where the duty cycle is set
					manual_rpm_value = new_duty_cycle;
     ade:	d0 93 50 49 	sts	0x4950, r29	; 0x804950 <manual_rpm_value>
     ae2:	c0 93 51 49 	sts	0x4951, r28	; 0x804951 <manual_rpm_value+0x1>
					fanManual();
     ae6:	0e 94 1d 02 	call	0x43a	; 0x43a <fanManual>
     aea:	0f 90       	pop	r0
     aec:	0f 90       	pop	r0
     aee:	0f 90       	pop	r0
     af0:	0f 90       	pop	r0
     af2:	09 c0       	rjmp	.+18     	; 0xb06 <executeCommand+0x212>
				}
				else
				{
					printf("Please insert a valid duty cycle (0-100)\r\n");
     af4:	89 ef       	ldi	r24, 0xF9	; 249
     af6:	98 e4       	ldi	r25, 0x48	; 72
     af8:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
     afc:	04 c0       	rjmp	.+8      	; 0xb06 <executeCommand+0x212>
				break;
				
				
			}
		}
		else printf("unknown command \r\n");
     afe:	83 e2       	ldi	r24, 0x23	; 35
     b00:	99 e4       	ldi	r25, 0x49	; 73
     b02:	0e 94 9a 08 	call	0x1134	; 0x1134 <puts>
		
	}

}
     b06:	df 91       	pop	r29
     b08:	cf 91       	pop	r28
     b0a:	08 95       	ret

00000b0c <read_commands>:




void read_commands() //Reads Uart when enter is pressed
{
     b0c:	cf 93       	push	r28
     b0e:	df 93       	push	r29
     b10:	cd b7       	in	r28, 0x3d	; 61
     b12:	de b7       	in	r29, 0x3e	; 62
     b14:	c4 56       	subi	r28, 0x64	; 100
     b16:	d1 09       	sbc	r29, r1
     b18:	cd bf       	out	0x3d, r28	; 61
     b1a:	de bf       	out	0x3e, r29	; 62
	char command[MAX_COMMAND_LEN];
	static uint8_t index = 0;
	char c = USART3_readChar();
     b1c:	0e 94 4c 03 	call	0x698	; 0x698 <USART3_readChar>
	
	if(c != '\n' && c != '\r' && index < MAX_COMMAND_LEN - 1)
     b20:	8a 30       	cpi	r24, 0x0A	; 10
     b22:	89 f0       	breq	.+34     	; 0xb46 <read_commands+0x3a>
     b24:	8d 30       	cpi	r24, 0x0D	; 13
     b26:	79 f0       	breq	.+30     	; 0xb46 <read_commands+0x3a>
     b28:	90 91 46 49 	lds	r25, 0x4946	; 0x804946 <__data_end>
     b2c:	93 36       	cpi	r25, 0x63	; 99
     b2e:	58 f4       	brcc	.+22     	; 0xb46 <read_commands+0x3a>
	{
		command[index++] = c;
     b30:	21 e0       	ldi	r18, 0x01	; 1
     b32:	29 0f       	add	r18, r25
     b34:	20 93 46 49 	sts	0x4946, r18	; 0x804946 <__data_end>
     b38:	e1 e0       	ldi	r30, 0x01	; 1
     b3a:	f0 e0       	ldi	r31, 0x00	; 0
     b3c:	ec 0f       	add	r30, r28
     b3e:	fd 1f       	adc	r31, r29
     b40:	e9 0f       	add	r30, r25
     b42:	f1 1d       	adc	r31, r1
     b44:	80 83       	st	Z, r24
		
	}
	
	if(c == '\r'|| c=='\n')
     b46:	8d 30       	cpi	r24, 0x0D	; 13
     b48:	11 f0       	breq	.+4      	; 0xb4e <read_commands+0x42>
     b4a:	8a 30       	cpi	r24, 0x0A	; 10
     b4c:	a1 f4       	brne	.+40     	; 0xb76 <read_commands+0x6a>
	{
		command[index] = '\0';
     b4e:	80 91 46 49 	lds	r24, 0x4946	; 0x804946 <__data_end>
     b52:	e1 e0       	ldi	r30, 0x01	; 1
     b54:	f0 e0       	ldi	r31, 0x00	; 0
     b56:	ec 0f       	add	r30, r28
     b58:	fd 1f       	adc	r31, r29
     b5a:	e8 0f       	add	r30, r24
     b5c:	f1 1d       	adc	r31, r1
     b5e:	10 82       	st	Z, r1
		index = 0;
     b60:	10 92 46 49 	sts	0x4946, r1	; 0x804946 <__data_end>
		//printf("test command1: %s\r\n",command);

		executeCommand(compareCommands(command), command); // executes actions based on command as an argument
     b64:	ce 01       	movw	r24, r28
     b66:	01 96       	adiw	r24, 0x01	; 1
     b68:	0e 94 25 03 	call	0x64a	; 0x64a <compareCommands>
     b6c:	be 01       	movw	r22, r28
     b6e:	6f 5f       	subi	r22, 0xFF	; 255
     b70:	7f 4f       	sbci	r23, 0xFF	; 255
     b72:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <executeCommand>
		
		
	}
}
     b76:	cc 59       	subi	r28, 0x9C	; 156
     b78:	df 4f       	sbci	r29, 0xFF	; 255
     b7a:	cd bf       	out	0x3d, r28	; 61
     b7c:	de bf       	out	0x3e, r29	; 62
     b7e:	df 91       	pop	r29
     b80:	cf 91       	pop	r28
     b82:	08 95       	ret

00000b84 <__vector_53>:
uint16_t rpm2;



ISR(USART3_RXC_vect)
{
     b84:	1f 92       	push	r1
     b86:	0f 92       	push	r0
     b88:	0f b6       	in	r0, 0x3f	; 63
     b8a:	0f 92       	push	r0
     b8c:	11 24       	eor	r1, r1
     b8e:	0b b6       	in	r0, 0x3b	; 59
     b90:	0f 92       	push	r0
     b92:	2f 93       	push	r18
     b94:	3f 93       	push	r19
     b96:	4f 93       	push	r20
     b98:	5f 93       	push	r21
     b9a:	6f 93       	push	r22
     b9c:	7f 93       	push	r23
     b9e:	8f 93       	push	r24
     ba0:	9f 93       	push	r25
     ba2:	af 93       	push	r26
     ba4:	bf 93       	push	r27
     ba6:	ef 93       	push	r30
     ba8:	ff 93       	push	r31
	read_commands();
     baa:	0e 94 86 05 	call	0xb0c	; 0xb0c <read_commands>
}
     bae:	ff 91       	pop	r31
     bb0:	ef 91       	pop	r30
     bb2:	bf 91       	pop	r27
     bb4:	af 91       	pop	r26
     bb6:	9f 91       	pop	r25
     bb8:	8f 91       	pop	r24
     bba:	7f 91       	pop	r23
     bbc:	6f 91       	pop	r22
     bbe:	5f 91       	pop	r21
     bc0:	4f 91       	pop	r20
     bc2:	3f 91       	pop	r19
     bc4:	2f 91       	pop	r18
     bc6:	0f 90       	pop	r0
     bc8:	0b be       	out	0x3b, r0	; 59
     bca:	0f 90       	pop	r0
     bcc:	0f be       	out	0x3f, r0	; 63
     bce:	0f 90       	pop	r0
     bd0:	1f 90       	pop	r1
     bd2:	18 95       	reti

00000bd4 <main>:


int main(void)
{
	
	USART3_init();
     bd4:	0e 94 59 03 	call	0x6b2	; 0x6b2 <USART3_init>
	sei(); // Enable Global Interrupts
     bd8:	78 94       	sei

	// PWM initialize
	PORT_init();
     bda:	0e 94 72 03 	call	0x6e4	; 0x6e4 <PORT_init>
	TCA0_init();
     bde:	0e 94 76 03 	call	0x6ec	; 0x6ec <TCA0_init>
	TCB0_init();
     be2:	0e 94 89 03 	call	0x712	; 0x712 <TCB0_init>
	TCB1_init();
     be6:	0e 94 a1 03 	call	0x742	; 0x742 <TCB1_init>
		
	// I2C initialize 

	TWI0_M_init();
     bea:	0e 94 a7 00 	call	0x14e	; 0x14e <TWI0_M_init>
	AHT10_init();
     bee:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <AHT10_init>
	
	
	
	printHomeScreen(); 
     bf2:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <printHomeScreen>
		//TCA0_SPLIT_LCMP0 = 60;

	
	while(1){
		
		handleFansInAuto(); //changes the rpm of the fans in mode auto based on temperature
     bf6:	0e 94 23 01 	call	0x246	; 0x246 <handleFansInAuto>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bfa:	8f e0       	ldi	r24, 0x0F	; 15
     bfc:	97 e2       	ldi	r25, 0x27	; 39
     bfe:	01 97       	sbiw	r24, 0x01	; 1
     c00:	f1 f7       	brne	.-4      	; 0xbfe <main+0x2a>
     c02:	00 c0       	rjmp	.+0      	; 0xc04 <main+0x30>
     c04:	00 00       	nop
     c06:	f7 cf       	rjmp	.-18     	; 0xbf6 <main+0x22>

00000c08 <__subsf3>:
     c08:	50 58       	subi	r21, 0x80	; 128

00000c0a <__addsf3>:
     c0a:	bb 27       	eor	r27, r27
     c0c:	aa 27       	eor	r26, r26
     c0e:	0e 94 1c 06 	call	0xc38	; 0xc38 <__addsf3x>
     c12:	0c 94 66 07 	jmp	0xecc	; 0xecc <__fp_round>
     c16:	0e 94 58 07 	call	0xeb0	; 0xeb0 <__fp_pscA>
     c1a:	38 f0       	brcs	.+14     	; 0xc2a <__addsf3+0x20>
     c1c:	0e 94 5f 07 	call	0xebe	; 0xebe <__fp_pscB>
     c20:	20 f0       	brcs	.+8      	; 0xc2a <__addsf3+0x20>
     c22:	39 f4       	brne	.+14     	; 0xc32 <__addsf3+0x28>
     c24:	9f 3f       	cpi	r25, 0xFF	; 255
     c26:	19 f4       	brne	.+6      	; 0xc2e <__addsf3+0x24>
     c28:	26 f4       	brtc	.+8      	; 0xc32 <__addsf3+0x28>
     c2a:	0c 94 55 07 	jmp	0xeaa	; 0xeaa <__fp_nan>
     c2e:	0e f4       	brtc	.+2      	; 0xc32 <__addsf3+0x28>
     c30:	e0 95       	com	r30
     c32:	e7 fb       	bst	r30, 7
     c34:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <__fp_inf>

00000c38 <__addsf3x>:
     c38:	e9 2f       	mov	r30, r25
     c3a:	0e 94 77 07 	call	0xeee	; 0xeee <__fp_split3>
     c3e:	58 f3       	brcs	.-42     	; 0xc16 <__addsf3+0xc>
     c40:	ba 17       	cp	r27, r26
     c42:	62 07       	cpc	r22, r18
     c44:	73 07       	cpc	r23, r19
     c46:	84 07       	cpc	r24, r20
     c48:	95 07       	cpc	r25, r21
     c4a:	20 f0       	brcs	.+8      	; 0xc54 <__addsf3x+0x1c>
     c4c:	79 f4       	brne	.+30     	; 0xc6c <__addsf3x+0x34>
     c4e:	a6 f5       	brtc	.+104    	; 0xcb8 <__addsf3x+0x80>
     c50:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_zero>
     c54:	0e f4       	brtc	.+2      	; 0xc58 <__addsf3x+0x20>
     c56:	e0 95       	com	r30
     c58:	0b 2e       	mov	r0, r27
     c5a:	ba 2f       	mov	r27, r26
     c5c:	a0 2d       	mov	r26, r0
     c5e:	0b 01       	movw	r0, r22
     c60:	b9 01       	movw	r22, r18
     c62:	90 01       	movw	r18, r0
     c64:	0c 01       	movw	r0, r24
     c66:	ca 01       	movw	r24, r20
     c68:	a0 01       	movw	r20, r0
     c6a:	11 24       	eor	r1, r1
     c6c:	ff 27       	eor	r31, r31
     c6e:	59 1b       	sub	r21, r25
     c70:	99 f0       	breq	.+38     	; 0xc98 <__addsf3x+0x60>
     c72:	59 3f       	cpi	r21, 0xF9	; 249
     c74:	50 f4       	brcc	.+20     	; 0xc8a <__addsf3x+0x52>
     c76:	50 3e       	cpi	r21, 0xE0	; 224
     c78:	68 f1       	brcs	.+90     	; 0xcd4 <__addsf3x+0x9c>
     c7a:	1a 16       	cp	r1, r26
     c7c:	f0 40       	sbci	r31, 0x00	; 0
     c7e:	a2 2f       	mov	r26, r18
     c80:	23 2f       	mov	r18, r19
     c82:	34 2f       	mov	r19, r20
     c84:	44 27       	eor	r20, r20
     c86:	58 5f       	subi	r21, 0xF8	; 248
     c88:	f3 cf       	rjmp	.-26     	; 0xc70 <__addsf3x+0x38>
     c8a:	46 95       	lsr	r20
     c8c:	37 95       	ror	r19
     c8e:	27 95       	ror	r18
     c90:	a7 95       	ror	r26
     c92:	f0 40       	sbci	r31, 0x00	; 0
     c94:	53 95       	inc	r21
     c96:	c9 f7       	brne	.-14     	; 0xc8a <__addsf3x+0x52>
     c98:	7e f4       	brtc	.+30     	; 0xcb8 <__addsf3x+0x80>
     c9a:	1f 16       	cp	r1, r31
     c9c:	ba 0b       	sbc	r27, r26
     c9e:	62 0b       	sbc	r22, r18
     ca0:	73 0b       	sbc	r23, r19
     ca2:	84 0b       	sbc	r24, r20
     ca4:	ba f0       	brmi	.+46     	; 0xcd4 <__addsf3x+0x9c>
     ca6:	91 50       	subi	r25, 0x01	; 1
     ca8:	a1 f0       	breq	.+40     	; 0xcd2 <__addsf3x+0x9a>
     caa:	ff 0f       	add	r31, r31
     cac:	bb 1f       	adc	r27, r27
     cae:	66 1f       	adc	r22, r22
     cb0:	77 1f       	adc	r23, r23
     cb2:	88 1f       	adc	r24, r24
     cb4:	c2 f7       	brpl	.-16     	; 0xca6 <__addsf3x+0x6e>
     cb6:	0e c0       	rjmp	.+28     	; 0xcd4 <__addsf3x+0x9c>
     cb8:	ba 0f       	add	r27, r26
     cba:	62 1f       	adc	r22, r18
     cbc:	73 1f       	adc	r23, r19
     cbe:	84 1f       	adc	r24, r20
     cc0:	48 f4       	brcc	.+18     	; 0xcd4 <__addsf3x+0x9c>
     cc2:	87 95       	ror	r24
     cc4:	77 95       	ror	r23
     cc6:	67 95       	ror	r22
     cc8:	b7 95       	ror	r27
     cca:	f7 95       	ror	r31
     ccc:	9e 3f       	cpi	r25, 0xFE	; 254
     cce:	08 f0       	brcs	.+2      	; 0xcd2 <__addsf3x+0x9a>
     cd0:	b0 cf       	rjmp	.-160    	; 0xc32 <__addsf3+0x28>
     cd2:	93 95       	inc	r25
     cd4:	88 0f       	add	r24, r24
     cd6:	08 f0       	brcs	.+2      	; 0xcda <__addsf3x+0xa2>
     cd8:	99 27       	eor	r25, r25
     cda:	ee 0f       	add	r30, r30
     cdc:	97 95       	ror	r25
     cde:	87 95       	ror	r24
     ce0:	08 95       	ret

00000ce2 <__divsf3>:
     ce2:	0e 94 85 06 	call	0xd0a	; 0xd0a <__divsf3x>
     ce6:	0c 94 66 07 	jmp	0xecc	; 0xecc <__fp_round>
     cea:	0e 94 5f 07 	call	0xebe	; 0xebe <__fp_pscB>
     cee:	58 f0       	brcs	.+22     	; 0xd06 <__divsf3+0x24>
     cf0:	0e 94 58 07 	call	0xeb0	; 0xeb0 <__fp_pscA>
     cf4:	40 f0       	brcs	.+16     	; 0xd06 <__divsf3+0x24>
     cf6:	29 f4       	brne	.+10     	; 0xd02 <__divsf3+0x20>
     cf8:	5f 3f       	cpi	r21, 0xFF	; 255
     cfa:	29 f0       	breq	.+10     	; 0xd06 <__divsf3+0x24>
     cfc:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <__fp_inf>
     d00:	51 11       	cpse	r21, r1
     d02:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <__fp_szero>
     d06:	0c 94 55 07 	jmp	0xeaa	; 0xeaa <__fp_nan>

00000d0a <__divsf3x>:
     d0a:	0e 94 77 07 	call	0xeee	; 0xeee <__fp_split3>
     d0e:	68 f3       	brcs	.-38     	; 0xcea <__divsf3+0x8>

00000d10 <__divsf3_pse>:
     d10:	99 23       	and	r25, r25
     d12:	b1 f3       	breq	.-20     	; 0xd00 <__divsf3+0x1e>
     d14:	55 23       	and	r21, r21
     d16:	91 f3       	breq	.-28     	; 0xcfc <__divsf3+0x1a>
     d18:	95 1b       	sub	r25, r21
     d1a:	55 0b       	sbc	r21, r21
     d1c:	bb 27       	eor	r27, r27
     d1e:	aa 27       	eor	r26, r26
     d20:	62 17       	cp	r22, r18
     d22:	73 07       	cpc	r23, r19
     d24:	84 07       	cpc	r24, r20
     d26:	38 f0       	brcs	.+14     	; 0xd36 <__divsf3_pse+0x26>
     d28:	9f 5f       	subi	r25, 0xFF	; 255
     d2a:	5f 4f       	sbci	r21, 0xFF	; 255
     d2c:	22 0f       	add	r18, r18
     d2e:	33 1f       	adc	r19, r19
     d30:	44 1f       	adc	r20, r20
     d32:	aa 1f       	adc	r26, r26
     d34:	a9 f3       	breq	.-22     	; 0xd20 <__divsf3_pse+0x10>
     d36:	35 d0       	rcall	.+106    	; 0xda2 <__divsf3_pse+0x92>
     d38:	0e 2e       	mov	r0, r30
     d3a:	3a f0       	brmi	.+14     	; 0xd4a <__divsf3_pse+0x3a>
     d3c:	e0 e8       	ldi	r30, 0x80	; 128
     d3e:	32 d0       	rcall	.+100    	; 0xda4 <__divsf3_pse+0x94>
     d40:	91 50       	subi	r25, 0x01	; 1
     d42:	50 40       	sbci	r21, 0x00	; 0
     d44:	e6 95       	lsr	r30
     d46:	00 1c       	adc	r0, r0
     d48:	ca f7       	brpl	.-14     	; 0xd3c <__divsf3_pse+0x2c>
     d4a:	2b d0       	rcall	.+86     	; 0xda2 <__divsf3_pse+0x92>
     d4c:	fe 2f       	mov	r31, r30
     d4e:	29 d0       	rcall	.+82     	; 0xda2 <__divsf3_pse+0x92>
     d50:	66 0f       	add	r22, r22
     d52:	77 1f       	adc	r23, r23
     d54:	88 1f       	adc	r24, r24
     d56:	bb 1f       	adc	r27, r27
     d58:	26 17       	cp	r18, r22
     d5a:	37 07       	cpc	r19, r23
     d5c:	48 07       	cpc	r20, r24
     d5e:	ab 07       	cpc	r26, r27
     d60:	b0 e8       	ldi	r27, 0x80	; 128
     d62:	09 f0       	breq	.+2      	; 0xd66 <__divsf3_pse+0x56>
     d64:	bb 0b       	sbc	r27, r27
     d66:	80 2d       	mov	r24, r0
     d68:	bf 01       	movw	r22, r30
     d6a:	ff 27       	eor	r31, r31
     d6c:	93 58       	subi	r25, 0x83	; 131
     d6e:	5f 4f       	sbci	r21, 0xFF	; 255
     d70:	3a f0       	brmi	.+14     	; 0xd80 <__divsf3_pse+0x70>
     d72:	9e 3f       	cpi	r25, 0xFE	; 254
     d74:	51 05       	cpc	r21, r1
     d76:	78 f0       	brcs	.+30     	; 0xd96 <__divsf3_pse+0x86>
     d78:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <__fp_inf>
     d7c:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <__fp_szero>
     d80:	5f 3f       	cpi	r21, 0xFF	; 255
     d82:	e4 f3       	brlt	.-8      	; 0xd7c <__divsf3_pse+0x6c>
     d84:	98 3e       	cpi	r25, 0xE8	; 232
     d86:	d4 f3       	brlt	.-12     	; 0xd7c <__divsf3_pse+0x6c>
     d88:	86 95       	lsr	r24
     d8a:	77 95       	ror	r23
     d8c:	67 95       	ror	r22
     d8e:	b7 95       	ror	r27
     d90:	f7 95       	ror	r31
     d92:	9f 5f       	subi	r25, 0xFF	; 255
     d94:	c9 f7       	brne	.-14     	; 0xd88 <__divsf3_pse+0x78>
     d96:	88 0f       	add	r24, r24
     d98:	91 1d       	adc	r25, r1
     d9a:	96 95       	lsr	r25
     d9c:	87 95       	ror	r24
     d9e:	97 f9       	bld	r25, 7
     da0:	08 95       	ret
     da2:	e1 e0       	ldi	r30, 0x01	; 1
     da4:	66 0f       	add	r22, r22
     da6:	77 1f       	adc	r23, r23
     da8:	88 1f       	adc	r24, r24
     daa:	bb 1f       	adc	r27, r27
     dac:	62 17       	cp	r22, r18
     dae:	73 07       	cpc	r23, r19
     db0:	84 07       	cpc	r24, r20
     db2:	ba 07       	cpc	r27, r26
     db4:	20 f0       	brcs	.+8      	; 0xdbe <__divsf3_pse+0xae>
     db6:	62 1b       	sub	r22, r18
     db8:	73 0b       	sbc	r23, r19
     dba:	84 0b       	sbc	r24, r20
     dbc:	ba 0b       	sbc	r27, r26
     dbe:	ee 1f       	adc	r30, r30
     dc0:	88 f7       	brcc	.-30     	; 0xda4 <__divsf3_pse+0x94>
     dc2:	e0 95       	com	r30
     dc4:	08 95       	ret

00000dc6 <__fixunssfsi>:
     dc6:	0e 94 7f 07 	call	0xefe	; 0xefe <__fp_splitA>
     dca:	88 f0       	brcs	.+34     	; 0xdee <__fixunssfsi+0x28>
     dcc:	9f 57       	subi	r25, 0x7F	; 127
     dce:	98 f0       	brcs	.+38     	; 0xdf6 <__fixunssfsi+0x30>
     dd0:	b9 2f       	mov	r27, r25
     dd2:	99 27       	eor	r25, r25
     dd4:	b7 51       	subi	r27, 0x17	; 23
     dd6:	b0 f0       	brcs	.+44     	; 0xe04 <__fixunssfsi+0x3e>
     dd8:	e1 f0       	breq	.+56     	; 0xe12 <__fixunssfsi+0x4c>
     dda:	66 0f       	add	r22, r22
     ddc:	77 1f       	adc	r23, r23
     dde:	88 1f       	adc	r24, r24
     de0:	99 1f       	adc	r25, r25
     de2:	1a f0       	brmi	.+6      	; 0xdea <__fixunssfsi+0x24>
     de4:	ba 95       	dec	r27
     de6:	c9 f7       	brne	.-14     	; 0xdda <__fixunssfsi+0x14>
     de8:	14 c0       	rjmp	.+40     	; 0xe12 <__fixunssfsi+0x4c>
     dea:	b1 30       	cpi	r27, 0x01	; 1
     dec:	91 f0       	breq	.+36     	; 0xe12 <__fixunssfsi+0x4c>
     dee:	0e 94 99 07 	call	0xf32	; 0xf32 <__fp_zero>
     df2:	b1 e0       	ldi	r27, 0x01	; 1
     df4:	08 95       	ret
     df6:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_zero>
     dfa:	67 2f       	mov	r22, r23
     dfc:	78 2f       	mov	r23, r24
     dfe:	88 27       	eor	r24, r24
     e00:	b8 5f       	subi	r27, 0xF8	; 248
     e02:	39 f0       	breq	.+14     	; 0xe12 <__fixunssfsi+0x4c>
     e04:	b9 3f       	cpi	r27, 0xF9	; 249
     e06:	cc f3       	brlt	.-14     	; 0xdfa <__fixunssfsi+0x34>
     e08:	86 95       	lsr	r24
     e0a:	77 95       	ror	r23
     e0c:	67 95       	ror	r22
     e0e:	b3 95       	inc	r27
     e10:	d9 f7       	brne	.-10     	; 0xe08 <__fixunssfsi+0x42>
     e12:	3e f4       	brtc	.+14     	; 0xe22 <__fixunssfsi+0x5c>
     e14:	90 95       	com	r25
     e16:	80 95       	com	r24
     e18:	70 95       	com	r23
     e1a:	61 95       	neg	r22
     e1c:	7f 4f       	sbci	r23, 0xFF	; 255
     e1e:	8f 4f       	sbci	r24, 0xFF	; 255
     e20:	9f 4f       	sbci	r25, 0xFF	; 255
     e22:	08 95       	ret

00000e24 <__floatunsisf>:
     e24:	e8 94       	clt
     e26:	09 c0       	rjmp	.+18     	; 0xe3a <__floatsisf+0x12>

00000e28 <__floatsisf>:
     e28:	97 fb       	bst	r25, 7
     e2a:	3e f4       	brtc	.+14     	; 0xe3a <__floatsisf+0x12>
     e2c:	90 95       	com	r25
     e2e:	80 95       	com	r24
     e30:	70 95       	com	r23
     e32:	61 95       	neg	r22
     e34:	7f 4f       	sbci	r23, 0xFF	; 255
     e36:	8f 4f       	sbci	r24, 0xFF	; 255
     e38:	9f 4f       	sbci	r25, 0xFF	; 255
     e3a:	99 23       	and	r25, r25
     e3c:	a9 f0       	breq	.+42     	; 0xe68 <__floatsisf+0x40>
     e3e:	f9 2f       	mov	r31, r25
     e40:	96 e9       	ldi	r25, 0x96	; 150
     e42:	bb 27       	eor	r27, r27
     e44:	93 95       	inc	r25
     e46:	f6 95       	lsr	r31
     e48:	87 95       	ror	r24
     e4a:	77 95       	ror	r23
     e4c:	67 95       	ror	r22
     e4e:	b7 95       	ror	r27
     e50:	f1 11       	cpse	r31, r1
     e52:	f8 cf       	rjmp	.-16     	; 0xe44 <__floatsisf+0x1c>
     e54:	fa f4       	brpl	.+62     	; 0xe94 <__floatsisf+0x6c>
     e56:	bb 0f       	add	r27, r27
     e58:	11 f4       	brne	.+4      	; 0xe5e <__floatsisf+0x36>
     e5a:	60 ff       	sbrs	r22, 0
     e5c:	1b c0       	rjmp	.+54     	; 0xe94 <__floatsisf+0x6c>
     e5e:	6f 5f       	subi	r22, 0xFF	; 255
     e60:	7f 4f       	sbci	r23, 0xFF	; 255
     e62:	8f 4f       	sbci	r24, 0xFF	; 255
     e64:	9f 4f       	sbci	r25, 0xFF	; 255
     e66:	16 c0       	rjmp	.+44     	; 0xe94 <__floatsisf+0x6c>
     e68:	88 23       	and	r24, r24
     e6a:	11 f0       	breq	.+4      	; 0xe70 <__floatsisf+0x48>
     e6c:	96 e9       	ldi	r25, 0x96	; 150
     e6e:	11 c0       	rjmp	.+34     	; 0xe92 <__floatsisf+0x6a>
     e70:	77 23       	and	r23, r23
     e72:	21 f0       	breq	.+8      	; 0xe7c <__floatsisf+0x54>
     e74:	9e e8       	ldi	r25, 0x8E	; 142
     e76:	87 2f       	mov	r24, r23
     e78:	76 2f       	mov	r23, r22
     e7a:	05 c0       	rjmp	.+10     	; 0xe86 <__floatsisf+0x5e>
     e7c:	66 23       	and	r22, r22
     e7e:	71 f0       	breq	.+28     	; 0xe9c <__floatsisf+0x74>
     e80:	96 e8       	ldi	r25, 0x86	; 134
     e82:	86 2f       	mov	r24, r22
     e84:	70 e0       	ldi	r23, 0x00	; 0
     e86:	60 e0       	ldi	r22, 0x00	; 0
     e88:	2a f0       	brmi	.+10     	; 0xe94 <__floatsisf+0x6c>
     e8a:	9a 95       	dec	r25
     e8c:	66 0f       	add	r22, r22
     e8e:	77 1f       	adc	r23, r23
     e90:	88 1f       	adc	r24, r24
     e92:	da f7       	brpl	.-10     	; 0xe8a <__floatsisf+0x62>
     e94:	88 0f       	add	r24, r24
     e96:	96 95       	lsr	r25
     e98:	87 95       	ror	r24
     e9a:	97 f9       	bld	r25, 7
     e9c:	08 95       	ret

00000e9e <__fp_inf>:
     e9e:	97 f9       	bld	r25, 7
     ea0:	9f 67       	ori	r25, 0x7F	; 127
     ea2:	80 e8       	ldi	r24, 0x80	; 128
     ea4:	70 e0       	ldi	r23, 0x00	; 0
     ea6:	60 e0       	ldi	r22, 0x00	; 0
     ea8:	08 95       	ret

00000eaa <__fp_nan>:
     eaa:	9f ef       	ldi	r25, 0xFF	; 255
     eac:	80 ec       	ldi	r24, 0xC0	; 192
     eae:	08 95       	ret

00000eb0 <__fp_pscA>:
     eb0:	00 24       	eor	r0, r0
     eb2:	0a 94       	dec	r0
     eb4:	16 16       	cp	r1, r22
     eb6:	17 06       	cpc	r1, r23
     eb8:	18 06       	cpc	r1, r24
     eba:	09 06       	cpc	r0, r25
     ebc:	08 95       	ret

00000ebe <__fp_pscB>:
     ebe:	00 24       	eor	r0, r0
     ec0:	0a 94       	dec	r0
     ec2:	12 16       	cp	r1, r18
     ec4:	13 06       	cpc	r1, r19
     ec6:	14 06       	cpc	r1, r20
     ec8:	05 06       	cpc	r0, r21
     eca:	08 95       	ret

00000ecc <__fp_round>:
     ecc:	09 2e       	mov	r0, r25
     ece:	03 94       	inc	r0
     ed0:	00 0c       	add	r0, r0
     ed2:	11 f4       	brne	.+4      	; 0xed8 <__fp_round+0xc>
     ed4:	88 23       	and	r24, r24
     ed6:	52 f0       	brmi	.+20     	; 0xeec <__fp_round+0x20>
     ed8:	bb 0f       	add	r27, r27
     eda:	40 f4       	brcc	.+16     	; 0xeec <__fp_round+0x20>
     edc:	bf 2b       	or	r27, r31
     ede:	11 f4       	brne	.+4      	; 0xee4 <__fp_round+0x18>
     ee0:	60 ff       	sbrs	r22, 0
     ee2:	04 c0       	rjmp	.+8      	; 0xeec <__fp_round+0x20>
     ee4:	6f 5f       	subi	r22, 0xFF	; 255
     ee6:	7f 4f       	sbci	r23, 0xFF	; 255
     ee8:	8f 4f       	sbci	r24, 0xFF	; 255
     eea:	9f 4f       	sbci	r25, 0xFF	; 255
     eec:	08 95       	ret

00000eee <__fp_split3>:
     eee:	57 fd       	sbrc	r21, 7
     ef0:	90 58       	subi	r25, 0x80	; 128
     ef2:	44 0f       	add	r20, r20
     ef4:	55 1f       	adc	r21, r21
     ef6:	59 f0       	breq	.+22     	; 0xf0e <__fp_splitA+0x10>
     ef8:	5f 3f       	cpi	r21, 0xFF	; 255
     efa:	71 f0       	breq	.+28     	; 0xf18 <__fp_splitA+0x1a>
     efc:	47 95       	ror	r20

00000efe <__fp_splitA>:
     efe:	88 0f       	add	r24, r24
     f00:	97 fb       	bst	r25, 7
     f02:	99 1f       	adc	r25, r25
     f04:	61 f0       	breq	.+24     	; 0xf1e <__fp_splitA+0x20>
     f06:	9f 3f       	cpi	r25, 0xFF	; 255
     f08:	79 f0       	breq	.+30     	; 0xf28 <__fp_splitA+0x2a>
     f0a:	87 95       	ror	r24
     f0c:	08 95       	ret
     f0e:	12 16       	cp	r1, r18
     f10:	13 06       	cpc	r1, r19
     f12:	14 06       	cpc	r1, r20
     f14:	55 1f       	adc	r21, r21
     f16:	f2 cf       	rjmp	.-28     	; 0xefc <__fp_split3+0xe>
     f18:	46 95       	lsr	r20
     f1a:	f1 df       	rcall	.-30     	; 0xefe <__fp_splitA>
     f1c:	08 c0       	rjmp	.+16     	; 0xf2e <__fp_splitA+0x30>
     f1e:	16 16       	cp	r1, r22
     f20:	17 06       	cpc	r1, r23
     f22:	18 06       	cpc	r1, r24
     f24:	99 1f       	adc	r25, r25
     f26:	f1 cf       	rjmp	.-30     	; 0xf0a <__fp_splitA+0xc>
     f28:	86 95       	lsr	r24
     f2a:	71 05       	cpc	r23, r1
     f2c:	61 05       	cpc	r22, r1
     f2e:	08 94       	sec
     f30:	08 95       	ret

00000f32 <__fp_zero>:
     f32:	e8 94       	clt

00000f34 <__fp_szero>:
     f34:	bb 27       	eor	r27, r27
     f36:	66 27       	eor	r22, r22
     f38:	77 27       	eor	r23, r23
     f3a:	cb 01       	movw	r24, r22
     f3c:	97 f9       	bld	r25, 7
     f3e:	08 95       	ret

00000f40 <__mulsf3>:
     f40:	0e 94 b3 07 	call	0xf66	; 0xf66 <__mulsf3x>
     f44:	0c 94 66 07 	jmp	0xecc	; 0xecc <__fp_round>
     f48:	0e 94 58 07 	call	0xeb0	; 0xeb0 <__fp_pscA>
     f4c:	38 f0       	brcs	.+14     	; 0xf5c <__mulsf3+0x1c>
     f4e:	0e 94 5f 07 	call	0xebe	; 0xebe <__fp_pscB>
     f52:	20 f0       	brcs	.+8      	; 0xf5c <__mulsf3+0x1c>
     f54:	95 23       	and	r25, r21
     f56:	11 f0       	breq	.+4      	; 0xf5c <__mulsf3+0x1c>
     f58:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <__fp_inf>
     f5c:	0c 94 55 07 	jmp	0xeaa	; 0xeaa <__fp_nan>
     f60:	11 24       	eor	r1, r1
     f62:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <__fp_szero>

00000f66 <__mulsf3x>:
     f66:	0e 94 77 07 	call	0xeee	; 0xeee <__fp_split3>
     f6a:	70 f3       	brcs	.-36     	; 0xf48 <__mulsf3+0x8>

00000f6c <__mulsf3_pse>:
     f6c:	95 9f       	mul	r25, r21
     f6e:	c1 f3       	breq	.-16     	; 0xf60 <__mulsf3+0x20>
     f70:	95 0f       	add	r25, r21
     f72:	50 e0       	ldi	r21, 0x00	; 0
     f74:	55 1f       	adc	r21, r21
     f76:	62 9f       	mul	r22, r18
     f78:	f0 01       	movw	r30, r0
     f7a:	72 9f       	mul	r23, r18
     f7c:	bb 27       	eor	r27, r27
     f7e:	f0 0d       	add	r31, r0
     f80:	b1 1d       	adc	r27, r1
     f82:	63 9f       	mul	r22, r19
     f84:	aa 27       	eor	r26, r26
     f86:	f0 0d       	add	r31, r0
     f88:	b1 1d       	adc	r27, r1
     f8a:	aa 1f       	adc	r26, r26
     f8c:	64 9f       	mul	r22, r20
     f8e:	66 27       	eor	r22, r22
     f90:	b0 0d       	add	r27, r0
     f92:	a1 1d       	adc	r26, r1
     f94:	66 1f       	adc	r22, r22
     f96:	82 9f       	mul	r24, r18
     f98:	22 27       	eor	r18, r18
     f9a:	b0 0d       	add	r27, r0
     f9c:	a1 1d       	adc	r26, r1
     f9e:	62 1f       	adc	r22, r18
     fa0:	73 9f       	mul	r23, r19
     fa2:	b0 0d       	add	r27, r0
     fa4:	a1 1d       	adc	r26, r1
     fa6:	62 1f       	adc	r22, r18
     fa8:	83 9f       	mul	r24, r19
     faa:	a0 0d       	add	r26, r0
     fac:	61 1d       	adc	r22, r1
     fae:	22 1f       	adc	r18, r18
     fb0:	74 9f       	mul	r23, r20
     fb2:	33 27       	eor	r19, r19
     fb4:	a0 0d       	add	r26, r0
     fb6:	61 1d       	adc	r22, r1
     fb8:	23 1f       	adc	r18, r19
     fba:	84 9f       	mul	r24, r20
     fbc:	60 0d       	add	r22, r0
     fbe:	21 1d       	adc	r18, r1
     fc0:	82 2f       	mov	r24, r18
     fc2:	76 2f       	mov	r23, r22
     fc4:	6a 2f       	mov	r22, r26
     fc6:	11 24       	eor	r1, r1
     fc8:	9f 57       	subi	r25, 0x7F	; 127
     fca:	50 40       	sbci	r21, 0x00	; 0
     fcc:	9a f0       	brmi	.+38     	; 0xff4 <__mulsf3_pse+0x88>
     fce:	f1 f0       	breq	.+60     	; 0x100c <__mulsf3_pse+0xa0>
     fd0:	88 23       	and	r24, r24
     fd2:	4a f0       	brmi	.+18     	; 0xfe6 <__mulsf3_pse+0x7a>
     fd4:	ee 0f       	add	r30, r30
     fd6:	ff 1f       	adc	r31, r31
     fd8:	bb 1f       	adc	r27, r27
     fda:	66 1f       	adc	r22, r22
     fdc:	77 1f       	adc	r23, r23
     fde:	88 1f       	adc	r24, r24
     fe0:	91 50       	subi	r25, 0x01	; 1
     fe2:	50 40       	sbci	r21, 0x00	; 0
     fe4:	a9 f7       	brne	.-22     	; 0xfd0 <__mulsf3_pse+0x64>
     fe6:	9e 3f       	cpi	r25, 0xFE	; 254
     fe8:	51 05       	cpc	r21, r1
     fea:	80 f0       	brcs	.+32     	; 0x100c <__mulsf3_pse+0xa0>
     fec:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <__fp_inf>
     ff0:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <__fp_szero>
     ff4:	5f 3f       	cpi	r21, 0xFF	; 255
     ff6:	e4 f3       	brlt	.-8      	; 0xff0 <__mulsf3_pse+0x84>
     ff8:	98 3e       	cpi	r25, 0xE8	; 232
     ffa:	d4 f3       	brlt	.-12     	; 0xff0 <__mulsf3_pse+0x84>
     ffc:	86 95       	lsr	r24
     ffe:	77 95       	ror	r23
    1000:	67 95       	ror	r22
    1002:	b7 95       	ror	r27
    1004:	f7 95       	ror	r31
    1006:	e7 95       	ror	r30
    1008:	9f 5f       	subi	r25, 0xFF	; 255
    100a:	c1 f7       	brne	.-16     	; 0xffc <__mulsf3_pse+0x90>
    100c:	fe 2b       	or	r31, r30
    100e:	88 0f       	add	r24, r24
    1010:	91 1d       	adc	r25, r1
    1012:	96 95       	lsr	r25
    1014:	87 95       	ror	r24
    1016:	97 f9       	bld	r25, 7
    1018:	08 95       	ret

0000101a <__udivmodsi4>:
    101a:	a1 e2       	ldi	r26, 0x21	; 33
    101c:	1a 2e       	mov	r1, r26
    101e:	aa 1b       	sub	r26, r26
    1020:	bb 1b       	sub	r27, r27
    1022:	fd 01       	movw	r30, r26
    1024:	0d c0       	rjmp	.+26     	; 0x1040 <__udivmodsi4_ep>

00001026 <__udivmodsi4_loop>:
    1026:	aa 1f       	adc	r26, r26
    1028:	bb 1f       	adc	r27, r27
    102a:	ee 1f       	adc	r30, r30
    102c:	ff 1f       	adc	r31, r31
    102e:	a2 17       	cp	r26, r18
    1030:	b3 07       	cpc	r27, r19
    1032:	e4 07       	cpc	r30, r20
    1034:	f5 07       	cpc	r31, r21
    1036:	20 f0       	brcs	.+8      	; 0x1040 <__udivmodsi4_ep>
    1038:	a2 1b       	sub	r26, r18
    103a:	b3 0b       	sbc	r27, r19
    103c:	e4 0b       	sbc	r30, r20
    103e:	f5 0b       	sbc	r31, r21

00001040 <__udivmodsi4_ep>:
    1040:	66 1f       	adc	r22, r22
    1042:	77 1f       	adc	r23, r23
    1044:	88 1f       	adc	r24, r24
    1046:	99 1f       	adc	r25, r25
    1048:	1a 94       	dec	r1
    104a:	69 f7       	brne	.-38     	; 0x1026 <__udivmodsi4_loop>
    104c:	60 95       	com	r22
    104e:	70 95       	com	r23
    1050:	80 95       	com	r24
    1052:	90 95       	com	r25
    1054:	9b 01       	movw	r18, r22
    1056:	ac 01       	movw	r20, r24
    1058:	bd 01       	movw	r22, r26
    105a:	cf 01       	movw	r24, r30
    105c:	08 95       	ret

0000105e <__divmodsi4>:
    105e:	05 2e       	mov	r0, r21
    1060:	97 fb       	bst	r25, 7
    1062:	1e f4       	brtc	.+6      	; 0x106a <__divmodsi4+0xc>
    1064:	00 94       	com	r0
    1066:	0e 94 46 08 	call	0x108c	; 0x108c <__negsi2>
    106a:	57 fd       	sbrc	r21, 7
    106c:	07 d0       	rcall	.+14     	; 0x107c <__divmodsi4_neg2>
    106e:	0e 94 0d 08 	call	0x101a	; 0x101a <__udivmodsi4>
    1072:	07 fc       	sbrc	r0, 7
    1074:	03 d0       	rcall	.+6      	; 0x107c <__divmodsi4_neg2>
    1076:	4e f4       	brtc	.+18     	; 0x108a <__divmodsi4_exit>
    1078:	0c 94 46 08 	jmp	0x108c	; 0x108c <__negsi2>

0000107c <__divmodsi4_neg2>:
    107c:	50 95       	com	r21
    107e:	40 95       	com	r20
    1080:	30 95       	com	r19
    1082:	21 95       	neg	r18
    1084:	3f 4f       	sbci	r19, 0xFF	; 255
    1086:	4f 4f       	sbci	r20, 0xFF	; 255
    1088:	5f 4f       	sbci	r21, 0xFF	; 255

0000108a <__divmodsi4_exit>:
    108a:	08 95       	ret

0000108c <__negsi2>:
    108c:	90 95       	com	r25
    108e:	80 95       	com	r24
    1090:	70 95       	com	r23
    1092:	61 95       	neg	r22
    1094:	7f 4f       	sbci	r23, 0xFF	; 255
    1096:	8f 4f       	sbci	r24, 0xFF	; 255
    1098:	9f 4f       	sbci	r25, 0xFF	; 255
    109a:	08 95       	ret

0000109c <__tablejump2__>:
    109c:	ee 0f       	add	r30, r30
    109e:	ff 1f       	adc	r31, r31
    10a0:	00 24       	eor	r0, r0
    10a2:	00 1c       	adc	r0, r0
    10a4:	0b be       	out	0x3b, r0	; 59
    10a6:	07 90       	elpm	r0, Z+
    10a8:	f6 91       	elpm	r31, Z
    10aa:	e0 2d       	mov	r30, r0
    10ac:	09 94       	ijmp

000010ae <atoi>:
    10ae:	fc 01       	movw	r30, r24
    10b0:	88 27       	eor	r24, r24
    10b2:	99 27       	eor	r25, r25
    10b4:	e8 94       	clt
    10b6:	21 91       	ld	r18, Z+
    10b8:	20 32       	cpi	r18, 0x20	; 32
    10ba:	e9 f3       	breq	.-6      	; 0x10b6 <atoi+0x8>
    10bc:	29 30       	cpi	r18, 0x09	; 9
    10be:	10 f0       	brcs	.+4      	; 0x10c4 <atoi+0x16>
    10c0:	2e 30       	cpi	r18, 0x0E	; 14
    10c2:	c8 f3       	brcs	.-14     	; 0x10b6 <atoi+0x8>
    10c4:	2b 32       	cpi	r18, 0x2B	; 43
    10c6:	41 f0       	breq	.+16     	; 0x10d8 <atoi+0x2a>
    10c8:	2d 32       	cpi	r18, 0x2D	; 45
    10ca:	39 f4       	brne	.+14     	; 0x10da <atoi+0x2c>
    10cc:	68 94       	set
    10ce:	04 c0       	rjmp	.+8      	; 0x10d8 <atoi+0x2a>
    10d0:	0e 94 7e 08 	call	0x10fc	; 0x10fc <__mulhi_const_10>
    10d4:	82 0f       	add	r24, r18
    10d6:	91 1d       	adc	r25, r1
    10d8:	21 91       	ld	r18, Z+
    10da:	20 53       	subi	r18, 0x30	; 48
    10dc:	2a 30       	cpi	r18, 0x0A	; 10
    10de:	c0 f3       	brcs	.-16     	; 0x10d0 <atoi+0x22>
    10e0:	1e f4       	brtc	.+6      	; 0x10e8 <atoi+0x3a>
    10e2:	90 95       	com	r25
    10e4:	81 95       	neg	r24
    10e6:	9f 4f       	sbci	r25, 0xFF	; 255
    10e8:	08 95       	ret

000010ea <strcmp>:
    10ea:	fb 01       	movw	r30, r22
    10ec:	dc 01       	movw	r26, r24
    10ee:	8d 91       	ld	r24, X+
    10f0:	01 90       	ld	r0, Z+
    10f2:	80 19       	sub	r24, r0
    10f4:	01 10       	cpse	r0, r1
    10f6:	d9 f3       	breq	.-10     	; 0x10ee <strcmp+0x4>
    10f8:	99 0b       	sbc	r25, r25
    10fa:	08 95       	ret

000010fc <__mulhi_const_10>:
    10fc:	7a e0       	ldi	r23, 0x0A	; 10
    10fe:	97 9f       	mul	r25, r23
    1100:	90 2d       	mov	r25, r0
    1102:	87 9f       	mul	r24, r23
    1104:	80 2d       	mov	r24, r0
    1106:	91 0d       	add	r25, r1
    1108:	11 24       	eor	r1, r1
    110a:	08 95       	ret

0000110c <printf>:
    110c:	cf 93       	push	r28
    110e:	df 93       	push	r29
    1110:	cd b7       	in	r28, 0x3d	; 61
    1112:	de b7       	in	r29, 0x3e	; 62
    1114:	ae 01       	movw	r20, r28
    1116:	4b 5f       	subi	r20, 0xFB	; 251
    1118:	5f 4f       	sbci	r21, 0xFF	; 255
    111a:	fa 01       	movw	r30, r20
    111c:	61 91       	ld	r22, Z+
    111e:	71 91       	ld	r23, Z+
    1120:	af 01       	movw	r20, r30
    1122:	80 91 5a 4b 	lds	r24, 0x4B5A	; 0x804b5a <__iob+0x2>
    1126:	90 91 5b 4b 	lds	r25, 0x4B5B	; 0x804b5b <__iob+0x3>
    112a:	0e 94 ca 08 	call	0x1194	; 0x1194 <vfprintf>
    112e:	df 91       	pop	r29
    1130:	cf 91       	pop	r28
    1132:	08 95       	ret

00001134 <puts>:
    1134:	0f 93       	push	r16
    1136:	1f 93       	push	r17
    1138:	cf 93       	push	r28
    113a:	df 93       	push	r29
    113c:	e0 91 5a 4b 	lds	r30, 0x4B5A	; 0x804b5a <__iob+0x2>
    1140:	f0 91 5b 4b 	lds	r31, 0x4B5B	; 0x804b5b <__iob+0x3>
    1144:	23 81       	ldd	r18, Z+3	; 0x03
    1146:	21 ff       	sbrs	r18, 1
    1148:	1b c0       	rjmp	.+54     	; 0x1180 <puts+0x4c>
    114a:	8c 01       	movw	r16, r24
    114c:	d0 e0       	ldi	r29, 0x00	; 0
    114e:	c0 e0       	ldi	r28, 0x00	; 0
    1150:	f8 01       	movw	r30, r16
    1152:	81 91       	ld	r24, Z+
    1154:	8f 01       	movw	r16, r30
    1156:	60 91 5a 4b 	lds	r22, 0x4B5A	; 0x804b5a <__iob+0x2>
    115a:	70 91 5b 4b 	lds	r23, 0x4B5B	; 0x804b5b <__iob+0x3>
    115e:	db 01       	movw	r26, r22
    1160:	18 96       	adiw	r26, 0x08	; 8
    1162:	ed 91       	ld	r30, X+
    1164:	fc 91       	ld	r31, X
    1166:	19 97       	sbiw	r26, 0x09	; 9
    1168:	88 23       	and	r24, r24
    116a:	31 f0       	breq	.+12     	; 0x1178 <puts+0x44>
    116c:	09 95       	icall
    116e:	89 2b       	or	r24, r25
    1170:	79 f3       	breq	.-34     	; 0x1150 <puts+0x1c>
    1172:	df ef       	ldi	r29, 0xFF	; 255
    1174:	cf ef       	ldi	r28, 0xFF	; 255
    1176:	ec cf       	rjmp	.-40     	; 0x1150 <puts+0x1c>
    1178:	8a e0       	ldi	r24, 0x0A	; 10
    117a:	09 95       	icall
    117c:	89 2b       	or	r24, r25
    117e:	19 f0       	breq	.+6      	; 0x1186 <puts+0x52>
    1180:	8f ef       	ldi	r24, 0xFF	; 255
    1182:	9f ef       	ldi	r25, 0xFF	; 255
    1184:	02 c0       	rjmp	.+4      	; 0x118a <puts+0x56>
    1186:	8d 2f       	mov	r24, r29
    1188:	9c 2f       	mov	r25, r28
    118a:	df 91       	pop	r29
    118c:	cf 91       	pop	r28
    118e:	1f 91       	pop	r17
    1190:	0f 91       	pop	r16
    1192:	08 95       	ret

00001194 <vfprintf>:
    1194:	2f 92       	push	r2
    1196:	3f 92       	push	r3
    1198:	4f 92       	push	r4
    119a:	5f 92       	push	r5
    119c:	6f 92       	push	r6
    119e:	7f 92       	push	r7
    11a0:	8f 92       	push	r8
    11a2:	9f 92       	push	r9
    11a4:	af 92       	push	r10
    11a6:	bf 92       	push	r11
    11a8:	cf 92       	push	r12
    11aa:	df 92       	push	r13
    11ac:	ef 92       	push	r14
    11ae:	ff 92       	push	r15
    11b0:	0f 93       	push	r16
    11b2:	1f 93       	push	r17
    11b4:	cf 93       	push	r28
    11b6:	df 93       	push	r29
    11b8:	cd b7       	in	r28, 0x3d	; 61
    11ba:	de b7       	in	r29, 0x3e	; 62
    11bc:	2b 97       	sbiw	r28, 0x0b	; 11
    11be:	cd bf       	out	0x3d, r28	; 61
    11c0:	de bf       	out	0x3e, r29	; 62
    11c2:	6c 01       	movw	r12, r24
    11c4:	7b 01       	movw	r14, r22
    11c6:	8a 01       	movw	r16, r20
    11c8:	fc 01       	movw	r30, r24
    11ca:	16 82       	std	Z+6, r1	; 0x06
    11cc:	17 82       	std	Z+7, r1	; 0x07
    11ce:	83 81       	ldd	r24, Z+3	; 0x03
    11d0:	81 ff       	sbrs	r24, 1
    11d2:	cc c1       	rjmp	.+920    	; 0x156c <vfprintf+0x3d8>
    11d4:	ce 01       	movw	r24, r28
    11d6:	01 96       	adiw	r24, 0x01	; 1
    11d8:	3c 01       	movw	r6, r24
    11da:	f6 01       	movw	r30, r12
    11dc:	93 81       	ldd	r25, Z+3	; 0x03
    11de:	f7 01       	movw	r30, r14
    11e0:	93 fd       	sbrc	r25, 3
    11e2:	85 91       	lpm	r24, Z+
    11e4:	93 ff       	sbrs	r25, 3
    11e6:	81 91       	ld	r24, Z+
    11e8:	7f 01       	movw	r14, r30
    11ea:	88 23       	and	r24, r24
    11ec:	09 f4       	brne	.+2      	; 0x11f0 <vfprintf+0x5c>
    11ee:	ba c1       	rjmp	.+884    	; 0x1564 <vfprintf+0x3d0>
    11f0:	85 32       	cpi	r24, 0x25	; 37
    11f2:	39 f4       	brne	.+14     	; 0x1202 <vfprintf+0x6e>
    11f4:	93 fd       	sbrc	r25, 3
    11f6:	85 91       	lpm	r24, Z+
    11f8:	93 ff       	sbrs	r25, 3
    11fa:	81 91       	ld	r24, Z+
    11fc:	7f 01       	movw	r14, r30
    11fe:	85 32       	cpi	r24, 0x25	; 37
    1200:	29 f4       	brne	.+10     	; 0x120c <vfprintf+0x78>
    1202:	b6 01       	movw	r22, r12
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <fputc>
    120a:	e7 cf       	rjmp	.-50     	; 0x11da <vfprintf+0x46>
    120c:	91 2c       	mov	r9, r1
    120e:	21 2c       	mov	r2, r1
    1210:	31 2c       	mov	r3, r1
    1212:	ff e1       	ldi	r31, 0x1F	; 31
    1214:	f3 15       	cp	r31, r3
    1216:	d8 f0       	brcs	.+54     	; 0x124e <vfprintf+0xba>
    1218:	8b 32       	cpi	r24, 0x2B	; 43
    121a:	79 f0       	breq	.+30     	; 0x123a <vfprintf+0xa6>
    121c:	38 f4       	brcc	.+14     	; 0x122c <vfprintf+0x98>
    121e:	80 32       	cpi	r24, 0x20	; 32
    1220:	79 f0       	breq	.+30     	; 0x1240 <vfprintf+0xac>
    1222:	83 32       	cpi	r24, 0x23	; 35
    1224:	a1 f4       	brne	.+40     	; 0x124e <vfprintf+0xba>
    1226:	23 2d       	mov	r18, r3
    1228:	20 61       	ori	r18, 0x10	; 16
    122a:	1d c0       	rjmp	.+58     	; 0x1266 <vfprintf+0xd2>
    122c:	8d 32       	cpi	r24, 0x2D	; 45
    122e:	61 f0       	breq	.+24     	; 0x1248 <vfprintf+0xb4>
    1230:	80 33       	cpi	r24, 0x30	; 48
    1232:	69 f4       	brne	.+26     	; 0x124e <vfprintf+0xba>
    1234:	23 2d       	mov	r18, r3
    1236:	21 60       	ori	r18, 0x01	; 1
    1238:	16 c0       	rjmp	.+44     	; 0x1266 <vfprintf+0xd2>
    123a:	83 2d       	mov	r24, r3
    123c:	82 60       	ori	r24, 0x02	; 2
    123e:	38 2e       	mov	r3, r24
    1240:	e3 2d       	mov	r30, r3
    1242:	e4 60       	ori	r30, 0x04	; 4
    1244:	3e 2e       	mov	r3, r30
    1246:	2a c0       	rjmp	.+84     	; 0x129c <vfprintf+0x108>
    1248:	f3 2d       	mov	r31, r3
    124a:	f8 60       	ori	r31, 0x08	; 8
    124c:	1d c0       	rjmp	.+58     	; 0x1288 <vfprintf+0xf4>
    124e:	37 fc       	sbrc	r3, 7
    1250:	2d c0       	rjmp	.+90     	; 0x12ac <vfprintf+0x118>
    1252:	20 ed       	ldi	r18, 0xD0	; 208
    1254:	28 0f       	add	r18, r24
    1256:	2a 30       	cpi	r18, 0x0A	; 10
    1258:	40 f0       	brcs	.+16     	; 0x126a <vfprintf+0xd6>
    125a:	8e 32       	cpi	r24, 0x2E	; 46
    125c:	b9 f4       	brne	.+46     	; 0x128c <vfprintf+0xf8>
    125e:	36 fc       	sbrc	r3, 6
    1260:	81 c1       	rjmp	.+770    	; 0x1564 <vfprintf+0x3d0>
    1262:	23 2d       	mov	r18, r3
    1264:	20 64       	ori	r18, 0x40	; 64
    1266:	32 2e       	mov	r3, r18
    1268:	19 c0       	rjmp	.+50     	; 0x129c <vfprintf+0x108>
    126a:	36 fe       	sbrs	r3, 6
    126c:	06 c0       	rjmp	.+12     	; 0x127a <vfprintf+0xe6>
    126e:	8a e0       	ldi	r24, 0x0A	; 10
    1270:	98 9e       	mul	r9, r24
    1272:	20 0d       	add	r18, r0
    1274:	11 24       	eor	r1, r1
    1276:	92 2e       	mov	r9, r18
    1278:	11 c0       	rjmp	.+34     	; 0x129c <vfprintf+0x108>
    127a:	ea e0       	ldi	r30, 0x0A	; 10
    127c:	2e 9e       	mul	r2, r30
    127e:	20 0d       	add	r18, r0
    1280:	11 24       	eor	r1, r1
    1282:	22 2e       	mov	r2, r18
    1284:	f3 2d       	mov	r31, r3
    1286:	f0 62       	ori	r31, 0x20	; 32
    1288:	3f 2e       	mov	r3, r31
    128a:	08 c0       	rjmp	.+16     	; 0x129c <vfprintf+0x108>
    128c:	8c 36       	cpi	r24, 0x6C	; 108
    128e:	21 f4       	brne	.+8      	; 0x1298 <vfprintf+0x104>
    1290:	83 2d       	mov	r24, r3
    1292:	80 68       	ori	r24, 0x80	; 128
    1294:	38 2e       	mov	r3, r24
    1296:	02 c0       	rjmp	.+4      	; 0x129c <vfprintf+0x108>
    1298:	88 36       	cpi	r24, 0x68	; 104
    129a:	41 f4       	brne	.+16     	; 0x12ac <vfprintf+0x118>
    129c:	f7 01       	movw	r30, r14
    129e:	93 fd       	sbrc	r25, 3
    12a0:	85 91       	lpm	r24, Z+
    12a2:	93 ff       	sbrs	r25, 3
    12a4:	81 91       	ld	r24, Z+
    12a6:	7f 01       	movw	r14, r30
    12a8:	81 11       	cpse	r24, r1
    12aa:	b3 cf       	rjmp	.-154    	; 0x1212 <vfprintf+0x7e>
    12ac:	98 2f       	mov	r25, r24
    12ae:	9f 7d       	andi	r25, 0xDF	; 223
    12b0:	95 54       	subi	r25, 0x45	; 69
    12b2:	93 30       	cpi	r25, 0x03	; 3
    12b4:	28 f4       	brcc	.+10     	; 0x12c0 <vfprintf+0x12c>
    12b6:	0c 5f       	subi	r16, 0xFC	; 252
    12b8:	1f 4f       	sbci	r17, 0xFF	; 255
    12ba:	9f e3       	ldi	r25, 0x3F	; 63
    12bc:	99 83       	std	Y+1, r25	; 0x01
    12be:	0d c0       	rjmp	.+26     	; 0x12da <vfprintf+0x146>
    12c0:	83 36       	cpi	r24, 0x63	; 99
    12c2:	31 f0       	breq	.+12     	; 0x12d0 <vfprintf+0x13c>
    12c4:	83 37       	cpi	r24, 0x73	; 115
    12c6:	71 f0       	breq	.+28     	; 0x12e4 <vfprintf+0x150>
    12c8:	83 35       	cpi	r24, 0x53	; 83
    12ca:	09 f0       	breq	.+2      	; 0x12ce <vfprintf+0x13a>
    12cc:	59 c0       	rjmp	.+178    	; 0x1380 <vfprintf+0x1ec>
    12ce:	21 c0       	rjmp	.+66     	; 0x1312 <vfprintf+0x17e>
    12d0:	f8 01       	movw	r30, r16
    12d2:	80 81       	ld	r24, Z
    12d4:	89 83       	std	Y+1, r24	; 0x01
    12d6:	0e 5f       	subi	r16, 0xFE	; 254
    12d8:	1f 4f       	sbci	r17, 0xFF	; 255
    12da:	88 24       	eor	r8, r8
    12dc:	83 94       	inc	r8
    12de:	91 2c       	mov	r9, r1
    12e0:	53 01       	movw	r10, r6
    12e2:	13 c0       	rjmp	.+38     	; 0x130a <vfprintf+0x176>
    12e4:	28 01       	movw	r4, r16
    12e6:	f2 e0       	ldi	r31, 0x02	; 2
    12e8:	4f 0e       	add	r4, r31
    12ea:	51 1c       	adc	r5, r1
    12ec:	f8 01       	movw	r30, r16
    12ee:	a0 80       	ld	r10, Z
    12f0:	b1 80       	ldd	r11, Z+1	; 0x01
    12f2:	36 fe       	sbrs	r3, 6
    12f4:	03 c0       	rjmp	.+6      	; 0x12fc <vfprintf+0x168>
    12f6:	69 2d       	mov	r22, r9
    12f8:	70 e0       	ldi	r23, 0x00	; 0
    12fa:	02 c0       	rjmp	.+4      	; 0x1300 <vfprintf+0x16c>
    12fc:	6f ef       	ldi	r22, 0xFF	; 255
    12fe:	7f ef       	ldi	r23, 0xFF	; 255
    1300:	c5 01       	movw	r24, r10
    1302:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <strnlen>
    1306:	4c 01       	movw	r8, r24
    1308:	82 01       	movw	r16, r4
    130a:	f3 2d       	mov	r31, r3
    130c:	ff 77       	andi	r31, 0x7F	; 127
    130e:	3f 2e       	mov	r3, r31
    1310:	16 c0       	rjmp	.+44     	; 0x133e <vfprintf+0x1aa>
    1312:	28 01       	movw	r4, r16
    1314:	22 e0       	ldi	r18, 0x02	; 2
    1316:	42 0e       	add	r4, r18
    1318:	51 1c       	adc	r5, r1
    131a:	f8 01       	movw	r30, r16
    131c:	a0 80       	ld	r10, Z
    131e:	b1 80       	ldd	r11, Z+1	; 0x01
    1320:	36 fe       	sbrs	r3, 6
    1322:	03 c0       	rjmp	.+6      	; 0x132a <vfprintf+0x196>
    1324:	69 2d       	mov	r22, r9
    1326:	70 e0       	ldi	r23, 0x00	; 0
    1328:	02 c0       	rjmp	.+4      	; 0x132e <vfprintf+0x19a>
    132a:	6f ef       	ldi	r22, 0xFF	; 255
    132c:	7f ef       	ldi	r23, 0xFF	; 255
    132e:	c5 01       	movw	r24, r10
    1330:	0e 94 ce 0a 	call	0x159c	; 0x159c <strnlen_P>
    1334:	4c 01       	movw	r8, r24
    1336:	f3 2d       	mov	r31, r3
    1338:	f0 68       	ori	r31, 0x80	; 128
    133a:	3f 2e       	mov	r3, r31
    133c:	82 01       	movw	r16, r4
    133e:	33 fc       	sbrc	r3, 3
    1340:	1b c0       	rjmp	.+54     	; 0x1378 <vfprintf+0x1e4>
    1342:	82 2d       	mov	r24, r2
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	88 16       	cp	r8, r24
    1348:	99 06       	cpc	r9, r25
    134a:	b0 f4       	brcc	.+44     	; 0x1378 <vfprintf+0x1e4>
    134c:	b6 01       	movw	r22, r12
    134e:	80 e2       	ldi	r24, 0x20	; 32
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <fputc>
    1356:	2a 94       	dec	r2
    1358:	f4 cf       	rjmp	.-24     	; 0x1342 <vfprintf+0x1ae>
    135a:	f5 01       	movw	r30, r10
    135c:	37 fc       	sbrc	r3, 7
    135e:	85 91       	lpm	r24, Z+
    1360:	37 fe       	sbrs	r3, 7
    1362:	81 91       	ld	r24, Z+
    1364:	5f 01       	movw	r10, r30
    1366:	b6 01       	movw	r22, r12
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <fputc>
    136e:	21 10       	cpse	r2, r1
    1370:	2a 94       	dec	r2
    1372:	21 e0       	ldi	r18, 0x01	; 1
    1374:	82 1a       	sub	r8, r18
    1376:	91 08       	sbc	r9, r1
    1378:	81 14       	cp	r8, r1
    137a:	91 04       	cpc	r9, r1
    137c:	71 f7       	brne	.-36     	; 0x135a <vfprintf+0x1c6>
    137e:	e8 c0       	rjmp	.+464    	; 0x1550 <vfprintf+0x3bc>
    1380:	84 36       	cpi	r24, 0x64	; 100
    1382:	11 f0       	breq	.+4      	; 0x1388 <vfprintf+0x1f4>
    1384:	89 36       	cpi	r24, 0x69	; 105
    1386:	41 f5       	brne	.+80     	; 0x13d8 <vfprintf+0x244>
    1388:	f8 01       	movw	r30, r16
    138a:	37 fe       	sbrs	r3, 7
    138c:	07 c0       	rjmp	.+14     	; 0x139c <vfprintf+0x208>
    138e:	60 81       	ld	r22, Z
    1390:	71 81       	ldd	r23, Z+1	; 0x01
    1392:	82 81       	ldd	r24, Z+2	; 0x02
    1394:	93 81       	ldd	r25, Z+3	; 0x03
    1396:	0c 5f       	subi	r16, 0xFC	; 252
    1398:	1f 4f       	sbci	r17, 0xFF	; 255
    139a:	08 c0       	rjmp	.+16     	; 0x13ac <vfprintf+0x218>
    139c:	60 81       	ld	r22, Z
    139e:	71 81       	ldd	r23, Z+1	; 0x01
    13a0:	07 2e       	mov	r0, r23
    13a2:	00 0c       	add	r0, r0
    13a4:	88 0b       	sbc	r24, r24
    13a6:	99 0b       	sbc	r25, r25
    13a8:	0e 5f       	subi	r16, 0xFE	; 254
    13aa:	1f 4f       	sbci	r17, 0xFF	; 255
    13ac:	f3 2d       	mov	r31, r3
    13ae:	ff 76       	andi	r31, 0x6F	; 111
    13b0:	3f 2e       	mov	r3, r31
    13b2:	97 ff       	sbrs	r25, 7
    13b4:	09 c0       	rjmp	.+18     	; 0x13c8 <vfprintf+0x234>
    13b6:	90 95       	com	r25
    13b8:	80 95       	com	r24
    13ba:	70 95       	com	r23
    13bc:	61 95       	neg	r22
    13be:	7f 4f       	sbci	r23, 0xFF	; 255
    13c0:	8f 4f       	sbci	r24, 0xFF	; 255
    13c2:	9f 4f       	sbci	r25, 0xFF	; 255
    13c4:	f0 68       	ori	r31, 0x80	; 128
    13c6:	3f 2e       	mov	r3, r31
    13c8:	2a e0       	ldi	r18, 0x0A	; 10
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	a3 01       	movw	r20, r6
    13ce:	0e 94 20 0b 	call	0x1640	; 0x1640 <__ultoa_invert>
    13d2:	88 2e       	mov	r8, r24
    13d4:	86 18       	sub	r8, r6
    13d6:	45 c0       	rjmp	.+138    	; 0x1462 <vfprintf+0x2ce>
    13d8:	85 37       	cpi	r24, 0x75	; 117
    13da:	31 f4       	brne	.+12     	; 0x13e8 <vfprintf+0x254>
    13dc:	23 2d       	mov	r18, r3
    13de:	2f 7e       	andi	r18, 0xEF	; 239
    13e0:	b2 2e       	mov	r11, r18
    13e2:	2a e0       	ldi	r18, 0x0A	; 10
    13e4:	30 e0       	ldi	r19, 0x00	; 0
    13e6:	25 c0       	rjmp	.+74     	; 0x1432 <vfprintf+0x29e>
    13e8:	93 2d       	mov	r25, r3
    13ea:	99 7f       	andi	r25, 0xF9	; 249
    13ec:	b9 2e       	mov	r11, r25
    13ee:	8f 36       	cpi	r24, 0x6F	; 111
    13f0:	c1 f0       	breq	.+48     	; 0x1422 <vfprintf+0x28e>
    13f2:	18 f4       	brcc	.+6      	; 0x13fa <vfprintf+0x266>
    13f4:	88 35       	cpi	r24, 0x58	; 88
    13f6:	79 f0       	breq	.+30     	; 0x1416 <vfprintf+0x282>
    13f8:	b5 c0       	rjmp	.+362    	; 0x1564 <vfprintf+0x3d0>
    13fa:	80 37       	cpi	r24, 0x70	; 112
    13fc:	19 f0       	breq	.+6      	; 0x1404 <vfprintf+0x270>
    13fe:	88 37       	cpi	r24, 0x78	; 120
    1400:	21 f0       	breq	.+8      	; 0x140a <vfprintf+0x276>
    1402:	b0 c0       	rjmp	.+352    	; 0x1564 <vfprintf+0x3d0>
    1404:	e9 2f       	mov	r30, r25
    1406:	e0 61       	ori	r30, 0x10	; 16
    1408:	be 2e       	mov	r11, r30
    140a:	b4 fe       	sbrs	r11, 4
    140c:	0d c0       	rjmp	.+26     	; 0x1428 <vfprintf+0x294>
    140e:	fb 2d       	mov	r31, r11
    1410:	f4 60       	ori	r31, 0x04	; 4
    1412:	bf 2e       	mov	r11, r31
    1414:	09 c0       	rjmp	.+18     	; 0x1428 <vfprintf+0x294>
    1416:	34 fe       	sbrs	r3, 4
    1418:	0a c0       	rjmp	.+20     	; 0x142e <vfprintf+0x29a>
    141a:	29 2f       	mov	r18, r25
    141c:	26 60       	ori	r18, 0x06	; 6
    141e:	b2 2e       	mov	r11, r18
    1420:	06 c0       	rjmp	.+12     	; 0x142e <vfprintf+0x29a>
    1422:	28 e0       	ldi	r18, 0x08	; 8
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	05 c0       	rjmp	.+10     	; 0x1432 <vfprintf+0x29e>
    1428:	20 e1       	ldi	r18, 0x10	; 16
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	02 c0       	rjmp	.+4      	; 0x1432 <vfprintf+0x29e>
    142e:	20 e1       	ldi	r18, 0x10	; 16
    1430:	32 e0       	ldi	r19, 0x02	; 2
    1432:	f8 01       	movw	r30, r16
    1434:	b7 fe       	sbrs	r11, 7
    1436:	07 c0       	rjmp	.+14     	; 0x1446 <vfprintf+0x2b2>
    1438:	60 81       	ld	r22, Z
    143a:	71 81       	ldd	r23, Z+1	; 0x01
    143c:	82 81       	ldd	r24, Z+2	; 0x02
    143e:	93 81       	ldd	r25, Z+3	; 0x03
    1440:	0c 5f       	subi	r16, 0xFC	; 252
    1442:	1f 4f       	sbci	r17, 0xFF	; 255
    1444:	06 c0       	rjmp	.+12     	; 0x1452 <vfprintf+0x2be>
    1446:	60 81       	ld	r22, Z
    1448:	71 81       	ldd	r23, Z+1	; 0x01
    144a:	80 e0       	ldi	r24, 0x00	; 0
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	0e 5f       	subi	r16, 0xFE	; 254
    1450:	1f 4f       	sbci	r17, 0xFF	; 255
    1452:	a3 01       	movw	r20, r6
    1454:	0e 94 20 0b 	call	0x1640	; 0x1640 <__ultoa_invert>
    1458:	88 2e       	mov	r8, r24
    145a:	86 18       	sub	r8, r6
    145c:	fb 2d       	mov	r31, r11
    145e:	ff 77       	andi	r31, 0x7F	; 127
    1460:	3f 2e       	mov	r3, r31
    1462:	36 fe       	sbrs	r3, 6
    1464:	0d c0       	rjmp	.+26     	; 0x1480 <vfprintf+0x2ec>
    1466:	23 2d       	mov	r18, r3
    1468:	2e 7f       	andi	r18, 0xFE	; 254
    146a:	a2 2e       	mov	r10, r18
    146c:	89 14       	cp	r8, r9
    146e:	58 f4       	brcc	.+22     	; 0x1486 <vfprintf+0x2f2>
    1470:	34 fe       	sbrs	r3, 4
    1472:	0b c0       	rjmp	.+22     	; 0x148a <vfprintf+0x2f6>
    1474:	32 fc       	sbrc	r3, 2
    1476:	09 c0       	rjmp	.+18     	; 0x148a <vfprintf+0x2f6>
    1478:	83 2d       	mov	r24, r3
    147a:	8e 7e       	andi	r24, 0xEE	; 238
    147c:	a8 2e       	mov	r10, r24
    147e:	05 c0       	rjmp	.+10     	; 0x148a <vfprintf+0x2f6>
    1480:	b8 2c       	mov	r11, r8
    1482:	a3 2c       	mov	r10, r3
    1484:	03 c0       	rjmp	.+6      	; 0x148c <vfprintf+0x2f8>
    1486:	b8 2c       	mov	r11, r8
    1488:	01 c0       	rjmp	.+2      	; 0x148c <vfprintf+0x2f8>
    148a:	b9 2c       	mov	r11, r9
    148c:	a4 fe       	sbrs	r10, 4
    148e:	0f c0       	rjmp	.+30     	; 0x14ae <vfprintf+0x31a>
    1490:	fe 01       	movw	r30, r28
    1492:	e8 0d       	add	r30, r8
    1494:	f1 1d       	adc	r31, r1
    1496:	80 81       	ld	r24, Z
    1498:	80 33       	cpi	r24, 0x30	; 48
    149a:	21 f4       	brne	.+8      	; 0x14a4 <vfprintf+0x310>
    149c:	9a 2d       	mov	r25, r10
    149e:	99 7e       	andi	r25, 0xE9	; 233
    14a0:	a9 2e       	mov	r10, r25
    14a2:	09 c0       	rjmp	.+18     	; 0x14b6 <vfprintf+0x322>
    14a4:	a2 fe       	sbrs	r10, 2
    14a6:	06 c0       	rjmp	.+12     	; 0x14b4 <vfprintf+0x320>
    14a8:	b3 94       	inc	r11
    14aa:	b3 94       	inc	r11
    14ac:	04 c0       	rjmp	.+8      	; 0x14b6 <vfprintf+0x322>
    14ae:	8a 2d       	mov	r24, r10
    14b0:	86 78       	andi	r24, 0x86	; 134
    14b2:	09 f0       	breq	.+2      	; 0x14b6 <vfprintf+0x322>
    14b4:	b3 94       	inc	r11
    14b6:	a3 fc       	sbrc	r10, 3
    14b8:	11 c0       	rjmp	.+34     	; 0x14dc <vfprintf+0x348>
    14ba:	a0 fe       	sbrs	r10, 0
    14bc:	06 c0       	rjmp	.+12     	; 0x14ca <vfprintf+0x336>
    14be:	b2 14       	cp	r11, r2
    14c0:	88 f4       	brcc	.+34     	; 0x14e4 <vfprintf+0x350>
    14c2:	28 0c       	add	r2, r8
    14c4:	92 2c       	mov	r9, r2
    14c6:	9b 18       	sub	r9, r11
    14c8:	0e c0       	rjmp	.+28     	; 0x14e6 <vfprintf+0x352>
    14ca:	b2 14       	cp	r11, r2
    14cc:	60 f4       	brcc	.+24     	; 0x14e6 <vfprintf+0x352>
    14ce:	b6 01       	movw	r22, r12
    14d0:	80 e2       	ldi	r24, 0x20	; 32
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <fputc>
    14d8:	b3 94       	inc	r11
    14da:	f7 cf       	rjmp	.-18     	; 0x14ca <vfprintf+0x336>
    14dc:	b2 14       	cp	r11, r2
    14de:	18 f4       	brcc	.+6      	; 0x14e6 <vfprintf+0x352>
    14e0:	2b 18       	sub	r2, r11
    14e2:	02 c0       	rjmp	.+4      	; 0x14e8 <vfprintf+0x354>
    14e4:	98 2c       	mov	r9, r8
    14e6:	21 2c       	mov	r2, r1
    14e8:	a4 fe       	sbrs	r10, 4
    14ea:	10 c0       	rjmp	.+32     	; 0x150c <vfprintf+0x378>
    14ec:	b6 01       	movw	r22, r12
    14ee:	80 e3       	ldi	r24, 0x30	; 48
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <fputc>
    14f6:	a2 fe       	sbrs	r10, 2
    14f8:	17 c0       	rjmp	.+46     	; 0x1528 <vfprintf+0x394>
    14fa:	a1 fc       	sbrc	r10, 1
    14fc:	03 c0       	rjmp	.+6      	; 0x1504 <vfprintf+0x370>
    14fe:	88 e7       	ldi	r24, 0x78	; 120
    1500:	90 e0       	ldi	r25, 0x00	; 0
    1502:	02 c0       	rjmp	.+4      	; 0x1508 <vfprintf+0x374>
    1504:	88 e5       	ldi	r24, 0x58	; 88
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	b6 01       	movw	r22, r12
    150a:	0c c0       	rjmp	.+24     	; 0x1524 <vfprintf+0x390>
    150c:	8a 2d       	mov	r24, r10
    150e:	86 78       	andi	r24, 0x86	; 134
    1510:	59 f0       	breq	.+22     	; 0x1528 <vfprintf+0x394>
    1512:	a1 fe       	sbrs	r10, 1
    1514:	02 c0       	rjmp	.+4      	; 0x151a <vfprintf+0x386>
    1516:	8b e2       	ldi	r24, 0x2B	; 43
    1518:	01 c0       	rjmp	.+2      	; 0x151c <vfprintf+0x388>
    151a:	80 e2       	ldi	r24, 0x20	; 32
    151c:	a7 fc       	sbrc	r10, 7
    151e:	8d e2       	ldi	r24, 0x2D	; 45
    1520:	b6 01       	movw	r22, r12
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <fputc>
    1528:	89 14       	cp	r8, r9
    152a:	38 f4       	brcc	.+14     	; 0x153a <vfprintf+0x3a6>
    152c:	b6 01       	movw	r22, r12
    152e:	80 e3       	ldi	r24, 0x30	; 48
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <fputc>
    1536:	9a 94       	dec	r9
    1538:	f7 cf       	rjmp	.-18     	; 0x1528 <vfprintf+0x394>
    153a:	8a 94       	dec	r8
    153c:	f3 01       	movw	r30, r6
    153e:	e8 0d       	add	r30, r8
    1540:	f1 1d       	adc	r31, r1
    1542:	80 81       	ld	r24, Z
    1544:	b6 01       	movw	r22, r12
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <fputc>
    154c:	81 10       	cpse	r8, r1
    154e:	f5 cf       	rjmp	.-22     	; 0x153a <vfprintf+0x3a6>
    1550:	22 20       	and	r2, r2
    1552:	09 f4       	brne	.+2      	; 0x1556 <vfprintf+0x3c2>
    1554:	42 ce       	rjmp	.-892    	; 0x11da <vfprintf+0x46>
    1556:	b6 01       	movw	r22, r12
    1558:	80 e2       	ldi	r24, 0x20	; 32
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <fputc>
    1560:	2a 94       	dec	r2
    1562:	f6 cf       	rjmp	.-20     	; 0x1550 <vfprintf+0x3bc>
    1564:	f6 01       	movw	r30, r12
    1566:	86 81       	ldd	r24, Z+6	; 0x06
    1568:	97 81       	ldd	r25, Z+7	; 0x07
    156a:	02 c0       	rjmp	.+4      	; 0x1570 <vfprintf+0x3dc>
    156c:	8f ef       	ldi	r24, 0xFF	; 255
    156e:	9f ef       	ldi	r25, 0xFF	; 255
    1570:	2b 96       	adiw	r28, 0x0b	; 11
    1572:	cd bf       	out	0x3d, r28	; 61
    1574:	de bf       	out	0x3e, r29	; 62
    1576:	df 91       	pop	r29
    1578:	cf 91       	pop	r28
    157a:	1f 91       	pop	r17
    157c:	0f 91       	pop	r16
    157e:	ff 90       	pop	r15
    1580:	ef 90       	pop	r14
    1582:	df 90       	pop	r13
    1584:	cf 90       	pop	r12
    1586:	bf 90       	pop	r11
    1588:	af 90       	pop	r10
    158a:	9f 90       	pop	r9
    158c:	8f 90       	pop	r8
    158e:	7f 90       	pop	r7
    1590:	6f 90       	pop	r6
    1592:	5f 90       	pop	r5
    1594:	4f 90       	pop	r4
    1596:	3f 90       	pop	r3
    1598:	2f 90       	pop	r2
    159a:	08 95       	ret

0000159c <strnlen_P>:
    159c:	fc 01       	movw	r30, r24
    159e:	05 90       	lpm	r0, Z+
    15a0:	61 50       	subi	r22, 0x01	; 1
    15a2:	70 40       	sbci	r23, 0x00	; 0
    15a4:	01 10       	cpse	r0, r1
    15a6:	d8 f7       	brcc	.-10     	; 0x159e <strnlen_P+0x2>
    15a8:	80 95       	com	r24
    15aa:	90 95       	com	r25
    15ac:	8e 0f       	add	r24, r30
    15ae:	9f 1f       	adc	r25, r31
    15b0:	08 95       	ret

000015b2 <strnlen>:
    15b2:	fc 01       	movw	r30, r24
    15b4:	61 50       	subi	r22, 0x01	; 1
    15b6:	70 40       	sbci	r23, 0x00	; 0
    15b8:	01 90       	ld	r0, Z+
    15ba:	01 10       	cpse	r0, r1
    15bc:	d8 f7       	brcc	.-10     	; 0x15b4 <strnlen+0x2>
    15be:	80 95       	com	r24
    15c0:	90 95       	com	r25
    15c2:	8e 0f       	add	r24, r30
    15c4:	9f 1f       	adc	r25, r31
    15c6:	08 95       	ret

000015c8 <fputc>:
    15c8:	0f 93       	push	r16
    15ca:	1f 93       	push	r17
    15cc:	cf 93       	push	r28
    15ce:	df 93       	push	r29
    15d0:	fb 01       	movw	r30, r22
    15d2:	23 81       	ldd	r18, Z+3	; 0x03
    15d4:	21 fd       	sbrc	r18, 1
    15d6:	03 c0       	rjmp	.+6      	; 0x15de <fputc+0x16>
    15d8:	8f ef       	ldi	r24, 0xFF	; 255
    15da:	9f ef       	ldi	r25, 0xFF	; 255
    15dc:	2c c0       	rjmp	.+88     	; 0x1636 <fputc+0x6e>
    15de:	22 ff       	sbrs	r18, 2
    15e0:	16 c0       	rjmp	.+44     	; 0x160e <fputc+0x46>
    15e2:	46 81       	ldd	r20, Z+6	; 0x06
    15e4:	57 81       	ldd	r21, Z+7	; 0x07
    15e6:	24 81       	ldd	r18, Z+4	; 0x04
    15e8:	35 81       	ldd	r19, Z+5	; 0x05
    15ea:	42 17       	cp	r20, r18
    15ec:	53 07       	cpc	r21, r19
    15ee:	44 f4       	brge	.+16     	; 0x1600 <fputc+0x38>
    15f0:	a0 81       	ld	r26, Z
    15f2:	b1 81       	ldd	r27, Z+1	; 0x01
    15f4:	9d 01       	movw	r18, r26
    15f6:	2f 5f       	subi	r18, 0xFF	; 255
    15f8:	3f 4f       	sbci	r19, 0xFF	; 255
    15fa:	20 83       	st	Z, r18
    15fc:	31 83       	std	Z+1, r19	; 0x01
    15fe:	8c 93       	st	X, r24
    1600:	26 81       	ldd	r18, Z+6	; 0x06
    1602:	37 81       	ldd	r19, Z+7	; 0x07
    1604:	2f 5f       	subi	r18, 0xFF	; 255
    1606:	3f 4f       	sbci	r19, 0xFF	; 255
    1608:	26 83       	std	Z+6, r18	; 0x06
    160a:	37 83       	std	Z+7, r19	; 0x07
    160c:	14 c0       	rjmp	.+40     	; 0x1636 <fputc+0x6e>
    160e:	8b 01       	movw	r16, r22
    1610:	ec 01       	movw	r28, r24
    1612:	fb 01       	movw	r30, r22
    1614:	00 84       	ldd	r0, Z+8	; 0x08
    1616:	f1 85       	ldd	r31, Z+9	; 0x09
    1618:	e0 2d       	mov	r30, r0
    161a:	09 95       	icall
    161c:	89 2b       	or	r24, r25
    161e:	e1 f6       	brne	.-72     	; 0x15d8 <fputc+0x10>
    1620:	d8 01       	movw	r26, r16
    1622:	16 96       	adiw	r26, 0x06	; 6
    1624:	8d 91       	ld	r24, X+
    1626:	9c 91       	ld	r25, X
    1628:	17 97       	sbiw	r26, 0x07	; 7
    162a:	01 96       	adiw	r24, 0x01	; 1
    162c:	16 96       	adiw	r26, 0x06	; 6
    162e:	8d 93       	st	X+, r24
    1630:	9c 93       	st	X, r25
    1632:	17 97       	sbiw	r26, 0x07	; 7
    1634:	ce 01       	movw	r24, r28
    1636:	df 91       	pop	r29
    1638:	cf 91       	pop	r28
    163a:	1f 91       	pop	r17
    163c:	0f 91       	pop	r16
    163e:	08 95       	ret

00001640 <__ultoa_invert>:
    1640:	fa 01       	movw	r30, r20
    1642:	aa 27       	eor	r26, r26
    1644:	28 30       	cpi	r18, 0x08	; 8
    1646:	51 f1       	breq	.+84     	; 0x169c <__ultoa_invert+0x5c>
    1648:	20 31       	cpi	r18, 0x10	; 16
    164a:	81 f1       	breq	.+96     	; 0x16ac <__ultoa_invert+0x6c>
    164c:	e8 94       	clt
    164e:	6f 93       	push	r22
    1650:	6e 7f       	andi	r22, 0xFE	; 254
    1652:	6e 5f       	subi	r22, 0xFE	; 254
    1654:	7f 4f       	sbci	r23, 0xFF	; 255
    1656:	8f 4f       	sbci	r24, 0xFF	; 255
    1658:	9f 4f       	sbci	r25, 0xFF	; 255
    165a:	af 4f       	sbci	r26, 0xFF	; 255
    165c:	b1 e0       	ldi	r27, 0x01	; 1
    165e:	3e d0       	rcall	.+124    	; 0x16dc <__ultoa_invert+0x9c>
    1660:	b4 e0       	ldi	r27, 0x04	; 4
    1662:	3c d0       	rcall	.+120    	; 0x16dc <__ultoa_invert+0x9c>
    1664:	67 0f       	add	r22, r23
    1666:	78 1f       	adc	r23, r24
    1668:	89 1f       	adc	r24, r25
    166a:	9a 1f       	adc	r25, r26
    166c:	a1 1d       	adc	r26, r1
    166e:	68 0f       	add	r22, r24
    1670:	79 1f       	adc	r23, r25
    1672:	8a 1f       	adc	r24, r26
    1674:	91 1d       	adc	r25, r1
    1676:	a1 1d       	adc	r26, r1
    1678:	6a 0f       	add	r22, r26
    167a:	71 1d       	adc	r23, r1
    167c:	81 1d       	adc	r24, r1
    167e:	91 1d       	adc	r25, r1
    1680:	a1 1d       	adc	r26, r1
    1682:	20 d0       	rcall	.+64     	; 0x16c4 <__ultoa_invert+0x84>
    1684:	09 f4       	brne	.+2      	; 0x1688 <__ultoa_invert+0x48>
    1686:	68 94       	set
    1688:	3f 91       	pop	r19
    168a:	2a e0       	ldi	r18, 0x0A	; 10
    168c:	26 9f       	mul	r18, r22
    168e:	11 24       	eor	r1, r1
    1690:	30 19       	sub	r19, r0
    1692:	30 5d       	subi	r19, 0xD0	; 208
    1694:	31 93       	st	Z+, r19
    1696:	de f6       	brtc	.-74     	; 0x164e <__ultoa_invert+0xe>
    1698:	cf 01       	movw	r24, r30
    169a:	08 95       	ret
    169c:	46 2f       	mov	r20, r22
    169e:	47 70       	andi	r20, 0x07	; 7
    16a0:	40 5d       	subi	r20, 0xD0	; 208
    16a2:	41 93       	st	Z+, r20
    16a4:	b3 e0       	ldi	r27, 0x03	; 3
    16a6:	0f d0       	rcall	.+30     	; 0x16c6 <__ultoa_invert+0x86>
    16a8:	c9 f7       	brne	.-14     	; 0x169c <__ultoa_invert+0x5c>
    16aa:	f6 cf       	rjmp	.-20     	; 0x1698 <__ultoa_invert+0x58>
    16ac:	46 2f       	mov	r20, r22
    16ae:	4f 70       	andi	r20, 0x0F	; 15
    16b0:	40 5d       	subi	r20, 0xD0	; 208
    16b2:	4a 33       	cpi	r20, 0x3A	; 58
    16b4:	18 f0       	brcs	.+6      	; 0x16bc <__ultoa_invert+0x7c>
    16b6:	49 5d       	subi	r20, 0xD9	; 217
    16b8:	31 fd       	sbrc	r19, 1
    16ba:	40 52       	subi	r20, 0x20	; 32
    16bc:	41 93       	st	Z+, r20
    16be:	02 d0       	rcall	.+4      	; 0x16c4 <__ultoa_invert+0x84>
    16c0:	a9 f7       	brne	.-22     	; 0x16ac <__ultoa_invert+0x6c>
    16c2:	ea cf       	rjmp	.-44     	; 0x1698 <__ultoa_invert+0x58>
    16c4:	b4 e0       	ldi	r27, 0x04	; 4
    16c6:	a6 95       	lsr	r26
    16c8:	97 95       	ror	r25
    16ca:	87 95       	ror	r24
    16cc:	77 95       	ror	r23
    16ce:	67 95       	ror	r22
    16d0:	ba 95       	dec	r27
    16d2:	c9 f7       	brne	.-14     	; 0x16c6 <__ultoa_invert+0x86>
    16d4:	00 97       	sbiw	r24, 0x00	; 0
    16d6:	61 05       	cpc	r22, r1
    16d8:	71 05       	cpc	r23, r1
    16da:	08 95       	ret
    16dc:	9b 01       	movw	r18, r22
    16de:	ac 01       	movw	r20, r24
    16e0:	0a 2e       	mov	r0, r26
    16e2:	06 94       	lsr	r0
    16e4:	57 95       	ror	r21
    16e6:	47 95       	ror	r20
    16e8:	37 95       	ror	r19
    16ea:	27 95       	ror	r18
    16ec:	ba 95       	dec	r27
    16ee:	c9 f7       	brne	.-14     	; 0x16e2 <__ultoa_invert+0xa2>
    16f0:	62 0f       	add	r22, r18
    16f2:	73 1f       	adc	r23, r19
    16f4:	84 1f       	adc	r24, r20
    16f6:	95 1f       	adc	r25, r21
    16f8:	a0 1d       	adc	r26, r0
    16fa:	08 95       	ret

000016fc <_exit>:
    16fc:	f8 94       	cli

000016fe <__stop_program>:
    16fe:	ff cf       	rjmp	.-2      	; 0x16fe <__stop_program>
