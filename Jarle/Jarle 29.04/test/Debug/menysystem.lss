
menysystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000a3c  00804000  00001bf4  00001c88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bf4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000221  00804a3c  00804a3c  000026c4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000026c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002720  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  00002760  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005f20  00000000  00000000  000028c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000031f3  00000000  00000000  000087e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011b3  00000000  00000000  0000b9db  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005e8  00000000  00000000  0000cb90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003c58  00000000  00000000  0000d178  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000173f  00000000  00000000  00010dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  0001250f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 83 00 	jmp	0x106	; 0x106 <__ctors_end>
       4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
       8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
       c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      10:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      14:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      18:	0c 94 00 05 	jmp	0xa00	; 0xa00 <__vector_6>
      1c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      20:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      24:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      28:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      2c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      30:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      34:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      38:	0c 94 1a 05 	jmp	0xa34	; 0xa34 <__vector_14>
      3c:	0c 94 51 05 	jmp	0xaa2	; 0xaa2 <__vector_15>
      40:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      44:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      48:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      4c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      50:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      54:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      58:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      5c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      60:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      64:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      68:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      6c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      70:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      74:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      78:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      7c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      80:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      84:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      88:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      8c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      90:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      94:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      98:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      9c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      a0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      a4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      a8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      ac:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      b0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      b4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      b8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      bc:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      c0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      c4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      c8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      cc:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      d0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      d4:	0c 94 14 07 	jmp	0xe28	; 0xe28 <__vector_53>
      d8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      dc:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      e0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      e4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      e8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      ec:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      f0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      f4:	f5 05       	cpc	r31, r5
      f6:	ff 05       	cpc	r31, r15
      f8:	09 06       	cpc	r0, r25
      fa:	13 06       	cpc	r1, r19
      fc:	1d 06       	cpc	r1, r29
      fe:	26 06       	cpc	r2, r22
     100:	36 06       	cpc	r3, r22
     102:	3f 06       	cpc	r3, r31
     104:	52 06       	cpc	r5, r18

00000106 <__ctors_end>:
     106:	11 24       	eor	r1, r1
     108:	1f be       	out	0x3f, r1	; 63
     10a:	cf ef       	ldi	r28, 0xFF	; 255
     10c:	cd bf       	out	0x3d, r28	; 61
     10e:	df e7       	ldi	r29, 0x7F	; 127
     110:	de bf       	out	0x3e, r29	; 62

00000112 <__do_copy_data>:
     112:	1a e4       	ldi	r17, 0x4A	; 74
     114:	a0 e0       	ldi	r26, 0x00	; 0
     116:	b0 e4       	ldi	r27, 0x40	; 64
     118:	e4 ef       	ldi	r30, 0xF4	; 244
     11a:	fb e1       	ldi	r31, 0x1B	; 27
     11c:	00 e0       	ldi	r16, 0x00	; 0
     11e:	0b bf       	out	0x3b, r16	; 59
     120:	02 c0       	rjmp	.+4      	; 0x126 <__do_copy_data+0x14>
     122:	07 90       	elpm	r0, Z+
     124:	0d 92       	st	X+, r0
     126:	ac 33       	cpi	r26, 0x3C	; 60
     128:	b1 07       	cpc	r27, r17
     12a:	d9 f7       	brne	.-10     	; 0x122 <__do_copy_data+0x10>

0000012c <__do_clear_bss>:
     12c:	2c e4       	ldi	r18, 0x4C	; 76
     12e:	ac e3       	ldi	r26, 0x3C	; 60
     130:	ba e4       	ldi	r27, 0x4A	; 74
     132:	01 c0       	rjmp	.+2      	; 0x136 <.do_clear_bss_start>

00000134 <.do_clear_bss_loop>:
     134:	1d 92       	st	X+, r1

00000136 <.do_clear_bss_start>:
     136:	ad 35       	cpi	r26, 0x5D	; 93
     138:	b2 07       	cpc	r27, r18
     13a:	e1 f7       	brne	.-8      	; 0x134 <.do_clear_bss_loop>
     13c:	0e 94 4d 08 	call	0x109a	; 0x109a <main>
     140:	0c 94 f8 0d 	jmp	0x1bf0	; 0x1bf0 <_exit>

00000144 <__bad_interrupt>:
     144:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000148 <TWI0_M_init>:
{
	for(size_t i = 0; i < strlen(str); i++)
	{
		USART3_sendChar(str[i]);
	}
}
     148:	e0 e0       	ldi	r30, 0x00	; 0
     14a:	f4 e0       	ldi	r31, 0x04	; 4
     14c:	8c e0       	ldi	r24, 0x0C	; 12
     14e:	81 83       	std	Z+1, r24	; 0x01
     150:	98 e0       	ldi	r25, 0x08	; 8
     152:	93 87       	std	Z+11, r25	; 0x0b
     154:	84 87       	std	Z+12, r24	; 0x0c
     156:	e0 e0       	ldi	r30, 0x00	; 0
     158:	f9 e0       	ldi	r31, 0x09	; 9
     15a:	81 e0       	ldi	r24, 0x01	; 1
     15c:	83 83       	std	Z+3, r24	; 0x03
     15e:	16 82       	std	Z+6, r1	; 0x06
     160:	85 83       	std	Z+5, r24	; 0x05
     162:	e0 e8       	ldi	r30, 0x80	; 128
     164:	f4 e0       	ldi	r31, 0x04	; 4
     166:	82 e0       	ldi	r24, 0x02	; 2
     168:	81 83       	std	Z+1, r24	; 0x01
     16a:	84 83       	std	Z+4, r24	; 0x04
     16c:	08 95       	ret

0000016e <I2C0_M_start>:
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	88 0f       	add	r24, r24
     172:	99 1f       	adc	r25, r25
     174:	86 2b       	or	r24, r22
     176:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     17a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     17e:	85 fd       	sbrc	r24, 5
     180:	0d c0       	rjmp	.+26     	; 0x19c <I2C0_M_start+0x2e>
     182:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     186:	82 fd       	sbrc	r24, 2
     188:	09 c0       	rjmp	.+18     	; 0x19c <I2C0_M_start+0x2e>
     18a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     18e:	83 fd       	sbrc	r24, 3
     190:	05 c0       	rjmp	.+10     	; 0x19c <I2C0_M_start+0x2e>
     192:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     196:	83 70       	andi	r24, 0x03	; 3
     198:	83 30       	cpi	r24, 0x03	; 3
     19a:	79 f7       	brne	.-34     	; 0x17a <I2C0_M_start+0xc>
     19c:	08 95       	ret

0000019e <I2C_M_write>:
     19e:	cf 93       	push	r28
     1a0:	c6 2f       	mov	r28, r22
     1a2:	60 e0       	ldi	r22, 0x00	; 0
     1a4:	0e 94 b7 00 	call	0x16e	; 0x16e <I2C0_M_start>
     1a8:	c0 93 08 09 	sts	0x0908, r28	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     1ac:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1b0:	85 fd       	sbrc	r24, 5
     1b2:	0d c0       	rjmp	.+26     	; 0x1ce <I2C_M_write+0x30>
     1b4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1b8:	82 fd       	sbrc	r24, 2
     1ba:	09 c0       	rjmp	.+18     	; 0x1ce <I2C_M_write+0x30>
     1bc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c0:	83 fd       	sbrc	r24, 3
     1c2:	05 c0       	rjmp	.+10     	; 0x1ce <I2C_M_write+0x30>
     1c4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c8:	83 70       	andi	r24, 0x03	; 3
     1ca:	83 30       	cpi	r24, 0x03	; 3
     1cc:	79 f7       	brne	.-34     	; 0x1ac <I2C_M_write+0xe>
     1ce:	e0 e0       	ldi	r30, 0x00	; 0
     1d0:	f9 e0       	ldi	r31, 0x09	; 9
     1d2:	85 81       	ldd	r24, Z+5	; 0x05
     1d4:	84 81       	ldd	r24, Z+4	; 0x04
     1d6:	83 60       	ori	r24, 0x03	; 3
     1d8:	84 83       	std	Z+4, r24	; 0x04
     1da:	cf 91       	pop	r28
     1dc:	08 95       	ret

000001de <I2C_M_read>:
     1de:	0f 93       	push	r16
     1e0:	1f 93       	push	r17
     1e2:	cf 93       	push	r28
     1e4:	8b 01       	movw	r16, r22
     1e6:	c4 2f       	mov	r28, r20
     1e8:	61 e0       	ldi	r22, 0x01	; 1
     1ea:	0e 94 b7 00 	call	0x16e	; 0x16e <I2C0_M_start>
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	1d c0       	rjmp	.+58     	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
     1f2:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1f6:	85 fd       	sbrc	r24, 5
     1f8:	0d c0       	rjmp	.+26     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
     1fa:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1fe:	82 fd       	sbrc	r24, 2
     200:	09 c0       	rjmp	.+18     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
     202:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     206:	83 fd       	sbrc	r24, 3
     208:	05 c0       	rjmp	.+10     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
     20a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     20e:	83 70       	andi	r24, 0x03	; 3
     210:	83 30       	cpi	r24, 0x03	; 3
     212:	79 f7       	brne	.-34     	; 0x1f2 <I2C_M_read+0x14>
     214:	f8 01       	movw	r30, r16
     216:	e9 0f       	add	r30, r25
     218:	f1 1d       	adc	r31, r1
     21a:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     21e:	80 83       	st	Z, r24
     220:	9f 5f       	subi	r25, 0xFF	; 255
     222:	c9 17       	cp	r28, r25
     224:	19 f0       	breq	.+6      	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
     226:	82 e0       	ldi	r24, 0x02	; 2
     228:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
     22c:	9c 17       	cp	r25, r28
     22e:	08 f3       	brcs	.-62     	; 0x1f2 <I2C_M_read+0x14>
     230:	87 e0       	ldi	r24, 0x07	; 7
     232:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
     236:	cf 91       	pop	r28
     238:	1f 91       	pop	r17
     23a:	0f 91       	pop	r16
     23c:	08 95       	ret

0000023e <AHT10_init>:
     23e:	61 ee       	ldi	r22, 0xE1	; 225
     240:	88 e3       	ldi	r24, 0x38	; 56
     242:	0e 94 cf 00 	call	0x19e	; 0x19e <I2C_M_write>
     246:	2f e5       	ldi	r18, 0x5F	; 95
     248:	8a ee       	ldi	r24, 0xEA	; 234
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	21 50       	subi	r18, 0x01	; 1
     24e:	80 40       	sbci	r24, 0x00	; 0
     250:	90 40       	sbci	r25, 0x00	; 0
     252:	e1 f7       	brne	.-8      	; 0x24c <AHT10_init+0xe>
     254:	00 c0       	rjmp	.+0      	; 0x256 <AHT10_init+0x18>
     256:	00 00       	nop
     258:	6a eb       	ldi	r22, 0xBA	; 186
     25a:	88 e3       	ldi	r24, 0x38	; 56
     25c:	0e 94 cf 00 	call	0x19e	; 0x19e <I2C_M_write>
     260:	8f e1       	ldi	r24, 0x1F	; 31
     262:	9e e4       	ldi	r25, 0x4E	; 78
     264:	01 97       	sbiw	r24, 0x01	; 1
     266:	f1 f7       	brne	.-4      	; 0x264 <AHT10_init+0x26>
     268:	00 c0       	rjmp	.+0      	; 0x26a <AHT10_init+0x2c>
     26a:	00 00       	nop
     26c:	08 95       	ret

0000026e <autoRPMmode>:
     26e:	cb 97       	sbiw	r24, 0x3b	; 59
     270:	bc 01       	movw	r22, r24
     272:	80 e0       	ldi	r24, 0x00	; 0
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	0e 94 8c 09 	call	0x1318	; 0x1318 <__floatunsisf>
     27a:	20 e0       	ldi	r18, 0x00	; 0
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	40 e0       	ldi	r20, 0x00	; 0
     280:	5f e3       	ldi	r21, 0x3F	; 63
     282:	0e 94 7f 08 	call	0x10fe	; 0x10fe <__addsf3>
     286:	0e 94 5d 09 	call	0x12ba	; 0x12ba <__fixunssfsi>
     28a:	6e 31       	cpi	r22, 0x1E	; 30
     28c:	18 f0       	brcs	.+6      	; 0x294 <autoRPMmode+0x26>
     28e:	60 35       	cpi	r22, 0x50	; 80
     290:	18 f4       	brcc	.+6      	; 0x298 <autoRPMmode+0x2a>
     292:	03 c0       	rjmp	.+6      	; 0x29a <autoRPMmode+0x2c>
     294:	6e e1       	ldi	r22, 0x1E	; 30
     296:	01 c0       	rjmp	.+2      	; 0x29a <autoRPMmode+0x2c>
     298:	6f e4       	ldi	r22, 0x4F	; 79
     29a:	86 2f       	mov	r24, r22
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	08 95       	ret

000002a0 <handleFansInAuto>:
     2a0:	80 91 ce 44 	lds	r24, 0x44CE	; 0x8044ce <fan1>
     2a4:	90 91 cf 44 	lds	r25, 0x44CF	; 0x8044cf <fan1+0x1>
     2a8:	02 97       	sbiw	r24, 0x02	; 2
     2aa:	41 f4       	brne	.+16     	; 0x2bc <handleFansInAuto+0x1c>
     2ac:	80 91 af 4a 	lds	r24, 0x4AAF	; 0x804aaf <temperature>
     2b0:	90 91 b0 4a 	lds	r25, 0x4AB0	; 0x804ab0 <temperature+0x1>
     2b4:	0e 94 37 01 	call	0x26e	; 0x26e <autoRPMmode>
     2b8:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     2bc:	80 91 ca 44 	lds	r24, 0x44CA	; 0x8044ca <fan2>
     2c0:	90 91 cb 44 	lds	r25, 0x44CB	; 0x8044cb <fan2+0x1>
     2c4:	02 97       	sbiw	r24, 0x02	; 2
     2c6:	41 f4       	brne	.+16     	; 0x2d8 <handleFansInAuto+0x38>
     2c8:	80 91 af 4a 	lds	r24, 0x4AAF	; 0x804aaf <temperature>
     2cc:	90 91 b0 4a 	lds	r25, 0x4AB0	; 0x804ab0 <temperature+0x1>
     2d0:	0e 94 37 01 	call	0x26e	; 0x26e <autoRPMmode>
     2d4:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     2d8:	80 91 c6 44 	lds	r24, 0x44C6	; 0x8044c6 <fan3>
     2dc:	90 91 c7 44 	lds	r25, 0x44C7	; 0x8044c7 <fan3+0x1>
     2e0:	02 97       	sbiw	r24, 0x02	; 2
     2e2:	41 f4       	brne	.+16     	; 0x2f4 <handleFansInAuto+0x54>
     2e4:	80 91 af 4a 	lds	r24, 0x4AAF	; 0x804aaf <temperature>
     2e8:	90 91 b0 4a 	lds	r25, 0x4AB0	; 0x804ab0 <temperature+0x1>
     2ec:	0e 94 37 01 	call	0x26e	; 0x26e <autoRPMmode>
     2f0:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     2f4:	80 91 c2 44 	lds	r24, 0x44C2	; 0x8044c2 <fan4>
     2f8:	90 91 c3 44 	lds	r25, 0x44C3	; 0x8044c3 <fan4+0x1>
     2fc:	02 97       	sbiw	r24, 0x02	; 2
     2fe:	41 f4       	brne	.+16     	; 0x310 <handleFansInAuto+0x70>
     300:	80 91 af 4a 	lds	r24, 0x4AAF	; 0x804aaf <temperature>
     304:	90 91 b0 4a 	lds	r25, 0x4AB0	; 0x804ab0 <temperature+0x1>
     308:	0e 94 37 01 	call	0x26e	; 0x26e <autoRPMmode>
     30c:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     310:	08 95       	ret

00000312 <startFansAfterDiagnose>:
     312:	80 91 c3 4a 	lds	r24, 0x4AC3	; 0x804ac3 <SavedFan1State>
     316:	90 91 c4 4a 	lds	r25, 0x4AC4	; 0x804ac4 <SavedFan1State+0x1>
     31a:	81 30       	cpi	r24, 0x01	; 1
     31c:	91 05       	cpc	r25, r1
     31e:	49 f4       	brne	.+18     	; 0x332 <startFansAfterDiagnose+0x20>
     320:	81 e0       	ldi	r24, 0x01	; 1
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	80 93 ce 44 	sts	0x44CE, r24	; 0x8044ce <fan1>
     328:	90 93 cf 44 	sts	0x44CF, r25	; 0x8044cf <fan1+0x1>
     32c:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     330:	10 c0       	rjmp	.+32     	; 0x352 <startFansAfterDiagnose+0x40>
     332:	82 30       	cpi	r24, 0x02	; 2
     334:	91 05       	cpc	r25, r1
     336:	39 f4       	brne	.+14     	; 0x346 <startFansAfterDiagnose+0x34>
     338:	82 e0       	ldi	r24, 0x02	; 2
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	80 93 ce 44 	sts	0x44CE, r24	; 0x8044ce <fan1>
     340:	90 93 cf 44 	sts	0x44CF, r25	; 0x8044cf <fan1+0x1>
     344:	06 c0       	rjmp	.+12     	; 0x352 <startFansAfterDiagnose+0x40>
     346:	89 2b       	or	r24, r25
     348:	21 f4       	brne	.+8      	; 0x352 <startFansAfterDiagnose+0x40>
     34a:	10 92 ce 44 	sts	0x44CE, r1	; 0x8044ce <fan1>
     34e:	10 92 cf 44 	sts	0x44CF, r1	; 0x8044cf <fan1+0x1>
     352:	80 91 bc 4a 	lds	r24, 0x4ABC	; 0x804abc <SavedFan2State>
     356:	90 91 bd 4a 	lds	r25, 0x4ABD	; 0x804abd <SavedFan2State+0x1>
     35a:	81 30       	cpi	r24, 0x01	; 1
     35c:	91 05       	cpc	r25, r1
     35e:	49 f4       	brne	.+18     	; 0x372 <startFansAfterDiagnose+0x60>
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	80 93 ca 44 	sts	0x44CA, r24	; 0x8044ca <fan2>
     368:	90 93 cb 44 	sts	0x44CB, r25	; 0x8044cb <fan2+0x1>
     36c:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     370:	10 c0       	rjmp	.+32     	; 0x392 <startFansAfterDiagnose+0x80>
     372:	82 30       	cpi	r24, 0x02	; 2
     374:	91 05       	cpc	r25, r1
     376:	39 f4       	brne	.+14     	; 0x386 <startFansAfterDiagnose+0x74>
     378:	82 e0       	ldi	r24, 0x02	; 2
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	80 93 ca 44 	sts	0x44CA, r24	; 0x8044ca <fan2>
     380:	90 93 cb 44 	sts	0x44CB, r25	; 0x8044cb <fan2+0x1>
     384:	06 c0       	rjmp	.+12     	; 0x392 <startFansAfterDiagnose+0x80>
     386:	89 2b       	or	r24, r25
     388:	21 f4       	brne	.+8      	; 0x392 <startFansAfterDiagnose+0x80>
     38a:	10 92 ca 44 	sts	0x44CA, r1	; 0x8044ca <fan2>
     38e:	10 92 cb 44 	sts	0x44CB, r1	; 0x8044cb <fan2+0x1>
     392:	80 91 b2 4a 	lds	r24, 0x4AB2	; 0x804ab2 <SavedFan3State>
     396:	90 91 b3 4a 	lds	r25, 0x4AB3	; 0x804ab3 <SavedFan3State+0x1>
     39a:	81 30       	cpi	r24, 0x01	; 1
     39c:	91 05       	cpc	r25, r1
     39e:	49 f4       	brne	.+18     	; 0x3b2 <startFansAfterDiagnose+0xa0>
     3a0:	81 e0       	ldi	r24, 0x01	; 1
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	80 93 c6 44 	sts	0x44C6, r24	; 0x8044c6 <fan3>
     3a8:	90 93 c7 44 	sts	0x44C7, r25	; 0x8044c7 <fan3+0x1>
     3ac:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     3b0:	10 c0       	rjmp	.+32     	; 0x3d2 <startFansAfterDiagnose+0xc0>
     3b2:	82 30       	cpi	r24, 0x02	; 2
     3b4:	91 05       	cpc	r25, r1
     3b6:	39 f4       	brne	.+14     	; 0x3c6 <startFansAfterDiagnose+0xb4>
     3b8:	82 e0       	ldi	r24, 0x02	; 2
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	80 93 c6 44 	sts	0x44C6, r24	; 0x8044c6 <fan3>
     3c0:	90 93 c7 44 	sts	0x44C7, r25	; 0x8044c7 <fan3+0x1>
     3c4:	06 c0       	rjmp	.+12     	; 0x3d2 <startFansAfterDiagnose+0xc0>
     3c6:	89 2b       	or	r24, r25
     3c8:	21 f4       	brne	.+8      	; 0x3d2 <startFansAfterDiagnose+0xc0>
     3ca:	10 92 c6 44 	sts	0x44C6, r1	; 0x8044c6 <fan3>
     3ce:	10 92 c7 44 	sts	0x44C7, r1	; 0x8044c7 <fan3+0x1>
     3d2:	80 91 44 4a 	lds	r24, 0x4A44	; 0x804a44 <SavedFan4State>
     3d6:	90 91 45 4a 	lds	r25, 0x4A45	; 0x804a45 <SavedFan4State+0x1>
     3da:	81 30       	cpi	r24, 0x01	; 1
     3dc:	91 05       	cpc	r25, r1
     3de:	49 f4       	brne	.+18     	; 0x3f2 <startFansAfterDiagnose+0xe0>
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	80 93 c2 44 	sts	0x44C2, r24	; 0x8044c2 <fan4>
     3e8:	90 93 c3 44 	sts	0x44C3, r25	; 0x8044c3 <fan4+0x1>
     3ec:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     3f0:	08 95       	ret
     3f2:	82 30       	cpi	r24, 0x02	; 2
     3f4:	91 05       	cpc	r25, r1
     3f6:	39 f4       	brne	.+14     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     3f8:	82 e0       	ldi	r24, 0x02	; 2
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	80 93 c2 44 	sts	0x44C2, r24	; 0x8044c2 <fan4>
     400:	90 93 c3 44 	sts	0x44C3, r25	; 0x8044c3 <fan4+0x1>
     404:	08 95       	ret
     406:	89 2b       	or	r24, r25
     408:	21 f4       	brne	.+8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     40a:	10 92 c2 44 	sts	0x44C2, r1	; 0x8044c2 <fan4>
     40e:	10 92 c3 44 	sts	0x44C3, r1	; 0x8044c3 <fan4+0x1>
     412:	08 95       	ret

00000414 <saveFanModes>:
     414:	80 91 ce 44 	lds	r24, 0x44CE	; 0x8044ce <fan1>
     418:	90 91 cf 44 	lds	r25, 0x44CF	; 0x8044cf <fan1+0x1>
     41c:	80 93 c3 4a 	sts	0x4AC3, r24	; 0x804ac3 <SavedFan1State>
     420:	90 93 c4 4a 	sts	0x4AC4, r25	; 0x804ac4 <SavedFan1State+0x1>
     424:	80 91 ca 44 	lds	r24, 0x44CA	; 0x8044ca <fan2>
     428:	90 91 cb 44 	lds	r25, 0x44CB	; 0x8044cb <fan2+0x1>
     42c:	80 93 bc 4a 	sts	0x4ABC, r24	; 0x804abc <SavedFan2State>
     430:	90 93 bd 4a 	sts	0x4ABD, r25	; 0x804abd <SavedFan2State+0x1>
     434:	80 91 c6 44 	lds	r24, 0x44C6	; 0x8044c6 <fan3>
     438:	90 91 c7 44 	lds	r25, 0x44C7	; 0x8044c7 <fan3+0x1>
     43c:	80 93 b2 4a 	sts	0x4AB2, r24	; 0x804ab2 <SavedFan3State>
     440:	90 93 b3 4a 	sts	0x4AB3, r25	; 0x804ab3 <SavedFan3State+0x1>
     444:	80 91 c2 44 	lds	r24, 0x44C2	; 0x8044c2 <fan4>
     448:	90 91 c3 44 	lds	r25, 0x44C3	; 0x8044c3 <fan4+0x1>
     44c:	80 93 44 4a 	sts	0x4A44, r24	; 0x804a44 <SavedFan4State>
     450:	90 93 45 4a 	sts	0x4A45, r25	; 0x804a45 <SavedFan4State+0x1>
     454:	08 95       	ret

00000456 <AHT10_read>:
     456:	cf 93       	push	r28
     458:	df 93       	push	r29
     45a:	cd b7       	in	r28, 0x3d	; 61
     45c:	de b7       	in	r29, 0x3e	; 62
     45e:	26 97       	sbiw	r28, 0x06	; 6
     460:	cd bf       	out	0x3d, r28	; 61
     462:	de bf       	out	0x3e, r29	; 62
     464:	6c ea       	ldi	r22, 0xAC	; 172
     466:	88 e3       	ldi	r24, 0x38	; 56
     468:	0e 94 cf 00 	call	0x19e	; 0x19e <I2C_M_write>
     46c:	2f e5       	ldi	r18, 0x5F	; 95
     46e:	8a ee       	ldi	r24, 0xEA	; 234
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	21 50       	subi	r18, 0x01	; 1
     474:	80 40       	sbci	r24, 0x00	; 0
     476:	90 40       	sbci	r25, 0x00	; 0
     478:	e1 f7       	brne	.-8      	; 0x472 <AHT10_read+0x1c>
     47a:	00 c0       	rjmp	.+0      	; 0x47c <AHT10_read+0x26>
     47c:	00 00       	nop
     47e:	46 e0       	ldi	r20, 0x06	; 6
     480:	be 01       	movw	r22, r28
     482:	6f 5f       	subi	r22, 0xFF	; 255
     484:	7f 4f       	sbci	r23, 0xFF	; 255
     486:	88 e3       	ldi	r24, 0x38	; 56
     488:	0e 94 ef 00 	call	0x1de	; 0x1de <I2C_M_read>
     48c:	6c 81       	ldd	r22, Y+4	; 0x04
     48e:	6f 70       	andi	r22, 0x0F	; 15
     490:	86 2f       	mov	r24, r22
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	a0 e0       	ldi	r26, 0x00	; 0
     496:	b0 e0       	ldi	r27, 0x00	; 0
     498:	ba 2f       	mov	r27, r26
     49a:	a9 2f       	mov	r26, r25
     49c:	98 2f       	mov	r25, r24
     49e:	88 27       	eor	r24, r24
     4a0:	2d 81       	ldd	r18, Y+5	; 0x05
     4a2:	82 2b       	or	r24, r18
     4a4:	ba 2f       	mov	r27, r26
     4a6:	a9 2f       	mov	r26, r25
     4a8:	98 2f       	mov	r25, r24
     4aa:	88 27       	eor	r24, r24
     4ac:	2e 81       	ldd	r18, Y+6	; 0x06
     4ae:	bc 01       	movw	r22, r24
     4b0:	cd 01       	movw	r24, r26
     4b2:	62 2b       	or	r22, r18
     4b4:	0e 94 8c 09 	call	0x1318	; 0x1318 <__floatunsisf>
     4b8:	20 e0       	ldi	r18, 0x00	; 0
     4ba:	30 e0       	ldi	r19, 0x00	; 0
     4bc:	48 e4       	ldi	r20, 0x48	; 72
     4be:	53 e4       	ldi	r21, 0x43	; 67
     4c0:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__mulsf3>
     4c4:	20 e0       	ldi	r18, 0x00	; 0
     4c6:	30 e0       	ldi	r19, 0x00	; 0
     4c8:	40 e8       	ldi	r20, 0x80	; 128
     4ca:	55 e3       	ldi	r21, 0x35	; 53
     4cc:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__mulsf3>
     4d0:	0e 94 5d 09 	call	0x12ba	; 0x12ba <__fixunssfsi>
     4d4:	8e ec       	ldi	r24, 0xCE	; 206
     4d6:	86 0f       	add	r24, r22
     4d8:	26 96       	adiw	r28, 0x06	; 6
     4da:	cd bf       	out	0x3d, r28	; 61
     4dc:	de bf       	out	0x3e, r29	; 62
     4de:	df 91       	pop	r29
     4e0:	cf 91       	pop	r28
     4e2:	08 95       	ret

000004e4 <printHomeScreen>:
     4e4:	8a e1       	ldi	r24, 0x1A	; 26
     4e6:	9a e4       	ldi	r25, 0x4A	; 74
     4e8:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     4ec:	8a e1       	ldi	r24, 0x1A	; 26
     4ee:	9a e4       	ldi	r25, 0x4A	; 74
     4f0:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     4f4:	8a e1       	ldi	r24, 0x1A	; 26
     4f6:	9a e4       	ldi	r25, 0x4A	; 74
     4f8:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     4fc:	88 ed       	ldi	r24, 0xD8	; 216
     4fe:	94 e4       	ldi	r25, 0x44	; 68
     500:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     504:	85 ee       	ldi	r24, 0xE5	; 229
     506:	94 e4       	ldi	r25, 0x44	; 68
     508:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     50c:	8a e1       	ldi	r24, 0x1A	; 26
     50e:	9a e4       	ldi	r25, 0x4A	; 74
     510:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     514:	89 ef       	ldi	r24, 0xF9	; 249
     516:	94 e4       	ldi	r25, 0x44	; 68
     518:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     51c:	08 95       	ret

0000051e <fanOff>:
     51e:	80 91 41 4a 	lds	r24, 0x4A41	; 0x804a41 <chosenFan>
     522:	80 ff       	sbrs	r24, 0
     524:	13 c0       	rjmp	.+38     	; 0x54c <fanOff+0x2e>
     526:	81 e0       	ldi	r24, 0x01	; 1
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	80 93 ce 44 	sts	0x44CE, r24	; 0x8044ce <fan1>
     52e:	90 93 cf 44 	sts	0x44CF, r25	; 0x8044cf <fan1+0x1>
     532:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     536:	8d e1       	ldi	r24, 0x1D	; 29
     538:	95 e4       	ldi	r25, 0x45	; 69
     53a:	9f 93       	push	r25
     53c:	8f 93       	push	r24
     53e:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     542:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     546:	0f 90       	pop	r0
     548:	0f 90       	pop	r0
     54a:	08 95       	ret
     54c:	81 ff       	sbrs	r24, 1
     54e:	13 c0       	rjmp	.+38     	; 0x576 <fanOff+0x58>
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	80 93 ca 44 	sts	0x44CA, r24	; 0x8044ca <fan2>
     558:	90 93 cb 44 	sts	0x44CB, r25	; 0x8044cb <fan2+0x1>
     55c:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     560:	86 e3       	ldi	r24, 0x36	; 54
     562:	95 e4       	ldi	r25, 0x45	; 69
     564:	9f 93       	push	r25
     566:	8f 93       	push	r24
     568:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     56c:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     570:	0f 90       	pop	r0
     572:	0f 90       	pop	r0
     574:	08 95       	ret
     576:	82 ff       	sbrs	r24, 2
     578:	13 c0       	rjmp	.+38     	; 0x5a0 <fanOff+0x82>
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	80 93 c6 44 	sts	0x44C6, r24	; 0x8044c6 <fan3>
     582:	90 93 c7 44 	sts	0x44C7, r25	; 0x8044c7 <fan3+0x1>
     586:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     58a:	8f e4       	ldi	r24, 0x4F	; 79
     58c:	95 e4       	ldi	r25, 0x45	; 69
     58e:	9f 93       	push	r25
     590:	8f 93       	push	r24
     592:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     596:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     59a:	0f 90       	pop	r0
     59c:	0f 90       	pop	r0
     59e:	08 95       	ret
     5a0:	83 ff       	sbrs	r24, 3
     5a2:	12 c0       	rjmp	.+36     	; 0x5c8 <fanOff+0xaa>
     5a4:	81 e0       	ldi	r24, 0x01	; 1
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	80 93 c2 44 	sts	0x44C2, r24	; 0x8044c2 <fan4>
     5ac:	90 93 c3 44 	sts	0x44C3, r25	; 0x8044c3 <fan4+0x1>
     5b0:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     5b4:	88 e6       	ldi	r24, 0x68	; 104
     5b6:	95 e4       	ldi	r25, 0x45	; 69
     5b8:	9f 93       	push	r25
     5ba:	8f 93       	push	r24
     5bc:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     5c0:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     5c4:	0f 90       	pop	r0
     5c6:	0f 90       	pop	r0
     5c8:	08 95       	ret

000005ca <fanAuto>:
     5ca:	80 91 41 4a 	lds	r24, 0x4A41	; 0x804a41 <chosenFan>
     5ce:	80 ff       	sbrs	r24, 0
     5d0:	11 c0       	rjmp	.+34     	; 0x5f4 <fanAuto+0x2a>
     5d2:	82 e0       	ldi	r24, 0x02	; 2
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	80 93 ce 44 	sts	0x44CE, r24	; 0x8044ce <fan1>
     5da:	90 93 cf 44 	sts	0x44CF, r25	; 0x8044cf <fan1+0x1>
     5de:	81 e8       	ldi	r24, 0x81	; 129
     5e0:	95 e4       	ldi	r25, 0x45	; 69
     5e2:	9f 93       	push	r25
     5e4:	8f 93       	push	r24
     5e6:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     5ea:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	08 95       	ret
     5f4:	81 ff       	sbrs	r24, 1
     5f6:	11 c0       	rjmp	.+34     	; 0x61a <fanAuto+0x50>
     5f8:	82 e0       	ldi	r24, 0x02	; 2
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	80 93 ca 44 	sts	0x44CA, r24	; 0x8044ca <fan2>
     600:	90 93 cb 44 	sts	0x44CB, r25	; 0x8044cb <fan2+0x1>
     604:	8b e9       	ldi	r24, 0x9B	; 155
     606:	95 e4       	ldi	r25, 0x45	; 69
     608:	9f 93       	push	r25
     60a:	8f 93       	push	r24
     60c:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     610:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     614:	0f 90       	pop	r0
     616:	0f 90       	pop	r0
     618:	08 95       	ret
     61a:	82 ff       	sbrs	r24, 2
     61c:	11 c0       	rjmp	.+34     	; 0x640 <fanAuto+0x76>
     61e:	82 e0       	ldi	r24, 0x02	; 2
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	80 93 c6 44 	sts	0x44C6, r24	; 0x8044c6 <fan3>
     626:	90 93 c7 44 	sts	0x44C7, r25	; 0x8044c7 <fan3+0x1>
     62a:	85 eb       	ldi	r24, 0xB5	; 181
     62c:	95 e4       	ldi	r25, 0x45	; 69
     62e:	9f 93       	push	r25
     630:	8f 93       	push	r24
     632:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     636:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     63a:	0f 90       	pop	r0
     63c:	0f 90       	pop	r0
     63e:	08 95       	ret
     640:	83 ff       	sbrs	r24, 3
     642:	10 c0       	rjmp	.+32     	; 0x664 <fanAuto+0x9a>
     644:	82 e0       	ldi	r24, 0x02	; 2
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	80 93 c2 44 	sts	0x44C2, r24	; 0x8044c2 <fan4>
     64c:	90 93 c3 44 	sts	0x44C3, r25	; 0x8044c3 <fan4+0x1>
     650:	8f ec       	ldi	r24, 0xCF	; 207
     652:	95 e4       	ldi	r25, 0x45	; 69
     654:	9f 93       	push	r25
     656:	8f 93       	push	r24
     658:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     65c:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	08 95       	ret

00000666 <fanManual>:
     666:	80 91 41 4a 	lds	r24, 0x4A41	; 0x804a41 <chosenFan>
     66a:	80 ff       	sbrs	r24, 0
     66c:	0f c0       	rjmp	.+30     	; 0x68c <fanManual+0x26>
     66e:	10 92 ce 44 	sts	0x44CE, r1	; 0x8044ce <fan1>
     672:	10 92 cf 44 	sts	0x44CF, r1	; 0x8044cf <fan1+0x1>
     676:	80 91 48 4a 	lds	r24, 0x4A48	; 0x804a48 <manual_rpm_value>
     67a:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     67e:	89 ee       	ldi	r24, 0xE9	; 233
     680:	95 e4       	ldi	r25, 0x45	; 69
     682:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     686:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     68a:	08 95       	ret
     68c:	81 ff       	sbrs	r24, 1
     68e:	13 c0       	rjmp	.+38     	; 0x6b6 <fanManual+0x50>
     690:	10 92 ca 44 	sts	0x44CA, r1	; 0x8044ca <fan2>
     694:	10 92 cb 44 	sts	0x44CB, r1	; 0x8044cb <fan2+0x1>
     698:	80 91 48 4a 	lds	r24, 0x4A48	; 0x804a48 <manual_rpm_value>
     69c:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     6a0:	87 e0       	ldi	r24, 0x07	; 7
     6a2:	96 e4       	ldi	r25, 0x46	; 70
     6a4:	9f 93       	push	r25
     6a6:	8f 93       	push	r24
     6a8:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     6ac:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     6b0:	0f 90       	pop	r0
     6b2:	0f 90       	pop	r0
     6b4:	08 95       	ret
     6b6:	82 ff       	sbrs	r24, 2
     6b8:	13 c0       	rjmp	.+38     	; 0x6e0 <fanManual+0x7a>
     6ba:	10 92 c6 44 	sts	0x44C6, r1	; 0x8044c6 <fan3>
     6be:	10 92 c7 44 	sts	0x44C7, r1	; 0x8044c7 <fan3+0x1>
     6c2:	80 91 48 4a 	lds	r24, 0x4A48	; 0x804a48 <manual_rpm_value>
     6c6:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     6ca:	83 e2       	ldi	r24, 0x23	; 35
     6cc:	96 e4       	ldi	r25, 0x46	; 70
     6ce:	9f 93       	push	r25
     6d0:	8f 93       	push	r24
     6d2:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     6d6:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     6da:	0f 90       	pop	r0
     6dc:	0f 90       	pop	r0
     6de:	08 95       	ret
     6e0:	83 ff       	sbrs	r24, 3
     6e2:	12 c0       	rjmp	.+36     	; 0x708 <fanManual+0xa2>
     6e4:	10 92 c2 44 	sts	0x44C2, r1	; 0x8044c2 <fan4>
     6e8:	10 92 c3 44 	sts	0x44C3, r1	; 0x8044c3 <fan4+0x1>
     6ec:	80 91 48 4a 	lds	r24, 0x4A48	; 0x804a48 <manual_rpm_value>
     6f0:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     6f4:	8f e3       	ldi	r24, 0x3F	; 63
     6f6:	96 e4       	ldi	r25, 0x46	; 70
     6f8:	9f 93       	push	r25
     6fa:	8f 93       	push	r24
     6fc:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     700:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     704:	0f 90       	pop	r0
     706:	0f 90       	pop	r0
     708:	08 95       	ret

0000070a <PrintSelectFanMode>:
     70a:	8b e5       	ldi	r24, 0x5B	; 91
     70c:	96 e4       	ldi	r25, 0x46	; 70
     70e:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     712:	8a e1       	ldi	r24, 0x1A	; 26
     714:	9a e4       	ldi	r25, 0x4A	; 74
     716:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     71a:	8d e6       	ldi	r24, 0x6D	; 109
     71c:	96 e4       	ldi	r25, 0x46	; 70
     71e:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     722:	08 95       	ret

00000724 <printOverview>:
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	8e e8       	ldi	r24, 0x8E	; 142
     72a:	96 e4       	ldi	r25, 0x46	; 70
     72c:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     730:	8a e1       	ldi	r24, 0x1A	; 26
     732:	9a e4       	ldi	r25, 0x4A	; 74
     734:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     738:	ce ec       	ldi	r28, 0xCE	; 206
     73a:	d4 e4       	ldi	r29, 0x44	; 68
     73c:	8b 81       	ldd	r24, Y+3	; 0x03
     73e:	8f 93       	push	r24
     740:	8a 81       	ldd	r24, Y+2	; 0x02
     742:	8f 93       	push	r24
     744:	89 e9       	ldi	r24, 0x99	; 153
     746:	96 e4       	ldi	r25, 0x46	; 70
     748:	9f 93       	push	r25
     74a:	8f 93       	push	r24
     74c:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     750:	e8 81       	ld	r30, Y
     752:	f9 81       	ldd	r31, Y+1	; 0x01
     754:	ee 0f       	add	r30, r30
     756:	ff 1f       	adc	r31, r31
     758:	ee 52       	subi	r30, 0x2E	; 46
     75a:	fb 4b       	sbci	r31, 0xBB	; 187
     75c:	81 81       	ldd	r24, Z+1	; 0x01
     75e:	8f 93       	push	r24
     760:	80 81       	ld	r24, Z
     762:	8f 93       	push	r24
     764:	89 ea       	ldi	r24, 0xA9	; 169
     766:	96 e4       	ldi	r25, 0x46	; 70
     768:	9f 93       	push	r25
     76a:	8f 93       	push	r24
     76c:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     770:	ca ec       	ldi	r28, 0xCA	; 202
     772:	d4 e4       	ldi	r29, 0x44	; 68
     774:	8b 81       	ldd	r24, Y+3	; 0x03
     776:	8f 93       	push	r24
     778:	8a 81       	ldd	r24, Y+2	; 0x02
     77a:	8f 93       	push	r24
     77c:	8b eb       	ldi	r24, 0xBB	; 187
     77e:	96 e4       	ldi	r25, 0x46	; 70
     780:	9f 93       	push	r25
     782:	8f 93       	push	r24
     784:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     788:	e8 81       	ld	r30, Y
     78a:	f9 81       	ldd	r31, Y+1	; 0x01
     78c:	ee 0f       	add	r30, r30
     78e:	ff 1f       	adc	r31, r31
     790:	ee 52       	subi	r30, 0x2E	; 46
     792:	fb 4b       	sbci	r31, 0xBB	; 187
     794:	81 81       	ldd	r24, Z+1	; 0x01
     796:	8f 93       	push	r24
     798:	80 81       	ld	r24, Z
     79a:	8f 93       	push	r24
     79c:	8b ec       	ldi	r24, 0xCB	; 203
     79e:	96 e4       	ldi	r25, 0x46	; 70
     7a0:	9f 93       	push	r25
     7a2:	8f 93       	push	r24
     7a4:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     7a8:	c6 ec       	ldi	r28, 0xC6	; 198
     7aa:	d4 e4       	ldi	r29, 0x44	; 68
     7ac:	8b 81       	ldd	r24, Y+3	; 0x03
     7ae:	8f 93       	push	r24
     7b0:	8a 81       	ldd	r24, Y+2	; 0x02
     7b2:	8f 93       	push	r24
     7b4:	8d ed       	ldi	r24, 0xDD	; 221
     7b6:	96 e4       	ldi	r25, 0x46	; 70
     7b8:	9f 93       	push	r25
     7ba:	8f 93       	push	r24
     7bc:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     7c0:	e8 81       	ld	r30, Y
     7c2:	f9 81       	ldd	r31, Y+1	; 0x01
     7c4:	ee 0f       	add	r30, r30
     7c6:	ff 1f       	adc	r31, r31
     7c8:	ee 52       	subi	r30, 0x2E	; 46
     7ca:	fb 4b       	sbci	r31, 0xBB	; 187
     7cc:	81 81       	ldd	r24, Z+1	; 0x01
     7ce:	8f 93       	push	r24
     7d0:	80 81       	ld	r24, Z
     7d2:	8f 93       	push	r24
     7d4:	8d ee       	ldi	r24, 0xED	; 237
     7d6:	96 e4       	ldi	r25, 0x46	; 70
     7d8:	9f 93       	push	r25
     7da:	8f 93       	push	r24
     7dc:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     7e0:	c2 ec       	ldi	r28, 0xC2	; 194
     7e2:	d4 e4       	ldi	r29, 0x44	; 68
     7e4:	8b 81       	ldd	r24, Y+3	; 0x03
     7e6:	8f 93       	push	r24
     7e8:	8a 81       	ldd	r24, Y+2	; 0x02
     7ea:	8f 93       	push	r24
     7ec:	8f ef       	ldi	r24, 0xFF	; 255
     7ee:	96 e4       	ldi	r25, 0x46	; 70
     7f0:	9f 93       	push	r25
     7f2:	8f 93       	push	r24
     7f4:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     7f8:	e8 81       	ld	r30, Y
     7fa:	f9 81       	ldd	r31, Y+1	; 0x01
     7fc:	ee 0f       	add	r30, r30
     7fe:	ff 1f       	adc	r31, r31
     800:	ee 52       	subi	r30, 0x2E	; 46
     802:	fb 4b       	sbci	r31, 0xBB	; 187
     804:	81 81       	ldd	r24, Z+1	; 0x01
     806:	8f 93       	push	r24
     808:	80 81       	ld	r24, Z
     80a:	8f 93       	push	r24
     80c:	8f e0       	ldi	r24, 0x0F	; 15
     80e:	97 e4       	ldi	r25, 0x47	; 71
     810:	9f 93       	push	r25
     812:	8f 93       	push	r24
     814:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     818:	8d b7       	in	r24, 0x3d	; 61
     81a:	9e b7       	in	r25, 0x3e	; 62
     81c:	80 96       	adiw	r24, 0x20	; 32
     81e:	8d bf       	out	0x3d, r24	; 61
     820:	9e bf       	out	0x3e, r25	; 62
     822:	0e 94 2b 02 	call	0x456	; 0x456 <AHT10_read>
     826:	28 2f       	mov	r18, r24
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	20 93 af 4a 	sts	0x4AAF, r18	; 0x804aaf <temperature>
     82e:	30 93 b0 4a 	sts	0x4AB0, r19	; 0x804ab0 <temperature+0x1>
     832:	1f 92       	push	r1
     834:	8f 93       	push	r24
     836:	81 e2       	ldi	r24, 0x21	; 33
     838:	97 e4       	ldi	r25, 0x47	; 71
     83a:	9f 93       	push	r25
     83c:	8f 93       	push	r24
     83e:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     842:	8a e1       	ldi	r24, 0x1A	; 26
     844:	9a e4       	ldi	r25, 0x4A	; 74
     846:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     84a:	8a e1       	ldi	r24, 0x1A	; 26
     84c:	9a e4       	ldi	r25, 0x4A	; 74
     84e:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     852:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>
     856:	0f 90       	pop	r0
     858:	0f 90       	pop	r0
     85a:	0f 90       	pop	r0
     85c:	0f 90       	pop	r0
     85e:	df 91       	pop	r29
     860:	cf 91       	pop	r28
     862:	08 95       	ret

00000864 <printSelectFan>:
     864:	83 e3       	ldi	r24, 0x33	; 51
     866:	97 e4       	ldi	r25, 0x47	; 71
     868:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     86c:	8f e3       	ldi	r24, 0x3F	; 63
     86e:	97 e4       	ldi	r25, 0x47	; 71
     870:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     874:	8a e5       	ldi	r24, 0x5A	; 90
     876:	97 e4       	ldi	r25, 0x47	; 71
     878:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     87c:	08 95       	ret

0000087e <compareCommands>:
     87e:	0f 93       	push	r16
     880:	1f 93       	push	r17
     882:	cf 93       	push	r28
     884:	8c 01       	movw	r16, r24
     886:	c0 e0       	ldi	r28, 0x00	; 0
     888:	0c c0       	rjmp	.+24     	; 0x8a2 <compareCommands+0x24>
     88a:	84 e6       	ldi	r24, 0x64	; 100
     88c:	c8 9f       	mul	r28, r24
     88e:	b0 01       	movw	r22, r0
     890:	11 24       	eor	r1, r1
     892:	6e 5e       	subi	r22, 0xEE	; 238
     894:	7f 4b       	sbci	r23, 0xBF	; 191
     896:	c8 01       	movw	r24, r16
     898:	0e 94 ef 0a 	call	0x15de	; 0x15de <strcmp>
     89c:	89 2b       	or	r24, r25
     89e:	29 f0       	breq	.+10     	; 0x8aa <compareCommands+0x2c>
     8a0:	cf 5f       	subi	r28, 0xFF	; 255
     8a2:	cc 30       	cpi	r28, 0x0C	; 12
     8a4:	90 f3       	brcs	.-28     	; 0x88a <compareCommands+0xc>
     8a6:	8f ef       	ldi	r24, 0xFF	; 255
     8a8:	01 c0       	rjmp	.+2      	; 0x8ac <compareCommands+0x2e>
     8aa:	8c 2f       	mov	r24, r28
     8ac:	cf 91       	pop	r28
     8ae:	1f 91       	pop	r17
     8b0:	0f 91       	pop	r16
     8b2:	08 95       	ret

000008b4 <USART3_sendChar>:
     8b4:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     8b8:	95 ff       	sbrs	r25, 5
     8ba:	fc cf       	rjmp	.-8      	; 0x8b4 <USART3_sendChar>
     8bc:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
     8c0:	08 95       	ret

000008c2 <USART3_printChar>:
     8c2:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <USART3_sendChar>
     8c6:	80 e0       	ldi	r24, 0x00	; 0
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	08 95       	ret

000008cc <USART3_readChar>:


char USART3_readChar(void) //reading characters from Uart
{
     8cc:	cf 93       	push	r28
	while (!(USART3.STATUS & USART_RXCIF_bm))
     8ce:	80 91 64 08 	lds	r24, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     8d2:	88 23       	and	r24, r24
     8d4:	e4 f7       	brge	.-8      	; 0x8ce <USART3_readChar+0x2>
	{
		;
	}
	//return USART3.RXDATAL;
	uint8_t src = USART3.RXDATAL ;
     8d6:	c0 91 60 08 	lds	r28, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7e0860>
	USART3_sendChar(src);
     8da:	8c 2f       	mov	r24, r28
     8dc:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <USART3_sendChar>
	return src;
}
     8e0:	8c 2f       	mov	r24, r28
     8e2:	cf 91       	pop	r28
     8e4:	08 95       	ret

000008e6 <USART3_init>:

void USART3_init(void)
{
	
	PORTB.DIRSET = PIN0_bm ; //TX -pin as output
     8e6:	e0 e2       	ldi	r30, 0x20	; 32
     8e8:	f4 e0       	ldi	r31, 0x04	; 4
     8ea:	81 e0       	ldi	r24, 0x01	; 1
     8ec:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRCLR = PIN1_bm ; //RX -pin as input
     8ee:	82 e0       	ldi	r24, 0x02	; 2
     8f0:	82 83       	std	Z+2, r24	; 0x02
	USART3.CTRLA |= (1 << USART_RXCIE_bp);
     8f2:	e0 e6       	ldi	r30, 0x60	; 96
     8f4:	f8 e0       	ldi	r31, 0x08	; 8
     8f6:	85 81       	ldd	r24, Z+5	; 0x05
     8f8:	80 68       	ori	r24, 0x80	; 128
     8fa:	85 83       	std	Z+5, r24	; 0x05
	USART3.BAUD = (uint16_t)USART3_BAUD_RATE(9600);
     8fc:	83 e8       	ldi	r24, 0x83	; 131
     8fe:	96 e0       	ldi	r25, 0x06	; 6
     900:	80 87       	std	Z+8, r24	; 0x08
     902:	91 87       	std	Z+9, r25	; 0x09
	USART3.CTRLB |= USART_RXEN_bm | USART_TXEN_bm ; // Enable both TX and RX
     904:	86 81       	ldd	r24, Z+6	; 0x06
     906:	80 6c       	ori	r24, 0xC0	; 192
     908:	86 83       	std	Z+6, r24	; 0x06
	stdout = &USART_stream;
     90a:	84 e0       	ldi	r24, 0x04	; 4
     90c:	90 e4       	ldi	r25, 0x40	; 64
     90e:	80 93 59 4c 	sts	0x4C59, r24	; 0x804c59 <__iob+0x2>
     912:	90 93 5a 4c 	sts	0x4C5A, r25	; 0x804c5a <__iob+0x3>
     916:	08 95       	ret

00000918 <PORT_init>:


void PORT_init(void)
{
	// Setter PIN0 som output (PWM-out)
	PORTD.DIRSET = PIN0_bm | PIN1_bm | PIN4_bm | PIN3_bm;
     918:	8b e1       	ldi	r24, 0x1B	; 27
     91a:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x7e0461>
     91e:	08 95       	ret

00000920 <TCA0_init>:


void TCA0_init(void)
{
	//set waveform output on PORT D
	PORTMUX.TCAROUTEA = PORTMUX_TCA0_PORTD_gc;
     920:	83 e0       	ldi	r24, 0x03	; 3
     922:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
	
	// enable compare channel 0, 1 and set single-slope PWM mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_CMP0EN_bm | TCA_SINGLE_CMP1EN_bm | TCA_SINGLE_WGMODE_SINGLESLOPE_gc;
     926:	e0 e0       	ldi	r30, 0x00	; 0
     928:	fa e0       	ldi	r31, 0x0A	; 10
     92a:	93 e3       	ldi	r25, 0x33	; 51
     92c:	91 83       	std	Z+1, r25	; 0x01
	
	 // enable split mode
    TCA0.SPLIT.CTRLD = TCA_SPLIT_SPLITM_bm; 
     92e:	21 e0       	ldi	r18, 0x01	; 1
     930:	23 83       	std	Z+3, r18	; 0x03
	
	// enable compare channel 0 for the higher byte, enable compare channel 0 for the lower byte
	TCA0.SPLIT.CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_LCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm | TCA_SPLIT_LCMP1EN_bm;    
     932:	91 83       	std	Z+1, r25	; 0x01
	
	
	// L0 = PIN0, L1=PIN1, H0=PIN3, H1=PIN4
	// set the PWM frequencies and duty cycles
    TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
     934:	9f e4       	ldi	r25, 0x4F	; 79
     936:	96 a3       	std	Z+38, r25	; 0x26
    TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MIN_VALUE;                           
     938:	10 a6       	std	Z+40, r1	; 0x28
    TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
     93a:	97 a3       	std	Z+39, r25	; 0x27
    TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MIN_VALUE;
     93c:	11 a6       	std	Z+41, r1	; 0x29
	
	//TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
    TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;                           
     93e:	12 a6       	std	Z+42, r1	; 0x2a
    //TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
    TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MIN_VALUE; 
     940:	13 a6       	std	Z+43, r1	; 0x2b
	
	TCA0.SPLIT.CTRLA = TCA_SPLIT_CLKSEL_DIV2_gc | TCA_SPLIT_ENABLE_bm;   // set clock source (sys_clk/4), and start timer         
     942:	80 83       	st	Z, r24
     944:	08 95       	ret

00000946 <TCB0_init>:
}


void TCB0_init(void)
{
	PORTB.DIR &= ~PIN4_bm;
     946:	e0 e2       	ldi	r30, 0x20	; 32
     948:	f4 e0       	ldi	r31, 0x04	; 4
     94a:	80 81       	ld	r24, Z
     94c:	8f 7e       	andi	r24, 0xEF	; 239
     94e:	80 83       	st	Z, r24
	PORTB.PIN4CTRL |= PORT_PULLUPEN_bm;
     950:	84 89       	ldd	r24, Z+20	; 0x14
     952:	88 60       	ori	r24, 0x08	; 8
     954:	84 8b       	std	Z+20, r24	; 0x14
	
	TCB0.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
     956:	e0 e0       	ldi	r30, 0x00	; 0
     958:	fb e0       	ldi	r31, 0x0B	; 11
     95a:	85 e0       	ldi	r24, 0x05	; 5
     95c:	80 83       	st	Z, r24
	TCB0.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
     95e:	84 e0       	ldi	r24, 0x04	; 4
     960:	81 83       	std	Z+1, r24	; 0x01
	
	TCB0.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
     962:	81 e0       	ldi	r24, 0x01	; 1
     964:	85 83       	std	Z+5, r24	; 0x05
	
	TCB0.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm ; // Capture event input enable
     966:	91 e4       	ldi	r25, 0x41	; 65
     968:	94 83       	std	Z+4, r25	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL0 = EVSYS_CHANNEL0_PORTB_PIN4_gc; //	input event channel 0, port b on pin 4
     96a:	e0 e0       	ldi	r30, 0x00	; 0
     96c:	f2 e0       	ldi	r31, 0x02	; 2
     96e:	9c e4       	ldi	r25, 0x4C	; 76
     970:	90 8b       	std	Z+16, r25	; 0x10
	EVSYS.USERTCB0CAPT = EVSYS_USER_CHANNEL0_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
     972:	86 af       	std	Z+62, r24	; 0x3e
     974:	08 95       	ret

00000976 <TCB1_init>:
}


void TCB1_init(void)
{
	PORTB.DIR &= ~PIN5_bm;
     976:	e0 e2       	ldi	r30, 0x20	; 32
     978:	f4 e0       	ldi	r31, 0x04	; 4
     97a:	80 81       	ld	r24, Z
     97c:	8f 7d       	andi	r24, 0xDF	; 223
     97e:	80 83       	st	Z, r24
	PORTB.PIN5CTRL |= PORT_PULLUPEN_bm;
     980:	85 89       	ldd	r24, Z+21	; 0x15
     982:	88 60       	ori	r24, 0x08	; 8
     984:	85 8b       	std	Z+21, r24	; 0x15
	
	
	TCB1.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
     986:	e0 e1       	ldi	r30, 0x10	; 16
     988:	fb e0       	ldi	r31, 0x0B	; 11
     98a:	85 e0       	ldi	r24, 0x05	; 5
     98c:	80 83       	st	Z, r24
	TCB1.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
     98e:	84 e0       	ldi	r24, 0x04	; 4
     990:	81 83       	std	Z+1, r24	; 0x01
	
	TCB1.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	85 83       	std	Z+5, r24	; 0x05
	
	TCB1.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm ; // Capture event input enable
     996:	81 e4       	ldi	r24, 0x41	; 65
     998:	84 83       	std	Z+4, r24	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL1 = EVSYS_CHANNEL1_PORTB_PIN5_gc; //	input event channel 0, port b on pin 4
     99a:	8d e4       	ldi	r24, 0x4D	; 77
     99c:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <__TEXT_REGION_LENGTH__+0x7e0211>
	EVSYS.USERTCB1CAPT = EVSYS_USER_CHANNEL1_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
     9a0:	82 e0       	ldi	r24, 0x02	; 2
     9a2:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__TEXT_REGION_LENGTH__+0x7e0240>
     9a6:	08 95       	ret

000009a8 <alarm>:
	
}

uint8_t alarm(uint8_t percentage)
{
	if (percentage < 90)
     9a8:	8a 35       	cpi	r24, 0x5A	; 90
     9aa:	10 f4       	brcc	.+4      	; 0x9b0 <alarm+0x8>
	{
		return 1;
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	08 95       	ret
	}
	else
	{
		return 0;
     9b0:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     9b2:	08 95       	ret

000009b4 <calculate_percentage>:

uint8_t calculate_percentage(float old_value, uint16_t current_value)
{
     9b4:	cf 92       	push	r12
     9b6:	df 92       	push	r13
     9b8:	ef 92       	push	r14
     9ba:	ff 92       	push	r15
     9bc:	6b 01       	movw	r12, r22
     9be:	7c 01       	movw	r14, r24
	return (current_value / old_value) * 100.0;
     9c0:	ba 01       	movw	r22, r20
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	0e 94 8c 09 	call	0x1318	; 0x1318 <__floatunsisf>
     9ca:	a7 01       	movw	r20, r14
     9cc:	96 01       	movw	r18, r12
     9ce:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__divsf3>
     9d2:	20 e0       	ldi	r18, 0x00	; 0
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	48 ec       	ldi	r20, 0xC8	; 200
     9d8:	52 e4       	ldi	r21, 0x42	; 66
     9da:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__mulsf3>
     9de:	0e 94 5d 09 	call	0x12ba	; 0x12ba <__fixunssfsi>
     9e2:	86 2f       	mov	r24, r22
}
     9e4:	ff 90       	pop	r15
     9e6:	ef 90       	pop	r14
     9e8:	df 90       	pop	r13
     9ea:	cf 90       	pop	r12
     9ec:	08 95       	ret

000009ee <RTC_init>:


void RTC_init(void)
{
	// Enables the source clock for the RTC counter
	RTC.CTRLA = RTC_RTCEN_bm | RTC_PRESCALER_DIV1_gc; // Enable RTC, select presaler
     9ee:	e0 e4       	ldi	r30, 0x40	; 64
     9f0:	f1 e0       	ldi	r31, 0x01	; 1
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	80 83       	st	Z, r24
	//RTC.INTCTRL = RTC_OVF_bm;
	RTC.CLKSEL = RTC_CLKSEL_OSC1K_gc; // Select source for the RTC clock
     9f6:	87 83       	std	Z+7, r24	; 0x07
	
	// Enables the PIT (Periodic Interrupt Timer)
	RTC.PITCTRLA = RTC_PITEN_bm | RTC_PERIOD_CYC1024_gc; // Enable PIT and select number of clock cycles between interrupt
     9f8:	99 e4       	ldi	r25, 0x49	; 73
     9fa:	90 8b       	std	Z+16, r25	; 0x10
	RTC.PITINTCTRL = RTC_PI_bm;	// Enable interrupt
     9fc:	82 8b       	std	Z+18, r24	; 0x12
     9fe:	08 95       	ret

00000a00 <__vector_6>:
}

// RTC interrupt
ISR(RTC_PIT_vect)
{
     a00:	1f 92       	push	r1
     a02:	0f 92       	push	r0
     a04:	0f b6       	in	r0, 0x3f	; 63
     a06:	0f 92       	push	r0
     a08:	11 24       	eor	r1, r1
     a0a:	8f 93       	push	r24
     a0c:	9f 93       	push	r25
	counter ++; // Counter represent seconds
     a0e:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <counter>
     a12:	90 91 c0 4a 	lds	r25, 0x4AC0	; 0x804ac0 <counter+0x1>
     a16:	01 96       	adiw	r24, 0x01	; 1
     a18:	80 93 bf 4a 	sts	0x4ABF, r24	; 0x804abf <counter>
     a1c:	90 93 c0 4a 	sts	0x4AC0, r25	; 0x804ac0 <counter+0x1>
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
     a20:	81 e0       	ldi	r24, 0x01	; 1
     a22:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x7e0153>
}
     a26:	9f 91       	pop	r25
     a28:	8f 91       	pop	r24
     a2a:	0f 90       	pop	r0
     a2c:	0f be       	out	0x3f, r0	; 63
     a2e:	0f 90       	pop	r0
     a30:	1f 90       	pop	r1
     a32:	18 95       	reti

00000a34 <__vector_14>:
{
	read_commands();
}

ISR(TCB0_INT_vect)// starting interrupt for reading pwm from fan1
{
     a34:	1f 92       	push	r1
     a36:	0f 92       	push	r0
     a38:	0f b6       	in	r0, 0x3f	; 63
     a3a:	0f 92       	push	r0
     a3c:	11 24       	eor	r1, r1
     a3e:	0b b6       	in	r0, 0x3b	; 59
     a40:	0f 92       	push	r0
     a42:	2f 93       	push	r18
     a44:	3f 93       	push	r19
     a46:	8f 93       	push	r24
     a48:	af 93       	push	r26
     a4a:	bf 93       	push	r27
     a4c:	ef 93       	push	r30
     a4e:	ff 93       	push	r31
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     a50:	a0 e0       	ldi	r26, 0x00	; 0
     a52:	bb e0       	ldi	r27, 0x0B	; 11
     a54:	81 e0       	ldi	r24, 0x01	; 1
     a56:	16 96       	adiw	r26, 0x06	; 6
     a58:	8c 93       	st	X, r24
     a5a:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings1[pulseWidthIndex1] = TCB0.CCMP;
     a5c:	80 91 3e 4a 	lds	r24, 0x4A3E	; 0x804a3e <pulseWidthIndex1>
     a60:	e8 2f       	mov	r30, r24
     a62:	f0 e0       	ldi	r31, 0x00	; 0
     a64:	1c 96       	adiw	r26, 0x0c	; 12
     a66:	2d 91       	ld	r18, X+
     a68:	3c 91       	ld	r19, X
     a6a:	1d 97       	sbiw	r26, 0x0d	; 13
     a6c:	ee 0f       	add	r30, r30
     a6e:	ff 1f       	adc	r31, r31
     a70:	e1 57       	subi	r30, 0x71	; 113
     a72:	f4 4b       	sbci	r31, 0xB4	; 180
     a74:	20 83       	st	Z, r18
     a76:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex1++;
     a78:	8f 5f       	subi	r24, 0xFF	; 255
     a7a:	80 93 3e 4a 	sts	0x4A3E, r24	; 0x804a3e <pulseWidthIndex1>
	if (pulseWidthIndex1 >= 100) {
     a7e:	84 36       	cpi	r24, 0x64	; 100
     a80:	10 f0       	brcs	.+4      	; 0xa86 <__vector_14+0x52>
		pulseWidthIndex1 = 0; // Reset index when all readings are stored
     a82:	10 92 3e 4a 	sts	0x4A3E, r1	; 0x804a3e <pulseWidthIndex1>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     a86:	ff 91       	pop	r31
     a88:	ef 91       	pop	r30
     a8a:	bf 91       	pop	r27
     a8c:	af 91       	pop	r26
     a8e:	8f 91       	pop	r24
     a90:	3f 91       	pop	r19
     a92:	2f 91       	pop	r18
     a94:	0f 90       	pop	r0
     a96:	0b be       	out	0x3b, r0	; 59
     a98:	0f 90       	pop	r0
     a9a:	0f be       	out	0x3f, r0	; 63
     a9c:	0f 90       	pop	r0
     a9e:	1f 90       	pop	r1
     aa0:	18 95       	reti

00000aa2 <__vector_15>:


ISR(TCB1_INT_vect)// starting interrupt for reading pwm from fan1
{
     aa2:	1f 92       	push	r1
     aa4:	0f 92       	push	r0
     aa6:	0f b6       	in	r0, 0x3f	; 63
     aa8:	0f 92       	push	r0
     aaa:	11 24       	eor	r1, r1
     aac:	0b b6       	in	r0, 0x3b	; 59
     aae:	0f 92       	push	r0
     ab0:	2f 93       	push	r18
     ab2:	3f 93       	push	r19
     ab4:	8f 93       	push	r24
     ab6:	af 93       	push	r26
     ab8:	bf 93       	push	r27
     aba:	ef 93       	push	r30
     abc:	ff 93       	push	r31
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     abe:	a0 e1       	ldi	r26, 0x10	; 16
     ac0:	bb e0       	ldi	r27, 0x0B	; 11
     ac2:	81 e0       	ldi	r24, 0x01	; 1
     ac4:	16 96       	adiw	r26, 0x06	; 6
     ac6:	8c 93       	st	X, r24
     ac8:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings2[pulseWidthIndex2] = TCB1.CCMP;
     aca:	80 91 3d 4a 	lds	r24, 0x4A3D	; 0x804a3d <pulseWidthIndex2>
     ace:	e8 2f       	mov	r30, r24
     ad0:	f0 e0       	ldi	r31, 0x00	; 0
     ad2:	1c 96       	adiw	r26, 0x0c	; 12
     ad4:	2d 91       	ld	r18, X+
     ad6:	3c 91       	ld	r19, X
     ad8:	1d 97       	sbiw	r26, 0x0d	; 13
     ada:	ee 0f       	add	r30, r30
     adc:	ff 1f       	adc	r31, r31
     ade:	e9 53       	subi	r30, 0x39	; 57
     ae0:	f5 4b       	sbci	r31, 0xB5	; 181
     ae2:	20 83       	st	Z, r18
     ae4:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex2++;
     ae6:	8f 5f       	subi	r24, 0xFF	; 255
     ae8:	80 93 3d 4a 	sts	0x4A3D, r24	; 0x804a3d <pulseWidthIndex2>
	if (pulseWidthIndex2 >= 100) {
     aec:	84 36       	cpi	r24, 0x64	; 100
     aee:	10 f0       	brcs	.+4      	; 0xaf4 <__vector_15+0x52>
		pulseWidthIndex2 = 0; // Reset index when all readings are stored
     af0:	10 92 3d 4a 	sts	0x4A3D, r1	; 0x804a3d <pulseWidthIndex2>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     af4:	ff 91       	pop	r31
     af6:	ef 91       	pop	r30
     af8:	bf 91       	pop	r27
     afa:	af 91       	pop	r26
     afc:	8f 91       	pop	r24
     afe:	3f 91       	pop	r19
     b00:	2f 91       	pop	r18
     b02:	0f 90       	pop	r0
     b04:	0b be       	out	0x3b, r0	; 59
     b06:	0f 90       	pop	r0
     b08:	0f be       	out	0x3f, r0	; 63
     b0a:	0f 90       	pop	r0
     b0c:	1f 90       	pop	r1
     b0e:	18 95       	reti

00000b10 <average>:
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
     b10:	0f 93       	push	r16
     b12:	1f 93       	push	r17
     b14:	9c 01       	movw	r18, r24
     b16:	06 2f       	mov	r16, r22
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     b18:	90 e0       	ldi	r25, 0x00	; 0
	//readPulseWidth = TCB0.CCMP;
	
}
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
     b1a:	40 e0       	ldi	r20, 0x00	; 0
     b1c:	50 e0       	ldi	r21, 0x00	; 0
     b1e:	ba 01       	movw	r22, r20
	for (uint8_t i = 0; i < size; i++) {
     b20:	0e c0       	rjmp	.+28     	; 0xb3e <average+0x2e>
		sum += array[i];
     b22:	e9 2f       	mov	r30, r25
     b24:	f0 e0       	ldi	r31, 0x00	; 0
     b26:	ee 0f       	add	r30, r30
     b28:	ff 1f       	adc	r31, r31
     b2a:	e2 0f       	add	r30, r18
     b2c:	f3 1f       	adc	r31, r19
     b2e:	01 90       	ld	r0, Z+
     b30:	f0 81       	ld	r31, Z
     b32:	e0 2d       	mov	r30, r0
     b34:	4e 0f       	add	r20, r30
     b36:	5f 1f       	adc	r21, r31
     b38:	61 1d       	adc	r22, r1
     b3a:	71 1d       	adc	r23, r1
	
}
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     b3c:	9f 5f       	subi	r25, 0xFF	; 255
     b3e:	90 17       	cp	r25, r16
     b40:	80 f3       	brcs	.-32     	; 0xb22 <average+0x12>
		sum += array[i];
	}
	return (uint16_t)(sum / size);
     b42:	10 e0       	ldi	r17, 0x00	; 0
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	cb 01       	movw	r24, r22
     b4a:	ba 01       	movw	r22, r20
     b4c:	a9 01       	movw	r20, r18
     b4e:	98 01       	movw	r18, r16
     b50:	0e 94 87 0a 	call	0x150e	; 0x150e <__udivmodsi4>
}
     b54:	c9 01       	movw	r24, r18
     b56:	1f 91       	pop	r17
     b58:	0f 91       	pop	r16
     b5a:	08 95       	ret

00000b5c <pwm_to_rpm1>:


uint16_t pwm_to_rpm1()
{
	uint16_t pulseWidthAverage1 = average(pulseWidthReadings1, 100);
     b5c:	64 e6       	ldi	r22, 0x64	; 100
     b5e:	8f e8       	ldi	r24, 0x8F	; 143
     b60:	9b e4       	ldi	r25, 0x4B	; 75
     b62:	0e 94 88 05 	call	0xb10	; 0xb10 <average>
	uint32_t rpm1 = ((F_CPU*60)/(4*pulseWidthAverage1*2));
     b66:	88 0f       	add	r24, r24
     b68:	99 1f       	adc	r25, r25
     b6a:	88 0f       	add	r24, r24
     b6c:	99 1f       	adc	r25, r25
     b6e:	88 0f       	add	r24, r24
     b70:	99 1f       	adc	r25, r25
     b72:	9c 01       	movw	r18, r24
     b74:	40 e0       	ldi	r20, 0x00	; 0
     b76:	50 e0       	ldi	r21, 0x00	; 0
     b78:	60 e0       	ldi	r22, 0x00	; 0
     b7a:	7c e1       	ldi	r23, 0x1C	; 28
     b7c:	8e e4       	ldi	r24, 0x4E	; 78
     b7e:	9e e0       	ldi	r25, 0x0E	; 14
     b80:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__divmodsi4>
	return (uint16_t)rpm1;
	
}
     b84:	c9 01       	movw	r24, r18
     b86:	08 95       	ret

00000b88 <pwm_to_rpm2>:


uint16_t pwm_to_rpm2()
{
	uint16_t pulseWidthAverage2 = average(pulseWidthReadings2, 100);
     b88:	64 e6       	ldi	r22, 0x64	; 100
     b8a:	87 ec       	ldi	r24, 0xC7	; 199
     b8c:	9a e4       	ldi	r25, 0x4A	; 74
     b8e:	0e 94 88 05 	call	0xb10	; 0xb10 <average>
	uint32_t rpm2 = ((F_CPU*60)/(4*pulseWidthAverage2*2));
     b92:	88 0f       	add	r24, r24
     b94:	99 1f       	adc	r25, r25
     b96:	88 0f       	add	r24, r24
     b98:	99 1f       	adc	r25, r25
     b9a:	88 0f       	add	r24, r24
     b9c:	99 1f       	adc	r25, r25
     b9e:	9c 01       	movw	r18, r24
     ba0:	40 e0       	ldi	r20, 0x00	; 0
     ba2:	50 e0       	ldi	r21, 0x00	; 0
     ba4:	60 e0       	ldi	r22, 0x00	; 0
     ba6:	7c e1       	ldi	r23, 0x1C	; 28
     ba8:	8e e4       	ldi	r24, 0x4E	; 78
     baa:	9e e0       	ldi	r25, 0x0E	; 14
     bac:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__divmodsi4>
	return (uint16_t)rpm2;
	
}
     bb0:	c9 01       	movw	r24, r18
     bb2:	08 95       	ret

00000bb4 <executeCommand>:


	

void executeCommand(uint8_t command_number, char *command)
{
     bb4:	cf 93       	push	r28
     bb6:	df 93       	push	r29
     bb8:	9b 01       	movw	r18, r22
	if (diagnoseIsRunning) {
     bba:	90 91 b1 4a 	lds	r25, 0x4AB1	; 0x804ab1 <diagnoseIsRunning>
     bbe:	99 23       	and	r25, r25
     bc0:	49 f0       	breq	.+18     	; 0xbd4 <executeCommand+0x20>
		printf("Diagnose is running!\r\n ");
     bc2:	83 e8       	ldi	r24, 0x83	; 131
     bc4:	97 e4       	ldi	r25, 0x47	; 71
     bc6:	9f 93       	push	r25
     bc8:	8f 93       	push	r24
     bca:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
     bce:	0f 90       	pop	r0
     bd0:	0f 90       	pop	r0
     bd2:	eb c0       	rjmp	.+470    	; 0xdaa <executeCommand+0x1f6>
	}
	else {
		
	
	switch ( command_number )
     bd4:	48 2f       	mov	r20, r24
     bd6:	50 e0       	ldi	r21, 0x00	; 0
     bd8:	49 30       	cpi	r20, 0x09	; 9
     bda:	51 05       	cpc	r21, r1
     bdc:	08 f0       	brcs	.+2      	; 0xbe0 <executeCommand+0x2c>
     bde:	69 c0       	rjmp	.+210    	; 0xcb2 <executeCommand+0xfe>
     be0:	fa 01       	movw	r30, r20
     be2:	e6 58       	subi	r30, 0x86	; 134
     be4:	ff 4f       	sbci	r31, 0xFF	; 255
     be6:	0c 94 c8 0a 	jmp	0x1590	; 0x1590 <__tablejump2__>
	{
		case 0:
		printf("Received command: fan1\r\n");
     bea:	8b e9       	ldi	r24, 0x9B	; 155
     bec:	97 e4       	ldi	r25, 0x47	; 71
     bee:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		PrintSelectFanMode();
     bf2:	0e 94 85 03 	call	0x70a	; 0x70a <PrintSelectFanMode>
		chosenFan = FAN1_bm;
     bf6:	81 e0       	ldi	r24, 0x01	; 1
     bf8:	80 93 41 4a 	sts	0x4A41, r24	; 0x804a41 <chosenFan>
		break ;
     bfc:	d6 c0       	rjmp	.+428    	; 0xdaa <executeCommand+0x1f6>
		
		case 1:
		printf("Received command: fan2\r\n");
     bfe:	83 eb       	ldi	r24, 0xB3	; 179
     c00:	97 e4       	ldi	r25, 0x47	; 71
     c02:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		PrintSelectFanMode();
     c06:	0e 94 85 03 	call	0x70a	; 0x70a <PrintSelectFanMode>
		chosenFan = FAN2_bm;
     c0a:	82 e0       	ldi	r24, 0x02	; 2
     c0c:	80 93 41 4a 	sts	0x4A41, r24	; 0x804a41 <chosenFan>
		break ;
     c10:	cc c0       	rjmp	.+408    	; 0xdaa <executeCommand+0x1f6>
		
		case 2:
		printf("Received command: fan3\r\n");
     c12:	8b ec       	ldi	r24, 0xCB	; 203
     c14:	97 e4       	ldi	r25, 0x47	; 71
     c16:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		PrintSelectFanMode();
     c1a:	0e 94 85 03 	call	0x70a	; 0x70a <PrintSelectFanMode>
		chosenFan = FAN3_bm;
     c1e:	84 e0       	ldi	r24, 0x04	; 4
     c20:	80 93 41 4a 	sts	0x4A41, r24	; 0x804a41 <chosenFan>
		break ;
     c24:	c2 c0       	rjmp	.+388    	; 0xdaa <executeCommand+0x1f6>
		
		case 3:
		printf("Received command: fan4\r\n");
     c26:	83 ee       	ldi	r24, 0xE3	; 227
     c28:	97 e4       	ldi	r25, 0x47	; 71
     c2a:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		PrintSelectFanMode();
     c2e:	0e 94 85 03 	call	0x70a	; 0x70a <PrintSelectFanMode>
		chosenFan = FAN4_bm;
     c32:	88 e0       	ldi	r24, 0x08	; 8
     c34:	80 93 41 4a 	sts	0x4A41, r24	; 0x804a41 <chosenFan>
		break ;
     c38:	b8 c0       	rjmp	.+368    	; 0xdaa <executeCommand+0x1f6>
		
		case 4:
		printf("Received command: off\r\n");
     c3a:	8b ef       	ldi	r24, 0xFB	; 251
     c3c:	97 e4       	ldi	r25, 0x47	; 71
     c3e:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		chosenModeIsManual = 0;
     c42:	10 92 b6 4a 	sts	0x4AB6, r1	; 0x804ab6 <chosenModeIsManual>
		fanOff();
     c46:	0e 94 8f 02 	call	0x51e	; 0x51e <fanOff>
		break ;
     c4a:	af c0       	rjmp	.+350    	; 0xdaa <executeCommand+0x1f6>
		
		case 5:
		printf("Received command: manual\r\n");
     c4c:	82 e1       	ldi	r24, 0x12	; 18
     c4e:	98 e4       	ldi	r25, 0x48	; 72
     c50:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		printf("Type wanted rpm mode\r\n");
     c54:	8c e2       	ldi	r24, 0x2C	; 44
     c56:	98 e4       	ldi	r25, 0x48	; 72
     c58:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		printf("Alternatives: low, medium, high or fan speed: 0-100 \r\n");
     c5c:	82 e4       	ldi	r24, 0x42	; 66
     c5e:	98 e4       	ldi	r25, 0x48	; 72
     c60:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		chosenModeIsManual = 1;
     c64:	81 e0       	ldi	r24, 0x01	; 1
     c66:	80 93 b6 4a 	sts	0x4AB6, r24	; 0x804ab6 <chosenModeIsManual>
		break ;
     c6a:	9f c0       	rjmp	.+318    	; 0xdaa <executeCommand+0x1f6>
		
		case 6:
		printf("Received command: auto\r\n");
     c6c:	88 e7       	ldi	r24, 0x78	; 120
     c6e:	98 e4       	ldi	r25, 0x48	; 72
     c70:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		chosenModeIsManual = 0;
     c74:	10 92 b6 4a 	sts	0x4AB6, r1	; 0x804ab6 <chosenModeIsManual>
		fanAuto();
     c78:	0e 94 e5 02 	call	0x5ca	; 0x5ca <fanAuto>
		break ;
     c7c:	96 c0       	rjmp	.+300    	; 0xdaa <executeCommand+0x1f6>
		
		case 7:
		printf("Received command: overview\r\n");
     c7e:	80 e9       	ldi	r24, 0x90	; 144
     c80:	98 e4       	ldi	r25, 0x48	; 72
     c82:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		fan1.rpm = pwm_to_rpm1();
     c86:	0e 94 ae 05 	call	0xb5c	; 0xb5c <pwm_to_rpm1>
     c8a:	80 93 d0 44 	sts	0x44D0, r24	; 0x8044d0 <fan1+0x2>
     c8e:	90 93 d1 44 	sts	0x44D1, r25	; 0x8044d1 <fan1+0x3>
		fan2.rpm = pwm_to_rpm2();
     c92:	0e 94 c4 05 	call	0xb88	; 0xb88 <pwm_to_rpm2>
     c96:	80 93 cc 44 	sts	0x44CC, r24	; 0x8044cc <fan2+0x2>
     c9a:	90 93 cd 44 	sts	0x44CD, r25	; 0x8044cd <fan2+0x3>
		printOverview();
     c9e:	0e 94 92 03 	call	0x724	; 0x724 <printOverview>
		break ;
     ca2:	83 c0       	rjmp	.+262    	; 0xdaa <executeCommand+0x1f6>
		
		case 8:
		printf("Received command: controller\r\n");
     ca4:	8c ea       	ldi	r24, 0xAC	; 172
     ca6:	98 e4       	ldi	r25, 0x48	; 72
     ca8:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		printSelectFan();
     cac:	0e 94 32 04 	call	0x864	; 0x864 <printSelectFan>
		break ;
     cb0:	7c c0       	rjmp	.+248    	; 0xdaa <executeCommand+0x1f6>
		
		
		
		default :
		
		if(chosenModeIsManual)
     cb2:	90 91 b6 4a 	lds	r25, 0x4AB6	; 0x804ab6 <chosenModeIsManual>
     cb6:	99 23       	and	r25, r25
     cb8:	09 f4       	brne	.+2      	; 0xcbc <executeCommand+0x108>
     cba:	73 c0       	rjmp	.+230    	; 0xda2 <executeCommand+0x1ee>
		{
			switch (command_number)
     cbc:	8a 30       	cpi	r24, 0x0A	; 10
     cbe:	89 f0       	breq	.+34     	; 0xce2 <executeCommand+0x12e>
     cc0:	8b 30       	cpi	r24, 0x0B	; 11
     cc2:	e1 f0       	breq	.+56     	; 0xcfc <executeCommand+0x148>
     cc4:	89 30       	cpi	r24, 0x09	; 9
     cc6:	39 f5       	brne	.+78     	; 0xd16 <executeCommand+0x162>
			{
				case 9:
				
				printf("Received command: low\r\n");
     cc8:	8a ec       	ldi	r24, 0xCA	; 202
     cca:	98 e4       	ldi	r25, 0x48	; 72
     ccc:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
				manual_rpm_value = FAN_RPM_LOW; //LOW
     cd0:	83 e2       	ldi	r24, 0x23	; 35
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	80 93 48 4a 	sts	0x4A48, r24	; 0x804a48 <manual_rpm_value>
     cd8:	90 93 49 4a 	sts	0x4A49, r25	; 0x804a49 <manual_rpm_value+0x1>
				fanManual();
     cdc:	0e 94 33 03 	call	0x666	; 0x666 <fanManual>
				break;
     ce0:	64 c0       	rjmp	.+200    	; 0xdaa <executeCommand+0x1f6>
				
				case 10:
				
				printf("Received command: medium\r\n");
     ce2:	81 ee       	ldi	r24, 0xE1	; 225
     ce4:	98 e4       	ldi	r25, 0x48	; 72
     ce6:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
				manual_rpm_value = FAN_RPM_MEDIUM; //MEDIUM
     cea:	8c e3       	ldi	r24, 0x3C	; 60
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	80 93 48 4a 	sts	0x4A48, r24	; 0x804a48 <manual_rpm_value>
     cf2:	90 93 49 4a 	sts	0x4A49, r25	; 0x804a49 <manual_rpm_value+0x1>
				fanManual();
     cf6:	0e 94 33 03 	call	0x666	; 0x666 <fanManual>
				break;
     cfa:	57 c0       	rjmp	.+174    	; 0xdaa <executeCommand+0x1f6>
				
				case 11:
				
				printf("Received command: high\r\n");
     cfc:	8b ef       	ldi	r24, 0xFB	; 251
     cfe:	98 e4       	ldi	r25, 0x48	; 72
     d00:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
				manual_rpm_value = FAN_RPM_HIGH; //HIGH
     d04:	8f e4       	ldi	r24, 0x4F	; 79
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	80 93 48 4a 	sts	0x4A48, r24	; 0x804a48 <manual_rpm_value>
     d0c:	90 93 49 4a 	sts	0x4A49, r25	; 0x804a49 <manual_rpm_value+0x1>
				fanManual();
     d10:	0e 94 33 03 	call	0x666	; 0x666 <fanManual>
				break;
     d14:	4a c0       	rjmp	.+148    	; 0xdaa <executeCommand+0x1f6>
				
				default:
				
				duty_cycle_input = atoi(command);
     d16:	c9 01       	movw	r24, r18
     d18:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <atoi>
     d1c:	80 93 ba 4a 	sts	0x4ABA, r24	; 0x804aba <duty_cycle_input>
     d20:	90 93 bb 4a 	sts	0x4ABB, r25	; 0x804abb <duty_cycle_input+0x1>
				printf("%d\r\n", duty_cycle_input);
     d24:	9f 93       	push	r25
     d26:	8f 93       	push	r24
     d28:	84 ef       	ldi	r24, 0xF4	; 244
     d2a:	99 e4       	ldi	r25, 0x49	; 73
     d2c:	9f 93       	push	r25
     d2e:	8f 93       	push	r24
     d30:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
				if (duty_cycle_input >= 0 && duty_cycle_input <= 100)
     d34:	60 91 ba 4a 	lds	r22, 0x4ABA	; 0x804aba <duty_cycle_input>
     d38:	70 91 bb 4a 	lds	r23, 0x4ABB	; 0x804abb <duty_cycle_input+0x1>
     d3c:	0f 90       	pop	r0
     d3e:	0f 90       	pop	r0
     d40:	0f 90       	pop	r0
     d42:	0f 90       	pop	r0
     d44:	65 36       	cpi	r22, 0x65	; 101
     d46:	71 05       	cpc	r23, r1
     d48:	38 f5       	brcc	.+78     	; 0xd98 <executeCommand+0x1e4>
				{
					uint16_t new_duty_cycle = (duty_cycle_input / 100.0) * FAN_RPM_HIGH;
     d4a:	80 e0       	ldi	r24, 0x00	; 0
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	0e 94 8c 09 	call	0x1318	; 0x1318 <__floatunsisf>
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	48 ec       	ldi	r20, 0xC8	; 200
     d58:	52 e4       	ldi	r21, 0x42	; 66
     d5a:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__divsf3>
     d5e:	20 e0       	ldi	r18, 0x00	; 0
     d60:	30 e0       	ldi	r19, 0x00	; 0
     d62:	4e e9       	ldi	r20, 0x9E	; 158
     d64:	52 e4       	ldi	r21, 0x42	; 66
     d66:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__mulsf3>
     d6a:	0e 94 5d 09 	call	0x12ba	; 0x12ba <__fixunssfsi>
     d6e:	d6 2f       	mov	r29, r22
     d70:	c7 2f       	mov	r28, r23
					printf("%d\r\n", new_duty_cycle);
     d72:	7f 93       	push	r23
     d74:	6f 93       	push	r22
     d76:	84 ef       	ldi	r24, 0xF4	; 244
     d78:	99 e4       	ldi	r25, 0x49	; 73
     d7a:	9f 93       	push	r25
     d7c:	8f 93       	push	r24
     d7e:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
					// Set the duty cycle to the new value
					// Assuming TCA0_SPLIT_LCMP0 is where the duty cycle is set
					manual_rpm_value = new_duty_cycle;
     d82:	d0 93 48 4a 	sts	0x4A48, r29	; 0x804a48 <manual_rpm_value>
     d86:	c0 93 49 4a 	sts	0x4A49, r28	; 0x804a49 <manual_rpm_value+0x1>
					fanManual();
     d8a:	0e 94 33 03 	call	0x666	; 0x666 <fanManual>
     d8e:	0f 90       	pop	r0
     d90:	0f 90       	pop	r0
     d92:	0f 90       	pop	r0
     d94:	0f 90       	pop	r0
     d96:	09 c0       	rjmp	.+18     	; 0xdaa <executeCommand+0x1f6>
				}
				else
				{
					printf("Please insert a valid duty cycle (0-100)\r\n");
     d98:	83 e1       	ldi	r24, 0x13	; 19
     d9a:	99 e4       	ldi	r25, 0x49	; 73
     d9c:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
     da0:	04 c0       	rjmp	.+8      	; 0xdaa <executeCommand+0x1f6>
				break;
				
				
			}
		}
		else printf("unknown command \r\n");
     da2:	8d e3       	ldi	r24, 0x3D	; 61
     da4:	99 e4       	ldi	r25, 0x49	; 73
     da6:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		
	}
	}
}
     daa:	df 91       	pop	r29
     dac:	cf 91       	pop	r28
     dae:	08 95       	ret

00000db0 <read_commands>:




void read_commands() //Reads Uart when enter is pressed
{
     db0:	cf 93       	push	r28
     db2:	df 93       	push	r29
     db4:	cd b7       	in	r28, 0x3d	; 61
     db6:	de b7       	in	r29, 0x3e	; 62
     db8:	c4 56       	subi	r28, 0x64	; 100
     dba:	d1 09       	sbc	r29, r1
     dbc:	cd bf       	out	0x3d, r28	; 61
     dbe:	de bf       	out	0x3e, r29	; 62
	char command[MAX_COMMAND_LEN];
	static uint8_t index = 0;
	char c = USART3_readChar();
     dc0:	0e 94 66 04 	call	0x8cc	; 0x8cc <USART3_readChar>
	
	if(c != '\n' && c != '\r' && index < MAX_COMMAND_LEN - 1)
     dc4:	8a 30       	cpi	r24, 0x0A	; 10
     dc6:	89 f0       	breq	.+34     	; 0xdea <read_commands+0x3a>
     dc8:	8d 30       	cpi	r24, 0x0D	; 13
     dca:	79 f0       	breq	.+30     	; 0xdea <read_commands+0x3a>
     dcc:	90 91 3c 4a 	lds	r25, 0x4A3C	; 0x804a3c <__data_end>
     dd0:	93 36       	cpi	r25, 0x63	; 99
     dd2:	58 f4       	brcc	.+22     	; 0xdea <read_commands+0x3a>
	{
		command[index++] = c;
     dd4:	21 e0       	ldi	r18, 0x01	; 1
     dd6:	29 0f       	add	r18, r25
     dd8:	20 93 3c 4a 	sts	0x4A3C, r18	; 0x804a3c <__data_end>
     ddc:	e1 e0       	ldi	r30, 0x01	; 1
     dde:	f0 e0       	ldi	r31, 0x00	; 0
     de0:	ec 0f       	add	r30, r28
     de2:	fd 1f       	adc	r31, r29
     de4:	e9 0f       	add	r30, r25
     de6:	f1 1d       	adc	r31, r1
     de8:	80 83       	st	Z, r24
		
	}
	
	if(c == '\r'|| c=='\n')
     dea:	8d 30       	cpi	r24, 0x0D	; 13
     dec:	11 f0       	breq	.+4      	; 0xdf2 <read_commands+0x42>
     dee:	8a 30       	cpi	r24, 0x0A	; 10
     df0:	a1 f4       	brne	.+40     	; 0xe1a <read_commands+0x6a>
	{
		command[index] = '\0';
     df2:	80 91 3c 4a 	lds	r24, 0x4A3C	; 0x804a3c <__data_end>
     df6:	e1 e0       	ldi	r30, 0x01	; 1
     df8:	f0 e0       	ldi	r31, 0x00	; 0
     dfa:	ec 0f       	add	r30, r28
     dfc:	fd 1f       	adc	r31, r29
     dfe:	e8 0f       	add	r30, r24
     e00:	f1 1d       	adc	r31, r1
     e02:	10 82       	st	Z, r1
		index = 0;
     e04:	10 92 3c 4a 	sts	0x4A3C, r1	; 0x804a3c <__data_end>
		//printf("test command1: %s\r\n",command);

		executeCommand(compareCommands(command), command); // executes actions based on command as an argument
     e08:	ce 01       	movw	r24, r28
     e0a:	01 96       	adiw	r24, 0x01	; 1
     e0c:	0e 94 3f 04 	call	0x87e	; 0x87e <compareCommands>
     e10:	be 01       	movw	r22, r28
     e12:	6f 5f       	subi	r22, 0xFF	; 255
     e14:	7f 4f       	sbci	r23, 0xFF	; 255
     e16:	0e 94 da 05 	call	0xbb4	; 0xbb4 <executeCommand>
		
		
	}
}
     e1a:	cc 59       	subi	r28, 0x9C	; 156
     e1c:	df 4f       	sbci	r29, 0xFF	; 255
     e1e:	cd bf       	out	0x3d, r28	; 61
     e20:	de bf       	out	0x3e, r29	; 62
     e22:	df 91       	pop	r29
     e24:	cf 91       	pop	r28
     e26:	08 95       	ret

00000e28 <__vector_53>:
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
}


ISR(USART3_RXC_vect)
{
     e28:	1f 92       	push	r1
     e2a:	0f 92       	push	r0
     e2c:	0f b6       	in	r0, 0x3f	; 63
     e2e:	0f 92       	push	r0
     e30:	11 24       	eor	r1, r1
     e32:	0b b6       	in	r0, 0x3b	; 59
     e34:	0f 92       	push	r0
     e36:	2f 93       	push	r18
     e38:	3f 93       	push	r19
     e3a:	4f 93       	push	r20
     e3c:	5f 93       	push	r21
     e3e:	6f 93       	push	r22
     e40:	7f 93       	push	r23
     e42:	8f 93       	push	r24
     e44:	9f 93       	push	r25
     e46:	af 93       	push	r26
     e48:	bf 93       	push	r27
     e4a:	ef 93       	push	r30
     e4c:	ff 93       	push	r31
	read_commands();
     e4e:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <read_commands>
}
     e52:	ff 91       	pop	r31
     e54:	ef 91       	pop	r30
     e56:	bf 91       	pop	r27
     e58:	af 91       	pop	r26
     e5a:	9f 91       	pop	r25
     e5c:	8f 91       	pop	r24
     e5e:	7f 91       	pop	r23
     e60:	6f 91       	pop	r22
     e62:	5f 91       	pop	r21
     e64:	4f 91       	pop	r20
     e66:	3f 91       	pop	r19
     e68:	2f 91       	pop	r18
     e6a:	0f 90       	pop	r0
     e6c:	0b be       	out	0x3b, r0	; 59
     e6e:	0f 90       	pop	r0
     e70:	0f be       	out	0x3f, r0	; 63
     e72:	0f 90       	pop	r0
     e74:	1f 90       	pop	r1
     e76:	18 95       	reti

00000e78 <average_values_for_tach>:
}
*/

// Calculating average RPM at max fan speed
FanSpeeds average_values_for_tach()
{
     e78:	4f 92       	push	r4
     e7a:	5f 92       	push	r5
     e7c:	6f 92       	push	r6
     e7e:	7f 92       	push	r7
     e80:	8f 92       	push	r8
     e82:	9f 92       	push	r9
     e84:	af 92       	push	r10
     e86:	bf 92       	push	r11
     e88:	cf 92       	push	r12
     e8a:	df 92       	push	r13
     e8c:	ef 92       	push	r14
     e8e:	ff 92       	push	r15
     e90:	0f 93       	push	r16
     e92:	1f 93       	push	r17
     e94:	cf 93       	push	r28
     e96:	df 93       	push	r29
	// SETT DETTE I IF MED FLAGG???
	
	// Set value to all fans
	TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MAX_VALUE;
     e98:	e0 e0       	ldi	r30, 0x00	; 0
     e9a:	fa e0       	ldi	r31, 0x0A	; 10
     e9c:	8f e4       	ldi	r24, 0x4F	; 79
     e9e:	80 a7       	std	Z+40, r24	; 0x28
	TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MAX_VALUE;
     ea0:	82 a7       	std	Z+42, r24	; 0x2a
	TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MAX_VALUE;
     ea2:	81 a7       	std	Z+41, r24	; 0x29
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
     ea4:	83 a7       	std	Z+43, r24	; 0x2b
	
	printf("Diagnose startet! \r\n");
     ea6:	8f e4       	ldi	r24, 0x4F	; 79
     ea8:	99 e4       	ldi	r25, 0x49	; 73
     eaa:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
	uint32_t sum_RPM_fan2 = 0;
	uint16_t average_read_value_fan1;
	uint16_t average_read_value_fan2;
	
	uint16_t num_of_readings = 0;
	uint16_t compare_counter_time = counter; // reset counter for compare
     eae:	20 91 bf 4a 	lds	r18, 0x4ABF	; 0x804abf <counter>
     eb2:	30 91 c0 4a 	lds	r19, 0x4AC0	; 0x804ac0 <counter+0x1>
	
	while (counter - compare_counter_time <= 2)
     eb6:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <counter>
     eba:	90 91 c0 4a 	lds	r25, 0x4AC0	; 0x804ac0 <counter+0x1>
     ebe:	82 1b       	sub	r24, r18
     ec0:	93 0b       	sbc	r25, r19
     ec2:	03 97       	sbiw	r24, 0x03	; 3
     ec4:	c0 f3       	brcs	.-16     	; 0xeb6 <average_values_for_tach+0x3e>
	{
		;
	}
	compare_counter_time = counter;
     ec6:	00 91 bf 4a 	lds	r16, 0x4ABF	; 0x804abf <counter>
     eca:	10 91 c0 4a 	lds	r17, 0x4AC0	; 0x804ac0 <counter+0x1>
	uint32_t sum_RPM_fan1 = 0;
	uint32_t sum_RPM_fan2 = 0;
	uint16_t average_read_value_fan1;
	uint16_t average_read_value_fan2;
	
	uint16_t num_of_readings = 0;
     ece:	c0 e0       	ldi	r28, 0x00	; 0
     ed0:	d0 e0       	ldi	r29, 0x00	; 0
	
	printf("Diagnose startet! \r\n");
	
	// For average read values for two fans
	uint32_t sum_RPM_fan1 = 0;
	uint32_t sum_RPM_fan2 = 0;
     ed2:	81 2c       	mov	r8, r1
     ed4:	91 2c       	mov	r9, r1
     ed6:	54 01       	movw	r10, r8
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
	
	printf("Diagnose startet! \r\n");
	
	// For average read values for two fans
	uint32_t sum_RPM_fan1 = 0;
     ed8:	c1 2c       	mov	r12, r1
     eda:	d1 2c       	mov	r13, r1
     edc:	76 01       	movw	r14, r12
	{
		;
	}
	compare_counter_time = counter;
	
	while (counter - compare_counter_time <= 10)
     ede:	0d c0       	rjmp	.+26     	; 0xefa <average_values_for_tach+0x82>
	{
		sum_RPM_fan1 += pwm_to_rpm1();
     ee0:	0e 94 ae 05 	call	0xb5c	; 0xb5c <pwm_to_rpm1>
     ee4:	c8 0e       	add	r12, r24
     ee6:	d9 1e       	adc	r13, r25
     ee8:	e1 1c       	adc	r14, r1
     eea:	f1 1c       	adc	r15, r1
		sum_RPM_fan2 += pwm_to_rpm2();
     eec:	0e 94 c4 05 	call	0xb88	; 0xb88 <pwm_to_rpm2>
     ef0:	88 0e       	add	r8, r24
     ef2:	99 1e       	adc	r9, r25
     ef4:	a1 1c       	adc	r10, r1
     ef6:	b1 1c       	adc	r11, r1
		
		//printf("RPM fan 1: %d\r\n", RPM_fan1);
		num_of_readings ++;
     ef8:	21 96       	adiw	r28, 0x01	; 1
	{
		;
	}
	compare_counter_time = counter;
	
	while (counter - compare_counter_time <= 10)
     efa:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <counter>
     efe:	90 91 c0 4a 	lds	r25, 0x4AC0	; 0x804ac0 <counter+0x1>
     f02:	80 1b       	sub	r24, r16
     f04:	91 0b       	sbc	r25, r17
     f06:	0b 97       	sbiw	r24, 0x0b	; 11
     f08:	58 f3       	brcs	.-42     	; 0xee0 <average_values_for_tach+0x68>
		
		//printf("RPM fan 1: %d\r\n", RPM_fan1);
		num_of_readings ++;
	}
	
	average_read_value_fan1 = sum_RPM_fan1 / num_of_readings;
     f0a:	2e 01       	movw	r4, r28
     f0c:	61 2c       	mov	r6, r1
     f0e:	71 2c       	mov	r7, r1
     f10:	c7 01       	movw	r24, r14
     f12:	b6 01       	movw	r22, r12
     f14:	a3 01       	movw	r20, r6
     f16:	92 01       	movw	r18, r4
     f18:	0e 94 87 0a 	call	0x150e	; 0x150e <__udivmodsi4>
     f1c:	69 01       	movw	r12, r18
     f1e:	7a 01       	movw	r14, r20
	average_read_value_fan2 = sum_RPM_fan2 / num_of_readings;
     f20:	c5 01       	movw	r24, r10
     f22:	b4 01       	movw	r22, r8
     f24:	a3 01       	movw	r20, r6
     f26:	92 01       	movw	r18, r4
     f28:	0e 94 87 0a 	call	0x150e	; 0x150e <__udivmodsi4>
     f2c:	49 01       	movw	r8, r18
     f2e:	5a 01       	movw	r10, r20
	
	printf("Number of readings: %d\r\n", num_of_readings);
     f30:	df 93       	push	r29
     f32:	cf 93       	push	r28
     f34:	83 e6       	ldi	r24, 0x63	; 99
     f36:	99 e4       	ldi	r25, 0x49	; 73
     f38:	9f 93       	push	r25
     f3a:	8f 93       	push	r24
     f3c:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
	
	FanSpeeds average_read_values;
	average_read_values.fan1 = average_read_value_fan1;
     f40:	b6 01       	movw	r22, r12
	average_read_values.fan2 = average_read_value_fan2;
     f42:	c4 01       	movw	r24, r8
	
	TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;
     f44:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
	
	return average_read_values;
     f48:	0f 90       	pop	r0
     f4a:	0f 90       	pop	r0
     f4c:	0f 90       	pop	r0
     f4e:	0f 90       	pop	r0
}
     f50:	df 91       	pop	r29
     f52:	cf 91       	pop	r28
     f54:	1f 91       	pop	r17
     f56:	0f 91       	pop	r16
     f58:	ff 90       	pop	r15
     f5a:	ef 90       	pop	r14
     f5c:	df 90       	pop	r13
     f5e:	cf 90       	pop	r12
     f60:	bf 90       	pop	r11
     f62:	af 90       	pop	r10
     f64:	9f 90       	pop	r9
     f66:	8f 90       	pop	r8
     f68:	7f 90       	pop	r7
     f6a:	6f 90       	pop	r6
     f6c:	5f 90       	pop	r5
     f6e:	4f 90       	pop	r4
     f70:	08 95       	ret

00000f72 <predict_error>:

// Predicting failures with fans
void predict_error()
{
     f72:	cf 92       	push	r12
     f74:	df 92       	push	r13
     f76:	ef 92       	push	r14
     f78:	ff 92       	push	r15
     f7a:	0f 93       	push	r16
     f7c:	1f 93       	push	r17
     f7e:	cf 93       	push	r28
     f80:	df 93       	push	r29
	
	
	// Local struct for current RPM speeds fan1 and fan2
	FanSpeeds current_RPM_values;
	// Call function to get the average fan speeds and save in variables
	current_RPM_values = average_values_for_tach();
     f82:	0e 94 3c 07 	call	0xe78	; 0xe78 <average_values_for_tach>
     f86:	c6 2e       	mov	r12, r22
     f88:	d7 2e       	mov	r13, r23
     f8a:	08 2f       	mov	r16, r24
     f8c:	19 2f       	mov	r17, r25
	uint16_t current_RPM_value_fan1 = current_RPM_values.fan1;
	uint16_t current_RPM_value_fan2 = current_RPM_values.fan2;
	
	printf("Gjennomsnitt fan 1: %d\r\n", current_RPM_value_fan1);
     f8e:	7f 93       	push	r23
     f90:	6f 93       	push	r22
     f92:	8c e7       	ldi	r24, 0x7C	; 124
     f94:	99 e4       	ldi	r25, 0x49	; 73
     f96:	9f 93       	push	r25
     f98:	8f 93       	push	r24
     f9a:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
	printf("Gjennomsnitt fan 2: %d\r\n", current_RPM_value_fan2);
     f9e:	1f 93       	push	r17
     fa0:	0f 93       	push	r16
     fa2:	85 e9       	ldi	r24, 0x95	; 149
     fa4:	99 e4       	ldi	r25, 0x49	; 73
     fa6:	9f 93       	push	r25
     fa8:	8f 93       	push	r24
     faa:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
	printf("\r\n");
     fae:	8a e1       	ldi	r24, 0x1A	; 26
     fb0:	9a e4       	ldi	r25, 0x4A	; 74
     fb2:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
	printf("\r\n");
     fb6:	8a e1       	ldi	r24, 0x1A	; 26
     fb8:	9a e4       	ldi	r25, 0x4A	; 74
     fba:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
	
	uint16_t  old_value_fan1 = new_fan_RPM_fan1;
     fbe:	c0 91 02 40 	lds	r28, 0x4002	; 0x804002 <new_fan_RPM_fan1>
     fc2:	d0 91 03 40 	lds	r29, 0x4003	; 0x804003 <new_fan_RPM_fan1+0x1>
	uint16_t  old_value_fan2 = new_fan_RPM_fan2;
     fc6:	e0 90 00 40 	lds	r14, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     fca:	f0 90 01 40 	lds	r15, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
	printf("old fan 2: %d\r\n", old_value_fan1);
     fce:	df 93       	push	r29
     fd0:	cf 93       	push	r28
     fd2:	8e ea       	ldi	r24, 0xAE	; 174
     fd4:	99 e4       	ldi	r25, 0x49	; 73
     fd6:	9f 93       	push	r25
     fd8:	8f 93       	push	r24
     fda:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
	
	// Formula for prediction of error
	uint8_t percentage_to_compare_fan1 = calculate_percentage(old_value_fan1, current_RPM_value_fan1); // send old value and atm value
     fde:	be 01       	movw	r22, r28
     fe0:	80 e0       	ldi	r24, 0x00	; 0
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	0e 94 8c 09 	call	0x1318	; 0x1318 <__floatunsisf>
     fe8:	4c 2d       	mov	r20, r12
     fea:	5d 2d       	mov	r21, r13
     fec:	0e 94 da 04 	call	0x9b4	; 0x9b4 <calculate_percentage>
     ff0:	d8 2f       	mov	r29, r24
	uint8_t percentage_to_compare_fan2 = calculate_percentage(old_value_fan2, current_RPM_value_fan2); // send old value and atm value
     ff2:	b7 01       	movw	r22, r14
     ff4:	80 e0       	ldi	r24, 0x00	; 0
     ff6:	90 e0       	ldi	r25, 0x00	; 0
     ff8:	0e 94 8c 09 	call	0x1318	; 0x1318 <__floatunsisf>
     ffc:	40 2f       	mov	r20, r16
     ffe:	51 2f       	mov	r21, r17
    1000:	0e 94 da 04 	call	0x9b4	; 0x9b4 <calculate_percentage>
    1004:	c8 2f       	mov	r28, r24
	
	// For testing
	printf("PROSENT fan 1: %d\r\n", percentage_to_compare_fan1);
    1006:	1f 92       	push	r1
    1008:	df 93       	push	r29
    100a:	8e eb       	ldi	r24, 0xBE	; 190
    100c:	99 e4       	ldi	r25, 0x49	; 73
    100e:	9f 93       	push	r25
    1010:	8f 93       	push	r24
    1012:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
	printf("PROSENT fan 2: %d\r\n", percentage_to_compare_fan2);
    1016:	1f 92       	push	r1
    1018:	cf 93       	push	r28
    101a:	82 ed       	ldi	r24, 0xD2	; 210
    101c:	99 e4       	ldi	r25, 0x49	; 73
    101e:	9f 93       	push	r25
    1020:	8f 93       	push	r24
    1022:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
	
	// Under 90% set of a alarm
	uint8_t fan1_alarm =  alarm(percentage_to_compare_fan1);
    1026:	8d 2f       	mov	r24, r29
    1028:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <alarm>
    102c:	d8 2f       	mov	r29, r24
	uint8_t fan2_alarm = alarm(percentage_to_compare_fan2);
    102e:	8c 2f       	mov	r24, r28
    1030:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <alarm>
    1034:	c8 2f       	mov	r28, r24
	// For testing
	printf("STATUS fan 1: %d\r\n", fan1_alarm);
    1036:	1f 92       	push	r1
    1038:	df 93       	push	r29
    103a:	86 ee       	ldi	r24, 0xE6	; 230
    103c:	99 e4       	ldi	r25, 0x49	; 73
    103e:	9f 93       	push	r25
    1040:	8f 93       	push	r24
    1042:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
	printf("STATUS fan 2: %d\r\n", fan2_alarm);
    1046:	1f 92       	push	r1
    1048:	cf 93       	push	r28
    104a:	89 ef       	ldi	r24, 0xF9	; 249
    104c:	99 e4       	ldi	r25, 0x49	; 73
    104e:	9f 93       	push	r25
    1050:	8f 93       	push	r24
    1052:	0e 94 00 0b 	call	0x1600	; 0x1600 <printf>
	
	if (fan1_alarm == 1)
    1056:	8d b7       	in	r24, 0x3d	; 61
    1058:	9e b7       	in	r25, 0x3e	; 62
    105a:	4c 96       	adiw	r24, 0x1c	; 28
    105c:	8d bf       	out	0x3d, r24	; 61
    105e:	9e bf       	out	0x3e, r25	; 62
    1060:	d1 30       	cpi	r29, 0x01	; 1
    1062:	21 f4       	brne	.+8      	; 0x106c <predict_error+0xfa>
	{
		// What alarm do we want?
		printf("ALARM fan 1!! \r\n");
    1064:	8c e0       	ldi	r24, 0x0C	; 12
    1066:	9a e4       	ldi	r25, 0x4A	; 74
    1068:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
		
	}
	if (fan2_alarm == 1)
    106c:	c1 30       	cpi	r28, 0x01	; 1
    106e:	21 f4       	brne	.+8      	; 0x1078 <predict_error+0x106>
	{
		//what alarm do we want?
		printf("ALARM fan 2!! \r\n");
    1070:	8c e1       	ldi	r24, 0x1C	; 28
    1072:	9a e4       	ldi	r25, 0x4A	; 74
    1074:	0e 94 14 0b 	call	0x1628	; 0x1628 <puts>
	}
	
	// Updates the short term value to predict instant failure
	new_fan_RPM_fan1 = current_RPM_value_fan1;
    1078:	c0 92 02 40 	sts	0x4002, r12	; 0x804002 <new_fan_RPM_fan1>
    107c:	d0 92 03 40 	sts	0x4003, r13	; 0x804003 <new_fan_RPM_fan1+0x1>
	new_fan_RPM_fan2 = current_RPM_value_fan2;
    1080:	00 93 00 40 	sts	0x4000, r16	; 0x804000 <__DATA_REGION_ORIGIN__>
    1084:	10 93 01 40 	sts	0x4001, r17	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
	
}
    1088:	df 91       	pop	r29
    108a:	cf 91       	pop	r28
    108c:	1f 91       	pop	r17
    108e:	0f 91       	pop	r16
    1090:	ff 90       	pop	r15
    1092:	ef 90       	pop	r14
    1094:	df 90       	pop	r13
    1096:	cf 90       	pop	r12
    1098:	08 95       	ret

0000109a <main>:


int main(void)
{
	
	USART3_init();
    109a:	0e 94 73 04 	call	0x8e6	; 0x8e6 <USART3_init>
	sei(); // Enable Global Interrupts
    109e:	78 94       	sei

	// PWM initialize
	PORT_init();
    10a0:	0e 94 8c 04 	call	0x918	; 0x918 <PORT_init>
	TCA0_init();
    10a4:	0e 94 90 04 	call	0x920	; 0x920 <TCA0_init>
	TCB0_init();
    10a8:	0e 94 a3 04 	call	0x946	; 0x946 <TCB0_init>
	TCB1_init();
    10ac:	0e 94 bb 04 	call	0x976	; 0x976 <TCB1_init>
		
	// I2C initialize 

	TWI0_M_init();
    10b0:	0e 94 a4 00 	call	0x148	; 0x148 <TWI0_M_init>
	AHT10_init();
    10b4:	0e 94 1f 01 	call	0x23e	; 0x23e <AHT10_init>
	
	// RTC initialize
	RTC_init();
    10b8:	0e 94 f7 04 	call	0x9ee	; 0x9ee <RTC_init>
	
	
	printHomeScreen(); 
    10bc:	0e 94 72 02 	call	0x4e4	; 0x4e4 <printHomeScreen>

	
	while(1){
		
		
		if(counter == 20)
    10c0:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <counter>
    10c4:	90 91 c0 4a 	lds	r25, 0x4AC0	; 0x804ac0 <counter+0x1>
    10c8:	44 97       	sbiw	r24, 0x14	; 20
    10ca:	79 f4       	brne	.+30     	; 0x10ea <main+0x50>
		{   
			saveFanModes();
    10cc:	0e 94 0a 02 	call	0x414	; 0x414 <saveFanModes>
			diagnoseIsRunning = 1;
    10d0:	81 e0       	ldi	r24, 0x01	; 1
    10d2:	80 93 b1 4a 	sts	0x4AB1, r24	; 0x804ab1 <diagnoseIsRunning>
			predict_error();
    10d6:	0e 94 b9 07 	call	0xf72	; 0xf72 <predict_error>
			startFansAfterDiagnose();
    10da:	0e 94 89 01 	call	0x312	; 0x312 <startFansAfterDiagnose>
			diagnoseIsRunning = 0;
    10de:	10 92 b1 4a 	sts	0x4AB1, r1	; 0x804ab1 <diagnoseIsRunning>
			counter = 0;
    10e2:	10 92 bf 4a 	sts	0x4ABF, r1	; 0x804abf <counter>
    10e6:	10 92 c0 4a 	sts	0x4AC0, r1	; 0x804ac0 <counter+0x1>
		}
		
		
		
		handleFansInAuto(); //changes the rpm of the fans in mode auto based on temperature
    10ea:	0e 94 50 01 	call	0x2a0	; 0x2a0 <handleFansInAuto>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10ee:	8f e0       	ldi	r24, 0x0F	; 15
    10f0:	97 e2       	ldi	r25, 0x27	; 39
    10f2:	01 97       	sbiw	r24, 0x01	; 1
    10f4:	f1 f7       	brne	.-4      	; 0x10f2 <main+0x58>
    10f6:	00 c0       	rjmp	.+0      	; 0x10f8 <main+0x5e>
    10f8:	00 00       	nop
    10fa:	e2 cf       	rjmp	.-60     	; 0x10c0 <main+0x26>

000010fc <__subsf3>:
    10fc:	50 58       	subi	r21, 0x80	; 128

000010fe <__addsf3>:
    10fe:	bb 27       	eor	r27, r27
    1100:	aa 27       	eor	r26, r26
    1102:	0e 94 96 08 	call	0x112c	; 0x112c <__addsf3x>
    1106:	0c 94 e0 09 	jmp	0x13c0	; 0x13c0 <__fp_round>
    110a:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__fp_pscA>
    110e:	38 f0       	brcs	.+14     	; 0x111e <__addsf3+0x20>
    1110:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__fp_pscB>
    1114:	20 f0       	brcs	.+8      	; 0x111e <__addsf3+0x20>
    1116:	39 f4       	brne	.+14     	; 0x1126 <__addsf3+0x28>
    1118:	9f 3f       	cpi	r25, 0xFF	; 255
    111a:	19 f4       	brne	.+6      	; 0x1122 <__addsf3+0x24>
    111c:	26 f4       	brtc	.+8      	; 0x1126 <__addsf3+0x28>
    111e:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__fp_nan>
    1122:	0e f4       	brtc	.+2      	; 0x1126 <__addsf3+0x28>
    1124:	e0 95       	com	r30
    1126:	e7 fb       	bst	r30, 7
    1128:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__fp_inf>

0000112c <__addsf3x>:
    112c:	e9 2f       	mov	r30, r25
    112e:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__fp_split3>
    1132:	58 f3       	brcs	.-42     	; 0x110a <__addsf3+0xc>
    1134:	ba 17       	cp	r27, r26
    1136:	62 07       	cpc	r22, r18
    1138:	73 07       	cpc	r23, r19
    113a:	84 07       	cpc	r24, r20
    113c:	95 07       	cpc	r25, r21
    113e:	20 f0       	brcs	.+8      	; 0x1148 <__addsf3x+0x1c>
    1140:	79 f4       	brne	.+30     	; 0x1160 <__addsf3x+0x34>
    1142:	a6 f5       	brtc	.+104    	; 0x11ac <__addsf3x+0x80>
    1144:	0c 94 13 0a 	jmp	0x1426	; 0x1426 <__fp_zero>
    1148:	0e f4       	brtc	.+2      	; 0x114c <__addsf3x+0x20>
    114a:	e0 95       	com	r30
    114c:	0b 2e       	mov	r0, r27
    114e:	ba 2f       	mov	r27, r26
    1150:	a0 2d       	mov	r26, r0
    1152:	0b 01       	movw	r0, r22
    1154:	b9 01       	movw	r22, r18
    1156:	90 01       	movw	r18, r0
    1158:	0c 01       	movw	r0, r24
    115a:	ca 01       	movw	r24, r20
    115c:	a0 01       	movw	r20, r0
    115e:	11 24       	eor	r1, r1
    1160:	ff 27       	eor	r31, r31
    1162:	59 1b       	sub	r21, r25
    1164:	99 f0       	breq	.+38     	; 0x118c <__addsf3x+0x60>
    1166:	59 3f       	cpi	r21, 0xF9	; 249
    1168:	50 f4       	brcc	.+20     	; 0x117e <__addsf3x+0x52>
    116a:	50 3e       	cpi	r21, 0xE0	; 224
    116c:	68 f1       	brcs	.+90     	; 0x11c8 <__addsf3x+0x9c>
    116e:	1a 16       	cp	r1, r26
    1170:	f0 40       	sbci	r31, 0x00	; 0
    1172:	a2 2f       	mov	r26, r18
    1174:	23 2f       	mov	r18, r19
    1176:	34 2f       	mov	r19, r20
    1178:	44 27       	eor	r20, r20
    117a:	58 5f       	subi	r21, 0xF8	; 248
    117c:	f3 cf       	rjmp	.-26     	; 0x1164 <__addsf3x+0x38>
    117e:	46 95       	lsr	r20
    1180:	37 95       	ror	r19
    1182:	27 95       	ror	r18
    1184:	a7 95       	ror	r26
    1186:	f0 40       	sbci	r31, 0x00	; 0
    1188:	53 95       	inc	r21
    118a:	c9 f7       	brne	.-14     	; 0x117e <__addsf3x+0x52>
    118c:	7e f4       	brtc	.+30     	; 0x11ac <__addsf3x+0x80>
    118e:	1f 16       	cp	r1, r31
    1190:	ba 0b       	sbc	r27, r26
    1192:	62 0b       	sbc	r22, r18
    1194:	73 0b       	sbc	r23, r19
    1196:	84 0b       	sbc	r24, r20
    1198:	ba f0       	brmi	.+46     	; 0x11c8 <__addsf3x+0x9c>
    119a:	91 50       	subi	r25, 0x01	; 1
    119c:	a1 f0       	breq	.+40     	; 0x11c6 <__addsf3x+0x9a>
    119e:	ff 0f       	add	r31, r31
    11a0:	bb 1f       	adc	r27, r27
    11a2:	66 1f       	adc	r22, r22
    11a4:	77 1f       	adc	r23, r23
    11a6:	88 1f       	adc	r24, r24
    11a8:	c2 f7       	brpl	.-16     	; 0x119a <__addsf3x+0x6e>
    11aa:	0e c0       	rjmp	.+28     	; 0x11c8 <__addsf3x+0x9c>
    11ac:	ba 0f       	add	r27, r26
    11ae:	62 1f       	adc	r22, r18
    11b0:	73 1f       	adc	r23, r19
    11b2:	84 1f       	adc	r24, r20
    11b4:	48 f4       	brcc	.+18     	; 0x11c8 <__addsf3x+0x9c>
    11b6:	87 95       	ror	r24
    11b8:	77 95       	ror	r23
    11ba:	67 95       	ror	r22
    11bc:	b7 95       	ror	r27
    11be:	f7 95       	ror	r31
    11c0:	9e 3f       	cpi	r25, 0xFE	; 254
    11c2:	08 f0       	brcs	.+2      	; 0x11c6 <__addsf3x+0x9a>
    11c4:	b0 cf       	rjmp	.-160    	; 0x1126 <__addsf3+0x28>
    11c6:	93 95       	inc	r25
    11c8:	88 0f       	add	r24, r24
    11ca:	08 f0       	brcs	.+2      	; 0x11ce <__addsf3x+0xa2>
    11cc:	99 27       	eor	r25, r25
    11ce:	ee 0f       	add	r30, r30
    11d0:	97 95       	ror	r25
    11d2:	87 95       	ror	r24
    11d4:	08 95       	ret

000011d6 <__divsf3>:
    11d6:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__divsf3x>
    11da:	0c 94 e0 09 	jmp	0x13c0	; 0x13c0 <__fp_round>
    11de:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__fp_pscB>
    11e2:	58 f0       	brcs	.+22     	; 0x11fa <__divsf3+0x24>
    11e4:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__fp_pscA>
    11e8:	40 f0       	brcs	.+16     	; 0x11fa <__divsf3+0x24>
    11ea:	29 f4       	brne	.+10     	; 0x11f6 <__divsf3+0x20>
    11ec:	5f 3f       	cpi	r21, 0xFF	; 255
    11ee:	29 f0       	breq	.+10     	; 0x11fa <__divsf3+0x24>
    11f0:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__fp_inf>
    11f4:	51 11       	cpse	r21, r1
    11f6:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__fp_szero>
    11fa:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__fp_nan>

000011fe <__divsf3x>:
    11fe:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__fp_split3>
    1202:	68 f3       	brcs	.-38     	; 0x11de <__divsf3+0x8>

00001204 <__divsf3_pse>:
    1204:	99 23       	and	r25, r25
    1206:	b1 f3       	breq	.-20     	; 0x11f4 <__divsf3+0x1e>
    1208:	55 23       	and	r21, r21
    120a:	91 f3       	breq	.-28     	; 0x11f0 <__divsf3+0x1a>
    120c:	95 1b       	sub	r25, r21
    120e:	55 0b       	sbc	r21, r21
    1210:	bb 27       	eor	r27, r27
    1212:	aa 27       	eor	r26, r26
    1214:	62 17       	cp	r22, r18
    1216:	73 07       	cpc	r23, r19
    1218:	84 07       	cpc	r24, r20
    121a:	38 f0       	brcs	.+14     	; 0x122a <__divsf3_pse+0x26>
    121c:	9f 5f       	subi	r25, 0xFF	; 255
    121e:	5f 4f       	sbci	r21, 0xFF	; 255
    1220:	22 0f       	add	r18, r18
    1222:	33 1f       	adc	r19, r19
    1224:	44 1f       	adc	r20, r20
    1226:	aa 1f       	adc	r26, r26
    1228:	a9 f3       	breq	.-22     	; 0x1214 <__divsf3_pse+0x10>
    122a:	35 d0       	rcall	.+106    	; 0x1296 <__divsf3_pse+0x92>
    122c:	0e 2e       	mov	r0, r30
    122e:	3a f0       	brmi	.+14     	; 0x123e <__divsf3_pse+0x3a>
    1230:	e0 e8       	ldi	r30, 0x80	; 128
    1232:	32 d0       	rcall	.+100    	; 0x1298 <__divsf3_pse+0x94>
    1234:	91 50       	subi	r25, 0x01	; 1
    1236:	50 40       	sbci	r21, 0x00	; 0
    1238:	e6 95       	lsr	r30
    123a:	00 1c       	adc	r0, r0
    123c:	ca f7       	brpl	.-14     	; 0x1230 <__divsf3_pse+0x2c>
    123e:	2b d0       	rcall	.+86     	; 0x1296 <__divsf3_pse+0x92>
    1240:	fe 2f       	mov	r31, r30
    1242:	29 d0       	rcall	.+82     	; 0x1296 <__divsf3_pse+0x92>
    1244:	66 0f       	add	r22, r22
    1246:	77 1f       	adc	r23, r23
    1248:	88 1f       	adc	r24, r24
    124a:	bb 1f       	adc	r27, r27
    124c:	26 17       	cp	r18, r22
    124e:	37 07       	cpc	r19, r23
    1250:	48 07       	cpc	r20, r24
    1252:	ab 07       	cpc	r26, r27
    1254:	b0 e8       	ldi	r27, 0x80	; 128
    1256:	09 f0       	breq	.+2      	; 0x125a <__divsf3_pse+0x56>
    1258:	bb 0b       	sbc	r27, r27
    125a:	80 2d       	mov	r24, r0
    125c:	bf 01       	movw	r22, r30
    125e:	ff 27       	eor	r31, r31
    1260:	93 58       	subi	r25, 0x83	; 131
    1262:	5f 4f       	sbci	r21, 0xFF	; 255
    1264:	3a f0       	brmi	.+14     	; 0x1274 <__divsf3_pse+0x70>
    1266:	9e 3f       	cpi	r25, 0xFE	; 254
    1268:	51 05       	cpc	r21, r1
    126a:	78 f0       	brcs	.+30     	; 0x128a <__divsf3_pse+0x86>
    126c:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__fp_inf>
    1270:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__fp_szero>
    1274:	5f 3f       	cpi	r21, 0xFF	; 255
    1276:	e4 f3       	brlt	.-8      	; 0x1270 <__divsf3_pse+0x6c>
    1278:	98 3e       	cpi	r25, 0xE8	; 232
    127a:	d4 f3       	brlt	.-12     	; 0x1270 <__divsf3_pse+0x6c>
    127c:	86 95       	lsr	r24
    127e:	77 95       	ror	r23
    1280:	67 95       	ror	r22
    1282:	b7 95       	ror	r27
    1284:	f7 95       	ror	r31
    1286:	9f 5f       	subi	r25, 0xFF	; 255
    1288:	c9 f7       	brne	.-14     	; 0x127c <__divsf3_pse+0x78>
    128a:	88 0f       	add	r24, r24
    128c:	91 1d       	adc	r25, r1
    128e:	96 95       	lsr	r25
    1290:	87 95       	ror	r24
    1292:	97 f9       	bld	r25, 7
    1294:	08 95       	ret
    1296:	e1 e0       	ldi	r30, 0x01	; 1
    1298:	66 0f       	add	r22, r22
    129a:	77 1f       	adc	r23, r23
    129c:	88 1f       	adc	r24, r24
    129e:	bb 1f       	adc	r27, r27
    12a0:	62 17       	cp	r22, r18
    12a2:	73 07       	cpc	r23, r19
    12a4:	84 07       	cpc	r24, r20
    12a6:	ba 07       	cpc	r27, r26
    12a8:	20 f0       	brcs	.+8      	; 0x12b2 <__divsf3_pse+0xae>
    12aa:	62 1b       	sub	r22, r18
    12ac:	73 0b       	sbc	r23, r19
    12ae:	84 0b       	sbc	r24, r20
    12b0:	ba 0b       	sbc	r27, r26
    12b2:	ee 1f       	adc	r30, r30
    12b4:	88 f7       	brcc	.-30     	; 0x1298 <__divsf3_pse+0x94>
    12b6:	e0 95       	com	r30
    12b8:	08 95       	ret

000012ba <__fixunssfsi>:
    12ba:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <__fp_splitA>
    12be:	88 f0       	brcs	.+34     	; 0x12e2 <__fixunssfsi+0x28>
    12c0:	9f 57       	subi	r25, 0x7F	; 127
    12c2:	98 f0       	brcs	.+38     	; 0x12ea <__fixunssfsi+0x30>
    12c4:	b9 2f       	mov	r27, r25
    12c6:	99 27       	eor	r25, r25
    12c8:	b7 51       	subi	r27, 0x17	; 23
    12ca:	b0 f0       	brcs	.+44     	; 0x12f8 <__fixunssfsi+0x3e>
    12cc:	e1 f0       	breq	.+56     	; 0x1306 <__fixunssfsi+0x4c>
    12ce:	66 0f       	add	r22, r22
    12d0:	77 1f       	adc	r23, r23
    12d2:	88 1f       	adc	r24, r24
    12d4:	99 1f       	adc	r25, r25
    12d6:	1a f0       	brmi	.+6      	; 0x12de <__fixunssfsi+0x24>
    12d8:	ba 95       	dec	r27
    12da:	c9 f7       	brne	.-14     	; 0x12ce <__fixunssfsi+0x14>
    12dc:	14 c0       	rjmp	.+40     	; 0x1306 <__fixunssfsi+0x4c>
    12de:	b1 30       	cpi	r27, 0x01	; 1
    12e0:	91 f0       	breq	.+36     	; 0x1306 <__fixunssfsi+0x4c>
    12e2:	0e 94 13 0a 	call	0x1426	; 0x1426 <__fp_zero>
    12e6:	b1 e0       	ldi	r27, 0x01	; 1
    12e8:	08 95       	ret
    12ea:	0c 94 13 0a 	jmp	0x1426	; 0x1426 <__fp_zero>
    12ee:	67 2f       	mov	r22, r23
    12f0:	78 2f       	mov	r23, r24
    12f2:	88 27       	eor	r24, r24
    12f4:	b8 5f       	subi	r27, 0xF8	; 248
    12f6:	39 f0       	breq	.+14     	; 0x1306 <__fixunssfsi+0x4c>
    12f8:	b9 3f       	cpi	r27, 0xF9	; 249
    12fa:	cc f3       	brlt	.-14     	; 0x12ee <__fixunssfsi+0x34>
    12fc:	86 95       	lsr	r24
    12fe:	77 95       	ror	r23
    1300:	67 95       	ror	r22
    1302:	b3 95       	inc	r27
    1304:	d9 f7       	brne	.-10     	; 0x12fc <__fixunssfsi+0x42>
    1306:	3e f4       	brtc	.+14     	; 0x1316 <__fixunssfsi+0x5c>
    1308:	90 95       	com	r25
    130a:	80 95       	com	r24
    130c:	70 95       	com	r23
    130e:	61 95       	neg	r22
    1310:	7f 4f       	sbci	r23, 0xFF	; 255
    1312:	8f 4f       	sbci	r24, 0xFF	; 255
    1314:	9f 4f       	sbci	r25, 0xFF	; 255
    1316:	08 95       	ret

00001318 <__floatunsisf>:
    1318:	e8 94       	clt
    131a:	09 c0       	rjmp	.+18     	; 0x132e <__floatsisf+0x12>

0000131c <__floatsisf>:
    131c:	97 fb       	bst	r25, 7
    131e:	3e f4       	brtc	.+14     	; 0x132e <__floatsisf+0x12>
    1320:	90 95       	com	r25
    1322:	80 95       	com	r24
    1324:	70 95       	com	r23
    1326:	61 95       	neg	r22
    1328:	7f 4f       	sbci	r23, 0xFF	; 255
    132a:	8f 4f       	sbci	r24, 0xFF	; 255
    132c:	9f 4f       	sbci	r25, 0xFF	; 255
    132e:	99 23       	and	r25, r25
    1330:	a9 f0       	breq	.+42     	; 0x135c <__floatsisf+0x40>
    1332:	f9 2f       	mov	r31, r25
    1334:	96 e9       	ldi	r25, 0x96	; 150
    1336:	bb 27       	eor	r27, r27
    1338:	93 95       	inc	r25
    133a:	f6 95       	lsr	r31
    133c:	87 95       	ror	r24
    133e:	77 95       	ror	r23
    1340:	67 95       	ror	r22
    1342:	b7 95       	ror	r27
    1344:	f1 11       	cpse	r31, r1
    1346:	f8 cf       	rjmp	.-16     	; 0x1338 <__floatsisf+0x1c>
    1348:	fa f4       	brpl	.+62     	; 0x1388 <__floatsisf+0x6c>
    134a:	bb 0f       	add	r27, r27
    134c:	11 f4       	brne	.+4      	; 0x1352 <__floatsisf+0x36>
    134e:	60 ff       	sbrs	r22, 0
    1350:	1b c0       	rjmp	.+54     	; 0x1388 <__floatsisf+0x6c>
    1352:	6f 5f       	subi	r22, 0xFF	; 255
    1354:	7f 4f       	sbci	r23, 0xFF	; 255
    1356:	8f 4f       	sbci	r24, 0xFF	; 255
    1358:	9f 4f       	sbci	r25, 0xFF	; 255
    135a:	16 c0       	rjmp	.+44     	; 0x1388 <__floatsisf+0x6c>
    135c:	88 23       	and	r24, r24
    135e:	11 f0       	breq	.+4      	; 0x1364 <__floatsisf+0x48>
    1360:	96 e9       	ldi	r25, 0x96	; 150
    1362:	11 c0       	rjmp	.+34     	; 0x1386 <__floatsisf+0x6a>
    1364:	77 23       	and	r23, r23
    1366:	21 f0       	breq	.+8      	; 0x1370 <__floatsisf+0x54>
    1368:	9e e8       	ldi	r25, 0x8E	; 142
    136a:	87 2f       	mov	r24, r23
    136c:	76 2f       	mov	r23, r22
    136e:	05 c0       	rjmp	.+10     	; 0x137a <__floatsisf+0x5e>
    1370:	66 23       	and	r22, r22
    1372:	71 f0       	breq	.+28     	; 0x1390 <__floatsisf+0x74>
    1374:	96 e8       	ldi	r25, 0x86	; 134
    1376:	86 2f       	mov	r24, r22
    1378:	70 e0       	ldi	r23, 0x00	; 0
    137a:	60 e0       	ldi	r22, 0x00	; 0
    137c:	2a f0       	brmi	.+10     	; 0x1388 <__floatsisf+0x6c>
    137e:	9a 95       	dec	r25
    1380:	66 0f       	add	r22, r22
    1382:	77 1f       	adc	r23, r23
    1384:	88 1f       	adc	r24, r24
    1386:	da f7       	brpl	.-10     	; 0x137e <__floatsisf+0x62>
    1388:	88 0f       	add	r24, r24
    138a:	96 95       	lsr	r25
    138c:	87 95       	ror	r24
    138e:	97 f9       	bld	r25, 7
    1390:	08 95       	ret

00001392 <__fp_inf>:
    1392:	97 f9       	bld	r25, 7
    1394:	9f 67       	ori	r25, 0x7F	; 127
    1396:	80 e8       	ldi	r24, 0x80	; 128
    1398:	70 e0       	ldi	r23, 0x00	; 0
    139a:	60 e0       	ldi	r22, 0x00	; 0
    139c:	08 95       	ret

0000139e <__fp_nan>:
    139e:	9f ef       	ldi	r25, 0xFF	; 255
    13a0:	80 ec       	ldi	r24, 0xC0	; 192
    13a2:	08 95       	ret

000013a4 <__fp_pscA>:
    13a4:	00 24       	eor	r0, r0
    13a6:	0a 94       	dec	r0
    13a8:	16 16       	cp	r1, r22
    13aa:	17 06       	cpc	r1, r23
    13ac:	18 06       	cpc	r1, r24
    13ae:	09 06       	cpc	r0, r25
    13b0:	08 95       	ret

000013b2 <__fp_pscB>:
    13b2:	00 24       	eor	r0, r0
    13b4:	0a 94       	dec	r0
    13b6:	12 16       	cp	r1, r18
    13b8:	13 06       	cpc	r1, r19
    13ba:	14 06       	cpc	r1, r20
    13bc:	05 06       	cpc	r0, r21
    13be:	08 95       	ret

000013c0 <__fp_round>:
    13c0:	09 2e       	mov	r0, r25
    13c2:	03 94       	inc	r0
    13c4:	00 0c       	add	r0, r0
    13c6:	11 f4       	brne	.+4      	; 0x13cc <__fp_round+0xc>
    13c8:	88 23       	and	r24, r24
    13ca:	52 f0       	brmi	.+20     	; 0x13e0 <__fp_round+0x20>
    13cc:	bb 0f       	add	r27, r27
    13ce:	40 f4       	brcc	.+16     	; 0x13e0 <__fp_round+0x20>
    13d0:	bf 2b       	or	r27, r31
    13d2:	11 f4       	brne	.+4      	; 0x13d8 <__fp_round+0x18>
    13d4:	60 ff       	sbrs	r22, 0
    13d6:	04 c0       	rjmp	.+8      	; 0x13e0 <__fp_round+0x20>
    13d8:	6f 5f       	subi	r22, 0xFF	; 255
    13da:	7f 4f       	sbci	r23, 0xFF	; 255
    13dc:	8f 4f       	sbci	r24, 0xFF	; 255
    13de:	9f 4f       	sbci	r25, 0xFF	; 255
    13e0:	08 95       	ret

000013e2 <__fp_split3>:
    13e2:	57 fd       	sbrc	r21, 7
    13e4:	90 58       	subi	r25, 0x80	; 128
    13e6:	44 0f       	add	r20, r20
    13e8:	55 1f       	adc	r21, r21
    13ea:	59 f0       	breq	.+22     	; 0x1402 <__fp_splitA+0x10>
    13ec:	5f 3f       	cpi	r21, 0xFF	; 255
    13ee:	71 f0       	breq	.+28     	; 0x140c <__fp_splitA+0x1a>
    13f0:	47 95       	ror	r20

000013f2 <__fp_splitA>:
    13f2:	88 0f       	add	r24, r24
    13f4:	97 fb       	bst	r25, 7
    13f6:	99 1f       	adc	r25, r25
    13f8:	61 f0       	breq	.+24     	; 0x1412 <__fp_splitA+0x20>
    13fa:	9f 3f       	cpi	r25, 0xFF	; 255
    13fc:	79 f0       	breq	.+30     	; 0x141c <__fp_splitA+0x2a>
    13fe:	87 95       	ror	r24
    1400:	08 95       	ret
    1402:	12 16       	cp	r1, r18
    1404:	13 06       	cpc	r1, r19
    1406:	14 06       	cpc	r1, r20
    1408:	55 1f       	adc	r21, r21
    140a:	f2 cf       	rjmp	.-28     	; 0x13f0 <__fp_split3+0xe>
    140c:	46 95       	lsr	r20
    140e:	f1 df       	rcall	.-30     	; 0x13f2 <__fp_splitA>
    1410:	08 c0       	rjmp	.+16     	; 0x1422 <__fp_splitA+0x30>
    1412:	16 16       	cp	r1, r22
    1414:	17 06       	cpc	r1, r23
    1416:	18 06       	cpc	r1, r24
    1418:	99 1f       	adc	r25, r25
    141a:	f1 cf       	rjmp	.-30     	; 0x13fe <__fp_splitA+0xc>
    141c:	86 95       	lsr	r24
    141e:	71 05       	cpc	r23, r1
    1420:	61 05       	cpc	r22, r1
    1422:	08 94       	sec
    1424:	08 95       	ret

00001426 <__fp_zero>:
    1426:	e8 94       	clt

00001428 <__fp_szero>:
    1428:	bb 27       	eor	r27, r27
    142a:	66 27       	eor	r22, r22
    142c:	77 27       	eor	r23, r23
    142e:	cb 01       	movw	r24, r22
    1430:	97 f9       	bld	r25, 7
    1432:	08 95       	ret

00001434 <__mulsf3>:
    1434:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3x>
    1438:	0c 94 e0 09 	jmp	0x13c0	; 0x13c0 <__fp_round>
    143c:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__fp_pscA>
    1440:	38 f0       	brcs	.+14     	; 0x1450 <__mulsf3+0x1c>
    1442:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__fp_pscB>
    1446:	20 f0       	brcs	.+8      	; 0x1450 <__mulsf3+0x1c>
    1448:	95 23       	and	r25, r21
    144a:	11 f0       	breq	.+4      	; 0x1450 <__mulsf3+0x1c>
    144c:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__fp_inf>
    1450:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__fp_nan>
    1454:	11 24       	eor	r1, r1
    1456:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__fp_szero>

0000145a <__mulsf3x>:
    145a:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <__fp_split3>
    145e:	70 f3       	brcs	.-36     	; 0x143c <__mulsf3+0x8>

00001460 <__mulsf3_pse>:
    1460:	95 9f       	mul	r25, r21
    1462:	c1 f3       	breq	.-16     	; 0x1454 <__mulsf3+0x20>
    1464:	95 0f       	add	r25, r21
    1466:	50 e0       	ldi	r21, 0x00	; 0
    1468:	55 1f       	adc	r21, r21
    146a:	62 9f       	mul	r22, r18
    146c:	f0 01       	movw	r30, r0
    146e:	72 9f       	mul	r23, r18
    1470:	bb 27       	eor	r27, r27
    1472:	f0 0d       	add	r31, r0
    1474:	b1 1d       	adc	r27, r1
    1476:	63 9f       	mul	r22, r19
    1478:	aa 27       	eor	r26, r26
    147a:	f0 0d       	add	r31, r0
    147c:	b1 1d       	adc	r27, r1
    147e:	aa 1f       	adc	r26, r26
    1480:	64 9f       	mul	r22, r20
    1482:	66 27       	eor	r22, r22
    1484:	b0 0d       	add	r27, r0
    1486:	a1 1d       	adc	r26, r1
    1488:	66 1f       	adc	r22, r22
    148a:	82 9f       	mul	r24, r18
    148c:	22 27       	eor	r18, r18
    148e:	b0 0d       	add	r27, r0
    1490:	a1 1d       	adc	r26, r1
    1492:	62 1f       	adc	r22, r18
    1494:	73 9f       	mul	r23, r19
    1496:	b0 0d       	add	r27, r0
    1498:	a1 1d       	adc	r26, r1
    149a:	62 1f       	adc	r22, r18
    149c:	83 9f       	mul	r24, r19
    149e:	a0 0d       	add	r26, r0
    14a0:	61 1d       	adc	r22, r1
    14a2:	22 1f       	adc	r18, r18
    14a4:	74 9f       	mul	r23, r20
    14a6:	33 27       	eor	r19, r19
    14a8:	a0 0d       	add	r26, r0
    14aa:	61 1d       	adc	r22, r1
    14ac:	23 1f       	adc	r18, r19
    14ae:	84 9f       	mul	r24, r20
    14b0:	60 0d       	add	r22, r0
    14b2:	21 1d       	adc	r18, r1
    14b4:	82 2f       	mov	r24, r18
    14b6:	76 2f       	mov	r23, r22
    14b8:	6a 2f       	mov	r22, r26
    14ba:	11 24       	eor	r1, r1
    14bc:	9f 57       	subi	r25, 0x7F	; 127
    14be:	50 40       	sbci	r21, 0x00	; 0
    14c0:	9a f0       	brmi	.+38     	; 0x14e8 <__mulsf3_pse+0x88>
    14c2:	f1 f0       	breq	.+60     	; 0x1500 <__mulsf3_pse+0xa0>
    14c4:	88 23       	and	r24, r24
    14c6:	4a f0       	brmi	.+18     	; 0x14da <__mulsf3_pse+0x7a>
    14c8:	ee 0f       	add	r30, r30
    14ca:	ff 1f       	adc	r31, r31
    14cc:	bb 1f       	adc	r27, r27
    14ce:	66 1f       	adc	r22, r22
    14d0:	77 1f       	adc	r23, r23
    14d2:	88 1f       	adc	r24, r24
    14d4:	91 50       	subi	r25, 0x01	; 1
    14d6:	50 40       	sbci	r21, 0x00	; 0
    14d8:	a9 f7       	brne	.-22     	; 0x14c4 <__mulsf3_pse+0x64>
    14da:	9e 3f       	cpi	r25, 0xFE	; 254
    14dc:	51 05       	cpc	r21, r1
    14de:	80 f0       	brcs	.+32     	; 0x1500 <__mulsf3_pse+0xa0>
    14e0:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__fp_inf>
    14e4:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__fp_szero>
    14e8:	5f 3f       	cpi	r21, 0xFF	; 255
    14ea:	e4 f3       	brlt	.-8      	; 0x14e4 <__mulsf3_pse+0x84>
    14ec:	98 3e       	cpi	r25, 0xE8	; 232
    14ee:	d4 f3       	brlt	.-12     	; 0x14e4 <__mulsf3_pse+0x84>
    14f0:	86 95       	lsr	r24
    14f2:	77 95       	ror	r23
    14f4:	67 95       	ror	r22
    14f6:	b7 95       	ror	r27
    14f8:	f7 95       	ror	r31
    14fa:	e7 95       	ror	r30
    14fc:	9f 5f       	subi	r25, 0xFF	; 255
    14fe:	c1 f7       	brne	.-16     	; 0x14f0 <__mulsf3_pse+0x90>
    1500:	fe 2b       	or	r31, r30
    1502:	88 0f       	add	r24, r24
    1504:	91 1d       	adc	r25, r1
    1506:	96 95       	lsr	r25
    1508:	87 95       	ror	r24
    150a:	97 f9       	bld	r25, 7
    150c:	08 95       	ret

0000150e <__udivmodsi4>:
    150e:	a1 e2       	ldi	r26, 0x21	; 33
    1510:	1a 2e       	mov	r1, r26
    1512:	aa 1b       	sub	r26, r26
    1514:	bb 1b       	sub	r27, r27
    1516:	fd 01       	movw	r30, r26
    1518:	0d c0       	rjmp	.+26     	; 0x1534 <__udivmodsi4_ep>

0000151a <__udivmodsi4_loop>:
    151a:	aa 1f       	adc	r26, r26
    151c:	bb 1f       	adc	r27, r27
    151e:	ee 1f       	adc	r30, r30
    1520:	ff 1f       	adc	r31, r31
    1522:	a2 17       	cp	r26, r18
    1524:	b3 07       	cpc	r27, r19
    1526:	e4 07       	cpc	r30, r20
    1528:	f5 07       	cpc	r31, r21
    152a:	20 f0       	brcs	.+8      	; 0x1534 <__udivmodsi4_ep>
    152c:	a2 1b       	sub	r26, r18
    152e:	b3 0b       	sbc	r27, r19
    1530:	e4 0b       	sbc	r30, r20
    1532:	f5 0b       	sbc	r31, r21

00001534 <__udivmodsi4_ep>:
    1534:	66 1f       	adc	r22, r22
    1536:	77 1f       	adc	r23, r23
    1538:	88 1f       	adc	r24, r24
    153a:	99 1f       	adc	r25, r25
    153c:	1a 94       	dec	r1
    153e:	69 f7       	brne	.-38     	; 0x151a <__udivmodsi4_loop>
    1540:	60 95       	com	r22
    1542:	70 95       	com	r23
    1544:	80 95       	com	r24
    1546:	90 95       	com	r25
    1548:	9b 01       	movw	r18, r22
    154a:	ac 01       	movw	r20, r24
    154c:	bd 01       	movw	r22, r26
    154e:	cf 01       	movw	r24, r30
    1550:	08 95       	ret

00001552 <__divmodsi4>:
    1552:	05 2e       	mov	r0, r21
    1554:	97 fb       	bst	r25, 7
    1556:	1e f4       	brtc	.+6      	; 0x155e <__divmodsi4+0xc>
    1558:	00 94       	com	r0
    155a:	0e 94 c0 0a 	call	0x1580	; 0x1580 <__negsi2>
    155e:	57 fd       	sbrc	r21, 7
    1560:	07 d0       	rcall	.+14     	; 0x1570 <__divmodsi4_neg2>
    1562:	0e 94 87 0a 	call	0x150e	; 0x150e <__udivmodsi4>
    1566:	07 fc       	sbrc	r0, 7
    1568:	03 d0       	rcall	.+6      	; 0x1570 <__divmodsi4_neg2>
    156a:	4e f4       	brtc	.+18     	; 0x157e <__divmodsi4_exit>
    156c:	0c 94 c0 0a 	jmp	0x1580	; 0x1580 <__negsi2>

00001570 <__divmodsi4_neg2>:
    1570:	50 95       	com	r21
    1572:	40 95       	com	r20
    1574:	30 95       	com	r19
    1576:	21 95       	neg	r18
    1578:	3f 4f       	sbci	r19, 0xFF	; 255
    157a:	4f 4f       	sbci	r20, 0xFF	; 255
    157c:	5f 4f       	sbci	r21, 0xFF	; 255

0000157e <__divmodsi4_exit>:
    157e:	08 95       	ret

00001580 <__negsi2>:
    1580:	90 95       	com	r25
    1582:	80 95       	com	r24
    1584:	70 95       	com	r23
    1586:	61 95       	neg	r22
    1588:	7f 4f       	sbci	r23, 0xFF	; 255
    158a:	8f 4f       	sbci	r24, 0xFF	; 255
    158c:	9f 4f       	sbci	r25, 0xFF	; 255
    158e:	08 95       	ret

00001590 <__tablejump2__>:
    1590:	ee 0f       	add	r30, r30
    1592:	ff 1f       	adc	r31, r31
    1594:	00 24       	eor	r0, r0
    1596:	00 1c       	adc	r0, r0
    1598:	0b be       	out	0x3b, r0	; 59
    159a:	07 90       	elpm	r0, Z+
    159c:	f6 91       	elpm	r31, Z
    159e:	e0 2d       	mov	r30, r0
    15a0:	09 94       	ijmp

000015a2 <atoi>:
    15a2:	fc 01       	movw	r30, r24
    15a4:	88 27       	eor	r24, r24
    15a6:	99 27       	eor	r25, r25
    15a8:	e8 94       	clt
    15aa:	21 91       	ld	r18, Z+
    15ac:	20 32       	cpi	r18, 0x20	; 32
    15ae:	e9 f3       	breq	.-6      	; 0x15aa <atoi+0x8>
    15b0:	29 30       	cpi	r18, 0x09	; 9
    15b2:	10 f0       	brcs	.+4      	; 0x15b8 <atoi+0x16>
    15b4:	2e 30       	cpi	r18, 0x0E	; 14
    15b6:	c8 f3       	brcs	.-14     	; 0x15aa <atoi+0x8>
    15b8:	2b 32       	cpi	r18, 0x2B	; 43
    15ba:	41 f0       	breq	.+16     	; 0x15cc <atoi+0x2a>
    15bc:	2d 32       	cpi	r18, 0x2D	; 45
    15be:	39 f4       	brne	.+14     	; 0x15ce <atoi+0x2c>
    15c0:	68 94       	set
    15c2:	04 c0       	rjmp	.+8      	; 0x15cc <atoi+0x2a>
    15c4:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <__mulhi_const_10>
    15c8:	82 0f       	add	r24, r18
    15ca:	91 1d       	adc	r25, r1
    15cc:	21 91       	ld	r18, Z+
    15ce:	20 53       	subi	r18, 0x30	; 48
    15d0:	2a 30       	cpi	r18, 0x0A	; 10
    15d2:	c0 f3       	brcs	.-16     	; 0x15c4 <atoi+0x22>
    15d4:	1e f4       	brtc	.+6      	; 0x15dc <atoi+0x3a>
    15d6:	90 95       	com	r25
    15d8:	81 95       	neg	r24
    15da:	9f 4f       	sbci	r25, 0xFF	; 255
    15dc:	08 95       	ret

000015de <strcmp>:
    15de:	fb 01       	movw	r30, r22
    15e0:	dc 01       	movw	r26, r24
    15e2:	8d 91       	ld	r24, X+
    15e4:	01 90       	ld	r0, Z+
    15e6:	80 19       	sub	r24, r0
    15e8:	01 10       	cpse	r0, r1
    15ea:	d9 f3       	breq	.-10     	; 0x15e2 <strcmp+0x4>
    15ec:	99 0b       	sbc	r25, r25
    15ee:	08 95       	ret

000015f0 <__mulhi_const_10>:
    15f0:	7a e0       	ldi	r23, 0x0A	; 10
    15f2:	97 9f       	mul	r25, r23
    15f4:	90 2d       	mov	r25, r0
    15f6:	87 9f       	mul	r24, r23
    15f8:	80 2d       	mov	r24, r0
    15fa:	91 0d       	add	r25, r1
    15fc:	11 24       	eor	r1, r1
    15fe:	08 95       	ret

00001600 <printf>:
    1600:	cf 93       	push	r28
    1602:	df 93       	push	r29
    1604:	cd b7       	in	r28, 0x3d	; 61
    1606:	de b7       	in	r29, 0x3e	; 62
    1608:	ae 01       	movw	r20, r28
    160a:	4b 5f       	subi	r20, 0xFB	; 251
    160c:	5f 4f       	sbci	r21, 0xFF	; 255
    160e:	fa 01       	movw	r30, r20
    1610:	61 91       	ld	r22, Z+
    1612:	71 91       	ld	r23, Z+
    1614:	af 01       	movw	r20, r30
    1616:	80 91 59 4c 	lds	r24, 0x4C59	; 0x804c59 <__iob+0x2>
    161a:	90 91 5a 4c 	lds	r25, 0x4C5A	; 0x804c5a <__iob+0x3>
    161e:	0e 94 44 0b 	call	0x1688	; 0x1688 <vfprintf>
    1622:	df 91       	pop	r29
    1624:	cf 91       	pop	r28
    1626:	08 95       	ret

00001628 <puts>:
    1628:	0f 93       	push	r16
    162a:	1f 93       	push	r17
    162c:	cf 93       	push	r28
    162e:	df 93       	push	r29
    1630:	e0 91 59 4c 	lds	r30, 0x4C59	; 0x804c59 <__iob+0x2>
    1634:	f0 91 5a 4c 	lds	r31, 0x4C5A	; 0x804c5a <__iob+0x3>
    1638:	23 81       	ldd	r18, Z+3	; 0x03
    163a:	21 ff       	sbrs	r18, 1
    163c:	1b c0       	rjmp	.+54     	; 0x1674 <puts+0x4c>
    163e:	8c 01       	movw	r16, r24
    1640:	d0 e0       	ldi	r29, 0x00	; 0
    1642:	c0 e0       	ldi	r28, 0x00	; 0
    1644:	f8 01       	movw	r30, r16
    1646:	81 91       	ld	r24, Z+
    1648:	8f 01       	movw	r16, r30
    164a:	60 91 59 4c 	lds	r22, 0x4C59	; 0x804c59 <__iob+0x2>
    164e:	70 91 5a 4c 	lds	r23, 0x4C5A	; 0x804c5a <__iob+0x3>
    1652:	db 01       	movw	r26, r22
    1654:	18 96       	adiw	r26, 0x08	; 8
    1656:	ed 91       	ld	r30, X+
    1658:	fc 91       	ld	r31, X
    165a:	19 97       	sbiw	r26, 0x09	; 9
    165c:	88 23       	and	r24, r24
    165e:	31 f0       	breq	.+12     	; 0x166c <puts+0x44>
    1660:	09 95       	icall
    1662:	89 2b       	or	r24, r25
    1664:	79 f3       	breq	.-34     	; 0x1644 <puts+0x1c>
    1666:	df ef       	ldi	r29, 0xFF	; 255
    1668:	cf ef       	ldi	r28, 0xFF	; 255
    166a:	ec cf       	rjmp	.-40     	; 0x1644 <puts+0x1c>
    166c:	8a e0       	ldi	r24, 0x0A	; 10
    166e:	09 95       	icall
    1670:	89 2b       	or	r24, r25
    1672:	19 f0       	breq	.+6      	; 0x167a <puts+0x52>
    1674:	8f ef       	ldi	r24, 0xFF	; 255
    1676:	9f ef       	ldi	r25, 0xFF	; 255
    1678:	02 c0       	rjmp	.+4      	; 0x167e <puts+0x56>
    167a:	8d 2f       	mov	r24, r29
    167c:	9c 2f       	mov	r25, r28
    167e:	df 91       	pop	r29
    1680:	cf 91       	pop	r28
    1682:	1f 91       	pop	r17
    1684:	0f 91       	pop	r16
    1686:	08 95       	ret

00001688 <vfprintf>:
    1688:	2f 92       	push	r2
    168a:	3f 92       	push	r3
    168c:	4f 92       	push	r4
    168e:	5f 92       	push	r5
    1690:	6f 92       	push	r6
    1692:	7f 92       	push	r7
    1694:	8f 92       	push	r8
    1696:	9f 92       	push	r9
    1698:	af 92       	push	r10
    169a:	bf 92       	push	r11
    169c:	cf 92       	push	r12
    169e:	df 92       	push	r13
    16a0:	ef 92       	push	r14
    16a2:	ff 92       	push	r15
    16a4:	0f 93       	push	r16
    16a6:	1f 93       	push	r17
    16a8:	cf 93       	push	r28
    16aa:	df 93       	push	r29
    16ac:	cd b7       	in	r28, 0x3d	; 61
    16ae:	de b7       	in	r29, 0x3e	; 62
    16b0:	2b 97       	sbiw	r28, 0x0b	; 11
    16b2:	cd bf       	out	0x3d, r28	; 61
    16b4:	de bf       	out	0x3e, r29	; 62
    16b6:	6c 01       	movw	r12, r24
    16b8:	7b 01       	movw	r14, r22
    16ba:	8a 01       	movw	r16, r20
    16bc:	fc 01       	movw	r30, r24
    16be:	16 82       	std	Z+6, r1	; 0x06
    16c0:	17 82       	std	Z+7, r1	; 0x07
    16c2:	83 81       	ldd	r24, Z+3	; 0x03
    16c4:	81 ff       	sbrs	r24, 1
    16c6:	cc c1       	rjmp	.+920    	; 0x1a60 <vfprintf+0x3d8>
    16c8:	ce 01       	movw	r24, r28
    16ca:	01 96       	adiw	r24, 0x01	; 1
    16cc:	3c 01       	movw	r6, r24
    16ce:	f6 01       	movw	r30, r12
    16d0:	93 81       	ldd	r25, Z+3	; 0x03
    16d2:	f7 01       	movw	r30, r14
    16d4:	93 fd       	sbrc	r25, 3
    16d6:	85 91       	lpm	r24, Z+
    16d8:	93 ff       	sbrs	r25, 3
    16da:	81 91       	ld	r24, Z+
    16dc:	7f 01       	movw	r14, r30
    16de:	88 23       	and	r24, r24
    16e0:	09 f4       	brne	.+2      	; 0x16e4 <vfprintf+0x5c>
    16e2:	ba c1       	rjmp	.+884    	; 0x1a58 <vfprintf+0x3d0>
    16e4:	85 32       	cpi	r24, 0x25	; 37
    16e6:	39 f4       	brne	.+14     	; 0x16f6 <vfprintf+0x6e>
    16e8:	93 fd       	sbrc	r25, 3
    16ea:	85 91       	lpm	r24, Z+
    16ec:	93 ff       	sbrs	r25, 3
    16ee:	81 91       	ld	r24, Z+
    16f0:	7f 01       	movw	r14, r30
    16f2:	85 32       	cpi	r24, 0x25	; 37
    16f4:	29 f4       	brne	.+10     	; 0x1700 <vfprintf+0x78>
    16f6:	b6 01       	movw	r22, r12
    16f8:	90 e0       	ldi	r25, 0x00	; 0
    16fa:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    16fe:	e7 cf       	rjmp	.-50     	; 0x16ce <vfprintf+0x46>
    1700:	91 2c       	mov	r9, r1
    1702:	21 2c       	mov	r2, r1
    1704:	31 2c       	mov	r3, r1
    1706:	ff e1       	ldi	r31, 0x1F	; 31
    1708:	f3 15       	cp	r31, r3
    170a:	d8 f0       	brcs	.+54     	; 0x1742 <vfprintf+0xba>
    170c:	8b 32       	cpi	r24, 0x2B	; 43
    170e:	79 f0       	breq	.+30     	; 0x172e <vfprintf+0xa6>
    1710:	38 f4       	brcc	.+14     	; 0x1720 <vfprintf+0x98>
    1712:	80 32       	cpi	r24, 0x20	; 32
    1714:	79 f0       	breq	.+30     	; 0x1734 <vfprintf+0xac>
    1716:	83 32       	cpi	r24, 0x23	; 35
    1718:	a1 f4       	brne	.+40     	; 0x1742 <vfprintf+0xba>
    171a:	23 2d       	mov	r18, r3
    171c:	20 61       	ori	r18, 0x10	; 16
    171e:	1d c0       	rjmp	.+58     	; 0x175a <vfprintf+0xd2>
    1720:	8d 32       	cpi	r24, 0x2D	; 45
    1722:	61 f0       	breq	.+24     	; 0x173c <vfprintf+0xb4>
    1724:	80 33       	cpi	r24, 0x30	; 48
    1726:	69 f4       	brne	.+26     	; 0x1742 <vfprintf+0xba>
    1728:	23 2d       	mov	r18, r3
    172a:	21 60       	ori	r18, 0x01	; 1
    172c:	16 c0       	rjmp	.+44     	; 0x175a <vfprintf+0xd2>
    172e:	83 2d       	mov	r24, r3
    1730:	82 60       	ori	r24, 0x02	; 2
    1732:	38 2e       	mov	r3, r24
    1734:	e3 2d       	mov	r30, r3
    1736:	e4 60       	ori	r30, 0x04	; 4
    1738:	3e 2e       	mov	r3, r30
    173a:	2a c0       	rjmp	.+84     	; 0x1790 <vfprintf+0x108>
    173c:	f3 2d       	mov	r31, r3
    173e:	f8 60       	ori	r31, 0x08	; 8
    1740:	1d c0       	rjmp	.+58     	; 0x177c <vfprintf+0xf4>
    1742:	37 fc       	sbrc	r3, 7
    1744:	2d c0       	rjmp	.+90     	; 0x17a0 <vfprintf+0x118>
    1746:	20 ed       	ldi	r18, 0xD0	; 208
    1748:	28 0f       	add	r18, r24
    174a:	2a 30       	cpi	r18, 0x0A	; 10
    174c:	40 f0       	brcs	.+16     	; 0x175e <vfprintf+0xd6>
    174e:	8e 32       	cpi	r24, 0x2E	; 46
    1750:	b9 f4       	brne	.+46     	; 0x1780 <vfprintf+0xf8>
    1752:	36 fc       	sbrc	r3, 6
    1754:	81 c1       	rjmp	.+770    	; 0x1a58 <vfprintf+0x3d0>
    1756:	23 2d       	mov	r18, r3
    1758:	20 64       	ori	r18, 0x40	; 64
    175a:	32 2e       	mov	r3, r18
    175c:	19 c0       	rjmp	.+50     	; 0x1790 <vfprintf+0x108>
    175e:	36 fe       	sbrs	r3, 6
    1760:	06 c0       	rjmp	.+12     	; 0x176e <vfprintf+0xe6>
    1762:	8a e0       	ldi	r24, 0x0A	; 10
    1764:	98 9e       	mul	r9, r24
    1766:	20 0d       	add	r18, r0
    1768:	11 24       	eor	r1, r1
    176a:	92 2e       	mov	r9, r18
    176c:	11 c0       	rjmp	.+34     	; 0x1790 <vfprintf+0x108>
    176e:	ea e0       	ldi	r30, 0x0A	; 10
    1770:	2e 9e       	mul	r2, r30
    1772:	20 0d       	add	r18, r0
    1774:	11 24       	eor	r1, r1
    1776:	22 2e       	mov	r2, r18
    1778:	f3 2d       	mov	r31, r3
    177a:	f0 62       	ori	r31, 0x20	; 32
    177c:	3f 2e       	mov	r3, r31
    177e:	08 c0       	rjmp	.+16     	; 0x1790 <vfprintf+0x108>
    1780:	8c 36       	cpi	r24, 0x6C	; 108
    1782:	21 f4       	brne	.+8      	; 0x178c <vfprintf+0x104>
    1784:	83 2d       	mov	r24, r3
    1786:	80 68       	ori	r24, 0x80	; 128
    1788:	38 2e       	mov	r3, r24
    178a:	02 c0       	rjmp	.+4      	; 0x1790 <vfprintf+0x108>
    178c:	88 36       	cpi	r24, 0x68	; 104
    178e:	41 f4       	brne	.+16     	; 0x17a0 <vfprintf+0x118>
    1790:	f7 01       	movw	r30, r14
    1792:	93 fd       	sbrc	r25, 3
    1794:	85 91       	lpm	r24, Z+
    1796:	93 ff       	sbrs	r25, 3
    1798:	81 91       	ld	r24, Z+
    179a:	7f 01       	movw	r14, r30
    179c:	81 11       	cpse	r24, r1
    179e:	b3 cf       	rjmp	.-154    	; 0x1706 <vfprintf+0x7e>
    17a0:	98 2f       	mov	r25, r24
    17a2:	9f 7d       	andi	r25, 0xDF	; 223
    17a4:	95 54       	subi	r25, 0x45	; 69
    17a6:	93 30       	cpi	r25, 0x03	; 3
    17a8:	28 f4       	brcc	.+10     	; 0x17b4 <vfprintf+0x12c>
    17aa:	0c 5f       	subi	r16, 0xFC	; 252
    17ac:	1f 4f       	sbci	r17, 0xFF	; 255
    17ae:	9f e3       	ldi	r25, 0x3F	; 63
    17b0:	99 83       	std	Y+1, r25	; 0x01
    17b2:	0d c0       	rjmp	.+26     	; 0x17ce <vfprintf+0x146>
    17b4:	83 36       	cpi	r24, 0x63	; 99
    17b6:	31 f0       	breq	.+12     	; 0x17c4 <vfprintf+0x13c>
    17b8:	83 37       	cpi	r24, 0x73	; 115
    17ba:	71 f0       	breq	.+28     	; 0x17d8 <vfprintf+0x150>
    17bc:	83 35       	cpi	r24, 0x53	; 83
    17be:	09 f0       	breq	.+2      	; 0x17c2 <vfprintf+0x13a>
    17c0:	59 c0       	rjmp	.+178    	; 0x1874 <vfprintf+0x1ec>
    17c2:	21 c0       	rjmp	.+66     	; 0x1806 <vfprintf+0x17e>
    17c4:	f8 01       	movw	r30, r16
    17c6:	80 81       	ld	r24, Z
    17c8:	89 83       	std	Y+1, r24	; 0x01
    17ca:	0e 5f       	subi	r16, 0xFE	; 254
    17cc:	1f 4f       	sbci	r17, 0xFF	; 255
    17ce:	88 24       	eor	r8, r8
    17d0:	83 94       	inc	r8
    17d2:	91 2c       	mov	r9, r1
    17d4:	53 01       	movw	r10, r6
    17d6:	13 c0       	rjmp	.+38     	; 0x17fe <vfprintf+0x176>
    17d8:	28 01       	movw	r4, r16
    17da:	f2 e0       	ldi	r31, 0x02	; 2
    17dc:	4f 0e       	add	r4, r31
    17de:	51 1c       	adc	r5, r1
    17e0:	f8 01       	movw	r30, r16
    17e2:	a0 80       	ld	r10, Z
    17e4:	b1 80       	ldd	r11, Z+1	; 0x01
    17e6:	36 fe       	sbrs	r3, 6
    17e8:	03 c0       	rjmp	.+6      	; 0x17f0 <vfprintf+0x168>
    17ea:	69 2d       	mov	r22, r9
    17ec:	70 e0       	ldi	r23, 0x00	; 0
    17ee:	02 c0       	rjmp	.+4      	; 0x17f4 <vfprintf+0x16c>
    17f0:	6f ef       	ldi	r22, 0xFF	; 255
    17f2:	7f ef       	ldi	r23, 0xFF	; 255
    17f4:	c5 01       	movw	r24, r10
    17f6:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <strnlen>
    17fa:	4c 01       	movw	r8, r24
    17fc:	82 01       	movw	r16, r4
    17fe:	f3 2d       	mov	r31, r3
    1800:	ff 77       	andi	r31, 0x7F	; 127
    1802:	3f 2e       	mov	r3, r31
    1804:	16 c0       	rjmp	.+44     	; 0x1832 <vfprintf+0x1aa>
    1806:	28 01       	movw	r4, r16
    1808:	22 e0       	ldi	r18, 0x02	; 2
    180a:	42 0e       	add	r4, r18
    180c:	51 1c       	adc	r5, r1
    180e:	f8 01       	movw	r30, r16
    1810:	a0 80       	ld	r10, Z
    1812:	b1 80       	ldd	r11, Z+1	; 0x01
    1814:	36 fe       	sbrs	r3, 6
    1816:	03 c0       	rjmp	.+6      	; 0x181e <vfprintf+0x196>
    1818:	69 2d       	mov	r22, r9
    181a:	70 e0       	ldi	r23, 0x00	; 0
    181c:	02 c0       	rjmp	.+4      	; 0x1822 <vfprintf+0x19a>
    181e:	6f ef       	ldi	r22, 0xFF	; 255
    1820:	7f ef       	ldi	r23, 0xFF	; 255
    1822:	c5 01       	movw	r24, r10
    1824:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <strnlen_P>
    1828:	4c 01       	movw	r8, r24
    182a:	f3 2d       	mov	r31, r3
    182c:	f0 68       	ori	r31, 0x80	; 128
    182e:	3f 2e       	mov	r3, r31
    1830:	82 01       	movw	r16, r4
    1832:	33 fc       	sbrc	r3, 3
    1834:	1b c0       	rjmp	.+54     	; 0x186c <vfprintf+0x1e4>
    1836:	82 2d       	mov	r24, r2
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	88 16       	cp	r8, r24
    183c:	99 06       	cpc	r9, r25
    183e:	b0 f4       	brcc	.+44     	; 0x186c <vfprintf+0x1e4>
    1840:	b6 01       	movw	r22, r12
    1842:	80 e2       	ldi	r24, 0x20	; 32
    1844:	90 e0       	ldi	r25, 0x00	; 0
    1846:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    184a:	2a 94       	dec	r2
    184c:	f4 cf       	rjmp	.-24     	; 0x1836 <vfprintf+0x1ae>
    184e:	f5 01       	movw	r30, r10
    1850:	37 fc       	sbrc	r3, 7
    1852:	85 91       	lpm	r24, Z+
    1854:	37 fe       	sbrs	r3, 7
    1856:	81 91       	ld	r24, Z+
    1858:	5f 01       	movw	r10, r30
    185a:	b6 01       	movw	r22, r12
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    1862:	21 10       	cpse	r2, r1
    1864:	2a 94       	dec	r2
    1866:	21 e0       	ldi	r18, 0x01	; 1
    1868:	82 1a       	sub	r8, r18
    186a:	91 08       	sbc	r9, r1
    186c:	81 14       	cp	r8, r1
    186e:	91 04       	cpc	r9, r1
    1870:	71 f7       	brne	.-36     	; 0x184e <vfprintf+0x1c6>
    1872:	e8 c0       	rjmp	.+464    	; 0x1a44 <vfprintf+0x3bc>
    1874:	84 36       	cpi	r24, 0x64	; 100
    1876:	11 f0       	breq	.+4      	; 0x187c <vfprintf+0x1f4>
    1878:	89 36       	cpi	r24, 0x69	; 105
    187a:	41 f5       	brne	.+80     	; 0x18cc <vfprintf+0x244>
    187c:	f8 01       	movw	r30, r16
    187e:	37 fe       	sbrs	r3, 7
    1880:	07 c0       	rjmp	.+14     	; 0x1890 <vfprintf+0x208>
    1882:	60 81       	ld	r22, Z
    1884:	71 81       	ldd	r23, Z+1	; 0x01
    1886:	82 81       	ldd	r24, Z+2	; 0x02
    1888:	93 81       	ldd	r25, Z+3	; 0x03
    188a:	0c 5f       	subi	r16, 0xFC	; 252
    188c:	1f 4f       	sbci	r17, 0xFF	; 255
    188e:	08 c0       	rjmp	.+16     	; 0x18a0 <vfprintf+0x218>
    1890:	60 81       	ld	r22, Z
    1892:	71 81       	ldd	r23, Z+1	; 0x01
    1894:	07 2e       	mov	r0, r23
    1896:	00 0c       	add	r0, r0
    1898:	88 0b       	sbc	r24, r24
    189a:	99 0b       	sbc	r25, r25
    189c:	0e 5f       	subi	r16, 0xFE	; 254
    189e:	1f 4f       	sbci	r17, 0xFF	; 255
    18a0:	f3 2d       	mov	r31, r3
    18a2:	ff 76       	andi	r31, 0x6F	; 111
    18a4:	3f 2e       	mov	r3, r31
    18a6:	97 ff       	sbrs	r25, 7
    18a8:	09 c0       	rjmp	.+18     	; 0x18bc <vfprintf+0x234>
    18aa:	90 95       	com	r25
    18ac:	80 95       	com	r24
    18ae:	70 95       	com	r23
    18b0:	61 95       	neg	r22
    18b2:	7f 4f       	sbci	r23, 0xFF	; 255
    18b4:	8f 4f       	sbci	r24, 0xFF	; 255
    18b6:	9f 4f       	sbci	r25, 0xFF	; 255
    18b8:	f0 68       	ori	r31, 0x80	; 128
    18ba:	3f 2e       	mov	r3, r31
    18bc:	2a e0       	ldi	r18, 0x0A	; 10
    18be:	30 e0       	ldi	r19, 0x00	; 0
    18c0:	a3 01       	movw	r20, r6
    18c2:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <__ultoa_invert>
    18c6:	88 2e       	mov	r8, r24
    18c8:	86 18       	sub	r8, r6
    18ca:	45 c0       	rjmp	.+138    	; 0x1956 <vfprintf+0x2ce>
    18cc:	85 37       	cpi	r24, 0x75	; 117
    18ce:	31 f4       	brne	.+12     	; 0x18dc <vfprintf+0x254>
    18d0:	23 2d       	mov	r18, r3
    18d2:	2f 7e       	andi	r18, 0xEF	; 239
    18d4:	b2 2e       	mov	r11, r18
    18d6:	2a e0       	ldi	r18, 0x0A	; 10
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	25 c0       	rjmp	.+74     	; 0x1926 <vfprintf+0x29e>
    18dc:	93 2d       	mov	r25, r3
    18de:	99 7f       	andi	r25, 0xF9	; 249
    18e0:	b9 2e       	mov	r11, r25
    18e2:	8f 36       	cpi	r24, 0x6F	; 111
    18e4:	c1 f0       	breq	.+48     	; 0x1916 <vfprintf+0x28e>
    18e6:	18 f4       	brcc	.+6      	; 0x18ee <vfprintf+0x266>
    18e8:	88 35       	cpi	r24, 0x58	; 88
    18ea:	79 f0       	breq	.+30     	; 0x190a <vfprintf+0x282>
    18ec:	b5 c0       	rjmp	.+362    	; 0x1a58 <vfprintf+0x3d0>
    18ee:	80 37       	cpi	r24, 0x70	; 112
    18f0:	19 f0       	breq	.+6      	; 0x18f8 <vfprintf+0x270>
    18f2:	88 37       	cpi	r24, 0x78	; 120
    18f4:	21 f0       	breq	.+8      	; 0x18fe <vfprintf+0x276>
    18f6:	b0 c0       	rjmp	.+352    	; 0x1a58 <vfprintf+0x3d0>
    18f8:	e9 2f       	mov	r30, r25
    18fa:	e0 61       	ori	r30, 0x10	; 16
    18fc:	be 2e       	mov	r11, r30
    18fe:	b4 fe       	sbrs	r11, 4
    1900:	0d c0       	rjmp	.+26     	; 0x191c <vfprintf+0x294>
    1902:	fb 2d       	mov	r31, r11
    1904:	f4 60       	ori	r31, 0x04	; 4
    1906:	bf 2e       	mov	r11, r31
    1908:	09 c0       	rjmp	.+18     	; 0x191c <vfprintf+0x294>
    190a:	34 fe       	sbrs	r3, 4
    190c:	0a c0       	rjmp	.+20     	; 0x1922 <vfprintf+0x29a>
    190e:	29 2f       	mov	r18, r25
    1910:	26 60       	ori	r18, 0x06	; 6
    1912:	b2 2e       	mov	r11, r18
    1914:	06 c0       	rjmp	.+12     	; 0x1922 <vfprintf+0x29a>
    1916:	28 e0       	ldi	r18, 0x08	; 8
    1918:	30 e0       	ldi	r19, 0x00	; 0
    191a:	05 c0       	rjmp	.+10     	; 0x1926 <vfprintf+0x29e>
    191c:	20 e1       	ldi	r18, 0x10	; 16
    191e:	30 e0       	ldi	r19, 0x00	; 0
    1920:	02 c0       	rjmp	.+4      	; 0x1926 <vfprintf+0x29e>
    1922:	20 e1       	ldi	r18, 0x10	; 16
    1924:	32 e0       	ldi	r19, 0x02	; 2
    1926:	f8 01       	movw	r30, r16
    1928:	b7 fe       	sbrs	r11, 7
    192a:	07 c0       	rjmp	.+14     	; 0x193a <vfprintf+0x2b2>
    192c:	60 81       	ld	r22, Z
    192e:	71 81       	ldd	r23, Z+1	; 0x01
    1930:	82 81       	ldd	r24, Z+2	; 0x02
    1932:	93 81       	ldd	r25, Z+3	; 0x03
    1934:	0c 5f       	subi	r16, 0xFC	; 252
    1936:	1f 4f       	sbci	r17, 0xFF	; 255
    1938:	06 c0       	rjmp	.+12     	; 0x1946 <vfprintf+0x2be>
    193a:	60 81       	ld	r22, Z
    193c:	71 81       	ldd	r23, Z+1	; 0x01
    193e:	80 e0       	ldi	r24, 0x00	; 0
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	0e 5f       	subi	r16, 0xFE	; 254
    1944:	1f 4f       	sbci	r17, 0xFF	; 255
    1946:	a3 01       	movw	r20, r6
    1948:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <__ultoa_invert>
    194c:	88 2e       	mov	r8, r24
    194e:	86 18       	sub	r8, r6
    1950:	fb 2d       	mov	r31, r11
    1952:	ff 77       	andi	r31, 0x7F	; 127
    1954:	3f 2e       	mov	r3, r31
    1956:	36 fe       	sbrs	r3, 6
    1958:	0d c0       	rjmp	.+26     	; 0x1974 <vfprintf+0x2ec>
    195a:	23 2d       	mov	r18, r3
    195c:	2e 7f       	andi	r18, 0xFE	; 254
    195e:	a2 2e       	mov	r10, r18
    1960:	89 14       	cp	r8, r9
    1962:	58 f4       	brcc	.+22     	; 0x197a <vfprintf+0x2f2>
    1964:	34 fe       	sbrs	r3, 4
    1966:	0b c0       	rjmp	.+22     	; 0x197e <vfprintf+0x2f6>
    1968:	32 fc       	sbrc	r3, 2
    196a:	09 c0       	rjmp	.+18     	; 0x197e <vfprintf+0x2f6>
    196c:	83 2d       	mov	r24, r3
    196e:	8e 7e       	andi	r24, 0xEE	; 238
    1970:	a8 2e       	mov	r10, r24
    1972:	05 c0       	rjmp	.+10     	; 0x197e <vfprintf+0x2f6>
    1974:	b8 2c       	mov	r11, r8
    1976:	a3 2c       	mov	r10, r3
    1978:	03 c0       	rjmp	.+6      	; 0x1980 <vfprintf+0x2f8>
    197a:	b8 2c       	mov	r11, r8
    197c:	01 c0       	rjmp	.+2      	; 0x1980 <vfprintf+0x2f8>
    197e:	b9 2c       	mov	r11, r9
    1980:	a4 fe       	sbrs	r10, 4
    1982:	0f c0       	rjmp	.+30     	; 0x19a2 <vfprintf+0x31a>
    1984:	fe 01       	movw	r30, r28
    1986:	e8 0d       	add	r30, r8
    1988:	f1 1d       	adc	r31, r1
    198a:	80 81       	ld	r24, Z
    198c:	80 33       	cpi	r24, 0x30	; 48
    198e:	21 f4       	brne	.+8      	; 0x1998 <vfprintf+0x310>
    1990:	9a 2d       	mov	r25, r10
    1992:	99 7e       	andi	r25, 0xE9	; 233
    1994:	a9 2e       	mov	r10, r25
    1996:	09 c0       	rjmp	.+18     	; 0x19aa <vfprintf+0x322>
    1998:	a2 fe       	sbrs	r10, 2
    199a:	06 c0       	rjmp	.+12     	; 0x19a8 <vfprintf+0x320>
    199c:	b3 94       	inc	r11
    199e:	b3 94       	inc	r11
    19a0:	04 c0       	rjmp	.+8      	; 0x19aa <vfprintf+0x322>
    19a2:	8a 2d       	mov	r24, r10
    19a4:	86 78       	andi	r24, 0x86	; 134
    19a6:	09 f0       	breq	.+2      	; 0x19aa <vfprintf+0x322>
    19a8:	b3 94       	inc	r11
    19aa:	a3 fc       	sbrc	r10, 3
    19ac:	11 c0       	rjmp	.+34     	; 0x19d0 <vfprintf+0x348>
    19ae:	a0 fe       	sbrs	r10, 0
    19b0:	06 c0       	rjmp	.+12     	; 0x19be <vfprintf+0x336>
    19b2:	b2 14       	cp	r11, r2
    19b4:	88 f4       	brcc	.+34     	; 0x19d8 <vfprintf+0x350>
    19b6:	28 0c       	add	r2, r8
    19b8:	92 2c       	mov	r9, r2
    19ba:	9b 18       	sub	r9, r11
    19bc:	0e c0       	rjmp	.+28     	; 0x19da <vfprintf+0x352>
    19be:	b2 14       	cp	r11, r2
    19c0:	60 f4       	brcc	.+24     	; 0x19da <vfprintf+0x352>
    19c2:	b6 01       	movw	r22, r12
    19c4:	80 e2       	ldi	r24, 0x20	; 32
    19c6:	90 e0       	ldi	r25, 0x00	; 0
    19c8:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    19cc:	b3 94       	inc	r11
    19ce:	f7 cf       	rjmp	.-18     	; 0x19be <vfprintf+0x336>
    19d0:	b2 14       	cp	r11, r2
    19d2:	18 f4       	brcc	.+6      	; 0x19da <vfprintf+0x352>
    19d4:	2b 18       	sub	r2, r11
    19d6:	02 c0       	rjmp	.+4      	; 0x19dc <vfprintf+0x354>
    19d8:	98 2c       	mov	r9, r8
    19da:	21 2c       	mov	r2, r1
    19dc:	a4 fe       	sbrs	r10, 4
    19de:	10 c0       	rjmp	.+32     	; 0x1a00 <vfprintf+0x378>
    19e0:	b6 01       	movw	r22, r12
    19e2:	80 e3       	ldi	r24, 0x30	; 48
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    19ea:	a2 fe       	sbrs	r10, 2
    19ec:	17 c0       	rjmp	.+46     	; 0x1a1c <vfprintf+0x394>
    19ee:	a1 fc       	sbrc	r10, 1
    19f0:	03 c0       	rjmp	.+6      	; 0x19f8 <vfprintf+0x370>
    19f2:	88 e7       	ldi	r24, 0x78	; 120
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	02 c0       	rjmp	.+4      	; 0x19fc <vfprintf+0x374>
    19f8:	88 e5       	ldi	r24, 0x58	; 88
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	b6 01       	movw	r22, r12
    19fe:	0c c0       	rjmp	.+24     	; 0x1a18 <vfprintf+0x390>
    1a00:	8a 2d       	mov	r24, r10
    1a02:	86 78       	andi	r24, 0x86	; 134
    1a04:	59 f0       	breq	.+22     	; 0x1a1c <vfprintf+0x394>
    1a06:	a1 fe       	sbrs	r10, 1
    1a08:	02 c0       	rjmp	.+4      	; 0x1a0e <vfprintf+0x386>
    1a0a:	8b e2       	ldi	r24, 0x2B	; 43
    1a0c:	01 c0       	rjmp	.+2      	; 0x1a10 <vfprintf+0x388>
    1a0e:	80 e2       	ldi	r24, 0x20	; 32
    1a10:	a7 fc       	sbrc	r10, 7
    1a12:	8d e2       	ldi	r24, 0x2D	; 45
    1a14:	b6 01       	movw	r22, r12
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    1a1c:	89 14       	cp	r8, r9
    1a1e:	38 f4       	brcc	.+14     	; 0x1a2e <vfprintf+0x3a6>
    1a20:	b6 01       	movw	r22, r12
    1a22:	80 e3       	ldi	r24, 0x30	; 48
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    1a2a:	9a 94       	dec	r9
    1a2c:	f7 cf       	rjmp	.-18     	; 0x1a1c <vfprintf+0x394>
    1a2e:	8a 94       	dec	r8
    1a30:	f3 01       	movw	r30, r6
    1a32:	e8 0d       	add	r30, r8
    1a34:	f1 1d       	adc	r31, r1
    1a36:	80 81       	ld	r24, Z
    1a38:	b6 01       	movw	r22, r12
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    1a40:	81 10       	cpse	r8, r1
    1a42:	f5 cf       	rjmp	.-22     	; 0x1a2e <vfprintf+0x3a6>
    1a44:	22 20       	and	r2, r2
    1a46:	09 f4       	brne	.+2      	; 0x1a4a <vfprintf+0x3c2>
    1a48:	42 ce       	rjmp	.-892    	; 0x16ce <vfprintf+0x46>
    1a4a:	b6 01       	movw	r22, r12
    1a4c:	80 e2       	ldi	r24, 0x20	; 32
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <fputc>
    1a54:	2a 94       	dec	r2
    1a56:	f6 cf       	rjmp	.-20     	; 0x1a44 <vfprintf+0x3bc>
    1a58:	f6 01       	movw	r30, r12
    1a5a:	86 81       	ldd	r24, Z+6	; 0x06
    1a5c:	97 81       	ldd	r25, Z+7	; 0x07
    1a5e:	02 c0       	rjmp	.+4      	; 0x1a64 <vfprintf+0x3dc>
    1a60:	8f ef       	ldi	r24, 0xFF	; 255
    1a62:	9f ef       	ldi	r25, 0xFF	; 255
    1a64:	2b 96       	adiw	r28, 0x0b	; 11
    1a66:	cd bf       	out	0x3d, r28	; 61
    1a68:	de bf       	out	0x3e, r29	; 62
    1a6a:	df 91       	pop	r29
    1a6c:	cf 91       	pop	r28
    1a6e:	1f 91       	pop	r17
    1a70:	0f 91       	pop	r16
    1a72:	ff 90       	pop	r15
    1a74:	ef 90       	pop	r14
    1a76:	df 90       	pop	r13
    1a78:	cf 90       	pop	r12
    1a7a:	bf 90       	pop	r11
    1a7c:	af 90       	pop	r10
    1a7e:	9f 90       	pop	r9
    1a80:	8f 90       	pop	r8
    1a82:	7f 90       	pop	r7
    1a84:	6f 90       	pop	r6
    1a86:	5f 90       	pop	r5
    1a88:	4f 90       	pop	r4
    1a8a:	3f 90       	pop	r3
    1a8c:	2f 90       	pop	r2
    1a8e:	08 95       	ret

00001a90 <strnlen_P>:
    1a90:	fc 01       	movw	r30, r24
    1a92:	05 90       	lpm	r0, Z+
    1a94:	61 50       	subi	r22, 0x01	; 1
    1a96:	70 40       	sbci	r23, 0x00	; 0
    1a98:	01 10       	cpse	r0, r1
    1a9a:	d8 f7       	brcc	.-10     	; 0x1a92 <strnlen_P+0x2>
    1a9c:	80 95       	com	r24
    1a9e:	90 95       	com	r25
    1aa0:	8e 0f       	add	r24, r30
    1aa2:	9f 1f       	adc	r25, r31
    1aa4:	08 95       	ret

00001aa6 <strnlen>:
    1aa6:	fc 01       	movw	r30, r24
    1aa8:	61 50       	subi	r22, 0x01	; 1
    1aaa:	70 40       	sbci	r23, 0x00	; 0
    1aac:	01 90       	ld	r0, Z+
    1aae:	01 10       	cpse	r0, r1
    1ab0:	d8 f7       	brcc	.-10     	; 0x1aa8 <strnlen+0x2>
    1ab2:	80 95       	com	r24
    1ab4:	90 95       	com	r25
    1ab6:	8e 0f       	add	r24, r30
    1ab8:	9f 1f       	adc	r25, r31
    1aba:	08 95       	ret

00001abc <fputc>:
    1abc:	0f 93       	push	r16
    1abe:	1f 93       	push	r17
    1ac0:	cf 93       	push	r28
    1ac2:	df 93       	push	r29
    1ac4:	fb 01       	movw	r30, r22
    1ac6:	23 81       	ldd	r18, Z+3	; 0x03
    1ac8:	21 fd       	sbrc	r18, 1
    1aca:	03 c0       	rjmp	.+6      	; 0x1ad2 <fputc+0x16>
    1acc:	8f ef       	ldi	r24, 0xFF	; 255
    1ace:	9f ef       	ldi	r25, 0xFF	; 255
    1ad0:	2c c0       	rjmp	.+88     	; 0x1b2a <fputc+0x6e>
    1ad2:	22 ff       	sbrs	r18, 2
    1ad4:	16 c0       	rjmp	.+44     	; 0x1b02 <fputc+0x46>
    1ad6:	46 81       	ldd	r20, Z+6	; 0x06
    1ad8:	57 81       	ldd	r21, Z+7	; 0x07
    1ada:	24 81       	ldd	r18, Z+4	; 0x04
    1adc:	35 81       	ldd	r19, Z+5	; 0x05
    1ade:	42 17       	cp	r20, r18
    1ae0:	53 07       	cpc	r21, r19
    1ae2:	44 f4       	brge	.+16     	; 0x1af4 <fputc+0x38>
    1ae4:	a0 81       	ld	r26, Z
    1ae6:	b1 81       	ldd	r27, Z+1	; 0x01
    1ae8:	9d 01       	movw	r18, r26
    1aea:	2f 5f       	subi	r18, 0xFF	; 255
    1aec:	3f 4f       	sbci	r19, 0xFF	; 255
    1aee:	20 83       	st	Z, r18
    1af0:	31 83       	std	Z+1, r19	; 0x01
    1af2:	8c 93       	st	X, r24
    1af4:	26 81       	ldd	r18, Z+6	; 0x06
    1af6:	37 81       	ldd	r19, Z+7	; 0x07
    1af8:	2f 5f       	subi	r18, 0xFF	; 255
    1afa:	3f 4f       	sbci	r19, 0xFF	; 255
    1afc:	26 83       	std	Z+6, r18	; 0x06
    1afe:	37 83       	std	Z+7, r19	; 0x07
    1b00:	14 c0       	rjmp	.+40     	; 0x1b2a <fputc+0x6e>
    1b02:	8b 01       	movw	r16, r22
    1b04:	ec 01       	movw	r28, r24
    1b06:	fb 01       	movw	r30, r22
    1b08:	00 84       	ldd	r0, Z+8	; 0x08
    1b0a:	f1 85       	ldd	r31, Z+9	; 0x09
    1b0c:	e0 2d       	mov	r30, r0
    1b0e:	09 95       	icall
    1b10:	89 2b       	or	r24, r25
    1b12:	e1 f6       	brne	.-72     	; 0x1acc <fputc+0x10>
    1b14:	d8 01       	movw	r26, r16
    1b16:	16 96       	adiw	r26, 0x06	; 6
    1b18:	8d 91       	ld	r24, X+
    1b1a:	9c 91       	ld	r25, X
    1b1c:	17 97       	sbiw	r26, 0x07	; 7
    1b1e:	01 96       	adiw	r24, 0x01	; 1
    1b20:	16 96       	adiw	r26, 0x06	; 6
    1b22:	8d 93       	st	X+, r24
    1b24:	9c 93       	st	X, r25
    1b26:	17 97       	sbiw	r26, 0x07	; 7
    1b28:	ce 01       	movw	r24, r28
    1b2a:	df 91       	pop	r29
    1b2c:	cf 91       	pop	r28
    1b2e:	1f 91       	pop	r17
    1b30:	0f 91       	pop	r16
    1b32:	08 95       	ret

00001b34 <__ultoa_invert>:
    1b34:	fa 01       	movw	r30, r20
    1b36:	aa 27       	eor	r26, r26
    1b38:	28 30       	cpi	r18, 0x08	; 8
    1b3a:	51 f1       	breq	.+84     	; 0x1b90 <__ultoa_invert+0x5c>
    1b3c:	20 31       	cpi	r18, 0x10	; 16
    1b3e:	81 f1       	breq	.+96     	; 0x1ba0 <__ultoa_invert+0x6c>
    1b40:	e8 94       	clt
    1b42:	6f 93       	push	r22
    1b44:	6e 7f       	andi	r22, 0xFE	; 254
    1b46:	6e 5f       	subi	r22, 0xFE	; 254
    1b48:	7f 4f       	sbci	r23, 0xFF	; 255
    1b4a:	8f 4f       	sbci	r24, 0xFF	; 255
    1b4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b4e:	af 4f       	sbci	r26, 0xFF	; 255
    1b50:	b1 e0       	ldi	r27, 0x01	; 1
    1b52:	3e d0       	rcall	.+124    	; 0x1bd0 <__ultoa_invert+0x9c>
    1b54:	b4 e0       	ldi	r27, 0x04	; 4
    1b56:	3c d0       	rcall	.+120    	; 0x1bd0 <__ultoa_invert+0x9c>
    1b58:	67 0f       	add	r22, r23
    1b5a:	78 1f       	adc	r23, r24
    1b5c:	89 1f       	adc	r24, r25
    1b5e:	9a 1f       	adc	r25, r26
    1b60:	a1 1d       	adc	r26, r1
    1b62:	68 0f       	add	r22, r24
    1b64:	79 1f       	adc	r23, r25
    1b66:	8a 1f       	adc	r24, r26
    1b68:	91 1d       	adc	r25, r1
    1b6a:	a1 1d       	adc	r26, r1
    1b6c:	6a 0f       	add	r22, r26
    1b6e:	71 1d       	adc	r23, r1
    1b70:	81 1d       	adc	r24, r1
    1b72:	91 1d       	adc	r25, r1
    1b74:	a1 1d       	adc	r26, r1
    1b76:	20 d0       	rcall	.+64     	; 0x1bb8 <__ultoa_invert+0x84>
    1b78:	09 f4       	brne	.+2      	; 0x1b7c <__ultoa_invert+0x48>
    1b7a:	68 94       	set
    1b7c:	3f 91       	pop	r19
    1b7e:	2a e0       	ldi	r18, 0x0A	; 10
    1b80:	26 9f       	mul	r18, r22
    1b82:	11 24       	eor	r1, r1
    1b84:	30 19       	sub	r19, r0
    1b86:	30 5d       	subi	r19, 0xD0	; 208
    1b88:	31 93       	st	Z+, r19
    1b8a:	de f6       	brtc	.-74     	; 0x1b42 <__ultoa_invert+0xe>
    1b8c:	cf 01       	movw	r24, r30
    1b8e:	08 95       	ret
    1b90:	46 2f       	mov	r20, r22
    1b92:	47 70       	andi	r20, 0x07	; 7
    1b94:	40 5d       	subi	r20, 0xD0	; 208
    1b96:	41 93       	st	Z+, r20
    1b98:	b3 e0       	ldi	r27, 0x03	; 3
    1b9a:	0f d0       	rcall	.+30     	; 0x1bba <__ultoa_invert+0x86>
    1b9c:	c9 f7       	brne	.-14     	; 0x1b90 <__ultoa_invert+0x5c>
    1b9e:	f6 cf       	rjmp	.-20     	; 0x1b8c <__ultoa_invert+0x58>
    1ba0:	46 2f       	mov	r20, r22
    1ba2:	4f 70       	andi	r20, 0x0F	; 15
    1ba4:	40 5d       	subi	r20, 0xD0	; 208
    1ba6:	4a 33       	cpi	r20, 0x3A	; 58
    1ba8:	18 f0       	brcs	.+6      	; 0x1bb0 <__ultoa_invert+0x7c>
    1baa:	49 5d       	subi	r20, 0xD9	; 217
    1bac:	31 fd       	sbrc	r19, 1
    1bae:	40 52       	subi	r20, 0x20	; 32
    1bb0:	41 93       	st	Z+, r20
    1bb2:	02 d0       	rcall	.+4      	; 0x1bb8 <__ultoa_invert+0x84>
    1bb4:	a9 f7       	brne	.-22     	; 0x1ba0 <__ultoa_invert+0x6c>
    1bb6:	ea cf       	rjmp	.-44     	; 0x1b8c <__ultoa_invert+0x58>
    1bb8:	b4 e0       	ldi	r27, 0x04	; 4
    1bba:	a6 95       	lsr	r26
    1bbc:	97 95       	ror	r25
    1bbe:	87 95       	ror	r24
    1bc0:	77 95       	ror	r23
    1bc2:	67 95       	ror	r22
    1bc4:	ba 95       	dec	r27
    1bc6:	c9 f7       	brne	.-14     	; 0x1bba <__ultoa_invert+0x86>
    1bc8:	00 97       	sbiw	r24, 0x00	; 0
    1bca:	61 05       	cpc	r22, r1
    1bcc:	71 05       	cpc	r23, r1
    1bce:	08 95       	ret
    1bd0:	9b 01       	movw	r18, r22
    1bd2:	ac 01       	movw	r20, r24
    1bd4:	0a 2e       	mov	r0, r26
    1bd6:	06 94       	lsr	r0
    1bd8:	57 95       	ror	r21
    1bda:	47 95       	ror	r20
    1bdc:	37 95       	ror	r19
    1bde:	27 95       	ror	r18
    1be0:	ba 95       	dec	r27
    1be2:	c9 f7       	brne	.-14     	; 0x1bd6 <__ultoa_invert+0xa2>
    1be4:	62 0f       	add	r22, r18
    1be6:	73 1f       	adc	r23, r19
    1be8:	84 1f       	adc	r24, r20
    1bea:	95 1f       	adc	r25, r21
    1bec:	a0 1d       	adc	r26, r0
    1bee:	08 95       	ret

00001bf0 <_exit>:
    1bf0:	f8 94       	cli

00001bf2 <__stop_program>:
    1bf2:	ff cf       	rjmp	.-2      	; 0x1bf2 <__stop_program>
