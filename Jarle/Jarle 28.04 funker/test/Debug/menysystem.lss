
menysystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000944  00804000  000016c4  00001758  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001b2  00804944  00804944  0000209c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000209c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000020f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00002138  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000057dd  00000000  00000000  00002270  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003196  00000000  00000000  00007a4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f86  00000000  00000000  0000abe3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000478  00000000  00000000  0000bb6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000036cb  00000000  00000000  0000bfe4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000104b  00000000  00000000  0000f6af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  000106fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 83 00 	jmp	0x106	; 0x106 <__ctors_end>
       4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
       8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
       c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      10:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      14:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      18:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      1c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      20:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      24:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      28:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      2c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      30:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      34:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      38:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__vector_14>
      3c:	0c 94 ee 03 	jmp	0x7dc	; 0x7dc <__vector_15>
      40:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      44:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      48:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      4c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      50:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      54:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      58:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      5c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      60:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      64:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      68:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      6c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      70:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      74:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      78:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      7c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      80:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      84:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      88:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      8c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      90:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      94:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      98:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      9c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      a0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      a4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      a8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      ac:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      b0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      b4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      b8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      bc:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      c0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      c4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      c8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      cc:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      d0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      d4:	0c 94 a4 05 	jmp	0xb48	; 0xb48 <__vector_53>
      d8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      dc:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      e0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      e4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      e8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      ec:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      f0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      f4:	85 04       	cpc	r8, r5
      f6:	8f 04       	cpc	r8, r15
      f8:	99 04       	cpc	r9, r9
      fa:	a3 04       	cpc	r10, r3
      fc:	ad 04       	cpc	r10, r13
      fe:	b6 04       	cpc	r11, r6
     100:	c6 04       	cpc	r12, r6
     102:	cf 04       	cpc	r12, r15
     104:	e2 04       	cpc	r14, r2

00000106 <__ctors_end>:
     106:	11 24       	eor	r1, r1
     108:	1f be       	out	0x3f, r1	; 63
     10a:	cf ef       	ldi	r28, 0xFF	; 255
     10c:	cd bf       	out	0x3d, r28	; 61
     10e:	df e7       	ldi	r29, 0x7F	; 127
     110:	de bf       	out	0x3e, r29	; 62

00000112 <__do_copy_data>:
     112:	19 e4       	ldi	r17, 0x49	; 73
     114:	a0 e0       	ldi	r26, 0x00	; 0
     116:	b0 e4       	ldi	r27, 0x40	; 64
     118:	e4 ec       	ldi	r30, 0xC4	; 196
     11a:	f6 e1       	ldi	r31, 0x16	; 22
     11c:	00 e0       	ldi	r16, 0x00	; 0
     11e:	0b bf       	out	0x3b, r16	; 59
     120:	02 c0       	rjmp	.+4      	; 0x126 <__do_copy_data+0x14>
     122:	07 90       	elpm	r0, Z+
     124:	0d 92       	st	X+, r0
     126:	a4 34       	cpi	r26, 0x44	; 68
     128:	b1 07       	cpc	r27, r17
     12a:	d9 f7       	brne	.-10     	; 0x122 <__do_copy_data+0x10>

0000012c <__do_clear_bss>:
     12c:	2a e4       	ldi	r18, 0x4A	; 74
     12e:	a4 e4       	ldi	r26, 0x44	; 68
     130:	b9 e4       	ldi	r27, 0x49	; 73
     132:	01 c0       	rjmp	.+2      	; 0x136 <.do_clear_bss_start>

00000134 <.do_clear_bss_loop>:
     134:	1d 92       	st	X+, r1

00000136 <.do_clear_bss_start>:
     136:	a6 3f       	cpi	r26, 0xF6	; 246
     138:	b2 07       	cpc	r27, r18
     13a:	e1 f7       	brne	.-8      	; 0x134 <.do_clear_bss_loop>
     13c:	0e 94 cc 05 	call	0xb98	; 0xb98 <main>
     140:	0c 94 60 0b 	jmp	0x16c0	; 0x16c0 <_exit>

00000144 <__bad_interrupt>:
     144:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000148 <TWI0_M_init>:
{
	for(size_t i = 0; i < strlen(str); i++)
	{
		USART3_sendChar(str[i]);
	}
}
     148:	e0 e0       	ldi	r30, 0x00	; 0
     14a:	f4 e0       	ldi	r31, 0x04	; 4
     14c:	8c e0       	ldi	r24, 0x0C	; 12
     14e:	81 83       	std	Z+1, r24	; 0x01
     150:	98 e0       	ldi	r25, 0x08	; 8
     152:	93 87       	std	Z+11, r25	; 0x0b
     154:	84 87       	std	Z+12, r24	; 0x0c
     156:	e0 e0       	ldi	r30, 0x00	; 0
     158:	f9 e0       	ldi	r31, 0x09	; 9
     15a:	81 e0       	ldi	r24, 0x01	; 1
     15c:	83 83       	std	Z+3, r24	; 0x03
     15e:	16 82       	std	Z+6, r1	; 0x06
     160:	85 83       	std	Z+5, r24	; 0x05
     162:	e0 e8       	ldi	r30, 0x80	; 128
     164:	f4 e0       	ldi	r31, 0x04	; 4
     166:	82 e0       	ldi	r24, 0x02	; 2
     168:	81 83       	std	Z+1, r24	; 0x01
     16a:	84 83       	std	Z+4, r24	; 0x04
     16c:	08 95       	ret

0000016e <I2C0_M_start>:
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	88 0f       	add	r24, r24
     172:	99 1f       	adc	r25, r25
     174:	86 2b       	or	r24, r22
     176:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     17a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     17e:	85 fd       	sbrc	r24, 5
     180:	0d c0       	rjmp	.+26     	; 0x19c <I2C0_M_start+0x2e>
     182:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     186:	82 fd       	sbrc	r24, 2
     188:	09 c0       	rjmp	.+18     	; 0x19c <I2C0_M_start+0x2e>
     18a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     18e:	83 fd       	sbrc	r24, 3
     190:	05 c0       	rjmp	.+10     	; 0x19c <I2C0_M_start+0x2e>
     192:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     196:	83 70       	andi	r24, 0x03	; 3
     198:	83 30       	cpi	r24, 0x03	; 3
     19a:	79 f7       	brne	.-34     	; 0x17a <I2C0_M_start+0xc>
     19c:	08 95       	ret

0000019e <I2C_M_write>:
     19e:	cf 93       	push	r28
     1a0:	c6 2f       	mov	r28, r22
     1a2:	60 e0       	ldi	r22, 0x00	; 0
     1a4:	0e 94 b7 00 	call	0x16e	; 0x16e <I2C0_M_start>
     1a8:	c0 93 08 09 	sts	0x0908, r28	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     1ac:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1b0:	85 fd       	sbrc	r24, 5
     1b2:	0d c0       	rjmp	.+26     	; 0x1ce <I2C_M_write+0x30>
     1b4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1b8:	82 fd       	sbrc	r24, 2
     1ba:	09 c0       	rjmp	.+18     	; 0x1ce <I2C_M_write+0x30>
     1bc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c0:	83 fd       	sbrc	r24, 3
     1c2:	05 c0       	rjmp	.+10     	; 0x1ce <I2C_M_write+0x30>
     1c4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c8:	83 70       	andi	r24, 0x03	; 3
     1ca:	83 30       	cpi	r24, 0x03	; 3
     1cc:	79 f7       	brne	.-34     	; 0x1ac <I2C_M_write+0xe>
     1ce:	e0 e0       	ldi	r30, 0x00	; 0
     1d0:	f9 e0       	ldi	r31, 0x09	; 9
     1d2:	85 81       	ldd	r24, Z+5	; 0x05
     1d4:	84 81       	ldd	r24, Z+4	; 0x04
     1d6:	83 60       	ori	r24, 0x03	; 3
     1d8:	84 83       	std	Z+4, r24	; 0x04
     1da:	cf 91       	pop	r28
     1dc:	08 95       	ret

000001de <AHT10_init>:
     1de:	61 ee       	ldi	r22, 0xE1	; 225
     1e0:	88 e3       	ldi	r24, 0x38	; 56
     1e2:	0e 94 cf 00 	call	0x19e	; 0x19e <I2C_M_write>
     1e6:	2f e5       	ldi	r18, 0x5F	; 95
     1e8:	8a ee       	ldi	r24, 0xEA	; 234
     1ea:	90 e0       	ldi	r25, 0x00	; 0
     1ec:	21 50       	subi	r18, 0x01	; 1
     1ee:	80 40       	sbci	r24, 0x00	; 0
     1f0:	90 40       	sbci	r25, 0x00	; 0
     1f2:	e1 f7       	brne	.-8      	; 0x1ec <AHT10_init+0xe>
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <AHT10_init+0x18>
     1f6:	00 00       	nop
     1f8:	6a eb       	ldi	r22, 0xBA	; 186
     1fa:	88 e3       	ldi	r24, 0x38	; 56
     1fc:	0e 94 cf 00 	call	0x19e	; 0x19e <I2C_M_write>
     200:	8f e1       	ldi	r24, 0x1F	; 31
     202:	9e e4       	ldi	r25, 0x4E	; 78
     204:	01 97       	sbiw	r24, 0x01	; 1
     206:	f1 f7       	brne	.-4      	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
     208:	00 c0       	rjmp	.+0      	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
     20a:	00 00       	nop
     20c:	08 95       	ret

0000020e <autoRPMmode>:
     20e:	cb 97       	sbiw	r24, 0x3b	; 59
     210:	bc 01       	movw	r22, r24
     212:	80 e0       	ldi	r24, 0x00	; 0
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	0e 94 f4 06 	call	0xde8	; 0xde8 <__floatunsisf>
     21a:	20 e0       	ldi	r18, 0x00	; 0
     21c:	30 e0       	ldi	r19, 0x00	; 0
     21e:	40 e0       	ldi	r20, 0x00	; 0
     220:	5f e3       	ldi	r21, 0x3F	; 63
     222:	0e 94 e7 05 	call	0xbce	; 0xbce <__addsf3>
     226:	0e 94 c5 06 	call	0xd8a	; 0xd8a <__fixunssfsi>
     22a:	6e 31       	cpi	r22, 0x1E	; 30
     22c:	18 f0       	brcs	.+6      	; 0x234 <autoRPMmode+0x26>
     22e:	60 35       	cpi	r22, 0x50	; 80
     230:	18 f4       	brcc	.+6      	; 0x238 <autoRPMmode+0x2a>
     232:	03 c0       	rjmp	.+6      	; 0x23a <autoRPMmode+0x2c>
     234:	6e e1       	ldi	r22, 0x1E	; 30
     236:	01 c0       	rjmp	.+2      	; 0x23a <autoRPMmode+0x2c>
     238:	6f e4       	ldi	r22, 0x4F	; 79
     23a:	86 2f       	mov	r24, r22
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	08 95       	ret

00000240 <handleFansInAuto>:
     240:	80 91 ca 44 	lds	r24, 0x44CA	; 0x8044ca <fan1>
     244:	90 91 cb 44 	lds	r25, 0x44CB	; 0x8044cb <fan1+0x1>
     248:	02 97       	sbiw	r24, 0x02	; 2
     24a:	41 f4       	brne	.+16     	; 0x25c <handleFansInAuto+0x1c>
     24c:	80 91 4f 49 	lds	r24, 0x494F	; 0x80494f <temperature>
     250:	90 91 50 49 	lds	r25, 0x4950	; 0x804950 <temperature+0x1>
     254:	0e 94 07 01 	call	0x20e	; 0x20e <autoRPMmode>
     258:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     25c:	80 91 c6 44 	lds	r24, 0x44C6	; 0x8044c6 <fan2>
     260:	90 91 c7 44 	lds	r25, 0x44C7	; 0x8044c7 <fan2+0x1>
     264:	02 97       	sbiw	r24, 0x02	; 2
     266:	41 f4       	brne	.+16     	; 0x278 <handleFansInAuto+0x38>
     268:	80 91 4f 49 	lds	r24, 0x494F	; 0x80494f <temperature>
     26c:	90 91 50 49 	lds	r25, 0x4950	; 0x804950 <temperature+0x1>
     270:	0e 94 07 01 	call	0x20e	; 0x20e <autoRPMmode>
     274:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     278:	80 91 c2 44 	lds	r24, 0x44C2	; 0x8044c2 <fan3>
     27c:	90 91 c3 44 	lds	r25, 0x44C3	; 0x8044c3 <fan3+0x1>
     280:	02 97       	sbiw	r24, 0x02	; 2
     282:	41 f4       	brne	.+16     	; 0x294 <handleFansInAuto+0x54>
     284:	80 91 4f 49 	lds	r24, 0x494F	; 0x80494f <temperature>
     288:	90 91 50 49 	lds	r25, 0x4950	; 0x804950 <temperature+0x1>
     28c:	0e 94 07 01 	call	0x20e	; 0x20e <autoRPMmode>
     290:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     294:	80 91 be 44 	lds	r24, 0x44BE	; 0x8044be <fan4>
     298:	90 91 bf 44 	lds	r25, 0x44BF	; 0x8044bf <fan4+0x1>
     29c:	02 97       	sbiw	r24, 0x02	; 2
     29e:	41 f4       	brne	.+16     	; 0x2b0 <handleFansInAuto+0x70>
     2a0:	80 91 4f 49 	lds	r24, 0x494F	; 0x80494f <temperature>
     2a4:	90 91 50 49 	lds	r25, 0x4950	; 0x804950 <temperature+0x1>
     2a8:	0e 94 07 01 	call	0x20e	; 0x20e <autoRPMmode>
     2ac:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     2b0:	08 95       	ret

000002b2 <printHomeScreen>:
     2b2:	8a e5       	ldi	r24, 0x5A	; 90
     2b4:	98 e4       	ldi	r25, 0x48	; 72
     2b6:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     2ba:	8a e5       	ldi	r24, 0x5A	; 90
     2bc:	98 e4       	ldi	r25, 0x48	; 72
     2be:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     2c2:	8a e5       	ldi	r24, 0x5A	; 90
     2c4:	98 e4       	ldi	r25, 0x48	; 72
     2c6:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     2ca:	84 ed       	ldi	r24, 0xD4	; 212
     2cc:	94 e4       	ldi	r25, 0x44	; 68
     2ce:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     2d2:	81 ee       	ldi	r24, 0xE1	; 225
     2d4:	94 e4       	ldi	r25, 0x44	; 68
     2d6:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     2da:	8a e5       	ldi	r24, 0x5A	; 90
     2dc:	98 e4       	ldi	r25, 0x48	; 72
     2de:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     2e2:	85 ef       	ldi	r24, 0xF5	; 245
     2e4:	94 e4       	ldi	r25, 0x44	; 68
     2e6:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     2ea:	08 95       	ret

000002ec <fanOff>:
     2ec:	80 91 49 49 	lds	r24, 0x4949	; 0x804949 <chosenFan>
     2f0:	80 ff       	sbrs	r24, 0
     2f2:	13 c0       	rjmp	.+38     	; 0x31a <fanOff+0x2e>
     2f4:	81 e0       	ldi	r24, 0x01	; 1
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	80 93 ca 44 	sts	0x44CA, r24	; 0x8044ca <fan1>
     2fc:	90 93 cb 44 	sts	0x44CB, r25	; 0x8044cb <fan1+0x1>
     300:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     304:	89 e1       	ldi	r24, 0x19	; 25
     306:	95 e4       	ldi	r25, 0x45	; 69
     308:	9f 93       	push	r25
     30a:	8f 93       	push	r24
     30c:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     310:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     314:	0f 90       	pop	r0
     316:	0f 90       	pop	r0
     318:	08 95       	ret
     31a:	81 ff       	sbrs	r24, 1
     31c:	13 c0       	rjmp	.+38     	; 0x344 <fanOff+0x58>
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	80 93 c6 44 	sts	0x44C6, r24	; 0x8044c6 <fan2>
     326:	90 93 c7 44 	sts	0x44C7, r25	; 0x8044c7 <fan2+0x1>
     32a:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     32e:	82 e3       	ldi	r24, 0x32	; 50
     330:	95 e4       	ldi	r25, 0x45	; 69
     332:	9f 93       	push	r25
     334:	8f 93       	push	r24
     336:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     33a:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     33e:	0f 90       	pop	r0
     340:	0f 90       	pop	r0
     342:	08 95       	ret
     344:	82 ff       	sbrs	r24, 2
     346:	13 c0       	rjmp	.+38     	; 0x36e <fanOff+0x82>
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	80 93 c2 44 	sts	0x44C2, r24	; 0x8044c2 <fan3>
     350:	90 93 c3 44 	sts	0x44C3, r25	; 0x8044c3 <fan3+0x1>
     354:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     358:	8b e4       	ldi	r24, 0x4B	; 75
     35a:	95 e4       	ldi	r25, 0x45	; 69
     35c:	9f 93       	push	r25
     35e:	8f 93       	push	r24
     360:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     364:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	08 95       	ret
     36e:	83 ff       	sbrs	r24, 3
     370:	12 c0       	rjmp	.+36     	; 0x396 <fanOff+0xaa>
     372:	81 e0       	ldi	r24, 0x01	; 1
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	80 93 be 44 	sts	0x44BE, r24	; 0x8044be <fan4>
     37a:	90 93 bf 44 	sts	0x44BF, r25	; 0x8044bf <fan4+0x1>
     37e:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     382:	84 e6       	ldi	r24, 0x64	; 100
     384:	95 e4       	ldi	r25, 0x45	; 69
     386:	9f 93       	push	r25
     388:	8f 93       	push	r24
     38a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     38e:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     392:	0f 90       	pop	r0
     394:	0f 90       	pop	r0
     396:	08 95       	ret

00000398 <fanAuto>:
     398:	80 91 49 49 	lds	r24, 0x4949	; 0x804949 <chosenFan>
     39c:	80 ff       	sbrs	r24, 0
     39e:	11 c0       	rjmp	.+34     	; 0x3c2 <fanAuto+0x2a>
     3a0:	82 e0       	ldi	r24, 0x02	; 2
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	80 93 ca 44 	sts	0x44CA, r24	; 0x8044ca <fan1>
     3a8:	90 93 cb 44 	sts	0x44CB, r25	; 0x8044cb <fan1+0x1>
     3ac:	8d e7       	ldi	r24, 0x7D	; 125
     3ae:	95 e4       	ldi	r25, 0x45	; 69
     3b0:	9f 93       	push	r25
     3b2:	8f 93       	push	r24
     3b4:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     3b8:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     3bc:	0f 90       	pop	r0
     3be:	0f 90       	pop	r0
     3c0:	08 95       	ret
     3c2:	81 ff       	sbrs	r24, 1
     3c4:	11 c0       	rjmp	.+34     	; 0x3e8 <fanAuto+0x50>
     3c6:	82 e0       	ldi	r24, 0x02	; 2
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	80 93 c6 44 	sts	0x44C6, r24	; 0x8044c6 <fan2>
     3ce:	90 93 c7 44 	sts	0x44C7, r25	; 0x8044c7 <fan2+0x1>
     3d2:	87 e9       	ldi	r24, 0x97	; 151
     3d4:	95 e4       	ldi	r25, 0x45	; 69
     3d6:	9f 93       	push	r25
     3d8:	8f 93       	push	r24
     3da:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     3de:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	08 95       	ret
     3e8:	82 ff       	sbrs	r24, 2
     3ea:	11 c0       	rjmp	.+34     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3ec:	82 e0       	ldi	r24, 0x02	; 2
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	80 93 c2 44 	sts	0x44C2, r24	; 0x8044c2 <fan3>
     3f4:	90 93 c3 44 	sts	0x44C3, r25	; 0x8044c3 <fan3+0x1>
     3f8:	81 eb       	ldi	r24, 0xB1	; 177
     3fa:	95 e4       	ldi	r25, 0x45	; 69
     3fc:	9f 93       	push	r25
     3fe:	8f 93       	push	r24
     400:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     404:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     408:	0f 90       	pop	r0
     40a:	0f 90       	pop	r0
     40c:	08 95       	ret
     40e:	83 ff       	sbrs	r24, 3
     410:	10 c0       	rjmp	.+32     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     412:	82 e0       	ldi	r24, 0x02	; 2
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	80 93 be 44 	sts	0x44BE, r24	; 0x8044be <fan4>
     41a:	90 93 bf 44 	sts	0x44BF, r25	; 0x8044bf <fan4+0x1>
     41e:	8b ec       	ldi	r24, 0xCB	; 203
     420:	95 e4       	ldi	r25, 0x45	; 69
     422:	9f 93       	push	r25
     424:	8f 93       	push	r24
     426:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     42a:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     42e:	0f 90       	pop	r0
     430:	0f 90       	pop	r0
     432:	08 95       	ret

00000434 <fanManual>:
     434:	80 91 49 49 	lds	r24, 0x4949	; 0x804949 <chosenFan>
     438:	80 ff       	sbrs	r24, 0
     43a:	0f c0       	rjmp	.+30     	; 0x45a <fanManual+0x26>
     43c:	10 92 ca 44 	sts	0x44CA, r1	; 0x8044ca <fan1>
     440:	10 92 cb 44 	sts	0x44CB, r1	; 0x8044cb <fan1+0x1>
     444:	80 91 4d 49 	lds	r24, 0x494D	; 0x80494d <manual_rpm_value>
     448:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     44c:	85 ee       	ldi	r24, 0xE5	; 229
     44e:	95 e4       	ldi	r25, 0x45	; 69
     450:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     454:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     458:	08 95       	ret
     45a:	81 ff       	sbrs	r24, 1
     45c:	13 c0       	rjmp	.+38     	; 0x484 <fanManual+0x50>
     45e:	10 92 c6 44 	sts	0x44C6, r1	; 0x8044c6 <fan2>
     462:	10 92 c7 44 	sts	0x44C7, r1	; 0x8044c7 <fan2+0x1>
     466:	80 91 4d 49 	lds	r24, 0x494D	; 0x80494d <manual_rpm_value>
     46a:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     46e:	83 e0       	ldi	r24, 0x03	; 3
     470:	96 e4       	ldi	r25, 0x46	; 70
     472:	9f 93       	push	r25
     474:	8f 93       	push	r24
     476:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     47a:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     47e:	0f 90       	pop	r0
     480:	0f 90       	pop	r0
     482:	08 95       	ret
     484:	82 ff       	sbrs	r24, 2
     486:	13 c0       	rjmp	.+38     	; 0x4ae <fanManual+0x7a>
     488:	10 92 c2 44 	sts	0x44C2, r1	; 0x8044c2 <fan3>
     48c:	10 92 c3 44 	sts	0x44C3, r1	; 0x8044c3 <fan3+0x1>
     490:	80 91 4d 49 	lds	r24, 0x494D	; 0x80494d <manual_rpm_value>
     494:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     498:	8f e1       	ldi	r24, 0x1F	; 31
     49a:	96 e4       	ldi	r25, 0x46	; 70
     49c:	9f 93       	push	r25
     49e:	8f 93       	push	r24
     4a0:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     4a4:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     4a8:	0f 90       	pop	r0
     4aa:	0f 90       	pop	r0
     4ac:	08 95       	ret
     4ae:	83 ff       	sbrs	r24, 3
     4b0:	12 c0       	rjmp	.+36     	; 0x4d6 <fanManual+0xa2>
     4b2:	10 92 be 44 	sts	0x44BE, r1	; 0x8044be <fan4>
     4b6:	10 92 bf 44 	sts	0x44BF, r1	; 0x8044bf <fan4+0x1>
     4ba:	80 91 4d 49 	lds	r24, 0x494D	; 0x80494d <manual_rpm_value>
     4be:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     4c2:	8b e3       	ldi	r24, 0x3B	; 59
     4c4:	96 e4       	ldi	r25, 0x46	; 70
     4c6:	9f 93       	push	r25
     4c8:	8f 93       	push	r24
     4ca:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     4ce:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     4d2:	0f 90       	pop	r0
     4d4:	0f 90       	pop	r0
     4d6:	08 95       	ret

000004d8 <PrintSelectFanMode>:
     4d8:	87 e5       	ldi	r24, 0x57	; 87
     4da:	96 e4       	ldi	r25, 0x46	; 70
     4dc:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     4e0:	8a e5       	ldi	r24, 0x5A	; 90
     4e2:	98 e4       	ldi	r25, 0x48	; 72
     4e4:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     4e8:	89 e6       	ldi	r24, 0x69	; 105
     4ea:	96 e4       	ldi	r25, 0x46	; 70
     4ec:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     4f0:	08 95       	ret

000004f2 <printOverview>:
     4f2:	cf 93       	push	r28
     4f4:	df 93       	push	r29
     4f6:	8a e8       	ldi	r24, 0x8A	; 138
     4f8:	96 e4       	ldi	r25, 0x46	; 70
     4fa:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     4fe:	8a e5       	ldi	r24, 0x5A	; 90
     500:	98 e4       	ldi	r25, 0x48	; 72
     502:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     506:	ca ec       	ldi	r28, 0xCA	; 202
     508:	d4 e4       	ldi	r29, 0x44	; 68
     50a:	8b 81       	ldd	r24, Y+3	; 0x03
     50c:	8f 93       	push	r24
     50e:	8a 81       	ldd	r24, Y+2	; 0x02
     510:	8f 93       	push	r24
     512:	85 e9       	ldi	r24, 0x95	; 149
     514:	96 e4       	ldi	r25, 0x46	; 70
     516:	9f 93       	push	r25
     518:	8f 93       	push	r24
     51a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     51e:	e8 81       	ld	r30, Y
     520:	f9 81       	ldd	r31, Y+1	; 0x01
     522:	ee 0f       	add	r30, r30
     524:	ff 1f       	adc	r31, r31
     526:	e2 53       	subi	r30, 0x32	; 50
     528:	fb 4b       	sbci	r31, 0xBB	; 187
     52a:	81 81       	ldd	r24, Z+1	; 0x01
     52c:	8f 93       	push	r24
     52e:	80 81       	ld	r24, Z
     530:	8f 93       	push	r24
     532:	85 ea       	ldi	r24, 0xA5	; 165
     534:	96 e4       	ldi	r25, 0x46	; 70
     536:	9f 93       	push	r25
     538:	8f 93       	push	r24
     53a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     53e:	c6 ec       	ldi	r28, 0xC6	; 198
     540:	d4 e4       	ldi	r29, 0x44	; 68
     542:	8b 81       	ldd	r24, Y+3	; 0x03
     544:	8f 93       	push	r24
     546:	8a 81       	ldd	r24, Y+2	; 0x02
     548:	8f 93       	push	r24
     54a:	87 eb       	ldi	r24, 0xB7	; 183
     54c:	96 e4       	ldi	r25, 0x46	; 70
     54e:	9f 93       	push	r25
     550:	8f 93       	push	r24
     552:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     556:	e8 81       	ld	r30, Y
     558:	f9 81       	ldd	r31, Y+1	; 0x01
     55a:	ee 0f       	add	r30, r30
     55c:	ff 1f       	adc	r31, r31
     55e:	e2 53       	subi	r30, 0x32	; 50
     560:	fb 4b       	sbci	r31, 0xBB	; 187
     562:	81 81       	ldd	r24, Z+1	; 0x01
     564:	8f 93       	push	r24
     566:	80 81       	ld	r24, Z
     568:	8f 93       	push	r24
     56a:	87 ec       	ldi	r24, 0xC7	; 199
     56c:	96 e4       	ldi	r25, 0x46	; 70
     56e:	9f 93       	push	r25
     570:	8f 93       	push	r24
     572:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     576:	c2 ec       	ldi	r28, 0xC2	; 194
     578:	d4 e4       	ldi	r29, 0x44	; 68
     57a:	8b 81       	ldd	r24, Y+3	; 0x03
     57c:	8f 93       	push	r24
     57e:	8a 81       	ldd	r24, Y+2	; 0x02
     580:	8f 93       	push	r24
     582:	89 ed       	ldi	r24, 0xD9	; 217
     584:	96 e4       	ldi	r25, 0x46	; 70
     586:	9f 93       	push	r25
     588:	8f 93       	push	r24
     58a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     58e:	e8 81       	ld	r30, Y
     590:	f9 81       	ldd	r31, Y+1	; 0x01
     592:	ee 0f       	add	r30, r30
     594:	ff 1f       	adc	r31, r31
     596:	e2 53       	subi	r30, 0x32	; 50
     598:	fb 4b       	sbci	r31, 0xBB	; 187
     59a:	81 81       	ldd	r24, Z+1	; 0x01
     59c:	8f 93       	push	r24
     59e:	80 81       	ld	r24, Z
     5a0:	8f 93       	push	r24
     5a2:	89 ee       	ldi	r24, 0xE9	; 233
     5a4:	96 e4       	ldi	r25, 0x46	; 70
     5a6:	9f 93       	push	r25
     5a8:	8f 93       	push	r24
     5aa:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     5ae:	ce eb       	ldi	r28, 0xBE	; 190
     5b0:	d4 e4       	ldi	r29, 0x44	; 68
     5b2:	8b 81       	ldd	r24, Y+3	; 0x03
     5b4:	8f 93       	push	r24
     5b6:	8a 81       	ldd	r24, Y+2	; 0x02
     5b8:	8f 93       	push	r24
     5ba:	8b ef       	ldi	r24, 0xFB	; 251
     5bc:	96 e4       	ldi	r25, 0x46	; 70
     5be:	9f 93       	push	r25
     5c0:	8f 93       	push	r24
     5c2:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     5c6:	e8 81       	ld	r30, Y
     5c8:	f9 81       	ldd	r31, Y+1	; 0x01
     5ca:	ee 0f       	add	r30, r30
     5cc:	ff 1f       	adc	r31, r31
     5ce:	e2 53       	subi	r30, 0x32	; 50
     5d0:	fb 4b       	sbci	r31, 0xBB	; 187
     5d2:	81 81       	ldd	r24, Z+1	; 0x01
     5d4:	8f 93       	push	r24
     5d6:	80 81       	ld	r24, Z
     5d8:	8f 93       	push	r24
     5da:	8b e0       	ldi	r24, 0x0B	; 11
     5dc:	97 e4       	ldi	r25, 0x47	; 71
     5de:	9f 93       	push	r25
     5e0:	8f 93       	push	r24
     5e2:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     5e6:	8d b7       	in	r24, 0x3d	; 61
     5e8:	9e b7       	in	r25, 0x3e	; 62
     5ea:	80 96       	adiw	r24, 0x20	; 32
     5ec:	8d bf       	out	0x3d, r24	; 61
     5ee:	9e bf       	out	0x3e, r25	; 62
     5f0:	80 91 50 49 	lds	r24, 0x4950	; 0x804950 <temperature+0x1>
     5f4:	8f 93       	push	r24
     5f6:	80 91 4f 49 	lds	r24, 0x494F	; 0x80494f <temperature>
     5fa:	8f 93       	push	r24
     5fc:	8d e1       	ldi	r24, 0x1D	; 29
     5fe:	97 e4       	ldi	r25, 0x47	; 71
     600:	9f 93       	push	r25
     602:	8f 93       	push	r24
     604:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
     608:	8a e5       	ldi	r24, 0x5A	; 90
     60a:	98 e4       	ldi	r25, 0x48	; 72
     60c:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     610:	8a e5       	ldi	r24, 0x5A	; 90
     612:	98 e4       	ldi	r25, 0x48	; 72
     614:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     618:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
     61c:	0f 90       	pop	r0
     61e:	0f 90       	pop	r0
     620:	0f 90       	pop	r0
     622:	0f 90       	pop	r0
     624:	df 91       	pop	r29
     626:	cf 91       	pop	r28
     628:	08 95       	ret

0000062a <printSelectFan>:
     62a:	8f e2       	ldi	r24, 0x2F	; 47
     62c:	97 e4       	ldi	r25, 0x47	; 71
     62e:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     632:	8b e3       	ldi	r24, 0x3B	; 59
     634:	97 e4       	ldi	r25, 0x47	; 71
     636:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     63a:	86 e5       	ldi	r24, 0x56	; 86
     63c:	97 e4       	ldi	r25, 0x47	; 71
     63e:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     642:	08 95       	ret

00000644 <compareCommands>:
     644:	0f 93       	push	r16
     646:	1f 93       	push	r17
     648:	cf 93       	push	r28
     64a:	8c 01       	movw	r16, r24
     64c:	c0 e0       	ldi	r28, 0x00	; 0
     64e:	0c c0       	rjmp	.+24     	; 0x668 <compareCommands+0x24>
     650:	84 e6       	ldi	r24, 0x64	; 100
     652:	c8 9f       	mul	r28, r24
     654:	b0 01       	movw	r22, r0
     656:	11 24       	eor	r1, r1
     658:	62 5f       	subi	r22, 0xF2	; 242
     65a:	7f 4b       	sbci	r23, 0xBF	; 191
     65c:	c8 01       	movw	r24, r16
     65e:	0e 94 57 08 	call	0x10ae	; 0x10ae <strcmp>
     662:	89 2b       	or	r24, r25
     664:	29 f0       	breq	.+10     	; 0x670 <compareCommands+0x2c>
     666:	cf 5f       	subi	r28, 0xFF	; 255
     668:	cc 30       	cpi	r28, 0x0C	; 12
     66a:	90 f3       	brcs	.-28     	; 0x650 <compareCommands+0xc>
     66c:	8f ef       	ldi	r24, 0xFF	; 255
     66e:	01 c0       	rjmp	.+2      	; 0x672 <compareCommands+0x2e>
     670:	8c 2f       	mov	r24, r28
     672:	cf 91       	pop	r28
     674:	1f 91       	pop	r17
     676:	0f 91       	pop	r16
     678:	08 95       	ret

0000067a <USART3_sendChar>:
     67a:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     67e:	95 ff       	sbrs	r25, 5
     680:	fc cf       	rjmp	.-8      	; 0x67a <USART3_sendChar>
     682:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
     686:	08 95       	ret

00000688 <USART3_printChar>:
     688:	0e 94 3d 03 	call	0x67a	; 0x67a <USART3_sendChar>
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	08 95       	ret

00000692 <USART3_readChar>:


char USART3_readChar(void) //reading characters from Uart
{
     692:	cf 93       	push	r28
	while (!(USART3.STATUS & USART_RXCIF_bm))
     694:	80 91 64 08 	lds	r24, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     698:	88 23       	and	r24, r24
     69a:	e4 f7       	brge	.-8      	; 0x694 <USART3_readChar+0x2>
	{
		;
	}
	//return USART3.RXDATAL;
	uint8_t src = USART3.RXDATAL ;
     69c:	c0 91 60 08 	lds	r28, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7e0860>
	USART3_sendChar(src);
     6a0:	8c 2f       	mov	r24, r28
     6a2:	0e 94 3d 03 	call	0x67a	; 0x67a <USART3_sendChar>
	return src;
}
     6a6:	8c 2f       	mov	r24, r28
     6a8:	cf 91       	pop	r28
     6aa:	08 95       	ret

000006ac <USART3_init>:

void USART3_init(void)
{
	
	PORTB.DIRSET = PIN0_bm ; //TX -pin as output
     6ac:	e0 e2       	ldi	r30, 0x20	; 32
     6ae:	f4 e0       	ldi	r31, 0x04	; 4
     6b0:	81 e0       	ldi	r24, 0x01	; 1
     6b2:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRCLR = PIN1_bm ; //RX -pin as input
     6b4:	82 e0       	ldi	r24, 0x02	; 2
     6b6:	82 83       	std	Z+2, r24	; 0x02
	USART3.CTRLA |= (1 << USART_RXCIE_bp);
     6b8:	e0 e6       	ldi	r30, 0x60	; 96
     6ba:	f8 e0       	ldi	r31, 0x08	; 8
     6bc:	85 81       	ldd	r24, Z+5	; 0x05
     6be:	80 68       	ori	r24, 0x80	; 128
     6c0:	85 83       	std	Z+5, r24	; 0x05
	//PORTC.DIR &= ~PIN1_bm;
	//PORTC.DIR |= PIN0_bm;
	USART3.BAUD = (uint16_t)USART3_BAUD_RATE(9600);
     6c2:	83 e8       	ldi	r24, 0x83	; 131
     6c4:	96 e0       	ldi	r25, 0x06	; 6
     6c6:	80 87       	std	Z+8, r24	; 0x08
     6c8:	91 87       	std	Z+9, r25	; 0x09
	USART3.CTRLB |= USART_RXEN_bm | USART_TXEN_bm ; // Enable both TX and RX
     6ca:	86 81       	ldd	r24, Z+6	; 0x06
     6cc:	80 6c       	ori	r24, 0xC0	; 192
     6ce:	86 83       	std	Z+6, r24	; 0x06
	stdout = &USART_stream;
     6d0:	80 e0       	ldi	r24, 0x00	; 0
     6d2:	90 e4       	ldi	r25, 0x40	; 64
     6d4:	80 93 f2 4a 	sts	0x4AF2, r24	; 0x804af2 <__iob+0x2>
     6d8:	90 93 f3 4a 	sts	0x4AF3, r25	; 0x804af3 <__iob+0x3>
     6dc:	08 95       	ret

000006de <PORT_init>:


void PORT_init(void)
{
	// Setter PIN0 som output (PWM-out)
	PORTD.DIRSET = PIN0_bm | PIN1_bm | PIN4_bm | PIN3_bm;
     6de:	8b e1       	ldi	r24, 0x1B	; 27
     6e0:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x7e0461>
     6e4:	08 95       	ret

000006e6 <TCA0_init>:


void TCA0_init(void)
{
	//set waveform output on PORT D
	PORTMUX.TCAROUTEA = PORTMUX_TCA0_PORTD_gc;
     6e6:	83 e0       	ldi	r24, 0x03	; 3
     6e8:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
	
	// enable compare channel 0, 1 and set single-slope PWM mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_CMP0EN_bm | TCA_SINGLE_CMP1EN_bm | TCA_SINGLE_WGMODE_SINGLESLOPE_gc;
     6ec:	e0 e0       	ldi	r30, 0x00	; 0
     6ee:	fa e0       	ldi	r31, 0x0A	; 10
     6f0:	93 e3       	ldi	r25, 0x33	; 51
     6f2:	91 83       	std	Z+1, r25	; 0x01
	
	 // enable split mode
    TCA0.SPLIT.CTRLD = TCA_SPLIT_SPLITM_bm; 
     6f4:	21 e0       	ldi	r18, 0x01	; 1
     6f6:	23 83       	std	Z+3, r18	; 0x03
	
	// enable compare channel 0 for the higher byte, enable compare channel 0 for the lower byte
	TCA0.SPLIT.CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_LCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm | TCA_SPLIT_LCMP1EN_bm;    
     6f8:	91 83       	std	Z+1, r25	; 0x01
	
	
	// L0 = PIN0, L1=PIN1, H0=PIN3, H1=PIN4
	// set the PWM frequencies and duty cycles
    TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
     6fa:	9f e4       	ldi	r25, 0x4F	; 79
     6fc:	96 a3       	std	Z+38, r25	; 0x26
    TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MIN_VALUE;                           
     6fe:	10 a6       	std	Z+40, r1	; 0x28
    TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
     700:	97 a3       	std	Z+39, r25	; 0x27
    TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MIN_VALUE;
     702:	11 a6       	std	Z+41, r1	; 0x29
	
	//TCA0.SPLIT.LPER = PERIOD_FREQUENCY;                          
    TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;                           
     704:	12 a6       	std	Z+42, r1	; 0x2a
    //TCA0.SPLIT.HPER = PERIOD_FREQUENCY;                             
    TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MIN_VALUE; 
     706:	13 a6       	std	Z+43, r1	; 0x2b
	
	TCA0.SPLIT.CTRLA = TCA_SPLIT_CLKSEL_DIV2_gc | TCA_SPLIT_ENABLE_bm;   // set clock source (sys_clk/4), and start timer         
     708:	80 83       	st	Z, r24
     70a:	08 95       	ret

0000070c <TCB0_init>:
}


void TCB0_init(void)
{
	PORTB.DIR &= ~PIN4_bm;
     70c:	e0 e2       	ldi	r30, 0x20	; 32
     70e:	f4 e0       	ldi	r31, 0x04	; 4
     710:	80 81       	ld	r24, Z
     712:	8f 7e       	andi	r24, 0xEF	; 239
     714:	80 83       	st	Z, r24
	PORTB.PIN4CTRL |= PORT_PULLUPEN_bm;
     716:	84 89       	ldd	r24, Z+20	; 0x14
     718:	88 60       	ori	r24, 0x08	; 8
     71a:	84 8b       	std	Z+20, r24	; 0x14
	
	TCB0.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
     71c:	e0 e0       	ldi	r30, 0x00	; 0
     71e:	fb e0       	ldi	r31, 0x0B	; 11
     720:	85 e0       	ldi	r24, 0x05	; 5
     722:	80 83       	st	Z, r24
	TCB0.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
     724:	84 e0       	ldi	r24, 0x04	; 4
     726:	81 83       	std	Z+1, r24	; 0x01
	
	TCB0.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
     728:	81 e0       	ldi	r24, 0x01	; 1
     72a:	85 83       	std	Z+5, r24	; 0x05
	
	TCB0.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm ; // Capture event input enable
     72c:	91 e4       	ldi	r25, 0x41	; 65
     72e:	94 83       	std	Z+4, r25	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL0 = EVSYS_CHANNEL0_PORTB_PIN4_gc; //	input event channel 0, port b on pin 4
     730:	e0 e0       	ldi	r30, 0x00	; 0
     732:	f2 e0       	ldi	r31, 0x02	; 2
     734:	9c e4       	ldi	r25, 0x4C	; 76
     736:	90 8b       	std	Z+16, r25	; 0x10
	EVSYS.USERTCB0CAPT = EVSYS_USER_CHANNEL0_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
     738:	86 af       	std	Z+62, r24	; 0x3e
     73a:	08 95       	ret

0000073c <TCB1_init>:
}


void TCB1_init(void)
{
	PORTB.DIR &= ~PIN5_bm;
     73c:	e0 e2       	ldi	r30, 0x20	; 32
     73e:	f4 e0       	ldi	r31, 0x04	; 4
     740:	80 81       	ld	r24, Z
     742:	8f 7d       	andi	r24, 0xDF	; 223
     744:	80 83       	st	Z, r24
	PORTB.PIN5CTRL |= PORT_PULLUPEN_bm;
     746:	85 89       	ldd	r24, Z+21	; 0x15
     748:	88 60       	ori	r24, 0x08	; 8
     74a:	85 8b       	std	Z+21, r24	; 0x15
	
	
	TCB1.CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;	// enable timer/counter TCB0 and use clock from TCA0
     74c:	e0 e1       	ldi	r30, 0x10	; 16
     74e:	fb e0       	ldi	r31, 0x0B	; 11
     750:	85 e0       	ldi	r24, 0x05	; 5
     752:	80 83       	st	Z, r24
	TCB1.CTRLB = TCB_CNTMODE_PW_gc;	// set timer mod to input capture frequency and PWM measurement mode
     754:	84 e0       	ldi	r24, 0x04	; 4
     756:	81 83       	std	Z+1, r24	; 0x01
	
	TCB1.INTCTRL = TCB_CAPT_bm; // interrupt enabled for capture
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	85 83       	std	Z+5, r24	; 0x05
	
	TCB1.EVCTRL = TCB_CAPTEI_bm | TCB_FILTER_bm ; // Capture event input enable
     75c:	81 e4       	ldi	r24, 0x41	; 65
     75e:	84 83       	std	Z+4, r24	; 0x04
	
	//EVSYS.SWEVENTA = EVSYS_SWEVENTA0_bm;
	EVSYS.CHANNEL1 = EVSYS_CHANNEL1_PORTB_PIN5_gc; //	input event channel 0, port b on pin 4
     760:	8d e4       	ldi	r24, 0x4D	; 77
     762:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <__TEXT_REGION_LENGTH__+0x7e0211>
	EVSYS.USERTCB1CAPT = EVSYS_USER_CHANNEL1_gc; // connects channel 0(portb pin0????) specific to TCB0 input capture mode
     766:	82 e0       	ldi	r24, 0x02	; 2
     768:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__TEXT_REGION_LENGTH__+0x7e0240>
     76c:	08 95       	ret

0000076e <__vector_14>:
{
	read_commands();
}

ISR(TCB0_INT_vect)// starting interrupt for reading pwm from fan1
{
     76e:	1f 92       	push	r1
     770:	0f 92       	push	r0
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	0f 92       	push	r0
     776:	11 24       	eor	r1, r1
     778:	0b b6       	in	r0, 0x3b	; 59
     77a:	0f 92       	push	r0
     77c:	2f 93       	push	r18
     77e:	3f 93       	push	r19
     780:	8f 93       	push	r24
     782:	af 93       	push	r26
     784:	bf 93       	push	r27
     786:	ef 93       	push	r30
     788:	ff 93       	push	r31
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     78a:	a0 e0       	ldi	r26, 0x00	; 0
     78c:	bb e0       	ldi	r27, 0x0B	; 11
     78e:	81 e0       	ldi	r24, 0x01	; 1
     790:	16 96       	adiw	r26, 0x06	; 6
     792:	8c 93       	st	X, r24
     794:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings1[pulseWidthIndex1] = TCB0.CCMP;
     796:	80 91 46 49 	lds	r24, 0x4946	; 0x804946 <pulseWidthIndex1>
     79a:	e8 2f       	mov	r30, r24
     79c:	f0 e0       	ldi	r31, 0x00	; 0
     79e:	1c 96       	adiw	r26, 0x0c	; 12
     7a0:	2d 91       	ld	r18, X+
     7a2:	3c 91       	ld	r19, X
     7a4:	1d 97       	sbiw	r26, 0x0d	; 13
     7a6:	ee 0f       	add	r30, r30
     7a8:	ff 1f       	adc	r31, r31
     7aa:	e8 5d       	subi	r30, 0xD8	; 216
     7ac:	f5 4b       	sbci	r31, 0xB5	; 181
     7ae:	20 83       	st	Z, r18
     7b0:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex1++;
     7b2:	8f 5f       	subi	r24, 0xFF	; 255
     7b4:	80 93 46 49 	sts	0x4946, r24	; 0x804946 <pulseWidthIndex1>
	if (pulseWidthIndex1 >= 100) {
     7b8:	84 36       	cpi	r24, 0x64	; 100
     7ba:	10 f0       	brcs	.+4      	; 0x7c0 <__vector_14+0x52>
		pulseWidthIndex1 = 0; // Reset index when all readings are stored
     7bc:	10 92 46 49 	sts	0x4946, r1	; 0x804946 <pulseWidthIndex1>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     7c0:	ff 91       	pop	r31
     7c2:	ef 91       	pop	r30
     7c4:	bf 91       	pop	r27
     7c6:	af 91       	pop	r26
     7c8:	8f 91       	pop	r24
     7ca:	3f 91       	pop	r19
     7cc:	2f 91       	pop	r18
     7ce:	0f 90       	pop	r0
     7d0:	0b be       	out	0x3b, r0	; 59
     7d2:	0f 90       	pop	r0
     7d4:	0f be       	out	0x3f, r0	; 63
     7d6:	0f 90       	pop	r0
     7d8:	1f 90       	pop	r1
     7da:	18 95       	reti

000007dc <__vector_15>:


ISR(TCB1_INT_vect)// starting interrupt for reading pwm from fan1
{
     7dc:	1f 92       	push	r1
     7de:	0f 92       	push	r0
     7e0:	0f b6       	in	r0, 0x3f	; 63
     7e2:	0f 92       	push	r0
     7e4:	11 24       	eor	r1, r1
     7e6:	0b b6       	in	r0, 0x3b	; 59
     7e8:	0f 92       	push	r0
     7ea:	2f 93       	push	r18
     7ec:	3f 93       	push	r19
     7ee:	8f 93       	push	r24
     7f0:	af 93       	push	r26
     7f2:	bf 93       	push	r27
     7f4:	ef 93       	push	r30
     7f6:	ff 93       	push	r31
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     7f8:	a0 e1       	ldi	r26, 0x10	; 16
     7fa:	bb e0       	ldi	r27, 0x0B	; 11
     7fc:	81 e0       	ldi	r24, 0x01	; 1
     7fe:	16 96       	adiw	r26, 0x06	; 6
     800:	8c 93       	st	X, r24
     802:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings2[pulseWidthIndex2] = TCB1.CCMP;
     804:	80 91 45 49 	lds	r24, 0x4945	; 0x804945 <pulseWidthIndex2>
     808:	e8 2f       	mov	r30, r24
     80a:	f0 e0       	ldi	r31, 0x00	; 0
     80c:	1c 96       	adiw	r26, 0x0c	; 12
     80e:	2d 91       	ld	r18, X+
     810:	3c 91       	ld	r19, X
     812:	1d 97       	sbiw	r26, 0x0d	; 13
     814:	ee 0f       	add	r30, r30
     816:	ff 1f       	adc	r31, r31
     818:	e0 5a       	subi	r30, 0xA0	; 160
     81a:	f6 4b       	sbci	r31, 0xB6	; 182
     81c:	20 83       	st	Z, r18
     81e:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex2++;
     820:	8f 5f       	subi	r24, 0xFF	; 255
     822:	80 93 45 49 	sts	0x4945, r24	; 0x804945 <pulseWidthIndex2>
	if (pulseWidthIndex2 >= 100) {
     826:	84 36       	cpi	r24, 0x64	; 100
     828:	10 f0       	brcs	.+4      	; 0x82e <__vector_15+0x52>
		pulseWidthIndex2 = 0; // Reset index when all readings are stored
     82a:	10 92 45 49 	sts	0x4945, r1	; 0x804945 <pulseWidthIndex2>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     82e:	ff 91       	pop	r31
     830:	ef 91       	pop	r30
     832:	bf 91       	pop	r27
     834:	af 91       	pop	r26
     836:	8f 91       	pop	r24
     838:	3f 91       	pop	r19
     83a:	2f 91       	pop	r18
     83c:	0f 90       	pop	r0
     83e:	0b be       	out	0x3b, r0	; 59
     840:	0f 90       	pop	r0
     842:	0f be       	out	0x3f, r0	; 63
     844:	0f 90       	pop	r0
     846:	1f 90       	pop	r1
     848:	18 95       	reti

0000084a <average>:
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
     84a:	0f 93       	push	r16
     84c:	1f 93       	push	r17
     84e:	9c 01       	movw	r18, r24
     850:	06 2f       	mov	r16, r22
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     852:	90 e0       	ldi	r25, 0x00	; 0
	//readPulseWidth = TCB0.CCMP;
	
}
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
     854:	40 e0       	ldi	r20, 0x00	; 0
     856:	50 e0       	ldi	r21, 0x00	; 0
     858:	ba 01       	movw	r22, r20
	for (uint8_t i = 0; i < size; i++) {
     85a:	0e c0       	rjmp	.+28     	; 0x878 <average+0x2e>
		sum += array[i];
     85c:	e9 2f       	mov	r30, r25
     85e:	f0 e0       	ldi	r31, 0x00	; 0
     860:	ee 0f       	add	r30, r30
     862:	ff 1f       	adc	r31, r31
     864:	e2 0f       	add	r30, r18
     866:	f3 1f       	adc	r31, r19
     868:	01 90       	ld	r0, Z+
     86a:	f0 81       	ld	r31, Z
     86c:	e0 2d       	mov	r30, r0
     86e:	4e 0f       	add	r20, r30
     870:	5f 1f       	adc	r21, r31
     872:	61 1d       	adc	r22, r1
     874:	71 1d       	adc	r23, r1
	
}
// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     876:	9f 5f       	subi	r25, 0xFF	; 255
     878:	90 17       	cp	r25, r16
     87a:	80 f3       	brcs	.-32     	; 0x85c <average+0x12>
		sum += array[i];
	}
	return (uint16_t)(sum / size);
     87c:	10 e0       	ldi	r17, 0x00	; 0
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	cb 01       	movw	r24, r22
     884:	ba 01       	movw	r22, r20
     886:	a9 01       	movw	r20, r18
     888:	98 01       	movw	r18, r16
     88a:	0e 94 ef 07 	call	0xfde	; 0xfde <__udivmodsi4>
}
     88e:	c9 01       	movw	r24, r18
     890:	1f 91       	pop	r17
     892:	0f 91       	pop	r16
     894:	08 95       	ret

00000896 <pwm_to_rpm1>:


uint16_t pwm_to_rpm1()
{
	uint16_t pulseWidthAverage1 = average(pulseWidthReadings1, 100);
     896:	64 e6       	ldi	r22, 0x64	; 100
     898:	88 e2       	ldi	r24, 0x28	; 40
     89a:	9a e4       	ldi	r25, 0x4A	; 74
     89c:	0e 94 25 04 	call	0x84a	; 0x84a <average>
	uint32_t rpm1 = ((F_CPU*60)/(4*pulseWidthAverage1*2));
     8a0:	88 0f       	add	r24, r24
     8a2:	99 1f       	adc	r25, r25
     8a4:	88 0f       	add	r24, r24
     8a6:	99 1f       	adc	r25, r25
     8a8:	88 0f       	add	r24, r24
     8aa:	99 1f       	adc	r25, r25
     8ac:	9c 01       	movw	r18, r24
     8ae:	40 e0       	ldi	r20, 0x00	; 0
     8b0:	50 e0       	ldi	r21, 0x00	; 0
     8b2:	60 e0       	ldi	r22, 0x00	; 0
     8b4:	7c e1       	ldi	r23, 0x1C	; 28
     8b6:	8e e4       	ldi	r24, 0x4E	; 78
     8b8:	9e e0       	ldi	r25, 0x0E	; 14
     8ba:	0e 94 11 08 	call	0x1022	; 0x1022 <__divmodsi4>
	return (uint16_t)rpm1;
	
}
     8be:	c9 01       	movw	r24, r18
     8c0:	08 95       	ret

000008c2 <pwm_to_rpm2>:


uint16_t pwm_to_rpm2()
{
	uint16_t pulseWidthAverage2 = average(pulseWidthReadings2, 100);
     8c2:	64 e6       	ldi	r22, 0x64	; 100
     8c4:	80 e6       	ldi	r24, 0x60	; 96
     8c6:	99 e4       	ldi	r25, 0x49	; 73
     8c8:	0e 94 25 04 	call	0x84a	; 0x84a <average>
	uint32_t rpm2 = ((F_CPU*60)/(4*pulseWidthAverage2*2));
     8cc:	88 0f       	add	r24, r24
     8ce:	99 1f       	adc	r25, r25
     8d0:	88 0f       	add	r24, r24
     8d2:	99 1f       	adc	r25, r25
     8d4:	88 0f       	add	r24, r24
     8d6:	99 1f       	adc	r25, r25
     8d8:	9c 01       	movw	r18, r24
     8da:	40 e0       	ldi	r20, 0x00	; 0
     8dc:	50 e0       	ldi	r21, 0x00	; 0
     8de:	60 e0       	ldi	r22, 0x00	; 0
     8e0:	7c e1       	ldi	r23, 0x1C	; 28
     8e2:	8e e4       	ldi	r24, 0x4E	; 78
     8e4:	9e e0       	ldi	r25, 0x0E	; 14
     8e6:	0e 94 11 08 	call	0x1022	; 0x1022 <__divmodsi4>
	return (uint16_t)rpm2;
	
}
     8ea:	c9 01       	movw	r24, r18
     8ec:	08 95       	ret

000008ee <executeCommand>:


	

void executeCommand(uint8_t command_number, char *command)
{
     8ee:	cf 93       	push	r28
     8f0:	df 93       	push	r29
     8f2:	9b 01       	movw	r18, r22
	
	
	switch ( command_number )
     8f4:	48 2f       	mov	r20, r24
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	49 30       	cpi	r20, 0x09	; 9
     8fa:	51 05       	cpc	r21, r1
     8fc:	08 f0       	brcs	.+2      	; 0x900 <executeCommand+0x12>
     8fe:	69 c0       	rjmp	.+210    	; 0x9d2 <executeCommand+0xe4>
     900:	fa 01       	movw	r30, r20
     902:	e6 58       	subi	r30, 0x86	; 134
     904:	ff 4f       	sbci	r31, 0xFF	; 255
     906:	0c 94 30 08 	jmp	0x1060	; 0x1060 <__tablejump2__>
	{
		case 0:
		printf("Received command: fan1\r\n");
     90a:	8f e7       	ldi	r24, 0x7F	; 127
     90c:	97 e4       	ldi	r25, 0x47	; 71
     90e:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		PrintSelectFanMode();
     912:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <PrintSelectFanMode>
		chosenFan = FAN1_bm;
     916:	81 e0       	ldi	r24, 0x01	; 1
     918:	80 93 49 49 	sts	0x4949, r24	; 0x804949 <chosenFan>
		break ;
     91c:	d6 c0       	rjmp	.+428    	; 0xaca <executeCommand+0x1dc>
		
		case 1:
		printf("Received command: fan2\r\n");
     91e:	87 e9       	ldi	r24, 0x97	; 151
     920:	97 e4       	ldi	r25, 0x47	; 71
     922:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		PrintSelectFanMode();
     926:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <PrintSelectFanMode>
		chosenFan = FAN2_bm;
     92a:	82 e0       	ldi	r24, 0x02	; 2
     92c:	80 93 49 49 	sts	0x4949, r24	; 0x804949 <chosenFan>
		break ;
     930:	cc c0       	rjmp	.+408    	; 0xaca <executeCommand+0x1dc>
		
		case 2:
		printf("Received command: fan3\r\n");
     932:	8f ea       	ldi	r24, 0xAF	; 175
     934:	97 e4       	ldi	r25, 0x47	; 71
     936:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		PrintSelectFanMode();
     93a:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <PrintSelectFanMode>
		chosenFan = FAN3_bm;
     93e:	84 e0       	ldi	r24, 0x04	; 4
     940:	80 93 49 49 	sts	0x4949, r24	; 0x804949 <chosenFan>
		break ;
     944:	c2 c0       	rjmp	.+388    	; 0xaca <executeCommand+0x1dc>
		
		case 3:
		printf("Received command: fan4\r\n");
     946:	87 ec       	ldi	r24, 0xC7	; 199
     948:	97 e4       	ldi	r25, 0x47	; 71
     94a:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		PrintSelectFanMode();
     94e:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <PrintSelectFanMode>
		chosenFan = FAN4_bm;
     952:	88 e0       	ldi	r24, 0x08	; 8
     954:	80 93 49 49 	sts	0x4949, r24	; 0x804949 <chosenFan>
		break ;
     958:	b8 c0       	rjmp	.+368    	; 0xaca <executeCommand+0x1dc>
		
		case 4:
		printf("Received command: off\r\n");
     95a:	8f ed       	ldi	r24, 0xDF	; 223
     95c:	97 e4       	ldi	r25, 0x47	; 71
     95e:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		chosenModeIsManual = 0;
     962:	10 92 53 49 	sts	0x4953, r1	; 0x804953 <chosenModeIsManual>
		fanOff();
     966:	0e 94 76 01 	call	0x2ec	; 0x2ec <fanOff>
		break ;
     96a:	af c0       	rjmp	.+350    	; 0xaca <executeCommand+0x1dc>
		
		case 5:
		printf("Received command: manual\r\n");
     96c:	86 ef       	ldi	r24, 0xF6	; 246
     96e:	97 e4       	ldi	r25, 0x47	; 71
     970:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		printf("Type wanted rpm mode\r\n");
     974:	80 e1       	ldi	r24, 0x10	; 16
     976:	98 e4       	ldi	r25, 0x48	; 72
     978:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		printf("Alternatives: low, medium, high or fan speed: 0-100 \r\n");
     97c:	86 e2       	ldi	r24, 0x26	; 38
     97e:	98 e4       	ldi	r25, 0x48	; 72
     980:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		chosenModeIsManual = 1;
     984:	81 e0       	ldi	r24, 0x01	; 1
     986:	80 93 53 49 	sts	0x4953, r24	; 0x804953 <chosenModeIsManual>
		break ;
     98a:	9f c0       	rjmp	.+318    	; 0xaca <executeCommand+0x1dc>
		
		case 6:
		printf("Received command: auto\r\n");
     98c:	8c e5       	ldi	r24, 0x5C	; 92
     98e:	98 e4       	ldi	r25, 0x48	; 72
     990:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		chosenModeIsManual = 0;
     994:	10 92 53 49 	sts	0x4953, r1	; 0x804953 <chosenModeIsManual>
		fanAuto();
     998:	0e 94 cc 01 	call	0x398	; 0x398 <fanAuto>
		break ;
     99c:	96 c0       	rjmp	.+300    	; 0xaca <executeCommand+0x1dc>
		
		case 7:
		printf("Received command: overview\r\n");
     99e:	84 e7       	ldi	r24, 0x74	; 116
     9a0:	98 e4       	ldi	r25, 0x48	; 72
     9a2:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		fan1.rpm = pwm_to_rpm1();
     9a6:	0e 94 4b 04 	call	0x896	; 0x896 <pwm_to_rpm1>
     9aa:	80 93 cc 44 	sts	0x44CC, r24	; 0x8044cc <fan1+0x2>
     9ae:	90 93 cd 44 	sts	0x44CD, r25	; 0x8044cd <fan1+0x3>
		fan2.rpm = pwm_to_rpm2();
     9b2:	0e 94 61 04 	call	0x8c2	; 0x8c2 <pwm_to_rpm2>
     9b6:	80 93 c8 44 	sts	0x44C8, r24	; 0x8044c8 <fan2+0x2>
     9ba:	90 93 c9 44 	sts	0x44C9, r25	; 0x8044c9 <fan2+0x3>
		printOverview();
     9be:	0e 94 79 02 	call	0x4f2	; 0x4f2 <printOverview>
		break ;
     9c2:	83 c0       	rjmp	.+262    	; 0xaca <executeCommand+0x1dc>
		
		case 8:
		printf("Received command: controller\r\n");
     9c4:	80 e9       	ldi	r24, 0x90	; 144
     9c6:	98 e4       	ldi	r25, 0x48	; 72
     9c8:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		printSelectFan();
     9cc:	0e 94 15 03 	call	0x62a	; 0x62a <printSelectFan>
		break ;
     9d0:	7c c0       	rjmp	.+248    	; 0xaca <executeCommand+0x1dc>
		
		
		
		default :
		
		if(chosenModeIsManual)
     9d2:	90 91 53 49 	lds	r25, 0x4953	; 0x804953 <chosenModeIsManual>
     9d6:	99 23       	and	r25, r25
     9d8:	09 f4       	brne	.+2      	; 0x9dc <executeCommand+0xee>
     9da:	73 c0       	rjmp	.+230    	; 0xac2 <executeCommand+0x1d4>
		{
			switch (command_number)
     9dc:	8a 30       	cpi	r24, 0x0A	; 10
     9de:	89 f0       	breq	.+34     	; 0xa02 <executeCommand+0x114>
     9e0:	8b 30       	cpi	r24, 0x0B	; 11
     9e2:	e1 f0       	breq	.+56     	; 0xa1c <executeCommand+0x12e>
     9e4:	89 30       	cpi	r24, 0x09	; 9
     9e6:	39 f5       	brne	.+78     	; 0xa36 <executeCommand+0x148>
			{
				case 9:
				
				printf("Received command: low\r\n");
     9e8:	8e ea       	ldi	r24, 0xAE	; 174
     9ea:	98 e4       	ldi	r25, 0x48	; 72
     9ec:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
				manual_rpm_value = FAN_RPM_LOW; //LOW
     9f0:	83 e2       	ldi	r24, 0x23	; 35
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	80 93 4d 49 	sts	0x494D, r24	; 0x80494d <manual_rpm_value>
     9f8:	90 93 4e 49 	sts	0x494E, r25	; 0x80494e <manual_rpm_value+0x1>
				fanManual();
     9fc:	0e 94 1a 02 	call	0x434	; 0x434 <fanManual>
				break;
     a00:	64 c0       	rjmp	.+200    	; 0xaca <executeCommand+0x1dc>
				
				case 10:
				
				printf("Received command: medium\r\n");
     a02:	85 ec       	ldi	r24, 0xC5	; 197
     a04:	98 e4       	ldi	r25, 0x48	; 72
     a06:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
				manual_rpm_value = FAN_RPM_MEDIUM; //MEDIUM
     a0a:	8c e3       	ldi	r24, 0x3C	; 60
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	80 93 4d 49 	sts	0x494D, r24	; 0x80494d <manual_rpm_value>
     a12:	90 93 4e 49 	sts	0x494E, r25	; 0x80494e <manual_rpm_value+0x1>
				fanManual();
     a16:	0e 94 1a 02 	call	0x434	; 0x434 <fanManual>
				break;
     a1a:	57 c0       	rjmp	.+174    	; 0xaca <executeCommand+0x1dc>
				
				case 11:
				
				printf("Received command: high\r\n");
     a1c:	8f ed       	ldi	r24, 0xDF	; 223
     a1e:	98 e4       	ldi	r25, 0x48	; 72
     a20:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
				manual_rpm_value = FAN_RPM_HIGH; //HIGH
     a24:	8f e4       	ldi	r24, 0x4F	; 79
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	80 93 4d 49 	sts	0x494D, r24	; 0x80494d <manual_rpm_value>
     a2c:	90 93 4e 49 	sts	0x494E, r25	; 0x80494e <manual_rpm_value+0x1>
				fanManual();
     a30:	0e 94 1a 02 	call	0x434	; 0x434 <fanManual>
				break;
     a34:	4a c0       	rjmp	.+148    	; 0xaca <executeCommand+0x1dc>
				
				default:
				
				duty_cycle_input = atoi(command);
     a36:	c9 01       	movw	r24, r18
     a38:	0e 94 39 08 	call	0x1072	; 0x1072 <atoi>
     a3c:	80 93 56 49 	sts	0x4956, r24	; 0x804956 <duty_cycle_input>
     a40:	90 93 57 49 	sts	0x4957, r25	; 0x804957 <duty_cycle_input+0x1>
				printf("%d\r\n", duty_cycle_input);
     a44:	9f 93       	push	r25
     a46:	8f 93       	push	r24
     a48:	8a e2       	ldi	r24, 0x2A	; 42
     a4a:	97 e4       	ldi	r25, 0x47	; 71
     a4c:	9f 93       	push	r25
     a4e:	8f 93       	push	r24
     a50:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
				if (duty_cycle_input >= 0 && duty_cycle_input <= 100)
     a54:	60 91 56 49 	lds	r22, 0x4956	; 0x804956 <duty_cycle_input>
     a58:	70 91 57 49 	lds	r23, 0x4957	; 0x804957 <duty_cycle_input+0x1>
     a5c:	0f 90       	pop	r0
     a5e:	0f 90       	pop	r0
     a60:	0f 90       	pop	r0
     a62:	0f 90       	pop	r0
     a64:	65 36       	cpi	r22, 0x65	; 101
     a66:	71 05       	cpc	r23, r1
     a68:	38 f5       	brcc	.+78     	; 0xab8 <executeCommand+0x1ca>
				{
					uint16_t new_duty_cycle = (duty_cycle_input / 100.0) * FAN_RPM_HIGH;
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	0e 94 f4 06 	call	0xde8	; 0xde8 <__floatunsisf>
     a72:	20 e0       	ldi	r18, 0x00	; 0
     a74:	30 e0       	ldi	r19, 0x00	; 0
     a76:	48 ec       	ldi	r20, 0xC8	; 200
     a78:	52 e4       	ldi	r21, 0x42	; 66
     a7a:	0e 94 53 06 	call	0xca6	; 0xca6 <__divsf3>
     a7e:	20 e0       	ldi	r18, 0x00	; 0
     a80:	30 e0       	ldi	r19, 0x00	; 0
     a82:	4e e9       	ldi	r20, 0x9E	; 158
     a84:	52 e4       	ldi	r21, 0x42	; 66
     a86:	0e 94 82 07 	call	0xf04	; 0xf04 <__mulsf3>
     a8a:	0e 94 c5 06 	call	0xd8a	; 0xd8a <__fixunssfsi>
     a8e:	d6 2f       	mov	r29, r22
     a90:	c7 2f       	mov	r28, r23
					printf("%d\r\n", new_duty_cycle);
     a92:	7f 93       	push	r23
     a94:	6f 93       	push	r22
     a96:	8a e2       	ldi	r24, 0x2A	; 42
     a98:	97 e4       	ldi	r25, 0x47	; 71
     a9a:	9f 93       	push	r25
     a9c:	8f 93       	push	r24
     a9e:	0e 94 68 08 	call	0x10d0	; 0x10d0 <printf>
					// Set the duty cycle to the new value
					// Assuming TCA0_SPLIT_LCMP0 is where the duty cycle is set
					manual_rpm_value = new_duty_cycle;
     aa2:	d0 93 4d 49 	sts	0x494D, r29	; 0x80494d <manual_rpm_value>
     aa6:	c0 93 4e 49 	sts	0x494E, r28	; 0x80494e <manual_rpm_value+0x1>
					fanManual();
     aaa:	0e 94 1a 02 	call	0x434	; 0x434 <fanManual>
     aae:	0f 90       	pop	r0
     ab0:	0f 90       	pop	r0
     ab2:	0f 90       	pop	r0
     ab4:	0f 90       	pop	r0
     ab6:	09 c0       	rjmp	.+18     	; 0xaca <executeCommand+0x1dc>
				}
				else
				{
					printf("Please insert a valid duty cycle (0-100)\r\n");
     ab8:	87 ef       	ldi	r24, 0xF7	; 247
     aba:	98 e4       	ldi	r25, 0x48	; 72
     abc:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
     ac0:	04 c0       	rjmp	.+8      	; 0xaca <executeCommand+0x1dc>
				break;
				
				
			}
		}
		else printf("unknown command \r\n");
     ac2:	81 e2       	ldi	r24, 0x21	; 33
     ac4:	99 e4       	ldi	r25, 0x49	; 73
     ac6:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <puts>
		
	}

}
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	08 95       	ret

00000ad0 <read_commands>:




void read_commands() //Reads Uart when enter is pressed
{
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
     ad4:	cd b7       	in	r28, 0x3d	; 61
     ad6:	de b7       	in	r29, 0x3e	; 62
     ad8:	c4 56       	subi	r28, 0x64	; 100
     ada:	d1 09       	sbc	r29, r1
     adc:	cd bf       	out	0x3d, r28	; 61
     ade:	de bf       	out	0x3e, r29	; 62
	char command[MAX_COMMAND_LEN];
	static uint8_t index = 0;
	char c = USART3_readChar();
     ae0:	0e 94 49 03 	call	0x692	; 0x692 <USART3_readChar>
	
	if(c != '\n' && c != '\r' && index < MAX_COMMAND_LEN - 1)
     ae4:	8a 30       	cpi	r24, 0x0A	; 10
     ae6:	89 f0       	breq	.+34     	; 0xb0a <read_commands+0x3a>
     ae8:	8d 30       	cpi	r24, 0x0D	; 13
     aea:	79 f0       	breq	.+30     	; 0xb0a <read_commands+0x3a>
     aec:	90 91 44 49 	lds	r25, 0x4944	; 0x804944 <__data_end>
     af0:	93 36       	cpi	r25, 0x63	; 99
     af2:	58 f4       	brcc	.+22     	; 0xb0a <read_commands+0x3a>
	{
		command[index++] = c;
     af4:	21 e0       	ldi	r18, 0x01	; 1
     af6:	29 0f       	add	r18, r25
     af8:	20 93 44 49 	sts	0x4944, r18	; 0x804944 <__data_end>
     afc:	e1 e0       	ldi	r30, 0x01	; 1
     afe:	f0 e0       	ldi	r31, 0x00	; 0
     b00:	ec 0f       	add	r30, r28
     b02:	fd 1f       	adc	r31, r29
     b04:	e9 0f       	add	r30, r25
     b06:	f1 1d       	adc	r31, r1
     b08:	80 83       	st	Z, r24
		
	}
	
	if(c == '\r'|| c=='\n')
     b0a:	8d 30       	cpi	r24, 0x0D	; 13
     b0c:	11 f0       	breq	.+4      	; 0xb12 <read_commands+0x42>
     b0e:	8a 30       	cpi	r24, 0x0A	; 10
     b10:	a1 f4       	brne	.+40     	; 0xb3a <read_commands+0x6a>
	{
		command[index] = '\0';
     b12:	80 91 44 49 	lds	r24, 0x4944	; 0x804944 <__data_end>
     b16:	e1 e0       	ldi	r30, 0x01	; 1
     b18:	f0 e0       	ldi	r31, 0x00	; 0
     b1a:	ec 0f       	add	r30, r28
     b1c:	fd 1f       	adc	r31, r29
     b1e:	e8 0f       	add	r30, r24
     b20:	f1 1d       	adc	r31, r1
     b22:	10 82       	st	Z, r1
		index = 0;
     b24:	10 92 44 49 	sts	0x4944, r1	; 0x804944 <__data_end>
		//printf("test command1: %s\r\n",command);

		executeCommand(compareCommands(command), command); // executes actions based on command as an argument
     b28:	ce 01       	movw	r24, r28
     b2a:	01 96       	adiw	r24, 0x01	; 1
     b2c:	0e 94 22 03 	call	0x644	; 0x644 <compareCommands>
     b30:	be 01       	movw	r22, r28
     b32:	6f 5f       	subi	r22, 0xFF	; 255
     b34:	7f 4f       	sbci	r23, 0xFF	; 255
     b36:	0e 94 77 04 	call	0x8ee	; 0x8ee <executeCommand>
		
		
	}
}
     b3a:	cc 59       	subi	r28, 0x9C	; 156
     b3c:	df 4f       	sbci	r29, 0xFF	; 255
     b3e:	cd bf       	out	0x3d, r28	; 61
     b40:	de bf       	out	0x3e, r29	; 62
     b42:	df 91       	pop	r29
     b44:	cf 91       	pop	r28
     b46:	08 95       	ret

00000b48 <__vector_53>:
uint16_t rpm2;



ISR(USART3_RXC_vect)
{
     b48:	1f 92       	push	r1
     b4a:	0f 92       	push	r0
     b4c:	0f b6       	in	r0, 0x3f	; 63
     b4e:	0f 92       	push	r0
     b50:	11 24       	eor	r1, r1
     b52:	0b b6       	in	r0, 0x3b	; 59
     b54:	0f 92       	push	r0
     b56:	2f 93       	push	r18
     b58:	3f 93       	push	r19
     b5a:	4f 93       	push	r20
     b5c:	5f 93       	push	r21
     b5e:	6f 93       	push	r22
     b60:	7f 93       	push	r23
     b62:	8f 93       	push	r24
     b64:	9f 93       	push	r25
     b66:	af 93       	push	r26
     b68:	bf 93       	push	r27
     b6a:	ef 93       	push	r30
     b6c:	ff 93       	push	r31
	read_commands();
     b6e:	0e 94 68 05 	call	0xad0	; 0xad0 <read_commands>
}
     b72:	ff 91       	pop	r31
     b74:	ef 91       	pop	r30
     b76:	bf 91       	pop	r27
     b78:	af 91       	pop	r26
     b7a:	9f 91       	pop	r25
     b7c:	8f 91       	pop	r24
     b7e:	7f 91       	pop	r23
     b80:	6f 91       	pop	r22
     b82:	5f 91       	pop	r21
     b84:	4f 91       	pop	r20
     b86:	3f 91       	pop	r19
     b88:	2f 91       	pop	r18
     b8a:	0f 90       	pop	r0
     b8c:	0b be       	out	0x3b, r0	; 59
     b8e:	0f 90       	pop	r0
     b90:	0f be       	out	0x3f, r0	; 63
     b92:	0f 90       	pop	r0
     b94:	1f 90       	pop	r1
     b96:	18 95       	reti

00000b98 <main>:


int main(void)
{
	
	USART3_init();
     b98:	0e 94 56 03 	call	0x6ac	; 0x6ac <USART3_init>
	sei(); // Enable Global Interrupts
     b9c:	78 94       	sei

	// PWM initialize
	PORT_init();
     b9e:	0e 94 6f 03 	call	0x6de	; 0x6de <PORT_init>
	TCA0_init();
     ba2:	0e 94 73 03 	call	0x6e6	; 0x6e6 <TCA0_init>
	TCB0_init();
     ba6:	0e 94 86 03 	call	0x70c	; 0x70c <TCB0_init>
	TCB1_init();
     baa:	0e 94 9e 03 	call	0x73c	; 0x73c <TCB1_init>
		
	// I2C initialize 

	TWI0_M_init();
     bae:	0e 94 a4 00 	call	0x148	; 0x148 <TWI0_M_init>
	AHT10_init();
     bb2:	0e 94 ef 00 	call	0x1de	; 0x1de <AHT10_init>
	
	
	
	printHomeScreen(); 
     bb6:	0e 94 59 01 	call	0x2b2	; 0x2b2 <printHomeScreen>
		//TCA0_SPLIT_LCMP0 = 60;

	
	while(1){
		
		handleFansInAuto(); //changes the rpm of the fans in mode auto based on temperature
     bba:	0e 94 20 01 	call	0x240	; 0x240 <handleFansInAuto>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bbe:	8f e0       	ldi	r24, 0x0F	; 15
     bc0:	97 e2       	ldi	r25, 0x27	; 39
     bc2:	01 97       	sbiw	r24, 0x01	; 1
     bc4:	f1 f7       	brne	.-4      	; 0xbc2 <main+0x2a>
     bc6:	00 c0       	rjmp	.+0      	; 0xbc8 <main+0x30>
     bc8:	00 00       	nop
     bca:	f7 cf       	rjmp	.-18     	; 0xbba <main+0x22>

00000bcc <__subsf3>:
     bcc:	50 58       	subi	r21, 0x80	; 128

00000bce <__addsf3>:
     bce:	bb 27       	eor	r27, r27
     bd0:	aa 27       	eor	r26, r26
     bd2:	0e 94 fe 05 	call	0xbfc	; 0xbfc <__addsf3x>
     bd6:	0c 94 48 07 	jmp	0xe90	; 0xe90 <__fp_round>
     bda:	0e 94 3a 07 	call	0xe74	; 0xe74 <__fp_pscA>
     bde:	38 f0       	brcs	.+14     	; 0xbee <__addsf3+0x20>
     be0:	0e 94 41 07 	call	0xe82	; 0xe82 <__fp_pscB>
     be4:	20 f0       	brcs	.+8      	; 0xbee <__addsf3+0x20>
     be6:	39 f4       	brne	.+14     	; 0xbf6 <__addsf3+0x28>
     be8:	9f 3f       	cpi	r25, 0xFF	; 255
     bea:	19 f4       	brne	.+6      	; 0xbf2 <__addsf3+0x24>
     bec:	26 f4       	brtc	.+8      	; 0xbf6 <__addsf3+0x28>
     bee:	0c 94 37 07 	jmp	0xe6e	; 0xe6e <__fp_nan>
     bf2:	0e f4       	brtc	.+2      	; 0xbf6 <__addsf3+0x28>
     bf4:	e0 95       	com	r30
     bf6:	e7 fb       	bst	r30, 7
     bf8:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_inf>

00000bfc <__addsf3x>:
     bfc:	e9 2f       	mov	r30, r25
     bfe:	0e 94 59 07 	call	0xeb2	; 0xeb2 <__fp_split3>
     c02:	58 f3       	brcs	.-42     	; 0xbda <__addsf3+0xc>
     c04:	ba 17       	cp	r27, r26
     c06:	62 07       	cpc	r22, r18
     c08:	73 07       	cpc	r23, r19
     c0a:	84 07       	cpc	r24, r20
     c0c:	95 07       	cpc	r25, r21
     c0e:	20 f0       	brcs	.+8      	; 0xc18 <__addsf3x+0x1c>
     c10:	79 f4       	brne	.+30     	; 0xc30 <__addsf3x+0x34>
     c12:	a6 f5       	brtc	.+104    	; 0xc7c <__addsf3x+0x80>
     c14:	0c 94 7b 07 	jmp	0xef6	; 0xef6 <__fp_zero>
     c18:	0e f4       	brtc	.+2      	; 0xc1c <__addsf3x+0x20>
     c1a:	e0 95       	com	r30
     c1c:	0b 2e       	mov	r0, r27
     c1e:	ba 2f       	mov	r27, r26
     c20:	a0 2d       	mov	r26, r0
     c22:	0b 01       	movw	r0, r22
     c24:	b9 01       	movw	r22, r18
     c26:	90 01       	movw	r18, r0
     c28:	0c 01       	movw	r0, r24
     c2a:	ca 01       	movw	r24, r20
     c2c:	a0 01       	movw	r20, r0
     c2e:	11 24       	eor	r1, r1
     c30:	ff 27       	eor	r31, r31
     c32:	59 1b       	sub	r21, r25
     c34:	99 f0       	breq	.+38     	; 0xc5c <__addsf3x+0x60>
     c36:	59 3f       	cpi	r21, 0xF9	; 249
     c38:	50 f4       	brcc	.+20     	; 0xc4e <__addsf3x+0x52>
     c3a:	50 3e       	cpi	r21, 0xE0	; 224
     c3c:	68 f1       	brcs	.+90     	; 0xc98 <__addsf3x+0x9c>
     c3e:	1a 16       	cp	r1, r26
     c40:	f0 40       	sbci	r31, 0x00	; 0
     c42:	a2 2f       	mov	r26, r18
     c44:	23 2f       	mov	r18, r19
     c46:	34 2f       	mov	r19, r20
     c48:	44 27       	eor	r20, r20
     c4a:	58 5f       	subi	r21, 0xF8	; 248
     c4c:	f3 cf       	rjmp	.-26     	; 0xc34 <__addsf3x+0x38>
     c4e:	46 95       	lsr	r20
     c50:	37 95       	ror	r19
     c52:	27 95       	ror	r18
     c54:	a7 95       	ror	r26
     c56:	f0 40       	sbci	r31, 0x00	; 0
     c58:	53 95       	inc	r21
     c5a:	c9 f7       	brne	.-14     	; 0xc4e <__addsf3x+0x52>
     c5c:	7e f4       	brtc	.+30     	; 0xc7c <__addsf3x+0x80>
     c5e:	1f 16       	cp	r1, r31
     c60:	ba 0b       	sbc	r27, r26
     c62:	62 0b       	sbc	r22, r18
     c64:	73 0b       	sbc	r23, r19
     c66:	84 0b       	sbc	r24, r20
     c68:	ba f0       	brmi	.+46     	; 0xc98 <__addsf3x+0x9c>
     c6a:	91 50       	subi	r25, 0x01	; 1
     c6c:	a1 f0       	breq	.+40     	; 0xc96 <__addsf3x+0x9a>
     c6e:	ff 0f       	add	r31, r31
     c70:	bb 1f       	adc	r27, r27
     c72:	66 1f       	adc	r22, r22
     c74:	77 1f       	adc	r23, r23
     c76:	88 1f       	adc	r24, r24
     c78:	c2 f7       	brpl	.-16     	; 0xc6a <__addsf3x+0x6e>
     c7a:	0e c0       	rjmp	.+28     	; 0xc98 <__addsf3x+0x9c>
     c7c:	ba 0f       	add	r27, r26
     c7e:	62 1f       	adc	r22, r18
     c80:	73 1f       	adc	r23, r19
     c82:	84 1f       	adc	r24, r20
     c84:	48 f4       	brcc	.+18     	; 0xc98 <__addsf3x+0x9c>
     c86:	87 95       	ror	r24
     c88:	77 95       	ror	r23
     c8a:	67 95       	ror	r22
     c8c:	b7 95       	ror	r27
     c8e:	f7 95       	ror	r31
     c90:	9e 3f       	cpi	r25, 0xFE	; 254
     c92:	08 f0       	brcs	.+2      	; 0xc96 <__addsf3x+0x9a>
     c94:	b0 cf       	rjmp	.-160    	; 0xbf6 <__addsf3+0x28>
     c96:	93 95       	inc	r25
     c98:	88 0f       	add	r24, r24
     c9a:	08 f0       	brcs	.+2      	; 0xc9e <__addsf3x+0xa2>
     c9c:	99 27       	eor	r25, r25
     c9e:	ee 0f       	add	r30, r30
     ca0:	97 95       	ror	r25
     ca2:	87 95       	ror	r24
     ca4:	08 95       	ret

00000ca6 <__divsf3>:
     ca6:	0e 94 67 06 	call	0xcce	; 0xcce <__divsf3x>
     caa:	0c 94 48 07 	jmp	0xe90	; 0xe90 <__fp_round>
     cae:	0e 94 41 07 	call	0xe82	; 0xe82 <__fp_pscB>
     cb2:	58 f0       	brcs	.+22     	; 0xcca <__divsf3+0x24>
     cb4:	0e 94 3a 07 	call	0xe74	; 0xe74 <__fp_pscA>
     cb8:	40 f0       	brcs	.+16     	; 0xcca <__divsf3+0x24>
     cba:	29 f4       	brne	.+10     	; 0xcc6 <__divsf3+0x20>
     cbc:	5f 3f       	cpi	r21, 0xFF	; 255
     cbe:	29 f0       	breq	.+10     	; 0xcca <__divsf3+0x24>
     cc0:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_inf>
     cc4:	51 11       	cpse	r21, r1
     cc6:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__fp_szero>
     cca:	0c 94 37 07 	jmp	0xe6e	; 0xe6e <__fp_nan>

00000cce <__divsf3x>:
     cce:	0e 94 59 07 	call	0xeb2	; 0xeb2 <__fp_split3>
     cd2:	68 f3       	brcs	.-38     	; 0xcae <__divsf3+0x8>

00000cd4 <__divsf3_pse>:
     cd4:	99 23       	and	r25, r25
     cd6:	b1 f3       	breq	.-20     	; 0xcc4 <__divsf3+0x1e>
     cd8:	55 23       	and	r21, r21
     cda:	91 f3       	breq	.-28     	; 0xcc0 <__divsf3+0x1a>
     cdc:	95 1b       	sub	r25, r21
     cde:	55 0b       	sbc	r21, r21
     ce0:	bb 27       	eor	r27, r27
     ce2:	aa 27       	eor	r26, r26
     ce4:	62 17       	cp	r22, r18
     ce6:	73 07       	cpc	r23, r19
     ce8:	84 07       	cpc	r24, r20
     cea:	38 f0       	brcs	.+14     	; 0xcfa <__divsf3_pse+0x26>
     cec:	9f 5f       	subi	r25, 0xFF	; 255
     cee:	5f 4f       	sbci	r21, 0xFF	; 255
     cf0:	22 0f       	add	r18, r18
     cf2:	33 1f       	adc	r19, r19
     cf4:	44 1f       	adc	r20, r20
     cf6:	aa 1f       	adc	r26, r26
     cf8:	a9 f3       	breq	.-22     	; 0xce4 <__divsf3_pse+0x10>
     cfa:	35 d0       	rcall	.+106    	; 0xd66 <__divsf3_pse+0x92>
     cfc:	0e 2e       	mov	r0, r30
     cfe:	3a f0       	brmi	.+14     	; 0xd0e <__divsf3_pse+0x3a>
     d00:	e0 e8       	ldi	r30, 0x80	; 128
     d02:	32 d0       	rcall	.+100    	; 0xd68 <__divsf3_pse+0x94>
     d04:	91 50       	subi	r25, 0x01	; 1
     d06:	50 40       	sbci	r21, 0x00	; 0
     d08:	e6 95       	lsr	r30
     d0a:	00 1c       	adc	r0, r0
     d0c:	ca f7       	brpl	.-14     	; 0xd00 <__divsf3_pse+0x2c>
     d0e:	2b d0       	rcall	.+86     	; 0xd66 <__divsf3_pse+0x92>
     d10:	fe 2f       	mov	r31, r30
     d12:	29 d0       	rcall	.+82     	; 0xd66 <__divsf3_pse+0x92>
     d14:	66 0f       	add	r22, r22
     d16:	77 1f       	adc	r23, r23
     d18:	88 1f       	adc	r24, r24
     d1a:	bb 1f       	adc	r27, r27
     d1c:	26 17       	cp	r18, r22
     d1e:	37 07       	cpc	r19, r23
     d20:	48 07       	cpc	r20, r24
     d22:	ab 07       	cpc	r26, r27
     d24:	b0 e8       	ldi	r27, 0x80	; 128
     d26:	09 f0       	breq	.+2      	; 0xd2a <__divsf3_pse+0x56>
     d28:	bb 0b       	sbc	r27, r27
     d2a:	80 2d       	mov	r24, r0
     d2c:	bf 01       	movw	r22, r30
     d2e:	ff 27       	eor	r31, r31
     d30:	93 58       	subi	r25, 0x83	; 131
     d32:	5f 4f       	sbci	r21, 0xFF	; 255
     d34:	3a f0       	brmi	.+14     	; 0xd44 <__divsf3_pse+0x70>
     d36:	9e 3f       	cpi	r25, 0xFE	; 254
     d38:	51 05       	cpc	r21, r1
     d3a:	78 f0       	brcs	.+30     	; 0xd5a <__divsf3_pse+0x86>
     d3c:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_inf>
     d40:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__fp_szero>
     d44:	5f 3f       	cpi	r21, 0xFF	; 255
     d46:	e4 f3       	brlt	.-8      	; 0xd40 <__divsf3_pse+0x6c>
     d48:	98 3e       	cpi	r25, 0xE8	; 232
     d4a:	d4 f3       	brlt	.-12     	; 0xd40 <__divsf3_pse+0x6c>
     d4c:	86 95       	lsr	r24
     d4e:	77 95       	ror	r23
     d50:	67 95       	ror	r22
     d52:	b7 95       	ror	r27
     d54:	f7 95       	ror	r31
     d56:	9f 5f       	subi	r25, 0xFF	; 255
     d58:	c9 f7       	brne	.-14     	; 0xd4c <__divsf3_pse+0x78>
     d5a:	88 0f       	add	r24, r24
     d5c:	91 1d       	adc	r25, r1
     d5e:	96 95       	lsr	r25
     d60:	87 95       	ror	r24
     d62:	97 f9       	bld	r25, 7
     d64:	08 95       	ret
     d66:	e1 e0       	ldi	r30, 0x01	; 1
     d68:	66 0f       	add	r22, r22
     d6a:	77 1f       	adc	r23, r23
     d6c:	88 1f       	adc	r24, r24
     d6e:	bb 1f       	adc	r27, r27
     d70:	62 17       	cp	r22, r18
     d72:	73 07       	cpc	r23, r19
     d74:	84 07       	cpc	r24, r20
     d76:	ba 07       	cpc	r27, r26
     d78:	20 f0       	brcs	.+8      	; 0xd82 <__divsf3_pse+0xae>
     d7a:	62 1b       	sub	r22, r18
     d7c:	73 0b       	sbc	r23, r19
     d7e:	84 0b       	sbc	r24, r20
     d80:	ba 0b       	sbc	r27, r26
     d82:	ee 1f       	adc	r30, r30
     d84:	88 f7       	brcc	.-30     	; 0xd68 <__divsf3_pse+0x94>
     d86:	e0 95       	com	r30
     d88:	08 95       	ret

00000d8a <__fixunssfsi>:
     d8a:	0e 94 61 07 	call	0xec2	; 0xec2 <__fp_splitA>
     d8e:	88 f0       	brcs	.+34     	; 0xdb2 <__fixunssfsi+0x28>
     d90:	9f 57       	subi	r25, 0x7F	; 127
     d92:	98 f0       	brcs	.+38     	; 0xdba <__fixunssfsi+0x30>
     d94:	b9 2f       	mov	r27, r25
     d96:	99 27       	eor	r25, r25
     d98:	b7 51       	subi	r27, 0x17	; 23
     d9a:	b0 f0       	brcs	.+44     	; 0xdc8 <__fixunssfsi+0x3e>
     d9c:	e1 f0       	breq	.+56     	; 0xdd6 <__fixunssfsi+0x4c>
     d9e:	66 0f       	add	r22, r22
     da0:	77 1f       	adc	r23, r23
     da2:	88 1f       	adc	r24, r24
     da4:	99 1f       	adc	r25, r25
     da6:	1a f0       	brmi	.+6      	; 0xdae <__fixunssfsi+0x24>
     da8:	ba 95       	dec	r27
     daa:	c9 f7       	brne	.-14     	; 0xd9e <__fixunssfsi+0x14>
     dac:	14 c0       	rjmp	.+40     	; 0xdd6 <__fixunssfsi+0x4c>
     dae:	b1 30       	cpi	r27, 0x01	; 1
     db0:	91 f0       	breq	.+36     	; 0xdd6 <__fixunssfsi+0x4c>
     db2:	0e 94 7b 07 	call	0xef6	; 0xef6 <__fp_zero>
     db6:	b1 e0       	ldi	r27, 0x01	; 1
     db8:	08 95       	ret
     dba:	0c 94 7b 07 	jmp	0xef6	; 0xef6 <__fp_zero>
     dbe:	67 2f       	mov	r22, r23
     dc0:	78 2f       	mov	r23, r24
     dc2:	88 27       	eor	r24, r24
     dc4:	b8 5f       	subi	r27, 0xF8	; 248
     dc6:	39 f0       	breq	.+14     	; 0xdd6 <__fixunssfsi+0x4c>
     dc8:	b9 3f       	cpi	r27, 0xF9	; 249
     dca:	cc f3       	brlt	.-14     	; 0xdbe <__fixunssfsi+0x34>
     dcc:	86 95       	lsr	r24
     dce:	77 95       	ror	r23
     dd0:	67 95       	ror	r22
     dd2:	b3 95       	inc	r27
     dd4:	d9 f7       	brne	.-10     	; 0xdcc <__fixunssfsi+0x42>
     dd6:	3e f4       	brtc	.+14     	; 0xde6 <__fixunssfsi+0x5c>
     dd8:	90 95       	com	r25
     dda:	80 95       	com	r24
     ddc:	70 95       	com	r23
     dde:	61 95       	neg	r22
     de0:	7f 4f       	sbci	r23, 0xFF	; 255
     de2:	8f 4f       	sbci	r24, 0xFF	; 255
     de4:	9f 4f       	sbci	r25, 0xFF	; 255
     de6:	08 95       	ret

00000de8 <__floatunsisf>:
     de8:	e8 94       	clt
     dea:	09 c0       	rjmp	.+18     	; 0xdfe <__floatsisf+0x12>

00000dec <__floatsisf>:
     dec:	97 fb       	bst	r25, 7
     dee:	3e f4       	brtc	.+14     	; 0xdfe <__floatsisf+0x12>
     df0:	90 95       	com	r25
     df2:	80 95       	com	r24
     df4:	70 95       	com	r23
     df6:	61 95       	neg	r22
     df8:	7f 4f       	sbci	r23, 0xFF	; 255
     dfa:	8f 4f       	sbci	r24, 0xFF	; 255
     dfc:	9f 4f       	sbci	r25, 0xFF	; 255
     dfe:	99 23       	and	r25, r25
     e00:	a9 f0       	breq	.+42     	; 0xe2c <__floatsisf+0x40>
     e02:	f9 2f       	mov	r31, r25
     e04:	96 e9       	ldi	r25, 0x96	; 150
     e06:	bb 27       	eor	r27, r27
     e08:	93 95       	inc	r25
     e0a:	f6 95       	lsr	r31
     e0c:	87 95       	ror	r24
     e0e:	77 95       	ror	r23
     e10:	67 95       	ror	r22
     e12:	b7 95       	ror	r27
     e14:	f1 11       	cpse	r31, r1
     e16:	f8 cf       	rjmp	.-16     	; 0xe08 <__floatsisf+0x1c>
     e18:	fa f4       	brpl	.+62     	; 0xe58 <__floatsisf+0x6c>
     e1a:	bb 0f       	add	r27, r27
     e1c:	11 f4       	brne	.+4      	; 0xe22 <__floatsisf+0x36>
     e1e:	60 ff       	sbrs	r22, 0
     e20:	1b c0       	rjmp	.+54     	; 0xe58 <__floatsisf+0x6c>
     e22:	6f 5f       	subi	r22, 0xFF	; 255
     e24:	7f 4f       	sbci	r23, 0xFF	; 255
     e26:	8f 4f       	sbci	r24, 0xFF	; 255
     e28:	9f 4f       	sbci	r25, 0xFF	; 255
     e2a:	16 c0       	rjmp	.+44     	; 0xe58 <__floatsisf+0x6c>
     e2c:	88 23       	and	r24, r24
     e2e:	11 f0       	breq	.+4      	; 0xe34 <__floatsisf+0x48>
     e30:	96 e9       	ldi	r25, 0x96	; 150
     e32:	11 c0       	rjmp	.+34     	; 0xe56 <__floatsisf+0x6a>
     e34:	77 23       	and	r23, r23
     e36:	21 f0       	breq	.+8      	; 0xe40 <__floatsisf+0x54>
     e38:	9e e8       	ldi	r25, 0x8E	; 142
     e3a:	87 2f       	mov	r24, r23
     e3c:	76 2f       	mov	r23, r22
     e3e:	05 c0       	rjmp	.+10     	; 0xe4a <__floatsisf+0x5e>
     e40:	66 23       	and	r22, r22
     e42:	71 f0       	breq	.+28     	; 0xe60 <__floatsisf+0x74>
     e44:	96 e8       	ldi	r25, 0x86	; 134
     e46:	86 2f       	mov	r24, r22
     e48:	70 e0       	ldi	r23, 0x00	; 0
     e4a:	60 e0       	ldi	r22, 0x00	; 0
     e4c:	2a f0       	brmi	.+10     	; 0xe58 <__floatsisf+0x6c>
     e4e:	9a 95       	dec	r25
     e50:	66 0f       	add	r22, r22
     e52:	77 1f       	adc	r23, r23
     e54:	88 1f       	adc	r24, r24
     e56:	da f7       	brpl	.-10     	; 0xe4e <__floatsisf+0x62>
     e58:	88 0f       	add	r24, r24
     e5a:	96 95       	lsr	r25
     e5c:	87 95       	ror	r24
     e5e:	97 f9       	bld	r25, 7
     e60:	08 95       	ret

00000e62 <__fp_inf>:
     e62:	97 f9       	bld	r25, 7
     e64:	9f 67       	ori	r25, 0x7F	; 127
     e66:	80 e8       	ldi	r24, 0x80	; 128
     e68:	70 e0       	ldi	r23, 0x00	; 0
     e6a:	60 e0       	ldi	r22, 0x00	; 0
     e6c:	08 95       	ret

00000e6e <__fp_nan>:
     e6e:	9f ef       	ldi	r25, 0xFF	; 255
     e70:	80 ec       	ldi	r24, 0xC0	; 192
     e72:	08 95       	ret

00000e74 <__fp_pscA>:
     e74:	00 24       	eor	r0, r0
     e76:	0a 94       	dec	r0
     e78:	16 16       	cp	r1, r22
     e7a:	17 06       	cpc	r1, r23
     e7c:	18 06       	cpc	r1, r24
     e7e:	09 06       	cpc	r0, r25
     e80:	08 95       	ret

00000e82 <__fp_pscB>:
     e82:	00 24       	eor	r0, r0
     e84:	0a 94       	dec	r0
     e86:	12 16       	cp	r1, r18
     e88:	13 06       	cpc	r1, r19
     e8a:	14 06       	cpc	r1, r20
     e8c:	05 06       	cpc	r0, r21
     e8e:	08 95       	ret

00000e90 <__fp_round>:
     e90:	09 2e       	mov	r0, r25
     e92:	03 94       	inc	r0
     e94:	00 0c       	add	r0, r0
     e96:	11 f4       	brne	.+4      	; 0xe9c <__fp_round+0xc>
     e98:	88 23       	and	r24, r24
     e9a:	52 f0       	brmi	.+20     	; 0xeb0 <__fp_round+0x20>
     e9c:	bb 0f       	add	r27, r27
     e9e:	40 f4       	brcc	.+16     	; 0xeb0 <__fp_round+0x20>
     ea0:	bf 2b       	or	r27, r31
     ea2:	11 f4       	brne	.+4      	; 0xea8 <__fp_round+0x18>
     ea4:	60 ff       	sbrs	r22, 0
     ea6:	04 c0       	rjmp	.+8      	; 0xeb0 <__fp_round+0x20>
     ea8:	6f 5f       	subi	r22, 0xFF	; 255
     eaa:	7f 4f       	sbci	r23, 0xFF	; 255
     eac:	8f 4f       	sbci	r24, 0xFF	; 255
     eae:	9f 4f       	sbci	r25, 0xFF	; 255
     eb0:	08 95       	ret

00000eb2 <__fp_split3>:
     eb2:	57 fd       	sbrc	r21, 7
     eb4:	90 58       	subi	r25, 0x80	; 128
     eb6:	44 0f       	add	r20, r20
     eb8:	55 1f       	adc	r21, r21
     eba:	59 f0       	breq	.+22     	; 0xed2 <__fp_splitA+0x10>
     ebc:	5f 3f       	cpi	r21, 0xFF	; 255
     ebe:	71 f0       	breq	.+28     	; 0xedc <__fp_splitA+0x1a>
     ec0:	47 95       	ror	r20

00000ec2 <__fp_splitA>:
     ec2:	88 0f       	add	r24, r24
     ec4:	97 fb       	bst	r25, 7
     ec6:	99 1f       	adc	r25, r25
     ec8:	61 f0       	breq	.+24     	; 0xee2 <__fp_splitA+0x20>
     eca:	9f 3f       	cpi	r25, 0xFF	; 255
     ecc:	79 f0       	breq	.+30     	; 0xeec <__fp_splitA+0x2a>
     ece:	87 95       	ror	r24
     ed0:	08 95       	ret
     ed2:	12 16       	cp	r1, r18
     ed4:	13 06       	cpc	r1, r19
     ed6:	14 06       	cpc	r1, r20
     ed8:	55 1f       	adc	r21, r21
     eda:	f2 cf       	rjmp	.-28     	; 0xec0 <__fp_split3+0xe>
     edc:	46 95       	lsr	r20
     ede:	f1 df       	rcall	.-30     	; 0xec2 <__fp_splitA>
     ee0:	08 c0       	rjmp	.+16     	; 0xef2 <__fp_splitA+0x30>
     ee2:	16 16       	cp	r1, r22
     ee4:	17 06       	cpc	r1, r23
     ee6:	18 06       	cpc	r1, r24
     ee8:	99 1f       	adc	r25, r25
     eea:	f1 cf       	rjmp	.-30     	; 0xece <__fp_splitA+0xc>
     eec:	86 95       	lsr	r24
     eee:	71 05       	cpc	r23, r1
     ef0:	61 05       	cpc	r22, r1
     ef2:	08 94       	sec
     ef4:	08 95       	ret

00000ef6 <__fp_zero>:
     ef6:	e8 94       	clt

00000ef8 <__fp_szero>:
     ef8:	bb 27       	eor	r27, r27
     efa:	66 27       	eor	r22, r22
     efc:	77 27       	eor	r23, r23
     efe:	cb 01       	movw	r24, r22
     f00:	97 f9       	bld	r25, 7
     f02:	08 95       	ret

00000f04 <__mulsf3>:
     f04:	0e 94 95 07 	call	0xf2a	; 0xf2a <__mulsf3x>
     f08:	0c 94 48 07 	jmp	0xe90	; 0xe90 <__fp_round>
     f0c:	0e 94 3a 07 	call	0xe74	; 0xe74 <__fp_pscA>
     f10:	38 f0       	brcs	.+14     	; 0xf20 <__mulsf3+0x1c>
     f12:	0e 94 41 07 	call	0xe82	; 0xe82 <__fp_pscB>
     f16:	20 f0       	brcs	.+8      	; 0xf20 <__mulsf3+0x1c>
     f18:	95 23       	and	r25, r21
     f1a:	11 f0       	breq	.+4      	; 0xf20 <__mulsf3+0x1c>
     f1c:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_inf>
     f20:	0c 94 37 07 	jmp	0xe6e	; 0xe6e <__fp_nan>
     f24:	11 24       	eor	r1, r1
     f26:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__fp_szero>

00000f2a <__mulsf3x>:
     f2a:	0e 94 59 07 	call	0xeb2	; 0xeb2 <__fp_split3>
     f2e:	70 f3       	brcs	.-36     	; 0xf0c <__mulsf3+0x8>

00000f30 <__mulsf3_pse>:
     f30:	95 9f       	mul	r25, r21
     f32:	c1 f3       	breq	.-16     	; 0xf24 <__mulsf3+0x20>
     f34:	95 0f       	add	r25, r21
     f36:	50 e0       	ldi	r21, 0x00	; 0
     f38:	55 1f       	adc	r21, r21
     f3a:	62 9f       	mul	r22, r18
     f3c:	f0 01       	movw	r30, r0
     f3e:	72 9f       	mul	r23, r18
     f40:	bb 27       	eor	r27, r27
     f42:	f0 0d       	add	r31, r0
     f44:	b1 1d       	adc	r27, r1
     f46:	63 9f       	mul	r22, r19
     f48:	aa 27       	eor	r26, r26
     f4a:	f0 0d       	add	r31, r0
     f4c:	b1 1d       	adc	r27, r1
     f4e:	aa 1f       	adc	r26, r26
     f50:	64 9f       	mul	r22, r20
     f52:	66 27       	eor	r22, r22
     f54:	b0 0d       	add	r27, r0
     f56:	a1 1d       	adc	r26, r1
     f58:	66 1f       	adc	r22, r22
     f5a:	82 9f       	mul	r24, r18
     f5c:	22 27       	eor	r18, r18
     f5e:	b0 0d       	add	r27, r0
     f60:	a1 1d       	adc	r26, r1
     f62:	62 1f       	adc	r22, r18
     f64:	73 9f       	mul	r23, r19
     f66:	b0 0d       	add	r27, r0
     f68:	a1 1d       	adc	r26, r1
     f6a:	62 1f       	adc	r22, r18
     f6c:	83 9f       	mul	r24, r19
     f6e:	a0 0d       	add	r26, r0
     f70:	61 1d       	adc	r22, r1
     f72:	22 1f       	adc	r18, r18
     f74:	74 9f       	mul	r23, r20
     f76:	33 27       	eor	r19, r19
     f78:	a0 0d       	add	r26, r0
     f7a:	61 1d       	adc	r22, r1
     f7c:	23 1f       	adc	r18, r19
     f7e:	84 9f       	mul	r24, r20
     f80:	60 0d       	add	r22, r0
     f82:	21 1d       	adc	r18, r1
     f84:	82 2f       	mov	r24, r18
     f86:	76 2f       	mov	r23, r22
     f88:	6a 2f       	mov	r22, r26
     f8a:	11 24       	eor	r1, r1
     f8c:	9f 57       	subi	r25, 0x7F	; 127
     f8e:	50 40       	sbci	r21, 0x00	; 0
     f90:	9a f0       	brmi	.+38     	; 0xfb8 <__mulsf3_pse+0x88>
     f92:	f1 f0       	breq	.+60     	; 0xfd0 <__mulsf3_pse+0xa0>
     f94:	88 23       	and	r24, r24
     f96:	4a f0       	brmi	.+18     	; 0xfaa <__mulsf3_pse+0x7a>
     f98:	ee 0f       	add	r30, r30
     f9a:	ff 1f       	adc	r31, r31
     f9c:	bb 1f       	adc	r27, r27
     f9e:	66 1f       	adc	r22, r22
     fa0:	77 1f       	adc	r23, r23
     fa2:	88 1f       	adc	r24, r24
     fa4:	91 50       	subi	r25, 0x01	; 1
     fa6:	50 40       	sbci	r21, 0x00	; 0
     fa8:	a9 f7       	brne	.-22     	; 0xf94 <__mulsf3_pse+0x64>
     faa:	9e 3f       	cpi	r25, 0xFE	; 254
     fac:	51 05       	cpc	r21, r1
     fae:	80 f0       	brcs	.+32     	; 0xfd0 <__mulsf3_pse+0xa0>
     fb0:	0c 94 31 07 	jmp	0xe62	; 0xe62 <__fp_inf>
     fb4:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__fp_szero>
     fb8:	5f 3f       	cpi	r21, 0xFF	; 255
     fba:	e4 f3       	brlt	.-8      	; 0xfb4 <__mulsf3_pse+0x84>
     fbc:	98 3e       	cpi	r25, 0xE8	; 232
     fbe:	d4 f3       	brlt	.-12     	; 0xfb4 <__mulsf3_pse+0x84>
     fc0:	86 95       	lsr	r24
     fc2:	77 95       	ror	r23
     fc4:	67 95       	ror	r22
     fc6:	b7 95       	ror	r27
     fc8:	f7 95       	ror	r31
     fca:	e7 95       	ror	r30
     fcc:	9f 5f       	subi	r25, 0xFF	; 255
     fce:	c1 f7       	brne	.-16     	; 0xfc0 <__mulsf3_pse+0x90>
     fd0:	fe 2b       	or	r31, r30
     fd2:	88 0f       	add	r24, r24
     fd4:	91 1d       	adc	r25, r1
     fd6:	96 95       	lsr	r25
     fd8:	87 95       	ror	r24
     fda:	97 f9       	bld	r25, 7
     fdc:	08 95       	ret

00000fde <__udivmodsi4>:
     fde:	a1 e2       	ldi	r26, 0x21	; 33
     fe0:	1a 2e       	mov	r1, r26
     fe2:	aa 1b       	sub	r26, r26
     fe4:	bb 1b       	sub	r27, r27
     fe6:	fd 01       	movw	r30, r26
     fe8:	0d c0       	rjmp	.+26     	; 0x1004 <__udivmodsi4_ep>

00000fea <__udivmodsi4_loop>:
     fea:	aa 1f       	adc	r26, r26
     fec:	bb 1f       	adc	r27, r27
     fee:	ee 1f       	adc	r30, r30
     ff0:	ff 1f       	adc	r31, r31
     ff2:	a2 17       	cp	r26, r18
     ff4:	b3 07       	cpc	r27, r19
     ff6:	e4 07       	cpc	r30, r20
     ff8:	f5 07       	cpc	r31, r21
     ffa:	20 f0       	brcs	.+8      	; 0x1004 <__udivmodsi4_ep>
     ffc:	a2 1b       	sub	r26, r18
     ffe:	b3 0b       	sbc	r27, r19
    1000:	e4 0b       	sbc	r30, r20
    1002:	f5 0b       	sbc	r31, r21

00001004 <__udivmodsi4_ep>:
    1004:	66 1f       	adc	r22, r22
    1006:	77 1f       	adc	r23, r23
    1008:	88 1f       	adc	r24, r24
    100a:	99 1f       	adc	r25, r25
    100c:	1a 94       	dec	r1
    100e:	69 f7       	brne	.-38     	; 0xfea <__udivmodsi4_loop>
    1010:	60 95       	com	r22
    1012:	70 95       	com	r23
    1014:	80 95       	com	r24
    1016:	90 95       	com	r25
    1018:	9b 01       	movw	r18, r22
    101a:	ac 01       	movw	r20, r24
    101c:	bd 01       	movw	r22, r26
    101e:	cf 01       	movw	r24, r30
    1020:	08 95       	ret

00001022 <__divmodsi4>:
    1022:	05 2e       	mov	r0, r21
    1024:	97 fb       	bst	r25, 7
    1026:	1e f4       	brtc	.+6      	; 0x102e <__divmodsi4+0xc>
    1028:	00 94       	com	r0
    102a:	0e 94 28 08 	call	0x1050	; 0x1050 <__negsi2>
    102e:	57 fd       	sbrc	r21, 7
    1030:	07 d0       	rcall	.+14     	; 0x1040 <__divmodsi4_neg2>
    1032:	0e 94 ef 07 	call	0xfde	; 0xfde <__udivmodsi4>
    1036:	07 fc       	sbrc	r0, 7
    1038:	03 d0       	rcall	.+6      	; 0x1040 <__divmodsi4_neg2>
    103a:	4e f4       	brtc	.+18     	; 0x104e <__divmodsi4_exit>
    103c:	0c 94 28 08 	jmp	0x1050	; 0x1050 <__negsi2>

00001040 <__divmodsi4_neg2>:
    1040:	50 95       	com	r21
    1042:	40 95       	com	r20
    1044:	30 95       	com	r19
    1046:	21 95       	neg	r18
    1048:	3f 4f       	sbci	r19, 0xFF	; 255
    104a:	4f 4f       	sbci	r20, 0xFF	; 255
    104c:	5f 4f       	sbci	r21, 0xFF	; 255

0000104e <__divmodsi4_exit>:
    104e:	08 95       	ret

00001050 <__negsi2>:
    1050:	90 95       	com	r25
    1052:	80 95       	com	r24
    1054:	70 95       	com	r23
    1056:	61 95       	neg	r22
    1058:	7f 4f       	sbci	r23, 0xFF	; 255
    105a:	8f 4f       	sbci	r24, 0xFF	; 255
    105c:	9f 4f       	sbci	r25, 0xFF	; 255
    105e:	08 95       	ret

00001060 <__tablejump2__>:
    1060:	ee 0f       	add	r30, r30
    1062:	ff 1f       	adc	r31, r31
    1064:	00 24       	eor	r0, r0
    1066:	00 1c       	adc	r0, r0
    1068:	0b be       	out	0x3b, r0	; 59
    106a:	07 90       	elpm	r0, Z+
    106c:	f6 91       	elpm	r31, Z
    106e:	e0 2d       	mov	r30, r0
    1070:	09 94       	ijmp

00001072 <atoi>:
    1072:	fc 01       	movw	r30, r24
    1074:	88 27       	eor	r24, r24
    1076:	99 27       	eor	r25, r25
    1078:	e8 94       	clt
    107a:	21 91       	ld	r18, Z+
    107c:	20 32       	cpi	r18, 0x20	; 32
    107e:	e9 f3       	breq	.-6      	; 0x107a <atoi+0x8>
    1080:	29 30       	cpi	r18, 0x09	; 9
    1082:	10 f0       	brcs	.+4      	; 0x1088 <atoi+0x16>
    1084:	2e 30       	cpi	r18, 0x0E	; 14
    1086:	c8 f3       	brcs	.-14     	; 0x107a <atoi+0x8>
    1088:	2b 32       	cpi	r18, 0x2B	; 43
    108a:	41 f0       	breq	.+16     	; 0x109c <atoi+0x2a>
    108c:	2d 32       	cpi	r18, 0x2D	; 45
    108e:	39 f4       	brne	.+14     	; 0x109e <atoi+0x2c>
    1090:	68 94       	set
    1092:	04 c0       	rjmp	.+8      	; 0x109c <atoi+0x2a>
    1094:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__mulhi_const_10>
    1098:	82 0f       	add	r24, r18
    109a:	91 1d       	adc	r25, r1
    109c:	21 91       	ld	r18, Z+
    109e:	20 53       	subi	r18, 0x30	; 48
    10a0:	2a 30       	cpi	r18, 0x0A	; 10
    10a2:	c0 f3       	brcs	.-16     	; 0x1094 <atoi+0x22>
    10a4:	1e f4       	brtc	.+6      	; 0x10ac <atoi+0x3a>
    10a6:	90 95       	com	r25
    10a8:	81 95       	neg	r24
    10aa:	9f 4f       	sbci	r25, 0xFF	; 255
    10ac:	08 95       	ret

000010ae <strcmp>:
    10ae:	fb 01       	movw	r30, r22
    10b0:	dc 01       	movw	r26, r24
    10b2:	8d 91       	ld	r24, X+
    10b4:	01 90       	ld	r0, Z+
    10b6:	80 19       	sub	r24, r0
    10b8:	01 10       	cpse	r0, r1
    10ba:	d9 f3       	breq	.-10     	; 0x10b2 <strcmp+0x4>
    10bc:	99 0b       	sbc	r25, r25
    10be:	08 95       	ret

000010c0 <__mulhi_const_10>:
    10c0:	7a e0       	ldi	r23, 0x0A	; 10
    10c2:	97 9f       	mul	r25, r23
    10c4:	90 2d       	mov	r25, r0
    10c6:	87 9f       	mul	r24, r23
    10c8:	80 2d       	mov	r24, r0
    10ca:	91 0d       	add	r25, r1
    10cc:	11 24       	eor	r1, r1
    10ce:	08 95       	ret

000010d0 <printf>:
    10d0:	cf 93       	push	r28
    10d2:	df 93       	push	r29
    10d4:	cd b7       	in	r28, 0x3d	; 61
    10d6:	de b7       	in	r29, 0x3e	; 62
    10d8:	ae 01       	movw	r20, r28
    10da:	4b 5f       	subi	r20, 0xFB	; 251
    10dc:	5f 4f       	sbci	r21, 0xFF	; 255
    10de:	fa 01       	movw	r30, r20
    10e0:	61 91       	ld	r22, Z+
    10e2:	71 91       	ld	r23, Z+
    10e4:	af 01       	movw	r20, r30
    10e6:	80 91 f2 4a 	lds	r24, 0x4AF2	; 0x804af2 <__iob+0x2>
    10ea:	90 91 f3 4a 	lds	r25, 0x4AF3	; 0x804af3 <__iob+0x3>
    10ee:	0e 94 ac 08 	call	0x1158	; 0x1158 <vfprintf>
    10f2:	df 91       	pop	r29
    10f4:	cf 91       	pop	r28
    10f6:	08 95       	ret

000010f8 <puts>:
    10f8:	0f 93       	push	r16
    10fa:	1f 93       	push	r17
    10fc:	cf 93       	push	r28
    10fe:	df 93       	push	r29
    1100:	e0 91 f2 4a 	lds	r30, 0x4AF2	; 0x804af2 <__iob+0x2>
    1104:	f0 91 f3 4a 	lds	r31, 0x4AF3	; 0x804af3 <__iob+0x3>
    1108:	23 81       	ldd	r18, Z+3	; 0x03
    110a:	21 ff       	sbrs	r18, 1
    110c:	1b c0       	rjmp	.+54     	; 0x1144 <puts+0x4c>
    110e:	8c 01       	movw	r16, r24
    1110:	d0 e0       	ldi	r29, 0x00	; 0
    1112:	c0 e0       	ldi	r28, 0x00	; 0
    1114:	f8 01       	movw	r30, r16
    1116:	81 91       	ld	r24, Z+
    1118:	8f 01       	movw	r16, r30
    111a:	60 91 f2 4a 	lds	r22, 0x4AF2	; 0x804af2 <__iob+0x2>
    111e:	70 91 f3 4a 	lds	r23, 0x4AF3	; 0x804af3 <__iob+0x3>
    1122:	db 01       	movw	r26, r22
    1124:	18 96       	adiw	r26, 0x08	; 8
    1126:	ed 91       	ld	r30, X+
    1128:	fc 91       	ld	r31, X
    112a:	19 97       	sbiw	r26, 0x09	; 9
    112c:	88 23       	and	r24, r24
    112e:	31 f0       	breq	.+12     	; 0x113c <puts+0x44>
    1130:	09 95       	icall
    1132:	89 2b       	or	r24, r25
    1134:	79 f3       	breq	.-34     	; 0x1114 <puts+0x1c>
    1136:	df ef       	ldi	r29, 0xFF	; 255
    1138:	cf ef       	ldi	r28, 0xFF	; 255
    113a:	ec cf       	rjmp	.-40     	; 0x1114 <puts+0x1c>
    113c:	8a e0       	ldi	r24, 0x0A	; 10
    113e:	09 95       	icall
    1140:	89 2b       	or	r24, r25
    1142:	19 f0       	breq	.+6      	; 0x114a <puts+0x52>
    1144:	8f ef       	ldi	r24, 0xFF	; 255
    1146:	9f ef       	ldi	r25, 0xFF	; 255
    1148:	02 c0       	rjmp	.+4      	; 0x114e <puts+0x56>
    114a:	8d 2f       	mov	r24, r29
    114c:	9c 2f       	mov	r25, r28
    114e:	df 91       	pop	r29
    1150:	cf 91       	pop	r28
    1152:	1f 91       	pop	r17
    1154:	0f 91       	pop	r16
    1156:	08 95       	ret

00001158 <vfprintf>:
    1158:	2f 92       	push	r2
    115a:	3f 92       	push	r3
    115c:	4f 92       	push	r4
    115e:	5f 92       	push	r5
    1160:	6f 92       	push	r6
    1162:	7f 92       	push	r7
    1164:	8f 92       	push	r8
    1166:	9f 92       	push	r9
    1168:	af 92       	push	r10
    116a:	bf 92       	push	r11
    116c:	cf 92       	push	r12
    116e:	df 92       	push	r13
    1170:	ef 92       	push	r14
    1172:	ff 92       	push	r15
    1174:	0f 93       	push	r16
    1176:	1f 93       	push	r17
    1178:	cf 93       	push	r28
    117a:	df 93       	push	r29
    117c:	cd b7       	in	r28, 0x3d	; 61
    117e:	de b7       	in	r29, 0x3e	; 62
    1180:	2b 97       	sbiw	r28, 0x0b	; 11
    1182:	cd bf       	out	0x3d, r28	; 61
    1184:	de bf       	out	0x3e, r29	; 62
    1186:	6c 01       	movw	r12, r24
    1188:	7b 01       	movw	r14, r22
    118a:	8a 01       	movw	r16, r20
    118c:	fc 01       	movw	r30, r24
    118e:	16 82       	std	Z+6, r1	; 0x06
    1190:	17 82       	std	Z+7, r1	; 0x07
    1192:	83 81       	ldd	r24, Z+3	; 0x03
    1194:	81 ff       	sbrs	r24, 1
    1196:	cc c1       	rjmp	.+920    	; 0x1530 <vfprintf+0x3d8>
    1198:	ce 01       	movw	r24, r28
    119a:	01 96       	adiw	r24, 0x01	; 1
    119c:	3c 01       	movw	r6, r24
    119e:	f6 01       	movw	r30, r12
    11a0:	93 81       	ldd	r25, Z+3	; 0x03
    11a2:	f7 01       	movw	r30, r14
    11a4:	93 fd       	sbrc	r25, 3
    11a6:	85 91       	lpm	r24, Z+
    11a8:	93 ff       	sbrs	r25, 3
    11aa:	81 91       	ld	r24, Z+
    11ac:	7f 01       	movw	r14, r30
    11ae:	88 23       	and	r24, r24
    11b0:	09 f4       	brne	.+2      	; 0x11b4 <vfprintf+0x5c>
    11b2:	ba c1       	rjmp	.+884    	; 0x1528 <vfprintf+0x3d0>
    11b4:	85 32       	cpi	r24, 0x25	; 37
    11b6:	39 f4       	brne	.+14     	; 0x11c6 <vfprintf+0x6e>
    11b8:	93 fd       	sbrc	r25, 3
    11ba:	85 91       	lpm	r24, Z+
    11bc:	93 ff       	sbrs	r25, 3
    11be:	81 91       	ld	r24, Z+
    11c0:	7f 01       	movw	r14, r30
    11c2:	85 32       	cpi	r24, 0x25	; 37
    11c4:	29 f4       	brne	.+10     	; 0x11d0 <vfprintf+0x78>
    11c6:	b6 01       	movw	r22, r12
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	0e 94 c6 0a 	call	0x158c	; 0x158c <fputc>
    11ce:	e7 cf       	rjmp	.-50     	; 0x119e <vfprintf+0x46>
    11d0:	91 2c       	mov	r9, r1
    11d2:	21 2c       	mov	r2, r1
    11d4:	31 2c       	mov	r3, r1
    11d6:	ff e1       	ldi	r31, 0x1F	; 31
    11d8:	f3 15       	cp	r31, r3
    11da:	d8 f0       	brcs	.+54     	; 0x1212 <vfprintf+0xba>
    11dc:	8b 32       	cpi	r24, 0x2B	; 43
    11de:	79 f0       	breq	.+30     	; 0x11fe <vfprintf+0xa6>
    11e0:	38 f4       	brcc	.+14     	; 0x11f0 <vfprintf+0x98>
    11e2:	80 32       	cpi	r24, 0x20	; 32
    11e4:	79 f0       	breq	.+30     	; 0x1204 <vfprintf+0xac>
    11e6:	83 32       	cpi	r24, 0x23	; 35
    11e8:	a1 f4       	brne	.+40     	; 0x1212 <vfprintf+0xba>
    11ea:	23 2d       	mov	r18, r3
    11ec:	20 61       	ori	r18, 0x10	; 16
    11ee:	1d c0       	rjmp	.+58     	; 0x122a <vfprintf+0xd2>
    11f0:	8d 32       	cpi	r24, 0x2D	; 45
    11f2:	61 f0       	breq	.+24     	; 0x120c <vfprintf+0xb4>
    11f4:	80 33       	cpi	r24, 0x30	; 48
    11f6:	69 f4       	brne	.+26     	; 0x1212 <vfprintf+0xba>
    11f8:	23 2d       	mov	r18, r3
    11fa:	21 60       	ori	r18, 0x01	; 1
    11fc:	16 c0       	rjmp	.+44     	; 0x122a <vfprintf+0xd2>
    11fe:	83 2d       	mov	r24, r3
    1200:	82 60       	ori	r24, 0x02	; 2
    1202:	38 2e       	mov	r3, r24
    1204:	e3 2d       	mov	r30, r3
    1206:	e4 60       	ori	r30, 0x04	; 4
    1208:	3e 2e       	mov	r3, r30
    120a:	2a c0       	rjmp	.+84     	; 0x1260 <vfprintf+0x108>
    120c:	f3 2d       	mov	r31, r3
    120e:	f8 60       	ori	r31, 0x08	; 8
    1210:	1d c0       	rjmp	.+58     	; 0x124c <vfprintf+0xf4>
    1212:	37 fc       	sbrc	r3, 7
    1214:	2d c0       	rjmp	.+90     	; 0x1270 <vfprintf+0x118>
    1216:	20 ed       	ldi	r18, 0xD0	; 208
    1218:	28 0f       	add	r18, r24
    121a:	2a 30       	cpi	r18, 0x0A	; 10
    121c:	40 f0       	brcs	.+16     	; 0x122e <vfprintf+0xd6>
    121e:	8e 32       	cpi	r24, 0x2E	; 46
    1220:	b9 f4       	brne	.+46     	; 0x1250 <vfprintf+0xf8>
    1222:	36 fc       	sbrc	r3, 6
    1224:	81 c1       	rjmp	.+770    	; 0x1528 <vfprintf+0x3d0>
    1226:	23 2d       	mov	r18, r3
    1228:	20 64       	ori	r18, 0x40	; 64
    122a:	32 2e       	mov	r3, r18
    122c:	19 c0       	rjmp	.+50     	; 0x1260 <vfprintf+0x108>
    122e:	36 fe       	sbrs	r3, 6
    1230:	06 c0       	rjmp	.+12     	; 0x123e <vfprintf+0xe6>
    1232:	8a e0       	ldi	r24, 0x0A	; 10
    1234:	98 9e       	mul	r9, r24
    1236:	20 0d       	add	r18, r0
    1238:	11 24       	eor	r1, r1
    123a:	92 2e       	mov	r9, r18
    123c:	11 c0       	rjmp	.+34     	; 0x1260 <vfprintf+0x108>
    123e:	ea e0       	ldi	r30, 0x0A	; 10
    1240:	2e 9e       	mul	r2, r30
    1242:	20 0d       	add	r18, r0
    1244:	11 24       	eor	r1, r1
    1246:	22 2e       	mov	r2, r18
    1248:	f3 2d       	mov	r31, r3
    124a:	f0 62       	ori	r31, 0x20	; 32
    124c:	3f 2e       	mov	r3, r31
    124e:	08 c0       	rjmp	.+16     	; 0x1260 <vfprintf+0x108>
    1250:	8c 36       	cpi	r24, 0x6C	; 108
    1252:	21 f4       	brne	.+8      	; 0x125c <vfprintf+0x104>
    1254:	83 2d       	mov	r24, r3
    1256:	80 68       	ori	r24, 0x80	; 128
    1258:	38 2e       	mov	r3, r24
    125a:	02 c0       	rjmp	.+4      	; 0x1260 <vfprintf+0x108>
    125c:	88 36       	cpi	r24, 0x68	; 104
    125e:	41 f4       	brne	.+16     	; 0x1270 <vfprintf+0x118>
    1260:	f7 01       	movw	r30, r14
    1262:	93 fd       	sbrc	r25, 3
    1264:	85 91       	lpm	r24, Z+
    1266:	93 ff       	sbrs	r25, 3
    1268:	81 91       	ld	r24, Z+
    126a:	7f 01       	movw	r14, r30
    126c:	81 11       	cpse	r24, r1
    126e:	b3 cf       	rjmp	.-154    	; 0x11d6 <vfprintf+0x7e>
    1270:	98 2f       	mov	r25, r24
    1272:	9f 7d       	andi	r25, 0xDF	; 223
    1274:	95 54       	subi	r25, 0x45	; 69
    1276:	93 30       	cpi	r25, 0x03	; 3
    1278:	28 f4       	brcc	.+10     	; 0x1284 <vfprintf+0x12c>
    127a:	0c 5f       	subi	r16, 0xFC	; 252
    127c:	1f 4f       	sbci	r17, 0xFF	; 255
    127e:	9f e3       	ldi	r25, 0x3F	; 63
    1280:	99 83       	std	Y+1, r25	; 0x01
    1282:	0d c0       	rjmp	.+26     	; 0x129e <vfprintf+0x146>
    1284:	83 36       	cpi	r24, 0x63	; 99
    1286:	31 f0       	breq	.+12     	; 0x1294 <vfprintf+0x13c>
    1288:	83 37       	cpi	r24, 0x73	; 115
    128a:	71 f0       	breq	.+28     	; 0x12a8 <vfprintf+0x150>
    128c:	83 35       	cpi	r24, 0x53	; 83
    128e:	09 f0       	breq	.+2      	; 0x1292 <vfprintf+0x13a>
    1290:	59 c0       	rjmp	.+178    	; 0x1344 <vfprintf+0x1ec>
    1292:	21 c0       	rjmp	.+66     	; 0x12d6 <vfprintf+0x17e>
    1294:	f8 01       	movw	r30, r16
    1296:	80 81       	ld	r24, Z
    1298:	89 83       	std	Y+1, r24	; 0x01
    129a:	0e 5f       	subi	r16, 0xFE	; 254
    129c:	1f 4f       	sbci	r17, 0xFF	; 255
    129e:	88 24       	eor	r8, r8
    12a0:	83 94       	inc	r8
    12a2:	91 2c       	mov	r9, r1
    12a4:	53 01       	movw	r10, r6
    12a6:	13 c0       	rjmp	.+38     	; 0x12ce <vfprintf+0x176>
    12a8:	28 01       	movw	r4, r16
    12aa:	f2 e0       	ldi	r31, 0x02	; 2
    12ac:	4f 0e       	add	r4, r31
    12ae:	51 1c       	adc	r5, r1
    12b0:	f8 01       	movw	r30, r16
    12b2:	a0 80       	ld	r10, Z
    12b4:	b1 80       	ldd	r11, Z+1	; 0x01
    12b6:	36 fe       	sbrs	r3, 6
    12b8:	03 c0       	rjmp	.+6      	; 0x12c0 <vfprintf+0x168>
    12ba:	69 2d       	mov	r22, r9
    12bc:	70 e0       	ldi	r23, 0x00	; 0
    12be:	02 c0       	rjmp	.+4      	; 0x12c4 <vfprintf+0x16c>
    12c0:	6f ef       	ldi	r22, 0xFF	; 255
    12c2:	7f ef       	ldi	r23, 0xFF	; 255
    12c4:	c5 01       	movw	r24, r10
    12c6:	0e 94 bb 0a 	call	0x1576	; 0x1576 <strnlen>
    12ca:	4c 01       	movw	r8, r24
    12cc:	82 01       	movw	r16, r4
    12ce:	f3 2d       	mov	r31, r3
    12d0:	ff 77       	andi	r31, 0x7F	; 127
    12d2:	3f 2e       	mov	r3, r31
    12d4:	16 c0       	rjmp	.+44     	; 0x1302 <vfprintf+0x1aa>
    12d6:	28 01       	movw	r4, r16
    12d8:	22 e0       	ldi	r18, 0x02	; 2
    12da:	42 0e       	add	r4, r18
    12dc:	51 1c       	adc	r5, r1
    12de:	f8 01       	movw	r30, r16
    12e0:	a0 80       	ld	r10, Z
    12e2:	b1 80       	ldd	r11, Z+1	; 0x01
    12e4:	36 fe       	sbrs	r3, 6
    12e6:	03 c0       	rjmp	.+6      	; 0x12ee <vfprintf+0x196>
    12e8:	69 2d       	mov	r22, r9
    12ea:	70 e0       	ldi	r23, 0x00	; 0
    12ec:	02 c0       	rjmp	.+4      	; 0x12f2 <vfprintf+0x19a>
    12ee:	6f ef       	ldi	r22, 0xFF	; 255
    12f0:	7f ef       	ldi	r23, 0xFF	; 255
    12f2:	c5 01       	movw	r24, r10
    12f4:	0e 94 b0 0a 	call	0x1560	; 0x1560 <strnlen_P>
    12f8:	4c 01       	movw	r8, r24
    12fa:	f3 2d       	mov	r31, r3
    12fc:	f0 68       	ori	r31, 0x80	; 128
    12fe:	3f 2e       	mov	r3, r31
    1300:	82 01       	movw	r16, r4
    1302:	33 fc       	sbrc	r3, 3
    1304:	1b c0       	rjmp	.+54     	; 0x133c <vfprintf+0x1e4>
    1306:	82 2d       	mov	r24, r2
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	88 16       	cp	r8, r24
    130c:	99 06       	cpc	r9, r25
    130e:	b0 f4       	brcc	.+44     	; 0x133c <vfprintf+0x1e4>
    1310:	b6 01       	movw	r22, r12
    1312:	80 e2       	ldi	r24, 0x20	; 32
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	0e 94 c6 0a 	call	0x158c	; 0x158c <fputc>
    131a:	2a 94       	dec	r2
    131c:	f4 cf       	rjmp	.-24     	; 0x1306 <vfprintf+0x1ae>
    131e:	f5 01       	movw	r30, r10
    1320:	37 fc       	sbrc	r3, 7
    1322:	85 91       	lpm	r24, Z+
    1324:	37 fe       	sbrs	r3, 7
    1326:	81 91       	ld	r24, Z+
    1328:	5f 01       	movw	r10, r30
    132a:	b6 01       	movw	r22, r12
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	0e 94 c6 0a 	call	0x158c	; 0x158c <fputc>
    1332:	21 10       	cpse	r2, r1
    1334:	2a 94       	dec	r2
    1336:	21 e0       	ldi	r18, 0x01	; 1
    1338:	82 1a       	sub	r8, r18
    133a:	91 08       	sbc	r9, r1
    133c:	81 14       	cp	r8, r1
    133e:	91 04       	cpc	r9, r1
    1340:	71 f7       	brne	.-36     	; 0x131e <vfprintf+0x1c6>
    1342:	e8 c0       	rjmp	.+464    	; 0x1514 <vfprintf+0x3bc>
    1344:	84 36       	cpi	r24, 0x64	; 100
    1346:	11 f0       	breq	.+4      	; 0x134c <vfprintf+0x1f4>
    1348:	89 36       	cpi	r24, 0x69	; 105
    134a:	41 f5       	brne	.+80     	; 0x139c <vfprintf+0x244>
    134c:	f8 01       	movw	r30, r16
    134e:	37 fe       	sbrs	r3, 7
    1350:	07 c0       	rjmp	.+14     	; 0x1360 <vfprintf+0x208>
    1352:	60 81       	ld	r22, Z
    1354:	71 81       	ldd	r23, Z+1	; 0x01
    1356:	82 81       	ldd	r24, Z+2	; 0x02
    1358:	93 81       	ldd	r25, Z+3	; 0x03
    135a:	0c 5f       	subi	r16, 0xFC	; 252
    135c:	1f 4f       	sbci	r17, 0xFF	; 255
    135e:	08 c0       	rjmp	.+16     	; 0x1370 <vfprintf+0x218>
    1360:	60 81       	ld	r22, Z
    1362:	71 81       	ldd	r23, Z+1	; 0x01
    1364:	07 2e       	mov	r0, r23
    1366:	00 0c       	add	r0, r0
    1368:	88 0b       	sbc	r24, r24
    136a:	99 0b       	sbc	r25, r25
    136c:	0e 5f       	subi	r16, 0xFE	; 254
    136e:	1f 4f       	sbci	r17, 0xFF	; 255
    1370:	f3 2d       	mov	r31, r3
    1372:	ff 76       	andi	r31, 0x6F	; 111
    1374:	3f 2e       	mov	r3, r31
    1376:	97 ff       	sbrs	r25, 7
    1378:	09 c0       	rjmp	.+18     	; 0x138c <vfprintf+0x234>
    137a:	90 95       	com	r25
    137c:	80 95       	com	r24
    137e:	70 95       	com	r23
    1380:	61 95       	neg	r22
    1382:	7f 4f       	sbci	r23, 0xFF	; 255
    1384:	8f 4f       	sbci	r24, 0xFF	; 255
    1386:	9f 4f       	sbci	r25, 0xFF	; 255
    1388:	f0 68       	ori	r31, 0x80	; 128
    138a:	3f 2e       	mov	r3, r31
    138c:	2a e0       	ldi	r18, 0x0A	; 10
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	a3 01       	movw	r20, r6
    1392:	0e 94 02 0b 	call	0x1604	; 0x1604 <__ultoa_invert>
    1396:	88 2e       	mov	r8, r24
    1398:	86 18       	sub	r8, r6
    139a:	45 c0       	rjmp	.+138    	; 0x1426 <vfprintf+0x2ce>
    139c:	85 37       	cpi	r24, 0x75	; 117
    139e:	31 f4       	brne	.+12     	; 0x13ac <vfprintf+0x254>
    13a0:	23 2d       	mov	r18, r3
    13a2:	2f 7e       	andi	r18, 0xEF	; 239
    13a4:	b2 2e       	mov	r11, r18
    13a6:	2a e0       	ldi	r18, 0x0A	; 10
    13a8:	30 e0       	ldi	r19, 0x00	; 0
    13aa:	25 c0       	rjmp	.+74     	; 0x13f6 <vfprintf+0x29e>
    13ac:	93 2d       	mov	r25, r3
    13ae:	99 7f       	andi	r25, 0xF9	; 249
    13b0:	b9 2e       	mov	r11, r25
    13b2:	8f 36       	cpi	r24, 0x6F	; 111
    13b4:	c1 f0       	breq	.+48     	; 0x13e6 <vfprintf+0x28e>
    13b6:	18 f4       	brcc	.+6      	; 0x13be <vfprintf+0x266>
    13b8:	88 35       	cpi	r24, 0x58	; 88
    13ba:	79 f0       	breq	.+30     	; 0x13da <vfprintf+0x282>
    13bc:	b5 c0       	rjmp	.+362    	; 0x1528 <vfprintf+0x3d0>
    13be:	80 37       	cpi	r24, 0x70	; 112
    13c0:	19 f0       	breq	.+6      	; 0x13c8 <vfprintf+0x270>
    13c2:	88 37       	cpi	r24, 0x78	; 120
    13c4:	21 f0       	breq	.+8      	; 0x13ce <vfprintf+0x276>
    13c6:	b0 c0       	rjmp	.+352    	; 0x1528 <vfprintf+0x3d0>
    13c8:	e9 2f       	mov	r30, r25
    13ca:	e0 61       	ori	r30, 0x10	; 16
    13cc:	be 2e       	mov	r11, r30
    13ce:	b4 fe       	sbrs	r11, 4
    13d0:	0d c0       	rjmp	.+26     	; 0x13ec <vfprintf+0x294>
    13d2:	fb 2d       	mov	r31, r11
    13d4:	f4 60       	ori	r31, 0x04	; 4
    13d6:	bf 2e       	mov	r11, r31
    13d8:	09 c0       	rjmp	.+18     	; 0x13ec <vfprintf+0x294>
    13da:	34 fe       	sbrs	r3, 4
    13dc:	0a c0       	rjmp	.+20     	; 0x13f2 <vfprintf+0x29a>
    13de:	29 2f       	mov	r18, r25
    13e0:	26 60       	ori	r18, 0x06	; 6
    13e2:	b2 2e       	mov	r11, r18
    13e4:	06 c0       	rjmp	.+12     	; 0x13f2 <vfprintf+0x29a>
    13e6:	28 e0       	ldi	r18, 0x08	; 8
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	05 c0       	rjmp	.+10     	; 0x13f6 <vfprintf+0x29e>
    13ec:	20 e1       	ldi	r18, 0x10	; 16
    13ee:	30 e0       	ldi	r19, 0x00	; 0
    13f0:	02 c0       	rjmp	.+4      	; 0x13f6 <vfprintf+0x29e>
    13f2:	20 e1       	ldi	r18, 0x10	; 16
    13f4:	32 e0       	ldi	r19, 0x02	; 2
    13f6:	f8 01       	movw	r30, r16
    13f8:	b7 fe       	sbrs	r11, 7
    13fa:	07 c0       	rjmp	.+14     	; 0x140a <vfprintf+0x2b2>
    13fc:	60 81       	ld	r22, Z
    13fe:	71 81       	ldd	r23, Z+1	; 0x01
    1400:	82 81       	ldd	r24, Z+2	; 0x02
    1402:	93 81       	ldd	r25, Z+3	; 0x03
    1404:	0c 5f       	subi	r16, 0xFC	; 252
    1406:	1f 4f       	sbci	r17, 0xFF	; 255
    1408:	06 c0       	rjmp	.+12     	; 0x1416 <vfprintf+0x2be>
    140a:	60 81       	ld	r22, Z
    140c:	71 81       	ldd	r23, Z+1	; 0x01
    140e:	80 e0       	ldi	r24, 0x00	; 0
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	0e 5f       	subi	r16, 0xFE	; 254
    1414:	1f 4f       	sbci	r17, 0xFF	; 255
    1416:	a3 01       	movw	r20, r6
    1418:	0e 94 02 0b 	call	0x1604	; 0x1604 <__ultoa_invert>
    141c:	88 2e       	mov	r8, r24
    141e:	86 18       	sub	r8, r6
    1420:	fb 2d       	mov	r31, r11
    1422:	ff 77       	andi	r31, 0x7F	; 127
    1424:	3f 2e       	mov	r3, r31
    1426:	36 fe       	sbrs	r3, 6
    1428:	0d c0       	rjmp	.+26     	; 0x1444 <vfprintf+0x2ec>
    142a:	23 2d       	mov	r18, r3
    142c:	2e 7f       	andi	r18, 0xFE	; 254
    142e:	a2 2e       	mov	r10, r18
    1430:	89 14       	cp	r8, r9
    1432:	58 f4       	brcc	.+22     	; 0x144a <vfprintf+0x2f2>
    1434:	34 fe       	sbrs	r3, 4
    1436:	0b c0       	rjmp	.+22     	; 0x144e <vfprintf+0x2f6>
    1438:	32 fc       	sbrc	r3, 2
    143a:	09 c0       	rjmp	.+18     	; 0x144e <vfprintf+0x2f6>
    143c:	83 2d       	mov	r24, r3
    143e:	8e 7e       	andi	r24, 0xEE	; 238
    1440:	a8 2e       	mov	r10, r24
    1442:	05 c0       	rjmp	.+10     	; 0x144e <vfprintf+0x2f6>
    1444:	b8 2c       	mov	r11, r8
    1446:	a3 2c       	mov	r10, r3
    1448:	03 c0       	rjmp	.+6      	; 0x1450 <vfprintf+0x2f8>
    144a:	b8 2c       	mov	r11, r8
    144c:	01 c0       	rjmp	.+2      	; 0x1450 <vfprintf+0x2f8>
    144e:	b9 2c       	mov	r11, r9
    1450:	a4 fe       	sbrs	r10, 4
    1452:	0f c0       	rjmp	.+30     	; 0x1472 <vfprintf+0x31a>
    1454:	fe 01       	movw	r30, r28
    1456:	e8 0d       	add	r30, r8
    1458:	f1 1d       	adc	r31, r1
    145a:	80 81       	ld	r24, Z
    145c:	80 33       	cpi	r24, 0x30	; 48
    145e:	21 f4       	brne	.+8      	; 0x1468 <vfprintf+0x310>
    1460:	9a 2d       	mov	r25, r10
    1462:	99 7e       	andi	r25, 0xE9	; 233
    1464:	a9 2e       	mov	r10, r25
    1466:	09 c0       	rjmp	.+18     	; 0x147a <vfprintf+0x322>
    1468:	a2 fe       	sbrs	r10, 2
    146a:	06 c0       	rjmp	.+12     	; 0x1478 <vfprintf+0x320>
    146c:	b3 94       	inc	r11
    146e:	b3 94       	inc	r11
    1470:	04 c0       	rjmp	.+8      	; 0x147a <vfprintf+0x322>
    1472:	8a 2d       	mov	r24, r10
    1474:	86 78       	andi	r24, 0x86	; 134
    1476:	09 f0       	breq	.+2      	; 0x147a <vfprintf+0x322>
    1478:	b3 94       	inc	r11
    147a:	a3 fc       	sbrc	r10, 3
    147c:	11 c0       	rjmp	.+34     	; 0x14a0 <vfprintf+0x348>
    147e:	a0 fe       	sbrs	r10, 0
    1480:	06 c0       	rjmp	.+12     	; 0x148e <vfprintf+0x336>
    1482:	b2 14       	cp	r11, r2
    1484:	88 f4       	brcc	.+34     	; 0x14a8 <vfprintf+0x350>
    1486:	28 0c       	add	r2, r8
    1488:	92 2c       	mov	r9, r2
    148a:	9b 18       	sub	r9, r11
    148c:	0e c0       	rjmp	.+28     	; 0x14aa <vfprintf+0x352>
    148e:	b2 14       	cp	r11, r2
    1490:	60 f4       	brcc	.+24     	; 0x14aa <vfprintf+0x352>
    1492:	b6 01       	movw	r22, r12
    1494:	80 e2       	ldi	r24, 0x20	; 32
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	0e 94 c6 0a 	call	0x158c	; 0x158c <fputc>
    149c:	b3 94       	inc	r11
    149e:	f7 cf       	rjmp	.-18     	; 0x148e <vfprintf+0x336>
    14a0:	b2 14       	cp	r11, r2
    14a2:	18 f4       	brcc	.+6      	; 0x14aa <vfprintf+0x352>
    14a4:	2b 18       	sub	r2, r11
    14a6:	02 c0       	rjmp	.+4      	; 0x14ac <vfprintf+0x354>
    14a8:	98 2c       	mov	r9, r8
    14aa:	21 2c       	mov	r2, r1
    14ac:	a4 fe       	sbrs	r10, 4
    14ae:	10 c0       	rjmp	.+32     	; 0x14d0 <vfprintf+0x378>
    14b0:	b6 01       	movw	r22, r12
    14b2:	80 e3       	ldi	r24, 0x30	; 48
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	0e 94 c6 0a 	call	0x158c	; 0x158c <fputc>
    14ba:	a2 fe       	sbrs	r10, 2
    14bc:	17 c0       	rjmp	.+46     	; 0x14ec <vfprintf+0x394>
    14be:	a1 fc       	sbrc	r10, 1
    14c0:	03 c0       	rjmp	.+6      	; 0x14c8 <vfprintf+0x370>
    14c2:	88 e7       	ldi	r24, 0x78	; 120
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	02 c0       	rjmp	.+4      	; 0x14cc <vfprintf+0x374>
    14c8:	88 e5       	ldi	r24, 0x58	; 88
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	b6 01       	movw	r22, r12
    14ce:	0c c0       	rjmp	.+24     	; 0x14e8 <vfprintf+0x390>
    14d0:	8a 2d       	mov	r24, r10
    14d2:	86 78       	andi	r24, 0x86	; 134
    14d4:	59 f0       	breq	.+22     	; 0x14ec <vfprintf+0x394>
    14d6:	a1 fe       	sbrs	r10, 1
    14d8:	02 c0       	rjmp	.+4      	; 0x14de <vfprintf+0x386>
    14da:	8b e2       	ldi	r24, 0x2B	; 43
    14dc:	01 c0       	rjmp	.+2      	; 0x14e0 <vfprintf+0x388>
    14de:	80 e2       	ldi	r24, 0x20	; 32
    14e0:	a7 fc       	sbrc	r10, 7
    14e2:	8d e2       	ldi	r24, 0x2D	; 45
    14e4:	b6 01       	movw	r22, r12
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	0e 94 c6 0a 	call	0x158c	; 0x158c <fputc>
    14ec:	89 14       	cp	r8, r9
    14ee:	38 f4       	brcc	.+14     	; 0x14fe <vfprintf+0x3a6>
    14f0:	b6 01       	movw	r22, r12
    14f2:	80 e3       	ldi	r24, 0x30	; 48
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	0e 94 c6 0a 	call	0x158c	; 0x158c <fputc>
    14fa:	9a 94       	dec	r9
    14fc:	f7 cf       	rjmp	.-18     	; 0x14ec <vfprintf+0x394>
    14fe:	8a 94       	dec	r8
    1500:	f3 01       	movw	r30, r6
    1502:	e8 0d       	add	r30, r8
    1504:	f1 1d       	adc	r31, r1
    1506:	80 81       	ld	r24, Z
    1508:	b6 01       	movw	r22, r12
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	0e 94 c6 0a 	call	0x158c	; 0x158c <fputc>
    1510:	81 10       	cpse	r8, r1
    1512:	f5 cf       	rjmp	.-22     	; 0x14fe <vfprintf+0x3a6>
    1514:	22 20       	and	r2, r2
    1516:	09 f4       	brne	.+2      	; 0x151a <vfprintf+0x3c2>
    1518:	42 ce       	rjmp	.-892    	; 0x119e <vfprintf+0x46>
    151a:	b6 01       	movw	r22, r12
    151c:	80 e2       	ldi	r24, 0x20	; 32
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	0e 94 c6 0a 	call	0x158c	; 0x158c <fputc>
    1524:	2a 94       	dec	r2
    1526:	f6 cf       	rjmp	.-20     	; 0x1514 <vfprintf+0x3bc>
    1528:	f6 01       	movw	r30, r12
    152a:	86 81       	ldd	r24, Z+6	; 0x06
    152c:	97 81       	ldd	r25, Z+7	; 0x07
    152e:	02 c0       	rjmp	.+4      	; 0x1534 <vfprintf+0x3dc>
    1530:	8f ef       	ldi	r24, 0xFF	; 255
    1532:	9f ef       	ldi	r25, 0xFF	; 255
    1534:	2b 96       	adiw	r28, 0x0b	; 11
    1536:	cd bf       	out	0x3d, r28	; 61
    1538:	de bf       	out	0x3e, r29	; 62
    153a:	df 91       	pop	r29
    153c:	cf 91       	pop	r28
    153e:	1f 91       	pop	r17
    1540:	0f 91       	pop	r16
    1542:	ff 90       	pop	r15
    1544:	ef 90       	pop	r14
    1546:	df 90       	pop	r13
    1548:	cf 90       	pop	r12
    154a:	bf 90       	pop	r11
    154c:	af 90       	pop	r10
    154e:	9f 90       	pop	r9
    1550:	8f 90       	pop	r8
    1552:	7f 90       	pop	r7
    1554:	6f 90       	pop	r6
    1556:	5f 90       	pop	r5
    1558:	4f 90       	pop	r4
    155a:	3f 90       	pop	r3
    155c:	2f 90       	pop	r2
    155e:	08 95       	ret

00001560 <strnlen_P>:
    1560:	fc 01       	movw	r30, r24
    1562:	05 90       	lpm	r0, Z+
    1564:	61 50       	subi	r22, 0x01	; 1
    1566:	70 40       	sbci	r23, 0x00	; 0
    1568:	01 10       	cpse	r0, r1
    156a:	d8 f7       	brcc	.-10     	; 0x1562 <strnlen_P+0x2>
    156c:	80 95       	com	r24
    156e:	90 95       	com	r25
    1570:	8e 0f       	add	r24, r30
    1572:	9f 1f       	adc	r25, r31
    1574:	08 95       	ret

00001576 <strnlen>:
    1576:	fc 01       	movw	r30, r24
    1578:	61 50       	subi	r22, 0x01	; 1
    157a:	70 40       	sbci	r23, 0x00	; 0
    157c:	01 90       	ld	r0, Z+
    157e:	01 10       	cpse	r0, r1
    1580:	d8 f7       	brcc	.-10     	; 0x1578 <strnlen+0x2>
    1582:	80 95       	com	r24
    1584:	90 95       	com	r25
    1586:	8e 0f       	add	r24, r30
    1588:	9f 1f       	adc	r25, r31
    158a:	08 95       	ret

0000158c <fputc>:
    158c:	0f 93       	push	r16
    158e:	1f 93       	push	r17
    1590:	cf 93       	push	r28
    1592:	df 93       	push	r29
    1594:	fb 01       	movw	r30, r22
    1596:	23 81       	ldd	r18, Z+3	; 0x03
    1598:	21 fd       	sbrc	r18, 1
    159a:	03 c0       	rjmp	.+6      	; 0x15a2 <fputc+0x16>
    159c:	8f ef       	ldi	r24, 0xFF	; 255
    159e:	9f ef       	ldi	r25, 0xFF	; 255
    15a0:	2c c0       	rjmp	.+88     	; 0x15fa <fputc+0x6e>
    15a2:	22 ff       	sbrs	r18, 2
    15a4:	16 c0       	rjmp	.+44     	; 0x15d2 <fputc+0x46>
    15a6:	46 81       	ldd	r20, Z+6	; 0x06
    15a8:	57 81       	ldd	r21, Z+7	; 0x07
    15aa:	24 81       	ldd	r18, Z+4	; 0x04
    15ac:	35 81       	ldd	r19, Z+5	; 0x05
    15ae:	42 17       	cp	r20, r18
    15b0:	53 07       	cpc	r21, r19
    15b2:	44 f4       	brge	.+16     	; 0x15c4 <fputc+0x38>
    15b4:	a0 81       	ld	r26, Z
    15b6:	b1 81       	ldd	r27, Z+1	; 0x01
    15b8:	9d 01       	movw	r18, r26
    15ba:	2f 5f       	subi	r18, 0xFF	; 255
    15bc:	3f 4f       	sbci	r19, 0xFF	; 255
    15be:	20 83       	st	Z, r18
    15c0:	31 83       	std	Z+1, r19	; 0x01
    15c2:	8c 93       	st	X, r24
    15c4:	26 81       	ldd	r18, Z+6	; 0x06
    15c6:	37 81       	ldd	r19, Z+7	; 0x07
    15c8:	2f 5f       	subi	r18, 0xFF	; 255
    15ca:	3f 4f       	sbci	r19, 0xFF	; 255
    15cc:	26 83       	std	Z+6, r18	; 0x06
    15ce:	37 83       	std	Z+7, r19	; 0x07
    15d0:	14 c0       	rjmp	.+40     	; 0x15fa <fputc+0x6e>
    15d2:	8b 01       	movw	r16, r22
    15d4:	ec 01       	movw	r28, r24
    15d6:	fb 01       	movw	r30, r22
    15d8:	00 84       	ldd	r0, Z+8	; 0x08
    15da:	f1 85       	ldd	r31, Z+9	; 0x09
    15dc:	e0 2d       	mov	r30, r0
    15de:	09 95       	icall
    15e0:	89 2b       	or	r24, r25
    15e2:	e1 f6       	brne	.-72     	; 0x159c <fputc+0x10>
    15e4:	d8 01       	movw	r26, r16
    15e6:	16 96       	adiw	r26, 0x06	; 6
    15e8:	8d 91       	ld	r24, X+
    15ea:	9c 91       	ld	r25, X
    15ec:	17 97       	sbiw	r26, 0x07	; 7
    15ee:	01 96       	adiw	r24, 0x01	; 1
    15f0:	16 96       	adiw	r26, 0x06	; 6
    15f2:	8d 93       	st	X+, r24
    15f4:	9c 93       	st	X, r25
    15f6:	17 97       	sbiw	r26, 0x07	; 7
    15f8:	ce 01       	movw	r24, r28
    15fa:	df 91       	pop	r29
    15fc:	cf 91       	pop	r28
    15fe:	1f 91       	pop	r17
    1600:	0f 91       	pop	r16
    1602:	08 95       	ret

00001604 <__ultoa_invert>:
    1604:	fa 01       	movw	r30, r20
    1606:	aa 27       	eor	r26, r26
    1608:	28 30       	cpi	r18, 0x08	; 8
    160a:	51 f1       	breq	.+84     	; 0x1660 <__ultoa_invert+0x5c>
    160c:	20 31       	cpi	r18, 0x10	; 16
    160e:	81 f1       	breq	.+96     	; 0x1670 <__ultoa_invert+0x6c>
    1610:	e8 94       	clt
    1612:	6f 93       	push	r22
    1614:	6e 7f       	andi	r22, 0xFE	; 254
    1616:	6e 5f       	subi	r22, 0xFE	; 254
    1618:	7f 4f       	sbci	r23, 0xFF	; 255
    161a:	8f 4f       	sbci	r24, 0xFF	; 255
    161c:	9f 4f       	sbci	r25, 0xFF	; 255
    161e:	af 4f       	sbci	r26, 0xFF	; 255
    1620:	b1 e0       	ldi	r27, 0x01	; 1
    1622:	3e d0       	rcall	.+124    	; 0x16a0 <__ultoa_invert+0x9c>
    1624:	b4 e0       	ldi	r27, 0x04	; 4
    1626:	3c d0       	rcall	.+120    	; 0x16a0 <__ultoa_invert+0x9c>
    1628:	67 0f       	add	r22, r23
    162a:	78 1f       	adc	r23, r24
    162c:	89 1f       	adc	r24, r25
    162e:	9a 1f       	adc	r25, r26
    1630:	a1 1d       	adc	r26, r1
    1632:	68 0f       	add	r22, r24
    1634:	79 1f       	adc	r23, r25
    1636:	8a 1f       	adc	r24, r26
    1638:	91 1d       	adc	r25, r1
    163a:	a1 1d       	adc	r26, r1
    163c:	6a 0f       	add	r22, r26
    163e:	71 1d       	adc	r23, r1
    1640:	81 1d       	adc	r24, r1
    1642:	91 1d       	adc	r25, r1
    1644:	a1 1d       	adc	r26, r1
    1646:	20 d0       	rcall	.+64     	; 0x1688 <__ultoa_invert+0x84>
    1648:	09 f4       	brne	.+2      	; 0x164c <__ultoa_invert+0x48>
    164a:	68 94       	set
    164c:	3f 91       	pop	r19
    164e:	2a e0       	ldi	r18, 0x0A	; 10
    1650:	26 9f       	mul	r18, r22
    1652:	11 24       	eor	r1, r1
    1654:	30 19       	sub	r19, r0
    1656:	30 5d       	subi	r19, 0xD0	; 208
    1658:	31 93       	st	Z+, r19
    165a:	de f6       	brtc	.-74     	; 0x1612 <__ultoa_invert+0xe>
    165c:	cf 01       	movw	r24, r30
    165e:	08 95       	ret
    1660:	46 2f       	mov	r20, r22
    1662:	47 70       	andi	r20, 0x07	; 7
    1664:	40 5d       	subi	r20, 0xD0	; 208
    1666:	41 93       	st	Z+, r20
    1668:	b3 e0       	ldi	r27, 0x03	; 3
    166a:	0f d0       	rcall	.+30     	; 0x168a <__ultoa_invert+0x86>
    166c:	c9 f7       	brne	.-14     	; 0x1660 <__ultoa_invert+0x5c>
    166e:	f6 cf       	rjmp	.-20     	; 0x165c <__ultoa_invert+0x58>
    1670:	46 2f       	mov	r20, r22
    1672:	4f 70       	andi	r20, 0x0F	; 15
    1674:	40 5d       	subi	r20, 0xD0	; 208
    1676:	4a 33       	cpi	r20, 0x3A	; 58
    1678:	18 f0       	brcs	.+6      	; 0x1680 <__ultoa_invert+0x7c>
    167a:	49 5d       	subi	r20, 0xD9	; 217
    167c:	31 fd       	sbrc	r19, 1
    167e:	40 52       	subi	r20, 0x20	; 32
    1680:	41 93       	st	Z+, r20
    1682:	02 d0       	rcall	.+4      	; 0x1688 <__ultoa_invert+0x84>
    1684:	a9 f7       	brne	.-22     	; 0x1670 <__ultoa_invert+0x6c>
    1686:	ea cf       	rjmp	.-44     	; 0x165c <__ultoa_invert+0x58>
    1688:	b4 e0       	ldi	r27, 0x04	; 4
    168a:	a6 95       	lsr	r26
    168c:	97 95       	ror	r25
    168e:	87 95       	ror	r24
    1690:	77 95       	ror	r23
    1692:	67 95       	ror	r22
    1694:	ba 95       	dec	r27
    1696:	c9 f7       	brne	.-14     	; 0x168a <__ultoa_invert+0x86>
    1698:	00 97       	sbiw	r24, 0x00	; 0
    169a:	61 05       	cpc	r22, r1
    169c:	71 05       	cpc	r23, r1
    169e:	08 95       	ret
    16a0:	9b 01       	movw	r18, r22
    16a2:	ac 01       	movw	r20, r24
    16a4:	0a 2e       	mov	r0, r26
    16a6:	06 94       	lsr	r0
    16a8:	57 95       	ror	r21
    16aa:	47 95       	ror	r20
    16ac:	37 95       	ror	r19
    16ae:	27 95       	ror	r18
    16b0:	ba 95       	dec	r27
    16b2:	c9 f7       	brne	.-14     	; 0x16a6 <__ultoa_invert+0xa2>
    16b4:	62 0f       	add	r22, r18
    16b6:	73 1f       	adc	r23, r19
    16b8:	84 1f       	adc	r24, r20
    16ba:	95 1f       	adc	r25, r21
    16bc:	a0 1d       	adc	r26, r0
    16be:	08 95       	ret

000016c0 <_exit>:
    16c0:	f8 94       	cli

000016c2 <__stop_program>:
    16c2:	ff cf       	rjmp	.-2      	; 0x16c2 <__stop_program>
