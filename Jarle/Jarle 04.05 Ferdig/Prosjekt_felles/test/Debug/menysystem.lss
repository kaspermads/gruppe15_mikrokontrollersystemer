
menysystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000b4a  00804000  00001cb8  00001d6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cb8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000021f  00804b4a  00804b4a  000028b6  2**0
                  ALLOC
  3 .eeprom       00000004  00810000  00810000  000028b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  000028ba  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002918  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000001c0  00000000  00000000  00002958  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00006243  00000000  00000000  00002b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000324d  00000000  00000000  00008d5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000013f1  00000000  00000000  0000bfa8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000060c  00000000  00000000  0000d39c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00003d6b  00000000  00000000  0000d9a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000017f3  00000000  00000000  00011713  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001a0  00000000  00000000  00012f06  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 00 	jmp	0x10e	; 0x10e <__ctors_end>
       4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      10:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      14:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      18:	0c 94 f0 04 	jmp	0x9e0	; 0x9e0 <__vector_6>
      1c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      20:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      24:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      28:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      2c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      30:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      34:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      38:	0c 94 0a 05 	jmp	0xa14	; 0xa14 <__vector_14>
      3c:	0c 94 41 05 	jmp	0xa82	; 0xa82 <__vector_15>
      40:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      44:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      48:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      4c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      50:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      54:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      58:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      5c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      60:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      64:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      68:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      6c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      70:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      74:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      78:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      7c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      80:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      84:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      88:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      8c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      90:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      94:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      98:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      9c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      a0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      a4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      a8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      ac:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      b0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      b4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      b8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      bc:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      c0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      c4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      c8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      cc:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      d0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      d4:	0c 94 61 08 	jmp	0x10c2	; 0x10c2 <__vector_53>
      d8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      dc:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      e0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      e4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      e8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      ec:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      f0:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      f4:	12 07       	cpc	r17, r18
      f6:	1c 07       	cpc	r17, r28
      f8:	26 07       	cpc	r18, r22
      fa:	30 07       	cpc	r19, r16
      fc:	3a 07       	cpc	r19, r26
      fe:	43 07       	cpc	r20, r19
     100:	53 07       	cpc	r21, r19
     102:	5c 07       	cpc	r21, r28
     104:	6d 07       	cpc	r22, r29
     106:	8e 07       	cpc	r24, r30
     108:	8e 07       	cpc	r24, r30
     10a:	8e 07       	cpc	r24, r30
     10c:	74 07       	cpc	r23, r20

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	cd bf       	out	0x3d, r28	; 61
     116:	df e7       	ldi	r29, 0x7F	; 127
     118:	de bf       	out	0x3e, r29	; 62

0000011a <__do_copy_data>:
     11a:	1b e4       	ldi	r17, 0x4B	; 75
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b0 e4       	ldi	r27, 0x40	; 64
     120:	e8 eb       	ldi	r30, 0xB8	; 184
     122:	fc e1       	ldi	r31, 0x1C	; 28
     124:	00 e0       	ldi	r16, 0x00	; 0
     126:	0b bf       	out	0x3b, r16	; 59
     128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x14>
     12a:	07 90       	elpm	r0, Z+
     12c:	0d 92       	st	X+, r0
     12e:	aa 34       	cpi	r26, 0x4A	; 74
     130:	b1 07       	cpc	r27, r17
     132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x10>

00000134 <__do_clear_bss>:
     134:	2d e4       	ldi	r18, 0x4D	; 77
     136:	aa e4       	ldi	r26, 0x4A	; 74
     138:	bb e4       	ldi	r27, 0x4B	; 75
     13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
     13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
     13e:	a9 36       	cpi	r26, 0x69	; 105
     140:	b2 07       	cpc	r27, r18
     142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
     144:	0e 94 89 08 	call	0x1112	; 0x1112 <main>
     148:	0c 94 5a 0e 	jmp	0x1cb4	; 0x1cb4 <_exit>

0000014c <__bad_interrupt>:
     14c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000150 <TWI0_M_init>:
	
	status_eeprom();
	
	read_value = eeprom_read_word((uint16_t*) address_fan1);
	return read_value;
}
     150:	e0 e0       	ldi	r30, 0x00	; 0
     152:	f4 e0       	ldi	r31, 0x04	; 4
     154:	8c e0       	ldi	r24, 0x0C	; 12
     156:	81 83       	std	Z+1, r24	; 0x01
     158:	98 e0       	ldi	r25, 0x08	; 8
     15a:	93 87       	std	Z+11, r25	; 0x0b
     15c:	84 87       	std	Z+12, r24	; 0x0c
     15e:	e0 e0       	ldi	r30, 0x00	; 0
     160:	f9 e0       	ldi	r31, 0x09	; 9
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	83 83       	std	Z+3, r24	; 0x03
     166:	16 82       	std	Z+6, r1	; 0x06
     168:	85 83       	std	Z+5, r24	; 0x05
     16a:	e0 e8       	ldi	r30, 0x80	; 128
     16c:	f4 e0       	ldi	r31, 0x04	; 4
     16e:	82 e0       	ldi	r24, 0x02	; 2
     170:	81 83       	std	Z+1, r24	; 0x01
     172:	84 83       	std	Z+4, r24	; 0x04
     174:	08 95       	ret

00000176 <I2C0_M_start>:
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	88 0f       	add	r24, r24
     17a:	99 1f       	adc	r25, r25
     17c:	86 2b       	or	r24, r22
     17e:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
     182:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     186:	85 fd       	sbrc	r24, 5
     188:	0d c0       	rjmp	.+26     	; 0x1a4 <I2C0_M_start+0x2e>
     18a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     18e:	82 fd       	sbrc	r24, 2
     190:	09 c0       	rjmp	.+18     	; 0x1a4 <I2C0_M_start+0x2e>
     192:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     196:	83 fd       	sbrc	r24, 3
     198:	05 c0       	rjmp	.+10     	; 0x1a4 <I2C0_M_start+0x2e>
     19a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     19e:	83 70       	andi	r24, 0x03	; 3
     1a0:	83 30       	cpi	r24, 0x03	; 3
     1a2:	79 f7       	brne	.-34     	; 0x182 <I2C0_M_start+0xc>
     1a4:	08 95       	ret

000001a6 <I2C_M_write>:
     1a6:	cf 93       	push	r28
     1a8:	c6 2f       	mov	r28, r22
     1aa:	60 e0       	ldi	r22, 0x00	; 0
     1ac:	0e 94 bb 00 	call	0x176	; 0x176 <I2C0_M_start>
     1b0:	c0 93 08 09 	sts	0x0908, r28	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     1b4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1b8:	85 fd       	sbrc	r24, 5
     1ba:	0d c0       	rjmp	.+26     	; 0x1d6 <I2C_M_write+0x30>
     1bc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c0:	82 fd       	sbrc	r24, 2
     1c2:	09 c0       	rjmp	.+18     	; 0x1d6 <I2C_M_write+0x30>
     1c4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1c8:	83 fd       	sbrc	r24, 3
     1ca:	05 c0       	rjmp	.+10     	; 0x1d6 <I2C_M_write+0x30>
     1cc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1d0:	83 70       	andi	r24, 0x03	; 3
     1d2:	83 30       	cpi	r24, 0x03	; 3
     1d4:	79 f7       	brne	.-34     	; 0x1b4 <I2C_M_write+0xe>
     1d6:	e0 e0       	ldi	r30, 0x00	; 0
     1d8:	f9 e0       	ldi	r31, 0x09	; 9
     1da:	85 81       	ldd	r24, Z+5	; 0x05
     1dc:	84 81       	ldd	r24, Z+4	; 0x04
     1de:	83 60       	ori	r24, 0x03	; 3
     1e0:	84 83       	std	Z+4, r24	; 0x04
     1e2:	cf 91       	pop	r28
     1e4:	08 95       	ret

000001e6 <I2C_M_read>:
     1e6:	0f 93       	push	r16
     1e8:	1f 93       	push	r17
     1ea:	cf 93       	push	r28
     1ec:	8b 01       	movw	r16, r22
     1ee:	c4 2f       	mov	r28, r20
     1f0:	61 e0       	ldi	r22, 0x01	; 1
     1f2:	0e 94 bb 00 	call	0x176	; 0x176 <I2C0_M_start>
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	1d c0       	rjmp	.+58     	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     1fa:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     1fe:	85 fd       	sbrc	r24, 5
     200:	0d c0       	rjmp	.+26     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
     202:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     206:	82 fd       	sbrc	r24, 2
     208:	09 c0       	rjmp	.+18     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
     20a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     20e:	83 fd       	sbrc	r24, 3
     210:	05 c0       	rjmp	.+10     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
     212:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
     216:	83 70       	andi	r24, 0x03	; 3
     218:	83 30       	cpi	r24, 0x03	; 3
     21a:	79 f7       	brne	.-34     	; 0x1fa <I2C_M_read+0x14>
     21c:	f8 01       	movw	r30, r16
     21e:	e9 0f       	add	r30, r25
     220:	f1 1d       	adc	r31, r1
     222:	80 91 08 09 	lds	r24, 0x0908	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
     226:	80 83       	st	Z, r24
     228:	9f 5f       	subi	r25, 0xFF	; 255
     22a:	c9 17       	cp	r28, r25
     22c:	19 f0       	breq	.+6      	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     22e:	82 e0       	ldi	r24, 0x02	; 2
     230:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
     234:	9c 17       	cp	r25, r28
     236:	08 f3       	brcs	.-62     	; 0x1fa <I2C_M_read+0x14>
     238:	87 e0       	ldi	r24, 0x07	; 7
     23a:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
     23e:	cf 91       	pop	r28
     240:	1f 91       	pop	r17
     242:	0f 91       	pop	r16
     244:	08 95       	ret

00000246 <AHT10_init>:
     246:	61 ee       	ldi	r22, 0xE1	; 225
     248:	88 e3       	ldi	r24, 0x38	; 56
     24a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <I2C_M_write>
     24e:	2f e5       	ldi	r18, 0x5F	; 95
     250:	8a ee       	ldi	r24, 0xEA	; 234
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	21 50       	subi	r18, 0x01	; 1
     256:	80 40       	sbci	r24, 0x00	; 0
     258:	90 40       	sbci	r25, 0x00	; 0
     25a:	e1 f7       	brne	.-8      	; 0x254 <AHT10_init+0xe>
     25c:	00 c0       	rjmp	.+0      	; 0x25e <AHT10_init+0x18>
     25e:	00 00       	nop
     260:	6a eb       	ldi	r22, 0xBA	; 186
     262:	88 e3       	ldi	r24, 0x38	; 56
     264:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <I2C_M_write>
     268:	8f e1       	ldi	r24, 0x1F	; 31
     26a:	9e e4       	ldi	r25, 0x4E	; 78
     26c:	01 97       	sbiw	r24, 0x01	; 1
     26e:	f1 f7       	brne	.-4      	; 0x26c <AHT10_init+0x26>
     270:	00 c0       	rjmp	.+0      	; 0x272 <AHT10_init+0x2c>
     272:	00 00       	nop
     274:	08 95       	ret

00000276 <autoRPMmode>:
     276:	cb 97       	sbiw	r24, 0x3b	; 59
     278:	bc 01       	movw	r22, r24
     27a:	80 e0       	ldi	r24, 0x00	; 0
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__floatunsisf>
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	40 e0       	ldi	r20, 0x00	; 0
     288:	5f e3       	ldi	r21, 0x3F	; 63
     28a:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <__addsf3>
     28e:	0e 94 b2 09 	call	0x1364	; 0x1364 <__fixunssfsi>
     292:	6e 31       	cpi	r22, 0x1E	; 30
     294:	18 f0       	brcs	.+6      	; 0x29c <autoRPMmode+0x26>
     296:	60 35       	cpi	r22, 0x50	; 80
     298:	18 f4       	brcc	.+6      	; 0x2a0 <autoRPMmode+0x2a>
     29a:	03 c0       	rjmp	.+6      	; 0x2a2 <autoRPMmode+0x2c>
     29c:	6e e1       	ldi	r22, 0x1E	; 30
     29e:	01 c0       	rjmp	.+2      	; 0x2a2 <autoRPMmode+0x2c>
     2a0:	6f e4       	ldi	r22, 0x4F	; 79
     2a2:	86 2f       	mov	r24, r22
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	08 95       	ret

000002a8 <handleFansInAuto>:
     2a8:	80 91 2d 45 	lds	r24, 0x452D	; 0x80452d <fan+0x6>
     2ac:	90 91 2e 45 	lds	r25, 0x452E	; 0x80452e <fan+0x7>
     2b0:	02 97       	sbiw	r24, 0x02	; 2
     2b2:	41 f4       	brne	.+16     	; 0x2c4 <handleFansInAuto+0x1c>
     2b4:	80 91 bb 4b 	lds	r24, 0x4BBB	; 0x804bbb <temperature>
     2b8:	90 91 bc 4b 	lds	r25, 0x4BBC	; 0x804bbc <temperature+0x1>
     2bc:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     2c0:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     2c4:	80 91 33 45 	lds	r24, 0x4533	; 0x804533 <fan+0xc>
     2c8:	90 91 34 45 	lds	r25, 0x4534	; 0x804534 <fan+0xd>
     2cc:	02 97       	sbiw	r24, 0x02	; 2
     2ce:	41 f4       	brne	.+16     	; 0x2e0 <handleFansInAuto+0x38>
     2d0:	80 91 bb 4b 	lds	r24, 0x4BBB	; 0x804bbb <temperature>
     2d4:	90 91 bc 4b 	lds	r25, 0x4BBC	; 0x804bbc <temperature+0x1>
     2d8:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     2dc:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     2e0:	80 91 39 45 	lds	r24, 0x4539	; 0x804539 <fan+0x12>
     2e4:	90 91 3a 45 	lds	r25, 0x453A	; 0x80453a <fan+0x13>
     2e8:	02 97       	sbiw	r24, 0x02	; 2
     2ea:	41 f4       	brne	.+16     	; 0x2fc <handleFansInAuto+0x54>
     2ec:	80 91 bb 4b 	lds	r24, 0x4BBB	; 0x804bbb <temperature>
     2f0:	90 91 bc 4b 	lds	r25, 0x4BBC	; 0x804bbc <temperature+0x1>
     2f4:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     2f8:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     2fc:	80 91 3f 45 	lds	r24, 0x453F	; 0x80453f <fan+0x18>
     300:	90 91 40 45 	lds	r25, 0x4540	; 0x804540 <fan+0x19>
     304:	02 97       	sbiw	r24, 0x02	; 2
     306:	41 f4       	brne	.+16     	; 0x318 <handleFansInAuto+0x70>
     308:	80 91 bb 4b 	lds	r24, 0x4BBB	; 0x804bbb <temperature>
     30c:	90 91 bc 4b 	lds	r25, 0x4BBC	; 0x804bbc <temperature+0x1>
     310:	0e 94 3b 01 	call	0x276	; 0x276 <autoRPMmode>
     314:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     318:	08 95       	ret

0000031a <startFansAfterDiagnose>:
     31a:	80 91 d1 4b 	lds	r24, 0x4BD1	; 0x804bd1 <SavedFan1State>
     31e:	90 91 d2 4b 	lds	r25, 0x4BD2	; 0x804bd2 <SavedFan1State+0x1>
     322:	81 30       	cpi	r24, 0x01	; 1
     324:	91 05       	cpc	r25, r1
     326:	49 f4       	brne	.+18     	; 0x33a <startFansAfterDiagnose+0x20>
     328:	81 e0       	ldi	r24, 0x01	; 1
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	80 93 2d 45 	sts	0x452D, r24	; 0x80452d <fan+0x6>
     330:	90 93 2e 45 	sts	0x452E, r25	; 0x80452e <fan+0x7>
     334:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     338:	13 c0       	rjmp	.+38     	; 0x360 <startFansAfterDiagnose+0x46>
     33a:	82 30       	cpi	r24, 0x02	; 2
     33c:	91 05       	cpc	r25, r1
     33e:	39 f4       	brne	.+14     	; 0x34e <startFansAfterDiagnose+0x34>
     340:	82 e0       	ldi	r24, 0x02	; 2
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	80 93 2d 45 	sts	0x452D, r24	; 0x80452d <fan+0x6>
     348:	90 93 2e 45 	sts	0x452E, r25	; 0x80452e <fan+0x7>
     34c:	09 c0       	rjmp	.+18     	; 0x360 <startFansAfterDiagnose+0x46>
     34e:	89 2b       	or	r24, r25
     350:	39 f4       	brne	.+14     	; 0x360 <startFansAfterDiagnose+0x46>
     352:	e7 e2       	ldi	r30, 0x27	; 39
     354:	f5 e4       	ldi	r31, 0x45	; 69
     356:	16 82       	std	Z+6, r1	; 0x06
     358:	17 82       	std	Z+7, r1	; 0x07
     35a:	82 85       	ldd	r24, Z+10	; 0x0a
     35c:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     360:	80 91 cb 4b 	lds	r24, 0x4BCB	; 0x804bcb <SavedFan2State>
     364:	90 91 cc 4b 	lds	r25, 0x4BCC	; 0x804bcc <SavedFan2State+0x1>
     368:	81 30       	cpi	r24, 0x01	; 1
     36a:	91 05       	cpc	r25, r1
     36c:	49 f4       	brne	.+18     	; 0x380 <startFansAfterDiagnose+0x66>
     36e:	81 e0       	ldi	r24, 0x01	; 1
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	80 93 33 45 	sts	0x4533, r24	; 0x804533 <fan+0xc>
     376:	90 93 34 45 	sts	0x4534, r25	; 0x804534 <fan+0xd>
     37a:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     37e:	13 c0       	rjmp	.+38     	; 0x3a6 <startFansAfterDiagnose+0x8c>
     380:	82 30       	cpi	r24, 0x02	; 2
     382:	91 05       	cpc	r25, r1
     384:	39 f4       	brne	.+14     	; 0x394 <startFansAfterDiagnose+0x7a>
     386:	82 e0       	ldi	r24, 0x02	; 2
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	80 93 33 45 	sts	0x4533, r24	; 0x804533 <fan+0xc>
     38e:	90 93 34 45 	sts	0x4534, r25	; 0x804534 <fan+0xd>
     392:	09 c0       	rjmp	.+18     	; 0x3a6 <startFansAfterDiagnose+0x8c>
     394:	89 2b       	or	r24, r25
     396:	39 f4       	brne	.+14     	; 0x3a6 <startFansAfterDiagnose+0x8c>
     398:	e7 e2       	ldi	r30, 0x27	; 39
     39a:	f5 e4       	ldi	r31, 0x45	; 69
     39c:	14 86       	std	Z+12, r1	; 0x0c
     39e:	15 86       	std	Z+13, r1	; 0x0d
     3a0:	80 89       	ldd	r24, Z+16	; 0x10
     3a2:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     3a6:	80 91 c0 4b 	lds	r24, 0x4BC0	; 0x804bc0 <SavedFan3State>
     3aa:	90 91 c1 4b 	lds	r25, 0x4BC1	; 0x804bc1 <SavedFan3State+0x1>
     3ae:	81 30       	cpi	r24, 0x01	; 1
     3b0:	91 05       	cpc	r25, r1
     3b2:	49 f4       	brne	.+18     	; 0x3c6 <startFansAfterDiagnose+0xac>
     3b4:	81 e0       	ldi	r24, 0x01	; 1
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	80 93 39 45 	sts	0x4539, r24	; 0x804539 <fan+0x12>
     3bc:	90 93 3a 45 	sts	0x453A, r25	; 0x80453a <fan+0x13>
     3c0:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     3c4:	13 c0       	rjmp	.+38     	; 0x3ec <startFansAfterDiagnose+0xd2>
     3c6:	82 30       	cpi	r24, 0x02	; 2
     3c8:	91 05       	cpc	r25, r1
     3ca:	39 f4       	brne	.+14     	; 0x3da <startFansAfterDiagnose+0xc0>
     3cc:	82 e0       	ldi	r24, 0x02	; 2
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	80 93 39 45 	sts	0x4539, r24	; 0x804539 <fan+0x12>
     3d4:	90 93 3a 45 	sts	0x453A, r25	; 0x80453a <fan+0x13>
     3d8:	09 c0       	rjmp	.+18     	; 0x3ec <startFansAfterDiagnose+0xd2>
     3da:	89 2b       	or	r24, r25
     3dc:	39 f4       	brne	.+14     	; 0x3ec <startFansAfterDiagnose+0xd2>
     3de:	e7 e2       	ldi	r30, 0x27	; 39
     3e0:	f5 e4       	ldi	r31, 0x45	; 69
     3e2:	12 8a       	std	Z+18, r1	; 0x12
     3e4:	13 8a       	std	Z+19, r1	; 0x13
     3e6:	86 89       	ldd	r24, Z+22	; 0x16
     3e8:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     3ec:	80 91 53 4b 	lds	r24, 0x4B53	; 0x804b53 <SavedFan4State>
     3f0:	90 91 54 4b 	lds	r25, 0x4B54	; 0x804b54 <SavedFan4State+0x1>
     3f4:	81 30       	cpi	r24, 0x01	; 1
     3f6:	91 05       	cpc	r25, r1
     3f8:	49 f4       	brne	.+18     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     3fa:	81 e0       	ldi	r24, 0x01	; 1
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	80 93 3f 45 	sts	0x453F, r24	; 0x80453f <fan+0x18>
     402:	90 93 40 45 	sts	0x4540, r25	; 0x804540 <fan+0x19>
     406:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     40a:	08 95       	ret
     40c:	82 30       	cpi	r24, 0x02	; 2
     40e:	91 05       	cpc	r25, r1
     410:	39 f4       	brne	.+14     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     412:	82 e0       	ldi	r24, 0x02	; 2
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	80 93 3f 45 	sts	0x453F, r24	; 0x80453f <fan+0x18>
     41a:	90 93 40 45 	sts	0x4540, r25	; 0x804540 <fan+0x19>
     41e:	08 95       	ret
     420:	89 2b       	or	r24, r25
     422:	39 f4       	brne	.+14     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     424:	e7 e2       	ldi	r30, 0x27	; 39
     426:	f5 e4       	ldi	r31, 0x45	; 69
     428:	10 8e       	std	Z+24, r1	; 0x18
     42a:	11 8e       	std	Z+25, r1	; 0x19
     42c:	84 8d       	ldd	r24, Z+28	; 0x1c
     42e:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     432:	08 95       	ret

00000434 <saveFanModes>:
     434:	e7 e2       	ldi	r30, 0x27	; 39
     436:	f5 e4       	ldi	r31, 0x45	; 69
     438:	86 81       	ldd	r24, Z+6	; 0x06
     43a:	97 81       	ldd	r25, Z+7	; 0x07
     43c:	80 93 d1 4b 	sts	0x4BD1, r24	; 0x804bd1 <SavedFan1State>
     440:	90 93 d2 4b 	sts	0x4BD2, r25	; 0x804bd2 <SavedFan1State+0x1>
     444:	84 85       	ldd	r24, Z+12	; 0x0c
     446:	95 85       	ldd	r25, Z+13	; 0x0d
     448:	80 93 cb 4b 	sts	0x4BCB, r24	; 0x804bcb <SavedFan2State>
     44c:	90 93 cc 4b 	sts	0x4BCC, r25	; 0x804bcc <SavedFan2State+0x1>
     450:	82 89       	ldd	r24, Z+18	; 0x12
     452:	93 89       	ldd	r25, Z+19	; 0x13
     454:	80 93 c0 4b 	sts	0x4BC0, r24	; 0x804bc0 <SavedFan3State>
     458:	90 93 c1 4b 	sts	0x4BC1, r25	; 0x804bc1 <SavedFan3State+0x1>
     45c:	80 8d       	ldd	r24, Z+24	; 0x18
     45e:	91 8d       	ldd	r25, Z+25	; 0x19
     460:	80 93 53 4b 	sts	0x4B53, r24	; 0x804b53 <SavedFan4State>
     464:	90 93 54 4b 	sts	0x4B54, r25	; 0x804b54 <SavedFan4State+0x1>
     468:	08 95       	ret

0000046a <AHT10_read>:
     46a:	cf 93       	push	r28
     46c:	df 93       	push	r29
     46e:	cd b7       	in	r28, 0x3d	; 61
     470:	de b7       	in	r29, 0x3e	; 62
     472:	26 97       	sbiw	r28, 0x06	; 6
     474:	cd bf       	out	0x3d, r28	; 61
     476:	de bf       	out	0x3e, r29	; 62
     478:	6c ea       	ldi	r22, 0xAC	; 172
     47a:	88 e3       	ldi	r24, 0x38	; 56
     47c:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <I2C_M_write>
     480:	2f e5       	ldi	r18, 0x5F	; 95
     482:	8a ee       	ldi	r24, 0xEA	; 234
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	21 50       	subi	r18, 0x01	; 1
     488:	80 40       	sbci	r24, 0x00	; 0
     48a:	90 40       	sbci	r25, 0x00	; 0
     48c:	e1 f7       	brne	.-8      	; 0x486 <AHT10_read+0x1c>
     48e:	00 c0       	rjmp	.+0      	; 0x490 <AHT10_read+0x26>
     490:	00 00       	nop
     492:	46 e0       	ldi	r20, 0x06	; 6
     494:	be 01       	movw	r22, r28
     496:	6f 5f       	subi	r22, 0xFF	; 255
     498:	7f 4f       	sbci	r23, 0xFF	; 255
     49a:	88 e3       	ldi	r24, 0x38	; 56
     49c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <I2C_M_read>
     4a0:	6c 81       	ldd	r22, Y+4	; 0x04
     4a2:	6f 70       	andi	r22, 0x0F	; 15
     4a4:	86 2f       	mov	r24, r22
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	a0 e0       	ldi	r26, 0x00	; 0
     4aa:	b0 e0       	ldi	r27, 0x00	; 0
     4ac:	ba 2f       	mov	r27, r26
     4ae:	a9 2f       	mov	r26, r25
     4b0:	98 2f       	mov	r25, r24
     4b2:	88 27       	eor	r24, r24
     4b4:	2d 81       	ldd	r18, Y+5	; 0x05
     4b6:	82 2b       	or	r24, r18
     4b8:	ba 2f       	mov	r27, r26
     4ba:	a9 2f       	mov	r26, r25
     4bc:	98 2f       	mov	r25, r24
     4be:	88 27       	eor	r24, r24
     4c0:	2e 81       	ldd	r18, Y+6	; 0x06
     4c2:	bc 01       	movw	r22, r24
     4c4:	cd 01       	movw	r24, r26
     4c6:	62 2b       	or	r22, r18
     4c8:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__floatunsisf>
     4cc:	20 e0       	ldi	r18, 0x00	; 0
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	48 e4       	ldi	r20, 0x48	; 72
     4d2:	53 e4       	ldi	r21, 0x43	; 67
     4d4:	0e 94 6f 0a 	call	0x14de	; 0x14de <__mulsf3>
     4d8:	20 e0       	ldi	r18, 0x00	; 0
     4da:	30 e0       	ldi	r19, 0x00	; 0
     4dc:	40 e8       	ldi	r20, 0x80	; 128
     4de:	55 e3       	ldi	r21, 0x35	; 53
     4e0:	0e 94 6f 0a 	call	0x14de	; 0x14de <__mulsf3>
     4e4:	0e 94 b2 09 	call	0x1364	; 0x1364 <__fixunssfsi>
     4e8:	8e ec       	ldi	r24, 0xCE	; 206
     4ea:	86 0f       	add	r24, r22
     4ec:	26 96       	adiw	r28, 0x06	; 6
     4ee:	cd bf       	out	0x3d, r28	; 61
     4f0:	de bf       	out	0x3e, r29	; 62
     4f2:	df 91       	pop	r29
     4f4:	cf 91       	pop	r28
     4f6:	08 95       	ret

000004f8 <alarm>:
     4f8:	86 17       	cp	r24, r22
     4fa:	10 f4       	brcc	.+4      	; 0x500 <alarm+0x8>
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	08 95       	ret
     500:	80 e0       	ldi	r24, 0x00	; 0
     502:	08 95       	ret

00000504 <calculate_percentage>:
     504:	cf 92       	push	r12
     506:	df 92       	push	r13
     508:	ef 92       	push	r14
     50a:	ff 92       	push	r15
     50c:	6b 01       	movw	r12, r22
     50e:	7c 01       	movw	r14, r24
     510:	ba 01       	movw	r22, r20
     512:	80 e0       	ldi	r24, 0x00	; 0
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__floatunsisf>
     51a:	a7 01       	movw	r20, r14
     51c:	96 01       	movw	r18, r12
     51e:	0e 94 40 09 	call	0x1280	; 0x1280 <__divsf3>
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	48 ec       	ldi	r20, 0xC8	; 200
     528:	52 e4       	ldi	r21, 0x42	; 66
     52a:	0e 94 6f 0a 	call	0x14de	; 0x14de <__mulsf3>
     52e:	0e 94 b2 09 	call	0x1364	; 0x1364 <__fixunssfsi>
     532:	86 2f       	mov	r24, r22
     534:	ff 90       	pop	r15
     536:	ef 90       	pop	r14
     538:	df 90       	pop	r13
     53a:	cf 90       	pop	r12
     53c:	08 95       	ret

0000053e <printHomeScreen>:
     53e:	8a e4       	ldi	r24, 0x4A	; 74
     540:	9a e4       	ldi	r25, 0x4A	; 74
     542:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     546:	8a e4       	ldi	r24, 0x4A	; 74
     548:	9a e4       	ldi	r25, 0x4A	; 74
     54a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     54e:	8a e4       	ldi	r24, 0x4A	; 74
     550:	9a e4       	ldi	r25, 0x4A	; 74
     552:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     556:	8b e4       	ldi	r24, 0x4B	; 75
     558:	95 e4       	ldi	r25, 0x45	; 69
     55a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     55e:	88 e5       	ldi	r24, 0x58	; 88
     560:	95 e4       	ldi	r25, 0x45	; 69
     562:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     566:	8a e4       	ldi	r24, 0x4A	; 74
     568:	9a e4       	ldi	r25, 0x4A	; 74
     56a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     56e:	8c e6       	ldi	r24, 0x6C	; 108
     570:	95 e4       	ldi	r25, 0x45	; 69
     572:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     576:	08 95       	ret

00000578 <setFanToOff>:
     578:	cf 93       	push	r28
     57a:	df 93       	push	r29
     57c:	c1 e0       	ldi	r28, 0x01	; 1
     57e:	d0 e0       	ldi	r29, 0x00	; 0
     580:	3e c0       	rjmp	.+124    	; 0x5fe <setFanToOff+0x86>
     582:	80 91 50 4b 	lds	r24, 0x4B50	; 0x804b50 <chosenFan>
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	c8 17       	cp	r28, r24
     58a:	d9 07       	cpc	r29, r25
     58c:	b9 f5       	brne	.+110    	; 0x5fc <setFanToOff+0x84>
     58e:	fe 01       	movw	r30, r28
     590:	ee 0f       	add	r30, r30
     592:	ff 1f       	adc	r31, r31
     594:	ec 0f       	add	r30, r28
     596:	fd 1f       	adc	r31, r29
     598:	ee 0f       	add	r30, r30
     59a:	ff 1f       	adc	r31, r31
     59c:	e9 5d       	subi	r30, 0xD9	; 217
     59e:	fa 4b       	sbci	r31, 0xBA	; 186
     5a0:	81 e0       	ldi	r24, 0x01	; 1
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	80 83       	st	Z, r24
     5a6:	91 83       	std	Z+1, r25	; 0x01
     5a8:	ce 01       	movw	r24, r28
     5aa:	01 96       	adiw	r24, 0x01	; 1
     5ac:	82 30       	cpi	r24, 0x02	; 2
     5ae:	91 05       	cpc	r25, r1
     5b0:	89 f0       	breq	.+34     	; 0x5d4 <setFanToOff+0x5c>
     5b2:	1c f4       	brge	.+6      	; 0x5ba <setFanToOff+0x42>
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	39 f0       	breq	.+14     	; 0x5c6 <setFanToOff+0x4e>
     5b8:	21 c0       	rjmp	.+66     	; 0x5fc <setFanToOff+0x84>
     5ba:	83 30       	cpi	r24, 0x03	; 3
     5bc:	91 05       	cpc	r25, r1
     5be:	89 f0       	breq	.+34     	; 0x5e2 <setFanToOff+0x6a>
     5c0:	04 97       	sbiw	r24, 0x04	; 4
     5c2:	b1 f0       	breq	.+44     	; 0x5f0 <setFanToOff+0x78>
     5c4:	1b c0       	rjmp	.+54     	; 0x5fc <setFanToOff+0x84>
     5c6:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     5ca:	87 e9       	ldi	r24, 0x97	; 151
     5cc:	95 e4       	ldi	r25, 0x45	; 69
     5ce:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     5d2:	14 c0       	rjmp	.+40     	; 0x5fc <setFanToOff+0x84>
     5d4:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     5d8:	80 eb       	ldi	r24, 0xB0	; 176
     5da:	95 e4       	ldi	r25, 0x45	; 69
     5dc:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     5e0:	0d c0       	rjmp	.+26     	; 0x5fc <setFanToOff+0x84>
     5e2:	10 92 29 0a 	sts	0x0A29, r1	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     5e6:	89 ec       	ldi	r24, 0xC9	; 201
     5e8:	95 e4       	ldi	r25, 0x45	; 69
     5ea:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     5ee:	06 c0       	rjmp	.+12     	; 0x5fc <setFanToOff+0x84>
     5f0:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     5f4:	82 ee       	ldi	r24, 0xE2	; 226
     5f6:	95 e4       	ldi	r25, 0x45	; 69
     5f8:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     5fc:	21 96       	adiw	r28, 0x01	; 1
     5fe:	c5 30       	cpi	r28, 0x05	; 5
     600:	d1 05       	cpc	r29, r1
     602:	0c f4       	brge	.+2      	; 0x606 <setFanToOff+0x8e>
     604:	be cf       	rjmp	.-132    	; 0x582 <setFanToOff+0xa>
     606:	0e 94 9f 02 	call	0x53e	; 0x53e <printHomeScreen>
     60a:	df 91       	pop	r29
     60c:	cf 91       	pop	r28
     60e:	08 95       	ret

00000610 <setFanToAuto>:
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	15 c0       	rjmp	.+42     	; 0x640 <setFanToAuto+0x30>
     616:	20 91 50 4b 	lds	r18, 0x4B50	; 0x804b50 <chosenFan>
     61a:	30 e0       	ldi	r19, 0x00	; 0
     61c:	82 17       	cp	r24, r18
     61e:	93 07       	cpc	r25, r19
     620:	71 f4       	brne	.+28     	; 0x63e <setFanToAuto+0x2e>
     622:	fc 01       	movw	r30, r24
     624:	ee 0f       	add	r30, r30
     626:	ff 1f       	adc	r31, r31
     628:	e8 0f       	add	r30, r24
     62a:	f9 1f       	adc	r31, r25
     62c:	ee 0f       	add	r30, r30
     62e:	ff 1f       	adc	r31, r31
     630:	e9 5d       	subi	r30, 0xD9	; 217
     632:	fa 4b       	sbci	r31, 0xBA	; 186
     634:	82 e0       	ldi	r24, 0x02	; 2
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	80 83       	st	Z, r24
     63a:	91 83       	std	Z+1, r25	; 0x01
     63c:	04 c0       	rjmp	.+8      	; 0x646 <setFanToAuto+0x36>
     63e:	01 96       	adiw	r24, 0x01	; 1
     640:	85 30       	cpi	r24, 0x05	; 5
     642:	91 05       	cpc	r25, r1
     644:	44 f3       	brlt	.-48     	; 0x616 <setFanToAuto+0x6>
     646:	0e 94 9f 02 	call	0x53e	; 0x53e <printHomeScreen>
     64a:	08 95       	ret

0000064c <setFanToManual>:
     64c:	cf 93       	push	r28
     64e:	df 93       	push	r29
     650:	c1 e0       	ldi	r28, 0x01	; 1
     652:	d0 e0       	ldi	r29, 0x00	; 0
     654:	65 c0       	rjmp	.+202    	; 0x720 <setFanToManual+0xd4>
     656:	80 91 50 4b 	lds	r24, 0x4B50	; 0x804b50 <chosenFan>
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	c8 17       	cp	r28, r24
     65e:	d9 07       	cpc	r29, r25
     660:	09 f0       	breq	.+2      	; 0x664 <setFanToManual+0x18>
     662:	5d c0       	rjmp	.+186    	; 0x71e <setFanToManual+0xd2>
     664:	fe 01       	movw	r30, r28
     666:	ee 0f       	add	r30, r30
     668:	ff 1f       	adc	r31, r31
     66a:	ec 0f       	add	r30, r28
     66c:	fd 1f       	adc	r31, r29
     66e:	ee 0f       	add	r30, r30
     670:	ff 1f       	adc	r31, r31
     672:	e9 5d       	subi	r30, 0xD9	; 217
     674:	fa 4b       	sbci	r31, 0xBA	; 186
     676:	10 82       	st	Z, r1
     678:	11 82       	std	Z+1, r1	; 0x01
     67a:	c2 30       	cpi	r28, 0x02	; 2
     67c:	d1 05       	cpc	r29, r1
     67e:	e9 f0       	breq	.+58     	; 0x6ba <setFanToManual+0x6e>
     680:	24 f4       	brge	.+8      	; 0x68a <setFanToManual+0x3e>
     682:	c1 30       	cpi	r28, 0x01	; 1
     684:	d1 05       	cpc	r29, r1
     686:	41 f0       	breq	.+16     	; 0x698 <setFanToManual+0x4c>
     688:	4a c0       	rjmp	.+148    	; 0x71e <setFanToManual+0xd2>
     68a:	c3 30       	cpi	r28, 0x03	; 3
     68c:	d1 05       	cpc	r29, r1
     68e:	31 f1       	breq	.+76     	; 0x6dc <setFanToManual+0x90>
     690:	c4 30       	cpi	r28, 0x04	; 4
     692:	d1 05       	cpc	r29, r1
     694:	a1 f1       	breq	.+104    	; 0x6fe <setFanToManual+0xb2>
     696:	43 c0       	rjmp	.+134    	; 0x71e <setFanToManual+0xd2>
     698:	80 91 55 4b 	lds	r24, 0x4B55	; 0x804b55 <manual_rpm_value>
     69c:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7e0a28>
     6a0:	80 91 55 4b 	lds	r24, 0x4B55	; 0x804b55 <manual_rpm_value>
     6a4:	90 91 56 4b 	lds	r25, 0x4B56	; 0x804b56 <manual_rpm_value+0x1>
     6a8:	80 93 31 45 	sts	0x4531, r24	; 0x804531 <fan+0xa>
     6ac:	90 93 32 45 	sts	0x4532, r25	; 0x804532 <fan+0xb>
     6b0:	8b ef       	ldi	r24, 0xFB	; 251
     6b2:	95 e4       	ldi	r25, 0x45	; 69
     6b4:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     6b8:	32 c0       	rjmp	.+100    	; 0x71e <setFanToManual+0xd2>
     6ba:	80 91 55 4b 	lds	r24, 0x4B55	; 0x804b55 <manual_rpm_value>
     6be:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
     6c2:	80 91 55 4b 	lds	r24, 0x4B55	; 0x804b55 <manual_rpm_value>
     6c6:	90 91 56 4b 	lds	r25, 0x4B56	; 0x804b56 <manual_rpm_value+0x1>
     6ca:	80 93 37 45 	sts	0x4537, r24	; 0x804537 <fan+0x10>
     6ce:	90 93 38 45 	sts	0x4538, r25	; 0x804538 <fan+0x11>
     6d2:	88 e1       	ldi	r24, 0x18	; 24
     6d4:	96 e4       	ldi	r25, 0x46	; 70
     6d6:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     6da:	21 c0       	rjmp	.+66     	; 0x71e <setFanToManual+0xd2>
     6dc:	80 91 55 4b 	lds	r24, 0x4B55	; 0x804b55 <manual_rpm_value>
     6e0:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7e0a29>
     6e4:	80 91 55 4b 	lds	r24, 0x4B55	; 0x804b55 <manual_rpm_value>
     6e8:	90 91 56 4b 	lds	r25, 0x4B56	; 0x804b56 <manual_rpm_value+0x1>
     6ec:	80 93 3d 45 	sts	0x453D, r24	; 0x80453d <fan+0x16>
     6f0:	90 93 3e 45 	sts	0x453E, r25	; 0x80453e <fan+0x17>
     6f4:	84 e3       	ldi	r24, 0x34	; 52
     6f6:	96 e4       	ldi	r25, 0x46	; 70
     6f8:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     6fc:	10 c0       	rjmp	.+32     	; 0x71e <setFanToManual+0xd2>
     6fe:	80 91 55 4b 	lds	r24, 0x4B55	; 0x804b55 <manual_rpm_value>
     702:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7e0a2b>
     706:	80 91 55 4b 	lds	r24, 0x4B55	; 0x804b55 <manual_rpm_value>
     70a:	90 91 56 4b 	lds	r25, 0x4B56	; 0x804b56 <manual_rpm_value+0x1>
     70e:	80 93 43 45 	sts	0x4543, r24	; 0x804543 <fan+0x1c>
     712:	90 93 44 45 	sts	0x4544, r25	; 0x804544 <fan+0x1d>
     716:	80 e5       	ldi	r24, 0x50	; 80
     718:	96 e4       	ldi	r25, 0x46	; 70
     71a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     71e:	21 96       	adiw	r28, 0x01	; 1
     720:	c5 30       	cpi	r28, 0x05	; 5
     722:	d1 05       	cpc	r29, r1
     724:	0c f4       	brge	.+2      	; 0x728 <setFanToManual+0xdc>
     726:	97 cf       	rjmp	.-210    	; 0x656 <setFanToManual+0xa>
     728:	0e 94 9f 02 	call	0x53e	; 0x53e <printHomeScreen>
     72c:	df 91       	pop	r29
     72e:	cf 91       	pop	r28
     730:	08 95       	ret

00000732 <PrintSelectFanMode>:
     732:	8c e6       	ldi	r24, 0x6C	; 108
     734:	96 e4       	ldi	r25, 0x46	; 70
     736:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     73a:	8a e4       	ldi	r24, 0x4A	; 74
     73c:	9a e4       	ldi	r25, 0x4A	; 74
     73e:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     742:	8e e7       	ldi	r24, 0x7E	; 126
     744:	96 e4       	ldi	r25, 0x46	; 70
     746:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     74a:	08 95       	ret

0000074c <printOverview>:
     74c:	cf 93       	push	r28
     74e:	df 93       	push	r29
     750:	8f e9       	ldi	r24, 0x9F	; 159
     752:	96 e4       	ldi	r25, 0x46	; 70
     754:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     758:	8a e4       	ldi	r24, 0x4A	; 74
     75a:	9a e4       	ldi	r25, 0x4A	; 74
     75c:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     760:	c7 e2       	ldi	r28, 0x27	; 39
     762:	d5 e4       	ldi	r29, 0x45	; 69
     764:	89 85       	ldd	r24, Y+9	; 0x09
     766:	8f 93       	push	r24
     768:	88 85       	ldd	r24, Y+8	; 0x08
     76a:	8f 93       	push	r24
     76c:	8a ea       	ldi	r24, 0xAA	; 170
     76e:	96 e4       	ldi	r25, 0x46	; 70
     770:	9f 93       	push	r25
     772:	8f 93       	push	r24
     774:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
     778:	ee 81       	ldd	r30, Y+6	; 0x06
     77a:	ff 81       	ldd	r31, Y+7	; 0x07
     77c:	ee 0f       	add	r30, r30
     77e:	ff 1f       	adc	r31, r31
     780:	eb 5b       	subi	r30, 0xBB	; 187
     782:	fa 4b       	sbci	r31, 0xBA	; 186
     784:	81 81       	ldd	r24, Z+1	; 0x01
     786:	8f 93       	push	r24
     788:	80 81       	ld	r24, Z
     78a:	8f 93       	push	r24
     78c:	8a eb       	ldi	r24, 0xBA	; 186
     78e:	96 e4       	ldi	r25, 0x46	; 70
     790:	9f 93       	push	r25
     792:	8f 93       	push	r24
     794:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
     798:	8f 85       	ldd	r24, Y+15	; 0x0f
     79a:	8f 93       	push	r24
     79c:	8e 85       	ldd	r24, Y+14	; 0x0e
     79e:	8f 93       	push	r24
     7a0:	8c ec       	ldi	r24, 0xCC	; 204
     7a2:	96 e4       	ldi	r25, 0x46	; 70
     7a4:	9f 93       	push	r25
     7a6:	8f 93       	push	r24
     7a8:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
     7ac:	ec 85       	ldd	r30, Y+12	; 0x0c
     7ae:	fd 85       	ldd	r31, Y+13	; 0x0d
     7b0:	ee 0f       	add	r30, r30
     7b2:	ff 1f       	adc	r31, r31
     7b4:	eb 5b       	subi	r30, 0xBB	; 187
     7b6:	fa 4b       	sbci	r31, 0xBA	; 186
     7b8:	81 81       	ldd	r24, Z+1	; 0x01
     7ba:	8f 93       	push	r24
     7bc:	80 81       	ld	r24, Z
     7be:	8f 93       	push	r24
     7c0:	8c ed       	ldi	r24, 0xDC	; 220
     7c2:	96 e4       	ldi	r25, 0x46	; 70
     7c4:	9f 93       	push	r25
     7c6:	8f 93       	push	r24
     7c8:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
     7cc:	8d 89       	ldd	r24, Y+21	; 0x15
     7ce:	8f 93       	push	r24
     7d0:	8c 89       	ldd	r24, Y+20	; 0x14
     7d2:	8f 93       	push	r24
     7d4:	8e ee       	ldi	r24, 0xEE	; 238
     7d6:	96 e4       	ldi	r25, 0x46	; 70
     7d8:	9f 93       	push	r25
     7da:	8f 93       	push	r24
     7dc:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
     7e0:	ea 89       	ldd	r30, Y+18	; 0x12
     7e2:	fb 89       	ldd	r31, Y+19	; 0x13
     7e4:	ee 0f       	add	r30, r30
     7e6:	ff 1f       	adc	r31, r31
     7e8:	eb 5b       	subi	r30, 0xBB	; 187
     7ea:	fa 4b       	sbci	r31, 0xBA	; 186
     7ec:	81 81       	ldd	r24, Z+1	; 0x01
     7ee:	8f 93       	push	r24
     7f0:	80 81       	ld	r24, Z
     7f2:	8f 93       	push	r24
     7f4:	8e ef       	ldi	r24, 0xFE	; 254
     7f6:	96 e4       	ldi	r25, 0x46	; 70
     7f8:	9f 93       	push	r25
     7fa:	8f 93       	push	r24
     7fc:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
     800:	8b 8d       	ldd	r24, Y+27	; 0x1b
     802:	8f 93       	push	r24
     804:	8a 8d       	ldd	r24, Y+26	; 0x1a
     806:	8f 93       	push	r24
     808:	80 e1       	ldi	r24, 0x10	; 16
     80a:	97 e4       	ldi	r25, 0x47	; 71
     80c:	9f 93       	push	r25
     80e:	8f 93       	push	r24
     810:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
     814:	e8 8d       	ldd	r30, Y+24	; 0x18
     816:	f9 8d       	ldd	r31, Y+25	; 0x19
     818:	ee 0f       	add	r30, r30
     81a:	ff 1f       	adc	r31, r31
     81c:	eb 5b       	subi	r30, 0xBB	; 187
     81e:	fa 4b       	sbci	r31, 0xBA	; 186
     820:	81 81       	ldd	r24, Z+1	; 0x01
     822:	8f 93       	push	r24
     824:	80 81       	ld	r24, Z
     826:	8f 93       	push	r24
     828:	80 e2       	ldi	r24, 0x20	; 32
     82a:	97 e4       	ldi	r25, 0x47	; 71
     82c:	9f 93       	push	r25
     82e:	8f 93       	push	r24
     830:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
     834:	8d b7       	in	r24, 0x3d	; 61
     836:	9e b7       	in	r25, 0x3e	; 62
     838:	80 96       	adiw	r24, 0x20	; 32
     83a:	8d bf       	out	0x3d, r24	; 61
     83c:	9e bf       	out	0x3e, r25	; 62
     83e:	0e 94 35 02 	call	0x46a	; 0x46a <AHT10_read>
     842:	28 2f       	mov	r18, r24
     844:	30 e0       	ldi	r19, 0x00	; 0
     846:	20 93 bb 4b 	sts	0x4BBB, r18	; 0x804bbb <temperature>
     84a:	30 93 bc 4b 	sts	0x4BBC, r19	; 0x804bbc <temperature+0x1>
     84e:	1f 92       	push	r1
     850:	8f 93       	push	r24
     852:	82 e3       	ldi	r24, 0x32	; 50
     854:	97 e4       	ldi	r25, 0x47	; 71
     856:	9f 93       	push	r25
     858:	8f 93       	push	r24
     85a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
     85e:	8a e4       	ldi	r24, 0x4A	; 74
     860:	9a e4       	ldi	r25, 0x4A	; 74
     862:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     866:	8a e4       	ldi	r24, 0x4A	; 74
     868:	9a e4       	ldi	r25, 0x4A	; 74
     86a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     86e:	0e 94 9f 02 	call	0x53e	; 0x53e <printHomeScreen>
     872:	0f 90       	pop	r0
     874:	0f 90       	pop	r0
     876:	0f 90       	pop	r0
     878:	0f 90       	pop	r0
     87a:	df 91       	pop	r29
     87c:	cf 91       	pop	r28
     87e:	08 95       	ret

00000880 <printSelectFan>:
     880:	84 e4       	ldi	r24, 0x44	; 68
     882:	97 e4       	ldi	r25, 0x47	; 71
     884:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     888:	80 e5       	ldi	r24, 0x50	; 80
     88a:	97 e4       	ldi	r25, 0x47	; 71
     88c:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     890:	8b e6       	ldi	r24, 0x6B	; 107
     892:	97 e4       	ldi	r25, 0x47	; 71
     894:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
     898:	08 95       	ret

0000089a <compareCommands>:
     89a:	0f 93       	push	r16
     89c:	1f 93       	push	r17
     89e:	cf 93       	push	r28
     8a0:	8c 01       	movw	r16, r24
     8a2:	c0 e0       	ldi	r28, 0x00	; 0
     8a4:	0c c0       	rjmp	.+24     	; 0x8be <compareCommands+0x24>
     8a6:	84 e6       	ldi	r24, 0x64	; 100
     8a8:	c8 9f       	mul	r28, r24
     8aa:	b0 01       	movw	r22, r0
     8ac:	11 24       	eor	r1, r1
     8ae:	62 5f       	subi	r22, 0xF2	; 242
     8b0:	7f 4b       	sbci	r23, 0xBF	; 191
     8b2:	c8 01       	movw	r24, r16
     8b4:	0e 94 44 0b 	call	0x1688	; 0x1688 <strcmp>
     8b8:	89 2b       	or	r24, r25
     8ba:	29 f0       	breq	.+10     	; 0x8c6 <compareCommands+0x2c>
     8bc:	cf 5f       	subi	r28, 0xFF	; 255
     8be:	cd 30       	cpi	r28, 0x0D	; 13
     8c0:	90 f3       	brcs	.-28     	; 0x8a6 <compareCommands+0xc>
     8c2:	8f ef       	ldi	r24, 0xFF	; 255
     8c4:	01 c0       	rjmp	.+2      	; 0x8c8 <compareCommands+0x2e>
     8c6:	8c 2f       	mov	r24, r28
     8c8:	cf 91       	pop	r28
     8ca:	1f 91       	pop	r17
     8cc:	0f 91       	pop	r16
     8ce:	08 95       	ret

000008d0 <USART3_sendChar>:
     8d0:	90 91 64 08 	lds	r25, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     8d4:	95 ff       	sbrs	r25, 5
     8d6:	fc cf       	rjmp	.-8      	; 0x8d0 <USART3_sendChar>
     8d8:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
     8dc:	08 95       	ret

000008de <USART3_printChar>:
     8de:	0e 94 68 04 	call	0x8d0	; 0x8d0 <USART3_sendChar>
     8e2:	80 e0       	ldi	r24, 0x00	; 0
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	08 95       	ret

000008e8 <USART3_readChar>:
     8e8:	cf 93       	push	r28
     8ea:	80 91 64 08 	lds	r24, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
     8ee:	88 23       	and	r24, r24
     8f0:	e4 f7       	brge	.-8      	; 0x8ea <USART3_readChar+0x2>
     8f2:	c0 91 60 08 	lds	r28, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7e0860>
     8f6:	8c 2f       	mov	r24, r28
     8f8:	0e 94 68 04 	call	0x8d0	; 0x8d0 <USART3_sendChar>
     8fc:	8c 2f       	mov	r24, r28
     8fe:	cf 91       	pop	r28
     900:	08 95       	ret

00000902 <USART3_init>:
     902:	e0 e2       	ldi	r30, 0x20	; 32
     904:	f4 e0       	ldi	r31, 0x04	; 4
     906:	81 e0       	ldi	r24, 0x01	; 1
     908:	81 83       	std	Z+1, r24	; 0x01
     90a:	82 e0       	ldi	r24, 0x02	; 2
     90c:	82 83       	std	Z+2, r24	; 0x02
     90e:	e0 e6       	ldi	r30, 0x60	; 96
     910:	f8 e0       	ldi	r31, 0x08	; 8
     912:	85 81       	ldd	r24, Z+5	; 0x05
     914:	80 68       	ori	r24, 0x80	; 128
     916:	85 83       	std	Z+5, r24	; 0x05
     918:	83 e8       	ldi	r24, 0x83	; 131
     91a:	96 e0       	ldi	r25, 0x06	; 6
     91c:	80 87       	std	Z+8, r24	; 0x08
     91e:	91 87       	std	Z+9, r25	; 0x09
     920:	86 81       	ldd	r24, Z+6	; 0x06
     922:	80 6c       	ori	r24, 0xC0	; 192
     924:	86 83       	std	Z+6, r24	; 0x06
     926:	80 e0       	ldi	r24, 0x00	; 0
     928:	90 e4       	ldi	r25, 0x40	; 64
     92a:	80 93 65 4d 	sts	0x4D65, r24	; 0x804d65 <__iob+0x2>
     92e:	90 93 66 4d 	sts	0x4D66, r25	; 0x804d66 <__iob+0x3>
     932:	08 95       	ret

00000934 <PORT_init>:
     934:	8b e1       	ldi	r24, 0x1B	; 27
     936:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <__TEXT_REGION_LENGTH__+0x7e0461>
     93a:	08 95       	ret

0000093c <TCA0_init>:
     93c:	83 e0       	ldi	r24, 0x03	; 3
     93e:	80 93 e6 05 	sts	0x05E6, r24	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
     942:	e0 e0       	ldi	r30, 0x00	; 0
     944:	fa e0       	ldi	r31, 0x0A	; 10
     946:	93 e3       	ldi	r25, 0x33	; 51
     948:	91 83       	std	Z+1, r25	; 0x01
     94a:	21 e0       	ldi	r18, 0x01	; 1
     94c:	23 83       	std	Z+3, r18	; 0x03
     94e:	91 83       	std	Z+1, r25	; 0x01
     950:	9f e4       	ldi	r25, 0x4F	; 79
     952:	96 a3       	std	Z+38, r25	; 0x26
     954:	10 a6       	std	Z+40, r1	; 0x28
     956:	97 a3       	std	Z+39, r25	; 0x27
     958:	11 a6       	std	Z+41, r1	; 0x29
     95a:	12 a6       	std	Z+42, r1	; 0x2a
     95c:	13 a6       	std	Z+43, r1	; 0x2b
     95e:	80 83       	st	Z, r24
     960:	08 95       	ret

00000962 <TCB0_init>:
     962:	e0 e2       	ldi	r30, 0x20	; 32
     964:	f4 e0       	ldi	r31, 0x04	; 4
     966:	80 81       	ld	r24, Z
     968:	8f 7e       	andi	r24, 0xEF	; 239
     96a:	80 83       	st	Z, r24
     96c:	84 89       	ldd	r24, Z+20	; 0x14
     96e:	88 60       	ori	r24, 0x08	; 8
     970:	84 8b       	std	Z+20, r24	; 0x14
     972:	e0 e0       	ldi	r30, 0x00	; 0
     974:	fb e0       	ldi	r31, 0x0B	; 11
     976:	85 e0       	ldi	r24, 0x05	; 5
     978:	80 83       	st	Z, r24
     97a:	84 e0       	ldi	r24, 0x04	; 4
     97c:	81 83       	std	Z+1, r24	; 0x01
     97e:	81 e0       	ldi	r24, 0x01	; 1
     980:	85 83       	std	Z+5, r24	; 0x05
     982:	91 e4       	ldi	r25, 0x41	; 65
     984:	94 83       	std	Z+4, r25	; 0x04
     986:	e0 e0       	ldi	r30, 0x00	; 0
     988:	f2 e0       	ldi	r31, 0x02	; 2
     98a:	9c e4       	ldi	r25, 0x4C	; 76
     98c:	90 8b       	std	Z+16, r25	; 0x10
     98e:	86 af       	std	Z+62, r24	; 0x3e
     990:	08 95       	ret

00000992 <TCB1_init>:
     992:	e0 e2       	ldi	r30, 0x20	; 32
     994:	f4 e0       	ldi	r31, 0x04	; 4
     996:	80 81       	ld	r24, Z
     998:	8f 7d       	andi	r24, 0xDF	; 223
     99a:	80 83       	st	Z, r24
     99c:	85 89       	ldd	r24, Z+21	; 0x15
     99e:	88 60       	ori	r24, 0x08	; 8
     9a0:	85 8b       	std	Z+21, r24	; 0x15
     9a2:	e0 e1       	ldi	r30, 0x10	; 16
     9a4:	fb e0       	ldi	r31, 0x0B	; 11
     9a6:	85 e0       	ldi	r24, 0x05	; 5
     9a8:	80 83       	st	Z, r24
     9aa:	84 e0       	ldi	r24, 0x04	; 4
     9ac:	81 83       	std	Z+1, r24	; 0x01
     9ae:	81 e0       	ldi	r24, 0x01	; 1
     9b0:	85 83       	std	Z+5, r24	; 0x05
     9b2:	81 e4       	ldi	r24, 0x41	; 65
     9b4:	84 83       	std	Z+4, r24	; 0x04
     9b6:	8d e4       	ldi	r24, 0x4D	; 77
     9b8:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <__TEXT_REGION_LENGTH__+0x7e0211>
     9bc:	82 e0       	ldi	r24, 0x02	; 2
     9be:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__TEXT_REGION_LENGTH__+0x7e0240>
     9c2:	08 95       	ret

000009c4 <status_eeprom>:
     9c4:	80 91 02 10 	lds	r24, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7e1002>
     9c8:	81 fd       	sbrc	r24, 1
     9ca:	fc cf       	rjmp	.-8      	; 0x9c4 <status_eeprom>
     9cc:	08 95       	ret

000009ce <RTC_init>:


void RTC_init(void)
{
	// Enables the source clock for the RTC counter
	RTC.CTRLA = RTC_RTCEN_bm | RTC_PRESCALER_DIV1_gc; // Enable RTC, select presaler
     9ce:	e0 e4       	ldi	r30, 0x40	; 64
     9d0:	f1 e0       	ldi	r31, 0x01	; 1
     9d2:	81 e0       	ldi	r24, 0x01	; 1
     9d4:	80 83       	st	Z, r24
	//RTC.INTCTRL = RTC_OVF_bm;
	RTC.CLKSEL = RTC_CLKSEL_OSC1K_gc; // Select source for the RTC clock
     9d6:	87 83       	std	Z+7, r24	; 0x07
	
	// Enables the PIT (Periodic Interrupt Timer)
	RTC.PITCTRLA = RTC_PITEN_bm | RTC_PERIOD_CYC1024_gc; // Enable PIT and select number of clock cycles between interrupt
     9d8:	99 e4       	ldi	r25, 0x49	; 73
     9da:	90 8b       	std	Z+16, r25	; 0x10
	RTC.PITINTCTRL = RTC_PI_bm;	// Enable interrupt
     9dc:	82 8b       	std	Z+18, r24	; 0x12
     9de:	08 95       	ret

000009e0 <__vector_6>:
}

// RTC interrupt
ISR(RTC_PIT_vect)
{
     9e0:	1f 92       	push	r1
     9e2:	0f 92       	push	r0
     9e4:	0f b6       	in	r0, 0x3f	; 63
     9e6:	0f 92       	push	r0
     9e8:	11 24       	eor	r1, r1
     9ea:	8f 93       	push	r24
     9ec:	9f 93       	push	r25
	counter ++; // Counter represent seconds
     9ee:	80 91 cd 4b 	lds	r24, 0x4BCD	; 0x804bcd <counter>
     9f2:	90 91 ce 4b 	lds	r25, 0x4BCE	; 0x804bce <counter+0x1>
     9f6:	01 96       	adiw	r24, 0x01	; 1
     9f8:	80 93 cd 4b 	sts	0x4BCD, r24	; 0x804bcd <counter>
     9fc:	90 93 ce 4b 	sts	0x4BCE, r25	; 0x804bce <counter+0x1>
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
     a00:	81 e0       	ldi	r24, 0x01	; 1
     a02:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x7e0153>
}
     a06:	9f 91       	pop	r25
     a08:	8f 91       	pop	r24
     a0a:	0f 90       	pop	r0
     a0c:	0f be       	out	0x3f, r0	; 63
     a0e:	0f 90       	pop	r0
     a10:	1f 90       	pop	r1
     a12:	18 95       	reti

00000a14 <__vector_14>:
{
	read_commands();
}

ISR(TCB0_INT_vect)// starting interrupt for reading pwm from fan1
{
     a14:	1f 92       	push	r1
     a16:	0f 92       	push	r0
     a18:	0f b6       	in	r0, 0x3f	; 63
     a1a:	0f 92       	push	r0
     a1c:	11 24       	eor	r1, r1
     a1e:	0b b6       	in	r0, 0x3b	; 59
     a20:	0f 92       	push	r0
     a22:	2f 93       	push	r18
     a24:	3f 93       	push	r19
     a26:	8f 93       	push	r24
     a28:	af 93       	push	r26
     a2a:	bf 93       	push	r27
     a2c:	ef 93       	push	r30
     a2e:	ff 93       	push	r31
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     a30:	a0 e0       	ldi	r26, 0x00	; 0
     a32:	bb e0       	ldi	r27, 0x0B	; 11
     a34:	81 e0       	ldi	r24, 0x01	; 1
     a36:	16 96       	adiw	r26, 0x06	; 6
     a38:	8c 93       	st	X, r24
     a3a:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings1[pulseWidthIndex1] = TCB0.CCMP;
     a3c:	80 91 4c 4b 	lds	r24, 0x4B4C	; 0x804b4c <pulseWidthIndex1>
     a40:	e8 2f       	mov	r30, r24
     a42:	f0 e0       	ldi	r31, 0x00	; 0
     a44:	1c 96       	adiw	r26, 0x0c	; 12
     a46:	2d 91       	ld	r18, X+
     a48:	3c 91       	ld	r19, X
     a4a:	1d 97       	sbiw	r26, 0x0d	; 13
     a4c:	ee 0f       	add	r30, r30
     a4e:	ff 1f       	adc	r31, r31
     a50:	e5 56       	subi	r30, 0x65	; 101
     a52:	f3 4b       	sbci	r31, 0xB3	; 179
     a54:	20 83       	st	Z, r18
     a56:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex1++;
     a58:	8f 5f       	subi	r24, 0xFF	; 255
     a5a:	80 93 4c 4b 	sts	0x4B4C, r24	; 0x804b4c <pulseWidthIndex1>
	if (pulseWidthIndex1 >= 100) {
     a5e:	84 36       	cpi	r24, 0x64	; 100
     a60:	10 f0       	brcs	.+4      	; 0xa66 <__vector_14+0x52>
		pulseWidthIndex1 = 0; // Reset index when all readings are stored
     a62:	10 92 4c 4b 	sts	0x4B4C, r1	; 0x804b4c <pulseWidthIndex1>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     a66:	ff 91       	pop	r31
     a68:	ef 91       	pop	r30
     a6a:	bf 91       	pop	r27
     a6c:	af 91       	pop	r26
     a6e:	8f 91       	pop	r24
     a70:	3f 91       	pop	r19
     a72:	2f 91       	pop	r18
     a74:	0f 90       	pop	r0
     a76:	0b be       	out	0x3b, r0	; 59
     a78:	0f 90       	pop	r0
     a7a:	0f be       	out	0x3f, r0	; 63
     a7c:	0f 90       	pop	r0
     a7e:	1f 90       	pop	r1
     a80:	18 95       	reti

00000a82 <__vector_15>:


ISR(TCB1_INT_vect)// starting interrupt for reading pwm from fan1
{
     a82:	1f 92       	push	r1
     a84:	0f 92       	push	r0
     a86:	0f b6       	in	r0, 0x3f	; 63
     a88:	0f 92       	push	r0
     a8a:	11 24       	eor	r1, r1
     a8c:	0b b6       	in	r0, 0x3b	; 59
     a8e:	0f 92       	push	r0
     a90:	2f 93       	push	r18
     a92:	3f 93       	push	r19
     a94:	8f 93       	push	r24
     a96:	af 93       	push	r26
     a98:	bf 93       	push	r27
     a9a:	ef 93       	push	r30
     a9c:	ff 93       	push	r31
	TCB1.INTFLAGS = TCB_CAPT_bm; // Clear the interrupt flag
     a9e:	a0 e1       	ldi	r26, 0x10	; 16
     aa0:	bb e0       	ldi	r27, 0x0B	; 11
     aa2:	81 e0       	ldi	r24, 0x01	; 1
     aa4:	16 96       	adiw	r26, 0x06	; 6
     aa6:	8c 93       	st	X, r24
     aa8:	16 97       	sbiw	r26, 0x06	; 6
	pulseWidthReadings2[pulseWidthIndex2] = TCB1.CCMP;
     aaa:	80 91 4b 4b 	lds	r24, 0x4B4B	; 0x804b4b <pulseWidthIndex2>
     aae:	e8 2f       	mov	r30, r24
     ab0:	f0 e0       	ldi	r31, 0x00	; 0
     ab2:	1c 96       	adiw	r26, 0x0c	; 12
     ab4:	2d 91       	ld	r18, X+
     ab6:	3c 91       	ld	r19, X
     ab8:	1d 97       	sbiw	r26, 0x0d	; 13
     aba:	ee 0f       	add	r30, r30
     abc:	ff 1f       	adc	r31, r31
     abe:	ed 52       	subi	r30, 0x2D	; 45
     ac0:	f4 4b       	sbci	r31, 0xB4	; 180
     ac2:	20 83       	st	Z, r18
     ac4:	31 83       	std	Z+1, r19	; 0x01
	pulseWidthIndex2++;
     ac6:	8f 5f       	subi	r24, 0xFF	; 255
     ac8:	80 93 4b 4b 	sts	0x4B4B, r24	; 0x804b4b <pulseWidthIndex2>
	if (pulseWidthIndex2 >= 100) {
     acc:	84 36       	cpi	r24, 0x64	; 100
     ace:	10 f0       	brcs	.+4      	; 0xad4 <__vector_15+0x52>
		pulseWidthIndex2 = 0; // Reset index when all readings are stored
     ad0:	10 92 4b 4b 	sts	0x4B4B, r1	; 0x804b4b <pulseWidthIndex2>
	
	// DO SOMETHING, maybe read from TCB0.CCMP????
	//TCB0.CCMP // holds the compare, capture, and top value
	//readPulseWidth = TCB0.CCMP;
	
}
     ad4:	ff 91       	pop	r31
     ad6:	ef 91       	pop	r30
     ad8:	bf 91       	pop	r27
     ada:	af 91       	pop	r26
     adc:	8f 91       	pop	r24
     ade:	3f 91       	pop	r19
     ae0:	2f 91       	pop	r18
     ae2:	0f 90       	pop	r0
     ae4:	0b be       	out	0x3b, r0	; 59
     ae6:	0f 90       	pop	r0
     ae8:	0f be       	out	0x3f, r0	; 63
     aea:	0f 90       	pop	r0
     aec:	1f 90       	pop	r1
     aee:	18 95       	reti

00000af0 <average>:


// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
     af0:	0f 93       	push	r16
     af2:	1f 93       	push	r17
     af4:	9c 01       	movw	r18, r24
     af6:	06 2f       	mov	r16, r22
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     af8:	90 e0       	ldi	r25, 0x00	; 0
}


// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
     afa:	40 e0       	ldi	r20, 0x00	; 0
     afc:	50 e0       	ldi	r21, 0x00	; 0
     afe:	ba 01       	movw	r22, r20
	for (uint8_t i = 0; i < size; i++) {
     b00:	0e c0       	rjmp	.+28     	; 0xb1e <average+0x2e>
		sum += array[i];
     b02:	e9 2f       	mov	r30, r25
     b04:	f0 e0       	ldi	r31, 0x00	; 0
     b06:	ee 0f       	add	r30, r30
     b08:	ff 1f       	adc	r31, r31
     b0a:	e2 0f       	add	r30, r18
     b0c:	f3 1f       	adc	r31, r19
     b0e:	01 90       	ld	r0, Z+
     b10:	f0 81       	ld	r31, Z
     b12:	e0 2d       	mov	r30, r0
     b14:	4e 0f       	add	r20, r30
     b16:	5f 1f       	adc	r21, r31
     b18:	61 1d       	adc	r22, r1
     b1a:	71 1d       	adc	r23, r1


// Function to calculate the average of an array of uint16_t values
uint16_t average(uint16_t* array, uint8_t size) {
	uint32_t sum = 0;
	for (uint8_t i = 0; i < size; i++) {
     b1c:	9f 5f       	subi	r25, 0xFF	; 255
     b1e:	90 17       	cp	r25, r16
     b20:	80 f3       	brcs	.-32     	; 0xb02 <average+0x12>
		sum += array[i];
	}
	return (uint16_t)(sum / size);
     b22:	10 e0       	ldi	r17, 0x00	; 0
     b24:	20 e0       	ldi	r18, 0x00	; 0
     b26:	30 e0       	ldi	r19, 0x00	; 0
     b28:	cb 01       	movw	r24, r22
     b2a:	ba 01       	movw	r22, r20
     b2c:	a9 01       	movw	r20, r18
     b2e:	98 01       	movw	r18, r16
     b30:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <__udivmodsi4>
}
     b34:	c9 01       	movw	r24, r18
     b36:	1f 91       	pop	r17
     b38:	0f 91       	pop	r16
     b3a:	08 95       	ret

00000b3c <pwm_to_rpm1>:


uint16_t pwm_to_rpm1()
{
	uint16_t pulseWidthAverage1 = average(pulseWidthReadings1, 100);
     b3c:	64 e6       	ldi	r22, 0x64	; 100
     b3e:	8b e9       	ldi	r24, 0x9B	; 155
     b40:	9c e4       	ldi	r25, 0x4C	; 76
     b42:	0e 94 78 05 	call	0xaf0	; 0xaf0 <average>
	uint32_t rpm1 = ((F_CPU*60)/(4*pulseWidthAverage1*2));
     b46:	88 0f       	add	r24, r24
     b48:	99 1f       	adc	r25, r25
     b4a:	88 0f       	add	r24, r24
     b4c:	99 1f       	adc	r25, r25
     b4e:	88 0f       	add	r24, r24
     b50:	99 1f       	adc	r25, r25
     b52:	9c 01       	movw	r18, r24
     b54:	40 e0       	ldi	r20, 0x00	; 0
     b56:	50 e0       	ldi	r21, 0x00	; 0
     b58:	60 e0       	ldi	r22, 0x00	; 0
     b5a:	7c e1       	ldi	r23, 0x1C	; 28
     b5c:	8e e4       	ldi	r24, 0x4E	; 78
     b5e:	9e e0       	ldi	r25, 0x0E	; 14
     b60:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__divmodsi4>
	return (uint16_t)rpm1;
	
}
     b64:	c9 01       	movw	r24, r18
     b66:	08 95       	ret

00000b68 <pwm_to_rpm2>:


uint16_t pwm_to_rpm2()
{
	uint16_t pulseWidthAverage2 = average(pulseWidthReadings2, 100);
     b68:	64 e6       	ldi	r22, 0x64	; 100
     b6a:	83 ed       	ldi	r24, 0xD3	; 211
     b6c:	9b e4       	ldi	r25, 0x4B	; 75
     b6e:	0e 94 78 05 	call	0xaf0	; 0xaf0 <average>
	uint32_t rpm2 = ((F_CPU*60)/(4*pulseWidthAverage2*2));
     b72:	88 0f       	add	r24, r24
     b74:	99 1f       	adc	r25, r25
     b76:	88 0f       	add	r24, r24
     b78:	99 1f       	adc	r25, r25
     b7a:	88 0f       	add	r24, r24
     b7c:	99 1f       	adc	r25, r25
     b7e:	9c 01       	movw	r18, r24
     b80:	40 e0       	ldi	r20, 0x00	; 0
     b82:	50 e0       	ldi	r21, 0x00	; 0
     b84:	60 e0       	ldi	r22, 0x00	; 0
     b86:	7c e1       	ldi	r23, 0x1C	; 28
     b88:	8e e4       	ldi	r24, 0x4E	; 78
     b8a:	9e e0       	ldi	r25, 0x0E	; 14
     b8c:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__divmodsi4>
	return (uint16_t)rpm2;
	
}
     b90:	c9 01       	movw	r24, r18
     b92:	08 95       	ret

00000b94 <average_values_for_tach>:
uint8_t alarm(uint8_t percentage, uint8_t threshold);
uint8_t calculate_percentage(float old_value, uint16_t current_value);

// Calculating average RPM at max fan speed
FanSpeeds average_values_for_tach()
{
     b94:	4f 92       	push	r4
     b96:	5f 92       	push	r5
     b98:	6f 92       	push	r6
     b9a:	7f 92       	push	r7
     b9c:	8f 92       	push	r8
     b9e:	9f 92       	push	r9
     ba0:	af 92       	push	r10
     ba2:	bf 92       	push	r11
     ba4:	cf 92       	push	r12
     ba6:	df 92       	push	r13
     ba8:	ef 92       	push	r14
     baa:	ff 92       	push	r15
     bac:	0f 93       	push	r16
     bae:	1f 93       	push	r17
     bb0:	cf 93       	push	r28
     bb2:	df 93       	push	r29
	// SETT DETTE I IF MED FLAGG???
	
	// Set value to all fans
	TCA0.SPLIT.LCMP0 = DUTY_CYCLE_MAX_VALUE;
     bb4:	e0 e0       	ldi	r30, 0x00	; 0
     bb6:	fa e0       	ldi	r31, 0x0A	; 10
     bb8:	8f e4       	ldi	r24, 0x4F	; 79
     bba:	80 a7       	std	Z+40, r24	; 0x28
	TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MAX_VALUE;
     bbc:	82 a7       	std	Z+42, r24	; 0x2a
	TCA0.SPLIT.HCMP0 = DUTY_CYCLE_MAX_VALUE;
     bbe:	81 a7       	std	Z+41, r24	; 0x29
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
     bc0:	83 a7       	std	Z+43, r24	; 0x2b
	
	printf("Diagnose startet! \r\n");
     bc2:	86 ea       	ldi	r24, 0xA6	; 166
     bc4:	97 e4       	ldi	r25, 0x47	; 71
     bc6:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
	uint32_t sum_RPM_fan2 = 0;
	uint16_t average_read_value_fan1;
	uint16_t average_read_value_fan2;
	
	uint16_t num_of_readings = 0;
	uint16_t compare_counter_time = counter; // reset counter for compare
     bca:	20 91 cd 4b 	lds	r18, 0x4BCD	; 0x804bcd <counter>
     bce:	30 91 ce 4b 	lds	r19, 0x4BCE	; 0x804bce <counter+0x1>
	
	while (counter - compare_counter_time <= 2)
     bd2:	80 91 cd 4b 	lds	r24, 0x4BCD	; 0x804bcd <counter>
     bd6:	90 91 ce 4b 	lds	r25, 0x4BCE	; 0x804bce <counter+0x1>
     bda:	82 1b       	sub	r24, r18
     bdc:	93 0b       	sbc	r25, r19
     bde:	03 97       	sbiw	r24, 0x03	; 3
     be0:	c0 f3       	brcs	.-16     	; 0xbd2 <average_values_for_tach+0x3e>
	{
		;
	}
	compare_counter_time = counter;
     be2:	00 91 cd 4b 	lds	r16, 0x4BCD	; 0x804bcd <counter>
     be6:	10 91 ce 4b 	lds	r17, 0x4BCE	; 0x804bce <counter+0x1>
	uint32_t sum_RPM_fan1 = 0;
	uint32_t sum_RPM_fan2 = 0;
	uint16_t average_read_value_fan1;
	uint16_t average_read_value_fan2;
	
	uint16_t num_of_readings = 0;
     bea:	c0 e0       	ldi	r28, 0x00	; 0
     bec:	d0 e0       	ldi	r29, 0x00	; 0
	
	printf("Diagnose startet! \r\n");
	
	// For average read values for two fans
	uint32_t sum_RPM_fan1 = 0;
	uint32_t sum_RPM_fan2 = 0;
     bee:	81 2c       	mov	r8, r1
     bf0:	91 2c       	mov	r9, r1
     bf2:	54 01       	movw	r10, r8
	TCA0.SPLIT.HCMP1 = DUTY_CYCLE_MAX_VALUE;
	
	printf("Diagnose startet! \r\n");
	
	// For average read values for two fans
	uint32_t sum_RPM_fan1 = 0;
     bf4:	c1 2c       	mov	r12, r1
     bf6:	d1 2c       	mov	r13, r1
     bf8:	76 01       	movw	r14, r12
	{
		;
	}
	compare_counter_time = counter;
	
	while (counter - compare_counter_time <= 10)
     bfa:	0d c0       	rjmp	.+26     	; 0xc16 <average_values_for_tach+0x82>
	{
		sum_RPM_fan1 += pwm_to_rpm1();												
     bfc:	0e 94 9e 05 	call	0xb3c	; 0xb3c <pwm_to_rpm1>
     c00:	c8 0e       	add	r12, r24
     c02:	d9 1e       	adc	r13, r25
     c04:	e1 1c       	adc	r14, r1
     c06:	f1 1c       	adc	r15, r1
		sum_RPM_fan2 += pwm_to_rpm2();
     c08:	0e 94 b4 05 	call	0xb68	; 0xb68 <pwm_to_rpm2>
     c0c:	88 0e       	add	r8, r24
     c0e:	99 1e       	adc	r9, r25
     c10:	a1 1c       	adc	r10, r1
     c12:	b1 1c       	adc	r11, r1
		
		num_of_readings ++;
     c14:	21 96       	adiw	r28, 0x01	; 1
	{
		;
	}
	compare_counter_time = counter;
	
	while (counter - compare_counter_time <= 10)
     c16:	80 91 cd 4b 	lds	r24, 0x4BCD	; 0x804bcd <counter>
     c1a:	90 91 ce 4b 	lds	r25, 0x4BCE	; 0x804bce <counter+0x1>
     c1e:	80 1b       	sub	r24, r16
     c20:	91 0b       	sbc	r25, r17
     c22:	0b 97       	sbiw	r24, 0x0b	; 11
     c24:	58 f3       	brcs	.-42     	; 0xbfc <average_values_for_tach+0x68>
		sum_RPM_fan2 += pwm_to_rpm2();
		
		num_of_readings ++;
	}
	
	average_read_value_fan1 = sum_RPM_fan1 / num_of_readings;
     c26:	2e 01       	movw	r4, r28
     c28:	61 2c       	mov	r6, r1
     c2a:	71 2c       	mov	r7, r1
     c2c:	c7 01       	movw	r24, r14
     c2e:	b6 01       	movw	r22, r12
     c30:	a3 01       	movw	r20, r6
     c32:	92 01       	movw	r18, r4
     c34:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <__udivmodsi4>
     c38:	69 01       	movw	r12, r18
     c3a:	7a 01       	movw	r14, r20
	average_read_value_fan2 = sum_RPM_fan2 / num_of_readings;
     c3c:	c5 01       	movw	r24, r10
     c3e:	b4 01       	movw	r22, r8
     c40:	a3 01       	movw	r20, r6
     c42:	92 01       	movw	r18, r4
     c44:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <__udivmodsi4>
     c48:	49 01       	movw	r8, r18
     c4a:	5a 01       	movw	r10, r20
	
	printf("Number of readings: %d\r\n", num_of_readings);
     c4c:	df 93       	push	r29
     c4e:	cf 93       	push	r28
     c50:	8a eb       	ldi	r24, 0xBA	; 186
     c52:	97 e4       	ldi	r25, 0x47	; 71
     c54:	9f 93       	push	r25
     c56:	8f 93       	push	r24
     c58:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
	
	// To return multiple values from the function
	FanSpeeds average_read_values;
	average_read_values.fan1 = average_read_value_fan1;
     c5c:	b6 01       	movw	r22, r12
	average_read_values.fan2 = average_read_value_fan2;
     c5e:	c4 01       	movw	r24, r8
	
	// FJERNES, BARE FOR TESTING
	TCA0.SPLIT.LCMP1 = DUTY_CYCLE_MIN_VALUE;
     c60:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7e0a2a>
	
	return average_read_values;
     c64:	0f 90       	pop	r0
     c66:	0f 90       	pop	r0
     c68:	0f 90       	pop	r0
     c6a:	0f 90       	pop	r0
}
     c6c:	df 91       	pop	r29
     c6e:	cf 91       	pop	r28
     c70:	1f 91       	pop	r17
     c72:	0f 91       	pop	r16
     c74:	ff 90       	pop	r15
     c76:	ef 90       	pop	r14
     c78:	df 90       	pop	r13
     c7a:	cf 90       	pop	r12
     c7c:	bf 90       	pop	r11
     c7e:	af 90       	pop	r10
     c80:	9f 90       	pop	r9
     c82:	8f 90       	pop	r8
     c84:	7f 90       	pop	r7
     c86:	6f 90       	pop	r6
     c88:	5f 90       	pop	r5
     c8a:	4f 90       	pop	r4
     c8c:	08 95       	ret

00000c8e <predict_error>:

// Predicting failures with fans
void predict_error()
{	
     c8e:	cf 92       	push	r12
     c90:	df 92       	push	r13
     c92:	ef 92       	push	r14
     c94:	ff 92       	push	r15
     c96:	0f 93       	push	r16
     c98:	1f 93       	push	r17
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
	// Local struct for current RPM speeds fan1 and fan2
	FanSpeeds current_RPM_values;
	// Call function to get the average fan speeds and save in local variables
	current_RPM_values = average_values_for_tach();
     c9e:	0e 94 ca 05 	call	0xb94	; 0xb94 <average_values_for_tach>
     ca2:	c6 2e       	mov	r12, r22
     ca4:	d7 2e       	mov	r13, r23
     ca6:	08 2f       	mov	r16, r24
     ca8:	19 2f       	mov	r17, r25
	uint16_t current_RPM_value_fan1 = current_RPM_values.fan1;
	uint16_t current_RPM_value_fan2 = current_RPM_values.fan2;
	
	printf("Gjennomsnitt fan 1: %d\r\n", current_RPM_value_fan1);
     caa:	7f 93       	push	r23
     cac:	6f 93       	push	r22
     cae:	83 ed       	ldi	r24, 0xD3	; 211
     cb0:	97 e4       	ldi	r25, 0x47	; 71
     cb2:	9f 93       	push	r25
     cb4:	8f 93       	push	r24
     cb6:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
	printf("Gjennomsnitt fan 2: %d\r\n", current_RPM_value_fan2);
     cba:	1f 93       	push	r17
     cbc:	0f 93       	push	r16
     cbe:	8c ee       	ldi	r24, 0xEC	; 236
     cc0:	97 e4       	ldi	r25, 0x47	; 71
     cc2:	9f 93       	push	r25
     cc4:	8f 93       	push	r24
     cc6:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
	printf("\r\n");
     cca:	8a e4       	ldi	r24, 0x4A	; 74
     ccc:	9a e4       	ldi	r25, 0x4A	; 74
     cce:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
	printf("\r\n");
     cd2:	8a e4       	ldi	r24, 0x4A	; 74
     cd4:	9a e4       	ldi	r25, 0x4A	; 74
     cd6:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
	
	// EEPROM values
	uint16_t  old_value_fan1 = read_value_EE_fan1;
     cda:	c0 91 c5 4b 	lds	r28, 0x4BC5	; 0x804bc5 <read_value_EE_fan1>
     cde:	d0 91 c6 4b 	lds	r29, 0x4BC6	; 0x804bc6 <read_value_EE_fan1+0x1>
	uint16_t  old_value_fan2 = read_value_EE_fan2;
     ce2:	e0 90 be 4b 	lds	r14, 0x4BBE	; 0x804bbe <read_value_EE_fan2>
     ce6:	f0 90 bf 4b 	lds	r15, 0x4BBF	; 0x804bbf <read_value_EE_fan2+0x1>
	
	// More variables for instant prediction, it will be many with upscaling
	
	//TESTING
	printf("old fan 2: %d\r\n", old_value_fan1);
     cea:	df 93       	push	r29
     cec:	cf 93       	push	r28
     cee:	85 e0       	ldi	r24, 0x05	; 5
     cf0:	98 e4       	ldi	r25, 0x48	; 72
     cf2:	9f 93       	push	r25
     cf4:	8f 93       	push	r24
     cf6:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
	
	// Percentage for prediction of error
	uint8_t percentage_fan1_eeprom = calculate_percentage(old_value_fan1, current_RPM_value_fan1);
     cfa:	be 01       	movw	r22, r28
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__floatunsisf>
     d04:	4c 2d       	mov	r20, r12
     d06:	5d 2d       	mov	r21, r13
     d08:	0e 94 82 02 	call	0x504	; 0x504 <calculate_percentage>
     d0c:	d8 2f       	mov	r29, r24
	uint8_t percentage_fan2_eeprom = calculate_percentage(old_value_fan2, current_RPM_value_fan2);
     d0e:	b7 01       	movw	r22, r14
     d10:	80 e0       	ldi	r24, 0x00	; 0
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__floatunsisf>
     d18:	40 2f       	mov	r20, r16
     d1a:	51 2f       	mov	r21, r17
     d1c:	0e 94 82 02 	call	0x504	; 0x504 <calculate_percentage>
     d20:	c8 2f       	mov	r28, r24
	
	uint8_t percentage_fan1_previous = calculate_percentage(previous_RPM_fan1, current_RPM_value_fan1);
	uint8_t percentage_fan2_previous = calculate_percentage(previous_RPM_fan2, current_RPM_value_fan2);
	
	// For testing
	printf("PROSENT fan 1: %d\r\n", percentage_fan1_eeprom);
     d22:	1f 92       	push	r1
     d24:	df 93       	push	r29
     d26:	85 e1       	ldi	r24, 0x15	; 21
     d28:	98 e4       	ldi	r25, 0x48	; 72
     d2a:	9f 93       	push	r25
     d2c:	8f 93       	push	r24
     d2e:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
	printf("PROSENT fan 2: %d\r\n", percentage_fan2_eeprom);
     d32:	1f 92       	push	r1
     d34:	cf 93       	push	r28
     d36:	89 e2       	ldi	r24, 0x29	; 41
     d38:	98 e4       	ldi	r25, 0x48	; 72
     d3a:	9f 93       	push	r25
     d3c:	8f 93       	push	r24
     d3e:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
	
	// Send a threshold value can work
	// Under treshold percentage set of a alarm. originally set to 90% for both alarm
	uint8_t fan1_alarm_long_term =  alarm(percentage_fan1_eeprom, threshold_percentage);
     d42:	f0 90 22 45 	lds	r15, 0x4522	; 0x804522 <threshold_percentage>
     d46:	6f 2d       	mov	r22, r15
     d48:	8d 2f       	mov	r24, r29
     d4a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <alarm>
     d4e:	e8 2e       	mov	r14, r24
	uint8_t fan2_alarm_long_term = alarm(percentage_fan2_eeprom, threshold_percentage);
     d50:	6f 2d       	mov	r22, r15
     d52:	8c 2f       	mov	r24, r28
     d54:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <alarm>
     d58:	f8 2e       	mov	r15, r24
	
	uint8_t fan1_alarm_short_term = alarm(percentage_fan1_eeprom, 90);
     d5a:	6a e5       	ldi	r22, 0x5A	; 90
     d5c:	8d 2f       	mov	r24, r29
     d5e:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <alarm>
     d62:	d8 2f       	mov	r29, r24
	uint8_t fan2_alarm_short_term = alarm(percentage_fan2_eeprom, 90);
     d64:	6a e5       	ldi	r22, 0x5A	; 90
     d66:	8c 2f       	mov	r24, r28
     d68:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <alarm>
     d6c:	c8 2f       	mov	r28, r24
	
	// For testing
	printf("STATUS fan 1: %d\r\n", fan1_alarm_long_term);
     d6e:	1f 92       	push	r1
     d70:	ef 92       	push	r14
     d72:	8d e3       	ldi	r24, 0x3D	; 61
     d74:	98 e4       	ldi	r25, 0x48	; 72
     d76:	9f 93       	push	r25
     d78:	8f 93       	push	r24
     d7a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
	printf("STATUS fan 2: %d\r\n", fan2_alarm_long_term);
     d7e:	1f 92       	push	r1
     d80:	ff 92       	push	r15
     d82:	80 e5       	ldi	r24, 0x50	; 80
     d84:	98 e4       	ldi	r25, 0x48	; 72
     d86:	9f 93       	push	r25
     d88:	8f 93       	push	r24
     d8a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
	
	if (fan1_alarm_long_term == 1)
     d8e:	8d b7       	in	r24, 0x3d	; 61
     d90:	9e b7       	in	r25, 0x3e	; 62
     d92:	4c 96       	adiw	r24, 0x1c	; 28
     d94:	8d bf       	out	0x3d, r24	; 61
     d96:	9e bf       	out	0x3e, r25	; 62
     d98:	91 e0       	ldi	r25, 0x01	; 1
     d9a:	e9 12       	cpse	r14, r25
     d9c:	04 c0       	rjmp	.+8      	; 0xda6 <predict_error+0x118>
	{
		// What alarm do we want?
		printf("ALARM fan 1! Type: wear and tear \r\n");
     d9e:	83 e6       	ldi	r24, 0x63	; 99
     da0:	98 e4       	ldi	r25, 0x48	; 72
     da2:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		
	}
	if (fan2_alarm_long_term == 1)
     da6:	81 e0       	ldi	r24, 0x01	; 1
     da8:	f8 12       	cpse	r15, r24
     daa:	04 c0       	rjmp	.+8      	; 0xdb4 <predict_error+0x126>
	{
		//what alarm do we want?
		printf("ALARM fan 2! Type: wear and tear \r\n");
     dac:	86 e8       	ldi	r24, 0x86	; 134
     dae:	98 e4       	ldi	r25, 0x48	; 72
     db0:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
	}
	if (fan1_alarm_short_term == 1)
     db4:	d1 30       	cpi	r29, 0x01	; 1
     db6:	21 f4       	brne	.+8      	; 0xdc0 <predict_error+0x132>
	{
		//what alarm do we want?
		printf("ALARM fan 1! Type: momentarily\r\n");
     db8:	89 ea       	ldi	r24, 0xA9	; 169
     dba:	98 e4       	ldi	r25, 0x48	; 72
     dbc:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
	}
	if (fan2_alarm_short_term == 1)
     dc0:	c1 30       	cpi	r28, 0x01	; 1
     dc2:	21 f4       	brne	.+8      	; 0xdcc <predict_error+0x13e>
	{
		//what alarm do we want?
		printf("ALARM fan 1! Type: momentarily\r\n");
     dc4:	89 ea       	ldi	r24, 0xA9	; 169
     dc6:	98 e4       	ldi	r25, 0x48	; 72
     dc8:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
	}
	
	// Updates the short term value to predict instant failure
	previous_RPM_fan1 = current_RPM_value_fan1;
     dcc:	c0 92 25 45 	sts	0x4525, r12	; 0x804525 <previous_RPM_fan1>
     dd0:	d0 92 26 45 	sts	0x4526, r13	; 0x804526 <previous_RPM_fan1+0x1>
	previous_RPM_fan2 = current_RPM_value_fan2;
     dd4:	00 93 23 45 	sts	0x4523, r16	; 0x804523 <previous_RPM_fan2>
     dd8:	10 93 24 45 	sts	0x4524, r17	; 0x804524 <previous_RPM_fan2+0x1>
	
}
     ddc:	df 91       	pop	r29
     dde:	cf 91       	pop	r28
     de0:	1f 91       	pop	r17
     de2:	0f 91       	pop	r16
     de4:	ff 90       	pop	r15
     de6:	ef 90       	pop	r14
     de8:	df 90       	pop	r13
     dea:	cf 90       	pop	r12
     dec:	08 95       	ret

00000dee <executeCommand>:

	
// main function for controlling the fans and alarm. Based on predefined commands from UART.

void executeCommand(uint8_t command_number, char *command)
{
     dee:	cf 93       	push	r28
     df0:	df 93       	push	r29
     df2:	9b 01       	movw	r18, r22
	if (diagnoseIsRunning) {
     df4:	90 91 bd 4b 	lds	r25, 0x4BBD	; 0x804bbd <diagnoseIsRunning>
     df8:	99 23       	and	r25, r25
     dfa:	49 f0       	breq	.+18     	; 0xe0e <executeCommand+0x20>
		printf("Diagnose is running!\r\n ");
     dfc:	89 ec       	ldi	r24, 0xC9	; 201
     dfe:	98 e4       	ldi	r25, 0x48	; 72
     e00:	9f 93       	push	r25
     e02:	8f 93       	push	r24
     e04:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
     e08:	0f 90       	pop	r0
     e0a:	0f 90       	pop	r0
     e0c:	1b c1       	rjmp	.+566    	; 0x1044 <executeCommand+0x256>
	}
	else {
	
	switch ( command_number )
     e0e:	48 2f       	mov	r20, r24
     e10:	50 e0       	ldi	r21, 0x00	; 0
     e12:	4d 30       	cpi	r20, 0x0D	; 13
     e14:	51 05       	cpc	r21, r1
     e16:	08 f0       	brcs	.+2      	; 0xe1a <executeCommand+0x2c>
     e18:	81 c0       	rjmp	.+258    	; 0xf1c <executeCommand+0x12e>
     e1a:	fa 01       	movw	r30, r20
     e1c:	e6 58       	subi	r30, 0x86	; 134
     e1e:	ff 4f       	sbci	r31, 0xFF	; 255
     e20:	0c 94 1d 0b 	jmp	0x163a	; 0x163a <__tablejump2__>
	{
		case 0:
		printf("Received command: fan1\r\n");
     e24:	81 ee       	ldi	r24, 0xE1	; 225
     e26:	98 e4       	ldi	r25, 0x48	; 72
     e28:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		PrintSelectFanMode();
     e2c:	0e 94 99 03 	call	0x732	; 0x732 <PrintSelectFanMode>
		chosenFan = 1;
     e30:	81 e0       	ldi	r24, 0x01	; 1
     e32:	80 93 50 4b 	sts	0x4B50, r24	; 0x804b50 <chosenFan>
		break ;
     e36:	06 c1       	rjmp	.+524    	; 0x1044 <executeCommand+0x256>
		
		case 1:
		printf("Received command: fan2\r\n");
     e38:	89 ef       	ldi	r24, 0xF9	; 249
     e3a:	98 e4       	ldi	r25, 0x48	; 72
     e3c:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		PrintSelectFanMode();
     e40:	0e 94 99 03 	call	0x732	; 0x732 <PrintSelectFanMode>
		chosenFan = 2;
     e44:	82 e0       	ldi	r24, 0x02	; 2
     e46:	80 93 50 4b 	sts	0x4B50, r24	; 0x804b50 <chosenFan>
		break ;
     e4a:	fc c0       	rjmp	.+504    	; 0x1044 <executeCommand+0x256>
		
		case 2:
		printf("Received command: fan3\r\n");
     e4c:	81 e1       	ldi	r24, 0x11	; 17
     e4e:	99 e4       	ldi	r25, 0x49	; 73
     e50:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		PrintSelectFanMode();
     e54:	0e 94 99 03 	call	0x732	; 0x732 <PrintSelectFanMode>
		chosenFan = 3;
     e58:	83 e0       	ldi	r24, 0x03	; 3
     e5a:	80 93 50 4b 	sts	0x4B50, r24	; 0x804b50 <chosenFan>
		break ;
     e5e:	f2 c0       	rjmp	.+484    	; 0x1044 <executeCommand+0x256>
		
		case 3:
		printf("Received command: fan4\r\n");
     e60:	89 e2       	ldi	r24, 0x29	; 41
     e62:	99 e4       	ldi	r25, 0x49	; 73
     e64:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		PrintSelectFanMode();
     e68:	0e 94 99 03 	call	0x732	; 0x732 <PrintSelectFanMode>
		chosenFan = 4;
     e6c:	84 e0       	ldi	r24, 0x04	; 4
     e6e:	80 93 50 4b 	sts	0x4B50, r24	; 0x804b50 <chosenFan>
		break ;
     e72:	e8 c0       	rjmp	.+464    	; 0x1044 <executeCommand+0x256>
		
		case 4:
		printf("Received command: off\r\n");
     e74:	81 e4       	ldi	r24, 0x41	; 65
     e76:	99 e4       	ldi	r25, 0x49	; 73
     e78:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		chosenModeIsManual = 0;
     e7c:	10 92 c4 4b 	sts	0x4BC4, r1	; 0x804bc4 <chosenModeIsManual>
		setFanToOff();
     e80:	0e 94 bc 02 	call	0x578	; 0x578 <setFanToOff>
		break ;
     e84:	df c0       	rjmp	.+446    	; 0x1044 <executeCommand+0x256>
		
		case 5:
		printf("Received command: manual\r\n");
     e86:	88 e5       	ldi	r24, 0x58	; 88
     e88:	99 e4       	ldi	r25, 0x49	; 73
     e8a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		printf("Type wanted rpm mode\r\n");
     e8e:	82 e7       	ldi	r24, 0x72	; 114
     e90:	99 e4       	ldi	r25, 0x49	; 73
     e92:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		printf("Alternatives: low, medium, high or fan speed: 0-100 \r\n");
     e96:	88 e8       	ldi	r24, 0x88	; 136
     e98:	99 e4       	ldi	r25, 0x49	; 73
     e9a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		chosenModeIsManual = 1;
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	80 93 c4 4b 	sts	0x4BC4, r24	; 0x804bc4 <chosenModeIsManual>
		break ;
     ea4:	cf c0       	rjmp	.+414    	; 0x1044 <executeCommand+0x256>
		
		case 6:
		printf("Received command: auto\r\n");
     ea6:	8e eb       	ldi	r24, 0xBE	; 190
     ea8:	99 e4       	ldi	r25, 0x49	; 73
     eaa:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		chosenModeIsManual = 0;
     eae:	10 92 c4 4b 	sts	0x4BC4, r1	; 0x804bc4 <chosenModeIsManual>
		setFanToAuto();
     eb2:	0e 94 08 03 	call	0x610	; 0x610 <setFanToAuto>
		break ;
     eb6:	c6 c0       	rjmp	.+396    	; 0x1044 <executeCommand+0x256>
		
		case 7:
		printf("Received command: overview\r\n");
     eb8:	86 ed       	ldi	r24, 0xD6	; 214
     eba:	99 e4       	ldi	r25, 0x49	; 73
     ebc:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		fan[1].rpm = pwm_to_rpm1();
     ec0:	0e 94 9e 05 	call	0xb3c	; 0xb3c <pwm_to_rpm1>
     ec4:	c7 e2       	ldi	r28, 0x27	; 39
     ec6:	d5 e4       	ldi	r29, 0x45	; 69
     ec8:	88 87       	std	Y+8, r24	; 0x08
     eca:	99 87       	std	Y+9, r25	; 0x09
		fan[2].rpm = pwm_to_rpm2();
     ecc:	0e 94 b4 05 	call	0xb68	; 0xb68 <pwm_to_rpm2>
     ed0:	8e 87       	std	Y+14, r24	; 0x0e
     ed2:	9f 87       	std	Y+15, r25	; 0x0f
		
		
		printOverview();
     ed4:	0e 94 a6 03 	call	0x74c	; 0x74c <printOverview>
		break ;
     ed8:	b5 c0       	rjmp	.+362    	; 0x1044 <executeCommand+0x256>
		
		case 8:
		printf("Received command: controller\r\n");
     eda:	82 ef       	ldi	r24, 0xF2	; 242
     edc:	99 e4       	ldi	r25, 0x49	; 73
     ede:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		printSelectFan();
     ee2:	0e 94 40 04 	call	0x880	; 0x880 <printSelectFan>
		break ;
     ee6:	ae c0       	rjmp	.+348    	; 0x1044 <executeCommand+0x256>
		
		case 12: // if command = alarm
		changeAlarmDeviation = 1;
     ee8:	81 e0       	ldi	r24, 0x01	; 1
     eea:	80 93 4d 4b 	sts	0x4B4D, r24	; 0x804b4d <changeAlarmDeviation>
		printf("Type wanted deviation percentage for wear and tear alarm \n\r");
     eee:	80 e1       	ldi	r24, 0x10	; 16
     ef0:	9a e4       	ldi	r25, 0x4A	; 74
     ef2:	9f 93       	push	r25
     ef4:	8f 93       	push	r24
     ef6:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
		printf("Current alarm deviation percentage is: %d\n\r", threshold_percentage);
     efa:	80 91 22 45 	lds	r24, 0x4522	; 0x804522 <threshold_percentage>
     efe:	1f 92       	push	r1
     f00:	8f 93       	push	r24
     f02:	8c e4       	ldi	r24, 0x4C	; 76
     f04:	9a e4       	ldi	r25, 0x4A	; 74
     f06:	9f 93       	push	r25
     f08:	8f 93       	push	r24
     f0a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
		break;
     f0e:	0f 90       	pop	r0
     f10:	0f 90       	pop	r0
     f12:	0f 90       	pop	r0
     f14:	0f 90       	pop	r0
     f16:	0f 90       	pop	r0
     f18:	0f 90       	pop	r0
     f1a:	94 c0       	rjmp	.+296    	; 0x1044 <executeCommand+0x256>
		
		default :
		
		if (changeAlarmDeviation){
     f1c:	90 91 4d 4b 	lds	r25, 0x4B4D	; 0x804b4d <changeAlarmDeviation>
     f20:	99 23       	and	r25, r25
     f22:	a1 f0       	breq	.+40     	; 0xf4c <executeCommand+0x15e>
				threshold_percentage = atoi(command); //change alarm deviaton for alarm type long
     f24:	c9 01       	movw	r24, r18
     f26:	0e 94 26 0b 	call	0x164c	; 0x164c <atoi>
     f2a:	80 93 22 45 	sts	0x4522, r24	; 0x804522 <threshold_percentage>
				changeAlarmDeviation = 0;
     f2e:	10 92 4d 4b 	sts	0x4B4D, r1	; 0x804b4d <changeAlarmDeviation>
				printf("wear and tear alarm devation percentage is changed to: %d\n\r", threshold_percentage);
     f32:	1f 92       	push	r1
     f34:	8f 93       	push	r24
     f36:	88 e7       	ldi	r24, 0x78	; 120
     f38:	9a e4       	ldi	r25, 0x4A	; 74
     f3a:	9f 93       	push	r25
     f3c:	8f 93       	push	r24
     f3e:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
				break;
     f42:	0f 90       	pop	r0
     f44:	0f 90       	pop	r0
     f46:	0f 90       	pop	r0
     f48:	0f 90       	pop	r0
     f4a:	7c c0       	rjmp	.+248    	; 0x1044 <executeCommand+0x256>
			}
			
		
		
		
		if(chosenModeIsManual)
     f4c:	90 91 c4 4b 	lds	r25, 0x4BC4	; 0x804bc4 <chosenModeIsManual>
     f50:	99 23       	and	r25, r25
     f52:	09 f4       	brne	.+2      	; 0xf56 <executeCommand+0x168>
     f54:	73 c0       	rjmp	.+230    	; 0x103c <executeCommand+0x24e>
		{
			switch (command_number)
     f56:	8a 30       	cpi	r24, 0x0A	; 10
     f58:	89 f0       	breq	.+34     	; 0xf7c <executeCommand+0x18e>
     f5a:	8b 30       	cpi	r24, 0x0B	; 11
     f5c:	e1 f0       	breq	.+56     	; 0xf96 <executeCommand+0x1a8>
     f5e:	89 30       	cpi	r24, 0x09	; 9
     f60:	39 f5       	brne	.+78     	; 0xfb0 <executeCommand+0x1c2>
			{
				case 9:
				
				printf("Received command: low\r\n");
     f62:	84 eb       	ldi	r24, 0xB4	; 180
     f64:	9a e4       	ldi	r25, 0x4A	; 74
     f66:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
				manual_rpm_value = FAN_RPM_LOW; //LOW
     f6a:	83 e2       	ldi	r24, 0x23	; 35
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	80 93 55 4b 	sts	0x4B55, r24	; 0x804b55 <manual_rpm_value>
     f72:	90 93 56 4b 	sts	0x4B56, r25	; 0x804b56 <manual_rpm_value+0x1>
				setFanToManual();
     f76:	0e 94 26 03 	call	0x64c	; 0x64c <setFanToManual>
				break;
     f7a:	64 c0       	rjmp	.+200    	; 0x1044 <executeCommand+0x256>
				
				case 10:
				
				printf("Received command: medium\r\n");
     f7c:	8b ec       	ldi	r24, 0xCB	; 203
     f7e:	9a e4       	ldi	r25, 0x4A	; 74
     f80:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
				manual_rpm_value = FAN_RPM_MEDIUM; //MEDIUM
     f84:	8c e3       	ldi	r24, 0x3C	; 60
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	80 93 55 4b 	sts	0x4B55, r24	; 0x804b55 <manual_rpm_value>
     f8c:	90 93 56 4b 	sts	0x4B56, r25	; 0x804b56 <manual_rpm_value+0x1>
				setFanToManual();
     f90:	0e 94 26 03 	call	0x64c	; 0x64c <setFanToManual>
				break;
     f94:	57 c0       	rjmp	.+174    	; 0x1044 <executeCommand+0x256>
				
				case 11:
				
				printf("Received command: high\r\n");
     f96:	85 ee       	ldi	r24, 0xE5	; 229
     f98:	9a e4       	ldi	r25, 0x4A	; 74
     f9a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
				manual_rpm_value = FAN_RPM_HIGH; //HIGH
     f9e:	8f e4       	ldi	r24, 0x4F	; 79
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	80 93 55 4b 	sts	0x4B55, r24	; 0x804b55 <manual_rpm_value>
     fa6:	90 93 56 4b 	sts	0x4B56, r25	; 0x804b56 <manual_rpm_value+0x1>
				setFanToManual();
     faa:	0e 94 26 03 	call	0x64c	; 0x64c <setFanToManual>
				break;
     fae:	4a c0       	rjmp	.+148    	; 0x1044 <executeCommand+0x256>
				
				default:
				
				duty_cycle_input = atoi(command);
     fb0:	c9 01       	movw	r24, r18
     fb2:	0e 94 26 0b 	call	0x164c	; 0x164c <atoi>
     fb6:	80 93 c9 4b 	sts	0x4BC9, r24	; 0x804bc9 <duty_cycle_input>
     fba:	90 93 ca 4b 	sts	0x4BCA, r25	; 0x804bca <duty_cycle_input+0x1>
				printf("%d\r\n", duty_cycle_input);
     fbe:	9f 93       	push	r25
     fc0:	8f 93       	push	r24
     fc2:	8b e4       	ldi	r24, 0x4B	; 75
     fc4:	98 e4       	ldi	r25, 0x48	; 72
     fc6:	9f 93       	push	r25
     fc8:	8f 93       	push	r24
     fca:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
				if (duty_cycle_input >= 0 && duty_cycle_input <= 100)
     fce:	60 91 c9 4b 	lds	r22, 0x4BC9	; 0x804bc9 <duty_cycle_input>
     fd2:	70 91 ca 4b 	lds	r23, 0x4BCA	; 0x804bca <duty_cycle_input+0x1>
     fd6:	0f 90       	pop	r0
     fd8:	0f 90       	pop	r0
     fda:	0f 90       	pop	r0
     fdc:	0f 90       	pop	r0
     fde:	65 36       	cpi	r22, 0x65	; 101
     fe0:	71 05       	cpc	r23, r1
     fe2:	38 f5       	brcc	.+78     	; 0x1032 <executeCommand+0x244>
				{
					uint16_t new_duty_cycle = (duty_cycle_input / 100.0) * FAN_RPM_HIGH;
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__floatunsisf>
     fec:	20 e0       	ldi	r18, 0x00	; 0
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	48 ec       	ldi	r20, 0xC8	; 200
     ff2:	52 e4       	ldi	r21, 0x42	; 66
     ff4:	0e 94 40 09 	call	0x1280	; 0x1280 <__divsf3>
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	4e e9       	ldi	r20, 0x9E	; 158
     ffe:	52 e4       	ldi	r21, 0x42	; 66
    1000:	0e 94 6f 0a 	call	0x14de	; 0x14de <__mulsf3>
    1004:	0e 94 b2 09 	call	0x1364	; 0x1364 <__fixunssfsi>
    1008:	d6 2f       	mov	r29, r22
    100a:	c7 2f       	mov	r28, r23
					printf("%d\r\n", new_duty_cycle);
    100c:	7f 93       	push	r23
    100e:	6f 93       	push	r22
    1010:	8b e4       	ldi	r24, 0x4B	; 75
    1012:	98 e4       	ldi	r25, 0x48	; 72
    1014:	9f 93       	push	r25
    1016:	8f 93       	push	r24
    1018:	0e 94 55 0b 	call	0x16aa	; 0x16aa <printf>
					// Set the duty cycle to the new value
					// Assuming TCA0_SPLIT_LCMP0 is where the duty cycle is set
					manual_rpm_value = new_duty_cycle;
    101c:	d0 93 55 4b 	sts	0x4B55, r29	; 0x804b55 <manual_rpm_value>
    1020:	c0 93 56 4b 	sts	0x4B56, r28	; 0x804b56 <manual_rpm_value+0x1>
					setFanToManual();
    1024:	0e 94 26 03 	call	0x64c	; 0x64c <setFanToManual>
    1028:	0f 90       	pop	r0
    102a:	0f 90       	pop	r0
    102c:	0f 90       	pop	r0
    102e:	0f 90       	pop	r0
    1030:	09 c0       	rjmp	.+18     	; 0x1044 <executeCommand+0x256>
				}
				else
				{
					printf("Please insert a valid duty cycle (0-100)\r\n");
    1032:	8d ef       	ldi	r24, 0xFD	; 253
    1034:	9a e4       	ldi	r25, 0x4A	; 74
    1036:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
    103a:	04 c0       	rjmp	.+8      	; 0x1044 <executeCommand+0x256>
		
		
		}
		
		
		else printf("unknown command \r\n");
    103c:	87 e2       	ldi	r24, 0x27	; 39
    103e:	9b e4       	ldi	r25, 0x4B	; 75
    1040:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <puts>
		
	}

   }
}
    1044:	df 91       	pop	r29
    1046:	cf 91       	pop	r28
    1048:	08 95       	ret

0000104a <read_commands>:




void read_commands() //Reads Uart when enter is pressed
{
    104a:	cf 93       	push	r28
    104c:	df 93       	push	r29
    104e:	cd b7       	in	r28, 0x3d	; 61
    1050:	de b7       	in	r29, 0x3e	; 62
    1052:	c4 56       	subi	r28, 0x64	; 100
    1054:	d1 09       	sbc	r29, r1
    1056:	cd bf       	out	0x3d, r28	; 61
    1058:	de bf       	out	0x3e, r29	; 62
	char command[MAX_COMMAND_LEN];
	static uint8_t index = 0;
	char c = USART3_readChar();
    105a:	0e 94 74 04 	call	0x8e8	; 0x8e8 <USART3_readChar>
	
	if(c != '\n' && c != '\r' && index < MAX_COMMAND_LEN - 1)
    105e:	8a 30       	cpi	r24, 0x0A	; 10
    1060:	89 f0       	breq	.+34     	; 0x1084 <read_commands+0x3a>
    1062:	8d 30       	cpi	r24, 0x0D	; 13
    1064:	79 f0       	breq	.+30     	; 0x1084 <read_commands+0x3a>
    1066:	90 91 4a 4b 	lds	r25, 0x4B4A	; 0x804b4a <__data_end>
    106a:	93 36       	cpi	r25, 0x63	; 99
    106c:	58 f4       	brcc	.+22     	; 0x1084 <read_commands+0x3a>
	{
		command[index++] = c;
    106e:	21 e0       	ldi	r18, 0x01	; 1
    1070:	29 0f       	add	r18, r25
    1072:	20 93 4a 4b 	sts	0x4B4A, r18	; 0x804b4a <__data_end>
    1076:	e1 e0       	ldi	r30, 0x01	; 1
    1078:	f0 e0       	ldi	r31, 0x00	; 0
    107a:	ec 0f       	add	r30, r28
    107c:	fd 1f       	adc	r31, r29
    107e:	e9 0f       	add	r30, r25
    1080:	f1 1d       	adc	r31, r1
    1082:	80 83       	st	Z, r24
		
	}
	
	if(c == '\r'|| c=='\n')
    1084:	8d 30       	cpi	r24, 0x0D	; 13
    1086:	11 f0       	breq	.+4      	; 0x108c <read_commands+0x42>
    1088:	8a 30       	cpi	r24, 0x0A	; 10
    108a:	a1 f4       	brne	.+40     	; 0x10b4 <read_commands+0x6a>
	{
		command[index] = '\0';
    108c:	80 91 4a 4b 	lds	r24, 0x4B4A	; 0x804b4a <__data_end>
    1090:	e1 e0       	ldi	r30, 0x01	; 1
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	ec 0f       	add	r30, r28
    1096:	fd 1f       	adc	r31, r29
    1098:	e8 0f       	add	r30, r24
    109a:	f1 1d       	adc	r31, r1
    109c:	10 82       	st	Z, r1
		index = 0;
    109e:	10 92 4a 4b 	sts	0x4B4A, r1	; 0x804b4a <__data_end>

		executeCommand(compareCommands(command), command); // executes actions based on command as an argument
    10a2:	ce 01       	movw	r24, r28
    10a4:	01 96       	adiw	r24, 0x01	; 1
    10a6:	0e 94 4d 04 	call	0x89a	; 0x89a <compareCommands>
    10aa:	be 01       	movw	r22, r28
    10ac:	6f 5f       	subi	r22, 0xFF	; 255
    10ae:	7f 4f       	sbci	r23, 0xFF	; 255
    10b0:	0e 94 f7 06 	call	0xdee	; 0xdee <executeCommand>
		
		
	}
}
    10b4:	cc 59       	subi	r28, 0x9C	; 156
    10b6:	df 4f       	sbci	r29, 0xFF	; 255
    10b8:	cd bf       	out	0x3d, r28	; 61
    10ba:	de bf       	out	0x3e, r29	; 62
    10bc:	df 91       	pop	r29
    10be:	cf 91       	pop	r28
    10c0:	08 95       	ret

000010c2 <__vector_53>:
	RTC.PITINTFLAGS = RTC_PI_bm; // Clears the interrupt flag
}


ISR(USART3_RXC_vect)
{
    10c2:	1f 92       	push	r1
    10c4:	0f 92       	push	r0
    10c6:	0f b6       	in	r0, 0x3f	; 63
    10c8:	0f 92       	push	r0
    10ca:	11 24       	eor	r1, r1
    10cc:	0b b6       	in	r0, 0x3b	; 59
    10ce:	0f 92       	push	r0
    10d0:	2f 93       	push	r18
    10d2:	3f 93       	push	r19
    10d4:	4f 93       	push	r20
    10d6:	5f 93       	push	r21
    10d8:	6f 93       	push	r22
    10da:	7f 93       	push	r23
    10dc:	8f 93       	push	r24
    10de:	9f 93       	push	r25
    10e0:	af 93       	push	r26
    10e2:	bf 93       	push	r27
    10e4:	ef 93       	push	r30
    10e6:	ff 93       	push	r31
	read_commands();
    10e8:	0e 94 25 08 	call	0x104a	; 0x104a <read_commands>
}
    10ec:	ff 91       	pop	r31
    10ee:	ef 91       	pop	r30
    10f0:	bf 91       	pop	r27
    10f2:	af 91       	pop	r26
    10f4:	9f 91       	pop	r25
    10f6:	8f 91       	pop	r24
    10f8:	7f 91       	pop	r23
    10fa:	6f 91       	pop	r22
    10fc:	5f 91       	pop	r21
    10fe:	4f 91       	pop	r20
    1100:	3f 91       	pop	r19
    1102:	2f 91       	pop	r18
    1104:	0f 90       	pop	r0
    1106:	0b be       	out	0x3b, r0	; 59
    1108:	0f 90       	pop	r0
    110a:	0f be       	out	0x3f, r0	; 63
    110c:	0f 90       	pop	r0
    110e:	1f 90       	pop	r1
    1110:	18 95       	reti

00001112 <main>:


int main(void)
{
	
	USART3_init();
    1112:	0e 94 81 04 	call	0x902	; 0x902 <USART3_init>
	sei(); // Enable Global Interrupts
    1116:	78 94       	sei

	// PWM initialize
	PORT_init();
    1118:	0e 94 9a 04 	call	0x934	; 0x934 <PORT_init>
	TCA0_init();
    111c:	0e 94 9e 04 	call	0x93c	; 0x93c <TCA0_init>
	TCB0_init();
    1120:	0e 94 b1 04 	call	0x962	; 0x962 <TCB0_init>
	TCB1_init();
    1124:	0e 94 c9 04 	call	0x992	; 0x992 <TCB1_init>
	
	// I2C initialize

	TWI0_M_init();
    1128:	0e 94 a8 00 	call	0x150	; 0x150 <TWI0_M_init>
	AHT10_init();
    112c:	0e 94 23 01 	call	0x246	; 0x246 <AHT10_init>
	
	// RTC initialize
	RTC_init();
    1130:	0e 94 e7 04 	call	0x9ce	; 0x9ce <RTC_init>
	
	// Get values for prediction from eeprom
	status_eeprom();
    1134:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <status_eeprom>
	read_value_EE_fan1 = eeprom_read_word((uint16_t*) address_fan1);
    1138:	80 91 02 00 	lds	r24, 0x0002	; 0x800002 <__TEXT_REGION_LENGTH__+0x7e0002>
    113c:	90 91 03 00 	lds	r25, 0x0003	; 0x800003 <__TEXT_REGION_LENGTH__+0x7e0003>
    1140:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <eeprom_read_word>
    1144:	80 93 c5 4b 	sts	0x4BC5, r24	; 0x804bc5 <read_value_EE_fan1>
    1148:	90 93 c6 4b 	sts	0x4BC6, r25	; 0x804bc6 <read_value_EE_fan1+0x1>
	status_eeprom();
    114c:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <status_eeprom>
	read_value_EE_fan2 = eeprom_read_word((uint16_t*) address_fan2);
    1150:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__TEXT_REGION_LENGTH__+0x7e0000>
    1154:	90 91 01 00 	lds	r25, 0x0001	; 0x800001 <__TEXT_REGION_LENGTH__+0x7e0001>
    1158:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <eeprom_read_word>
    115c:	80 93 be 4b 	sts	0x4BBE, r24	; 0x804bbe <read_value_EE_fan2>
    1160:	90 93 bf 4b 	sts	0x4BBF, r25	; 0x804bbf <read_value_EE_fan2+0x1>
	
	printHomeScreen();
    1164:	0e 94 9f 02 	call	0x53e	; 0x53e <printHomeScreen>

	
	while(1){
		
		
		if(counter == 2000)
    1168:	80 91 cd 4b 	lds	r24, 0x4BCD	; 0x804bcd <counter>
    116c:	90 91 ce 4b 	lds	r25, 0x4BCE	; 0x804bce <counter+0x1>
    1170:	80 3d       	cpi	r24, 0xD0	; 208
    1172:	97 40       	sbci	r25, 0x07	; 7
    1174:	79 f4       	brne	.+30     	; 0x1194 <main+0x82>
		{
			saveFanModes();
    1176:	0e 94 1a 02 	call	0x434	; 0x434 <saveFanModes>
			diagnoseIsRunning = 1;
    117a:	81 e0       	ldi	r24, 0x01	; 1
    117c:	80 93 bd 4b 	sts	0x4BBD, r24	; 0x804bbd <diagnoseIsRunning>
			predict_error();
    1180:	0e 94 47 06 	call	0xc8e	; 0xc8e <predict_error>
			startFansAfterDiagnose();
    1184:	0e 94 8d 01 	call	0x31a	; 0x31a <startFansAfterDiagnose>
			diagnoseIsRunning = 0;
    1188:	10 92 bd 4b 	sts	0x4BBD, r1	; 0x804bbd <diagnoseIsRunning>
			counter = 0;
    118c:	10 92 cd 4b 	sts	0x4BCD, r1	; 0x804bcd <counter>
    1190:	10 92 ce 4b 	sts	0x4BCE, r1	; 0x804bce <counter+0x1>
		}
		
		
		
		handleFansInAuto(); //changes the rpm of the fans in mode auto based on temperature
    1194:	0e 94 54 01 	call	0x2a8	; 0x2a8 <handleFansInAuto>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1198:	8f e0       	ldi	r24, 0x0F	; 15
    119a:	97 e2       	ldi	r25, 0x27	; 39
    119c:	01 97       	sbiw	r24, 0x01	; 1
    119e:	f1 f7       	brne	.-4      	; 0x119c <main+0x8a>
    11a0:	00 c0       	rjmp	.+0      	; 0x11a2 <main+0x90>
    11a2:	00 00       	nop
    11a4:	e1 cf       	rjmp	.-62     	; 0x1168 <main+0x56>

000011a6 <__subsf3>:
    11a6:	50 58       	subi	r21, 0x80	; 128

000011a8 <__addsf3>:
    11a8:	bb 27       	eor	r27, r27
    11aa:	aa 27       	eor	r26, r26
    11ac:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__addsf3x>
    11b0:	0c 94 35 0a 	jmp	0x146a	; 0x146a <__fp_round>
    11b4:	0e 94 27 0a 	call	0x144e	; 0x144e <__fp_pscA>
    11b8:	38 f0       	brcs	.+14     	; 0x11c8 <__addsf3+0x20>
    11ba:	0e 94 2e 0a 	call	0x145c	; 0x145c <__fp_pscB>
    11be:	20 f0       	brcs	.+8      	; 0x11c8 <__addsf3+0x20>
    11c0:	39 f4       	brne	.+14     	; 0x11d0 <__addsf3+0x28>
    11c2:	9f 3f       	cpi	r25, 0xFF	; 255
    11c4:	19 f4       	brne	.+6      	; 0x11cc <__addsf3+0x24>
    11c6:	26 f4       	brtc	.+8      	; 0x11d0 <__addsf3+0x28>
    11c8:	0c 94 24 0a 	jmp	0x1448	; 0x1448 <__fp_nan>
    11cc:	0e f4       	brtc	.+2      	; 0x11d0 <__addsf3+0x28>
    11ce:	e0 95       	com	r30
    11d0:	e7 fb       	bst	r30, 7
    11d2:	0c 94 1e 0a 	jmp	0x143c	; 0x143c <__fp_inf>

000011d6 <__addsf3x>:
    11d6:	e9 2f       	mov	r30, r25
    11d8:	0e 94 46 0a 	call	0x148c	; 0x148c <__fp_split3>
    11dc:	58 f3       	brcs	.-42     	; 0x11b4 <__addsf3+0xc>
    11de:	ba 17       	cp	r27, r26
    11e0:	62 07       	cpc	r22, r18
    11e2:	73 07       	cpc	r23, r19
    11e4:	84 07       	cpc	r24, r20
    11e6:	95 07       	cpc	r25, r21
    11e8:	20 f0       	brcs	.+8      	; 0x11f2 <__addsf3x+0x1c>
    11ea:	79 f4       	brne	.+30     	; 0x120a <__addsf3x+0x34>
    11ec:	a6 f5       	brtc	.+104    	; 0x1256 <__addsf3x+0x80>
    11ee:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <__fp_zero>
    11f2:	0e f4       	brtc	.+2      	; 0x11f6 <__addsf3x+0x20>
    11f4:	e0 95       	com	r30
    11f6:	0b 2e       	mov	r0, r27
    11f8:	ba 2f       	mov	r27, r26
    11fa:	a0 2d       	mov	r26, r0
    11fc:	0b 01       	movw	r0, r22
    11fe:	b9 01       	movw	r22, r18
    1200:	90 01       	movw	r18, r0
    1202:	0c 01       	movw	r0, r24
    1204:	ca 01       	movw	r24, r20
    1206:	a0 01       	movw	r20, r0
    1208:	11 24       	eor	r1, r1
    120a:	ff 27       	eor	r31, r31
    120c:	59 1b       	sub	r21, r25
    120e:	99 f0       	breq	.+38     	; 0x1236 <__addsf3x+0x60>
    1210:	59 3f       	cpi	r21, 0xF9	; 249
    1212:	50 f4       	brcc	.+20     	; 0x1228 <__addsf3x+0x52>
    1214:	50 3e       	cpi	r21, 0xE0	; 224
    1216:	68 f1       	brcs	.+90     	; 0x1272 <__addsf3x+0x9c>
    1218:	1a 16       	cp	r1, r26
    121a:	f0 40       	sbci	r31, 0x00	; 0
    121c:	a2 2f       	mov	r26, r18
    121e:	23 2f       	mov	r18, r19
    1220:	34 2f       	mov	r19, r20
    1222:	44 27       	eor	r20, r20
    1224:	58 5f       	subi	r21, 0xF8	; 248
    1226:	f3 cf       	rjmp	.-26     	; 0x120e <__addsf3x+0x38>
    1228:	46 95       	lsr	r20
    122a:	37 95       	ror	r19
    122c:	27 95       	ror	r18
    122e:	a7 95       	ror	r26
    1230:	f0 40       	sbci	r31, 0x00	; 0
    1232:	53 95       	inc	r21
    1234:	c9 f7       	brne	.-14     	; 0x1228 <__addsf3x+0x52>
    1236:	7e f4       	brtc	.+30     	; 0x1256 <__addsf3x+0x80>
    1238:	1f 16       	cp	r1, r31
    123a:	ba 0b       	sbc	r27, r26
    123c:	62 0b       	sbc	r22, r18
    123e:	73 0b       	sbc	r23, r19
    1240:	84 0b       	sbc	r24, r20
    1242:	ba f0       	brmi	.+46     	; 0x1272 <__addsf3x+0x9c>
    1244:	91 50       	subi	r25, 0x01	; 1
    1246:	a1 f0       	breq	.+40     	; 0x1270 <__addsf3x+0x9a>
    1248:	ff 0f       	add	r31, r31
    124a:	bb 1f       	adc	r27, r27
    124c:	66 1f       	adc	r22, r22
    124e:	77 1f       	adc	r23, r23
    1250:	88 1f       	adc	r24, r24
    1252:	c2 f7       	brpl	.-16     	; 0x1244 <__addsf3x+0x6e>
    1254:	0e c0       	rjmp	.+28     	; 0x1272 <__addsf3x+0x9c>
    1256:	ba 0f       	add	r27, r26
    1258:	62 1f       	adc	r22, r18
    125a:	73 1f       	adc	r23, r19
    125c:	84 1f       	adc	r24, r20
    125e:	48 f4       	brcc	.+18     	; 0x1272 <__addsf3x+0x9c>
    1260:	87 95       	ror	r24
    1262:	77 95       	ror	r23
    1264:	67 95       	ror	r22
    1266:	b7 95       	ror	r27
    1268:	f7 95       	ror	r31
    126a:	9e 3f       	cpi	r25, 0xFE	; 254
    126c:	08 f0       	brcs	.+2      	; 0x1270 <__addsf3x+0x9a>
    126e:	b0 cf       	rjmp	.-160    	; 0x11d0 <__addsf3+0x28>
    1270:	93 95       	inc	r25
    1272:	88 0f       	add	r24, r24
    1274:	08 f0       	brcs	.+2      	; 0x1278 <__addsf3x+0xa2>
    1276:	99 27       	eor	r25, r25
    1278:	ee 0f       	add	r30, r30
    127a:	97 95       	ror	r25
    127c:	87 95       	ror	r24
    127e:	08 95       	ret

00001280 <__divsf3>:
    1280:	0e 94 54 09 	call	0x12a8	; 0x12a8 <__divsf3x>
    1284:	0c 94 35 0a 	jmp	0x146a	; 0x146a <__fp_round>
    1288:	0e 94 2e 0a 	call	0x145c	; 0x145c <__fp_pscB>
    128c:	58 f0       	brcs	.+22     	; 0x12a4 <__divsf3+0x24>
    128e:	0e 94 27 0a 	call	0x144e	; 0x144e <__fp_pscA>
    1292:	40 f0       	brcs	.+16     	; 0x12a4 <__divsf3+0x24>
    1294:	29 f4       	brne	.+10     	; 0x12a0 <__divsf3+0x20>
    1296:	5f 3f       	cpi	r21, 0xFF	; 255
    1298:	29 f0       	breq	.+10     	; 0x12a4 <__divsf3+0x24>
    129a:	0c 94 1e 0a 	jmp	0x143c	; 0x143c <__fp_inf>
    129e:	51 11       	cpse	r21, r1
    12a0:	0c 94 69 0a 	jmp	0x14d2	; 0x14d2 <__fp_szero>
    12a4:	0c 94 24 0a 	jmp	0x1448	; 0x1448 <__fp_nan>

000012a8 <__divsf3x>:
    12a8:	0e 94 46 0a 	call	0x148c	; 0x148c <__fp_split3>
    12ac:	68 f3       	brcs	.-38     	; 0x1288 <__divsf3+0x8>

000012ae <__divsf3_pse>:
    12ae:	99 23       	and	r25, r25
    12b0:	b1 f3       	breq	.-20     	; 0x129e <__divsf3+0x1e>
    12b2:	55 23       	and	r21, r21
    12b4:	91 f3       	breq	.-28     	; 0x129a <__divsf3+0x1a>
    12b6:	95 1b       	sub	r25, r21
    12b8:	55 0b       	sbc	r21, r21
    12ba:	bb 27       	eor	r27, r27
    12bc:	aa 27       	eor	r26, r26
    12be:	62 17       	cp	r22, r18
    12c0:	73 07       	cpc	r23, r19
    12c2:	84 07       	cpc	r24, r20
    12c4:	38 f0       	brcs	.+14     	; 0x12d4 <__divsf3_pse+0x26>
    12c6:	9f 5f       	subi	r25, 0xFF	; 255
    12c8:	5f 4f       	sbci	r21, 0xFF	; 255
    12ca:	22 0f       	add	r18, r18
    12cc:	33 1f       	adc	r19, r19
    12ce:	44 1f       	adc	r20, r20
    12d0:	aa 1f       	adc	r26, r26
    12d2:	a9 f3       	breq	.-22     	; 0x12be <__divsf3_pse+0x10>
    12d4:	35 d0       	rcall	.+106    	; 0x1340 <__divsf3_pse+0x92>
    12d6:	0e 2e       	mov	r0, r30
    12d8:	3a f0       	brmi	.+14     	; 0x12e8 <__divsf3_pse+0x3a>
    12da:	e0 e8       	ldi	r30, 0x80	; 128
    12dc:	32 d0       	rcall	.+100    	; 0x1342 <__divsf3_pse+0x94>
    12de:	91 50       	subi	r25, 0x01	; 1
    12e0:	50 40       	sbci	r21, 0x00	; 0
    12e2:	e6 95       	lsr	r30
    12e4:	00 1c       	adc	r0, r0
    12e6:	ca f7       	brpl	.-14     	; 0x12da <__divsf3_pse+0x2c>
    12e8:	2b d0       	rcall	.+86     	; 0x1340 <__divsf3_pse+0x92>
    12ea:	fe 2f       	mov	r31, r30
    12ec:	29 d0       	rcall	.+82     	; 0x1340 <__divsf3_pse+0x92>
    12ee:	66 0f       	add	r22, r22
    12f0:	77 1f       	adc	r23, r23
    12f2:	88 1f       	adc	r24, r24
    12f4:	bb 1f       	adc	r27, r27
    12f6:	26 17       	cp	r18, r22
    12f8:	37 07       	cpc	r19, r23
    12fa:	48 07       	cpc	r20, r24
    12fc:	ab 07       	cpc	r26, r27
    12fe:	b0 e8       	ldi	r27, 0x80	; 128
    1300:	09 f0       	breq	.+2      	; 0x1304 <__divsf3_pse+0x56>
    1302:	bb 0b       	sbc	r27, r27
    1304:	80 2d       	mov	r24, r0
    1306:	bf 01       	movw	r22, r30
    1308:	ff 27       	eor	r31, r31
    130a:	93 58       	subi	r25, 0x83	; 131
    130c:	5f 4f       	sbci	r21, 0xFF	; 255
    130e:	3a f0       	brmi	.+14     	; 0x131e <__divsf3_pse+0x70>
    1310:	9e 3f       	cpi	r25, 0xFE	; 254
    1312:	51 05       	cpc	r21, r1
    1314:	78 f0       	brcs	.+30     	; 0x1334 <__divsf3_pse+0x86>
    1316:	0c 94 1e 0a 	jmp	0x143c	; 0x143c <__fp_inf>
    131a:	0c 94 69 0a 	jmp	0x14d2	; 0x14d2 <__fp_szero>
    131e:	5f 3f       	cpi	r21, 0xFF	; 255
    1320:	e4 f3       	brlt	.-8      	; 0x131a <__divsf3_pse+0x6c>
    1322:	98 3e       	cpi	r25, 0xE8	; 232
    1324:	d4 f3       	brlt	.-12     	; 0x131a <__divsf3_pse+0x6c>
    1326:	86 95       	lsr	r24
    1328:	77 95       	ror	r23
    132a:	67 95       	ror	r22
    132c:	b7 95       	ror	r27
    132e:	f7 95       	ror	r31
    1330:	9f 5f       	subi	r25, 0xFF	; 255
    1332:	c9 f7       	brne	.-14     	; 0x1326 <__divsf3_pse+0x78>
    1334:	88 0f       	add	r24, r24
    1336:	91 1d       	adc	r25, r1
    1338:	96 95       	lsr	r25
    133a:	87 95       	ror	r24
    133c:	97 f9       	bld	r25, 7
    133e:	08 95       	ret
    1340:	e1 e0       	ldi	r30, 0x01	; 1
    1342:	66 0f       	add	r22, r22
    1344:	77 1f       	adc	r23, r23
    1346:	88 1f       	adc	r24, r24
    1348:	bb 1f       	adc	r27, r27
    134a:	62 17       	cp	r22, r18
    134c:	73 07       	cpc	r23, r19
    134e:	84 07       	cpc	r24, r20
    1350:	ba 07       	cpc	r27, r26
    1352:	20 f0       	brcs	.+8      	; 0x135c <__divsf3_pse+0xae>
    1354:	62 1b       	sub	r22, r18
    1356:	73 0b       	sbc	r23, r19
    1358:	84 0b       	sbc	r24, r20
    135a:	ba 0b       	sbc	r27, r26
    135c:	ee 1f       	adc	r30, r30
    135e:	88 f7       	brcc	.-30     	; 0x1342 <__divsf3_pse+0x94>
    1360:	e0 95       	com	r30
    1362:	08 95       	ret

00001364 <__fixunssfsi>:
    1364:	0e 94 4e 0a 	call	0x149c	; 0x149c <__fp_splitA>
    1368:	88 f0       	brcs	.+34     	; 0x138c <__fixunssfsi+0x28>
    136a:	9f 57       	subi	r25, 0x7F	; 127
    136c:	98 f0       	brcs	.+38     	; 0x1394 <__fixunssfsi+0x30>
    136e:	b9 2f       	mov	r27, r25
    1370:	99 27       	eor	r25, r25
    1372:	b7 51       	subi	r27, 0x17	; 23
    1374:	b0 f0       	brcs	.+44     	; 0x13a2 <__fixunssfsi+0x3e>
    1376:	e1 f0       	breq	.+56     	; 0x13b0 <__fixunssfsi+0x4c>
    1378:	66 0f       	add	r22, r22
    137a:	77 1f       	adc	r23, r23
    137c:	88 1f       	adc	r24, r24
    137e:	99 1f       	adc	r25, r25
    1380:	1a f0       	brmi	.+6      	; 0x1388 <__fixunssfsi+0x24>
    1382:	ba 95       	dec	r27
    1384:	c9 f7       	brne	.-14     	; 0x1378 <__fixunssfsi+0x14>
    1386:	14 c0       	rjmp	.+40     	; 0x13b0 <__fixunssfsi+0x4c>
    1388:	b1 30       	cpi	r27, 0x01	; 1
    138a:	91 f0       	breq	.+36     	; 0x13b0 <__fixunssfsi+0x4c>
    138c:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <__fp_zero>
    1390:	b1 e0       	ldi	r27, 0x01	; 1
    1392:	08 95       	ret
    1394:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <__fp_zero>
    1398:	67 2f       	mov	r22, r23
    139a:	78 2f       	mov	r23, r24
    139c:	88 27       	eor	r24, r24
    139e:	b8 5f       	subi	r27, 0xF8	; 248
    13a0:	39 f0       	breq	.+14     	; 0x13b0 <__fixunssfsi+0x4c>
    13a2:	b9 3f       	cpi	r27, 0xF9	; 249
    13a4:	cc f3       	brlt	.-14     	; 0x1398 <__fixunssfsi+0x34>
    13a6:	86 95       	lsr	r24
    13a8:	77 95       	ror	r23
    13aa:	67 95       	ror	r22
    13ac:	b3 95       	inc	r27
    13ae:	d9 f7       	brne	.-10     	; 0x13a6 <__fixunssfsi+0x42>
    13b0:	3e f4       	brtc	.+14     	; 0x13c0 <__fixunssfsi+0x5c>
    13b2:	90 95       	com	r25
    13b4:	80 95       	com	r24
    13b6:	70 95       	com	r23
    13b8:	61 95       	neg	r22
    13ba:	7f 4f       	sbci	r23, 0xFF	; 255
    13bc:	8f 4f       	sbci	r24, 0xFF	; 255
    13be:	9f 4f       	sbci	r25, 0xFF	; 255
    13c0:	08 95       	ret

000013c2 <__floatunsisf>:
    13c2:	e8 94       	clt
    13c4:	09 c0       	rjmp	.+18     	; 0x13d8 <__floatsisf+0x12>

000013c6 <__floatsisf>:
    13c6:	97 fb       	bst	r25, 7
    13c8:	3e f4       	brtc	.+14     	; 0x13d8 <__floatsisf+0x12>
    13ca:	90 95       	com	r25
    13cc:	80 95       	com	r24
    13ce:	70 95       	com	r23
    13d0:	61 95       	neg	r22
    13d2:	7f 4f       	sbci	r23, 0xFF	; 255
    13d4:	8f 4f       	sbci	r24, 0xFF	; 255
    13d6:	9f 4f       	sbci	r25, 0xFF	; 255
    13d8:	99 23       	and	r25, r25
    13da:	a9 f0       	breq	.+42     	; 0x1406 <__floatsisf+0x40>
    13dc:	f9 2f       	mov	r31, r25
    13de:	96 e9       	ldi	r25, 0x96	; 150
    13e0:	bb 27       	eor	r27, r27
    13e2:	93 95       	inc	r25
    13e4:	f6 95       	lsr	r31
    13e6:	87 95       	ror	r24
    13e8:	77 95       	ror	r23
    13ea:	67 95       	ror	r22
    13ec:	b7 95       	ror	r27
    13ee:	f1 11       	cpse	r31, r1
    13f0:	f8 cf       	rjmp	.-16     	; 0x13e2 <__floatsisf+0x1c>
    13f2:	fa f4       	brpl	.+62     	; 0x1432 <__floatsisf+0x6c>
    13f4:	bb 0f       	add	r27, r27
    13f6:	11 f4       	brne	.+4      	; 0x13fc <__floatsisf+0x36>
    13f8:	60 ff       	sbrs	r22, 0
    13fa:	1b c0       	rjmp	.+54     	; 0x1432 <__floatsisf+0x6c>
    13fc:	6f 5f       	subi	r22, 0xFF	; 255
    13fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1400:	8f 4f       	sbci	r24, 0xFF	; 255
    1402:	9f 4f       	sbci	r25, 0xFF	; 255
    1404:	16 c0       	rjmp	.+44     	; 0x1432 <__floatsisf+0x6c>
    1406:	88 23       	and	r24, r24
    1408:	11 f0       	breq	.+4      	; 0x140e <__floatsisf+0x48>
    140a:	96 e9       	ldi	r25, 0x96	; 150
    140c:	11 c0       	rjmp	.+34     	; 0x1430 <__floatsisf+0x6a>
    140e:	77 23       	and	r23, r23
    1410:	21 f0       	breq	.+8      	; 0x141a <__floatsisf+0x54>
    1412:	9e e8       	ldi	r25, 0x8E	; 142
    1414:	87 2f       	mov	r24, r23
    1416:	76 2f       	mov	r23, r22
    1418:	05 c0       	rjmp	.+10     	; 0x1424 <__floatsisf+0x5e>
    141a:	66 23       	and	r22, r22
    141c:	71 f0       	breq	.+28     	; 0x143a <__floatsisf+0x74>
    141e:	96 e8       	ldi	r25, 0x86	; 134
    1420:	86 2f       	mov	r24, r22
    1422:	70 e0       	ldi	r23, 0x00	; 0
    1424:	60 e0       	ldi	r22, 0x00	; 0
    1426:	2a f0       	brmi	.+10     	; 0x1432 <__floatsisf+0x6c>
    1428:	9a 95       	dec	r25
    142a:	66 0f       	add	r22, r22
    142c:	77 1f       	adc	r23, r23
    142e:	88 1f       	adc	r24, r24
    1430:	da f7       	brpl	.-10     	; 0x1428 <__floatsisf+0x62>
    1432:	88 0f       	add	r24, r24
    1434:	96 95       	lsr	r25
    1436:	87 95       	ror	r24
    1438:	97 f9       	bld	r25, 7
    143a:	08 95       	ret

0000143c <__fp_inf>:
    143c:	97 f9       	bld	r25, 7
    143e:	9f 67       	ori	r25, 0x7F	; 127
    1440:	80 e8       	ldi	r24, 0x80	; 128
    1442:	70 e0       	ldi	r23, 0x00	; 0
    1444:	60 e0       	ldi	r22, 0x00	; 0
    1446:	08 95       	ret

00001448 <__fp_nan>:
    1448:	9f ef       	ldi	r25, 0xFF	; 255
    144a:	80 ec       	ldi	r24, 0xC0	; 192
    144c:	08 95       	ret

0000144e <__fp_pscA>:
    144e:	00 24       	eor	r0, r0
    1450:	0a 94       	dec	r0
    1452:	16 16       	cp	r1, r22
    1454:	17 06       	cpc	r1, r23
    1456:	18 06       	cpc	r1, r24
    1458:	09 06       	cpc	r0, r25
    145a:	08 95       	ret

0000145c <__fp_pscB>:
    145c:	00 24       	eor	r0, r0
    145e:	0a 94       	dec	r0
    1460:	12 16       	cp	r1, r18
    1462:	13 06       	cpc	r1, r19
    1464:	14 06       	cpc	r1, r20
    1466:	05 06       	cpc	r0, r21
    1468:	08 95       	ret

0000146a <__fp_round>:
    146a:	09 2e       	mov	r0, r25
    146c:	03 94       	inc	r0
    146e:	00 0c       	add	r0, r0
    1470:	11 f4       	brne	.+4      	; 0x1476 <__fp_round+0xc>
    1472:	88 23       	and	r24, r24
    1474:	52 f0       	brmi	.+20     	; 0x148a <__fp_round+0x20>
    1476:	bb 0f       	add	r27, r27
    1478:	40 f4       	brcc	.+16     	; 0x148a <__fp_round+0x20>
    147a:	bf 2b       	or	r27, r31
    147c:	11 f4       	brne	.+4      	; 0x1482 <__fp_round+0x18>
    147e:	60 ff       	sbrs	r22, 0
    1480:	04 c0       	rjmp	.+8      	; 0x148a <__fp_round+0x20>
    1482:	6f 5f       	subi	r22, 0xFF	; 255
    1484:	7f 4f       	sbci	r23, 0xFF	; 255
    1486:	8f 4f       	sbci	r24, 0xFF	; 255
    1488:	9f 4f       	sbci	r25, 0xFF	; 255
    148a:	08 95       	ret

0000148c <__fp_split3>:
    148c:	57 fd       	sbrc	r21, 7
    148e:	90 58       	subi	r25, 0x80	; 128
    1490:	44 0f       	add	r20, r20
    1492:	55 1f       	adc	r21, r21
    1494:	59 f0       	breq	.+22     	; 0x14ac <__fp_splitA+0x10>
    1496:	5f 3f       	cpi	r21, 0xFF	; 255
    1498:	71 f0       	breq	.+28     	; 0x14b6 <__fp_splitA+0x1a>
    149a:	47 95       	ror	r20

0000149c <__fp_splitA>:
    149c:	88 0f       	add	r24, r24
    149e:	97 fb       	bst	r25, 7
    14a0:	99 1f       	adc	r25, r25
    14a2:	61 f0       	breq	.+24     	; 0x14bc <__fp_splitA+0x20>
    14a4:	9f 3f       	cpi	r25, 0xFF	; 255
    14a6:	79 f0       	breq	.+30     	; 0x14c6 <__fp_splitA+0x2a>
    14a8:	87 95       	ror	r24
    14aa:	08 95       	ret
    14ac:	12 16       	cp	r1, r18
    14ae:	13 06       	cpc	r1, r19
    14b0:	14 06       	cpc	r1, r20
    14b2:	55 1f       	adc	r21, r21
    14b4:	f2 cf       	rjmp	.-28     	; 0x149a <__fp_split3+0xe>
    14b6:	46 95       	lsr	r20
    14b8:	f1 df       	rcall	.-30     	; 0x149c <__fp_splitA>
    14ba:	08 c0       	rjmp	.+16     	; 0x14cc <__fp_splitA+0x30>
    14bc:	16 16       	cp	r1, r22
    14be:	17 06       	cpc	r1, r23
    14c0:	18 06       	cpc	r1, r24
    14c2:	99 1f       	adc	r25, r25
    14c4:	f1 cf       	rjmp	.-30     	; 0x14a8 <__fp_splitA+0xc>
    14c6:	86 95       	lsr	r24
    14c8:	71 05       	cpc	r23, r1
    14ca:	61 05       	cpc	r22, r1
    14cc:	08 94       	sec
    14ce:	08 95       	ret

000014d0 <__fp_zero>:
    14d0:	e8 94       	clt

000014d2 <__fp_szero>:
    14d2:	bb 27       	eor	r27, r27
    14d4:	66 27       	eor	r22, r22
    14d6:	77 27       	eor	r23, r23
    14d8:	cb 01       	movw	r24, r22
    14da:	97 f9       	bld	r25, 7
    14dc:	08 95       	ret

000014de <__mulsf3>:
    14de:	0e 94 82 0a 	call	0x1504	; 0x1504 <__mulsf3x>
    14e2:	0c 94 35 0a 	jmp	0x146a	; 0x146a <__fp_round>
    14e6:	0e 94 27 0a 	call	0x144e	; 0x144e <__fp_pscA>
    14ea:	38 f0       	brcs	.+14     	; 0x14fa <__mulsf3+0x1c>
    14ec:	0e 94 2e 0a 	call	0x145c	; 0x145c <__fp_pscB>
    14f0:	20 f0       	brcs	.+8      	; 0x14fa <__mulsf3+0x1c>
    14f2:	95 23       	and	r25, r21
    14f4:	11 f0       	breq	.+4      	; 0x14fa <__mulsf3+0x1c>
    14f6:	0c 94 1e 0a 	jmp	0x143c	; 0x143c <__fp_inf>
    14fa:	0c 94 24 0a 	jmp	0x1448	; 0x1448 <__fp_nan>
    14fe:	11 24       	eor	r1, r1
    1500:	0c 94 69 0a 	jmp	0x14d2	; 0x14d2 <__fp_szero>

00001504 <__mulsf3x>:
    1504:	0e 94 46 0a 	call	0x148c	; 0x148c <__fp_split3>
    1508:	70 f3       	brcs	.-36     	; 0x14e6 <__mulsf3+0x8>

0000150a <__mulsf3_pse>:
    150a:	95 9f       	mul	r25, r21
    150c:	c1 f3       	breq	.-16     	; 0x14fe <__mulsf3+0x20>
    150e:	95 0f       	add	r25, r21
    1510:	50 e0       	ldi	r21, 0x00	; 0
    1512:	55 1f       	adc	r21, r21
    1514:	62 9f       	mul	r22, r18
    1516:	f0 01       	movw	r30, r0
    1518:	72 9f       	mul	r23, r18
    151a:	bb 27       	eor	r27, r27
    151c:	f0 0d       	add	r31, r0
    151e:	b1 1d       	adc	r27, r1
    1520:	63 9f       	mul	r22, r19
    1522:	aa 27       	eor	r26, r26
    1524:	f0 0d       	add	r31, r0
    1526:	b1 1d       	adc	r27, r1
    1528:	aa 1f       	adc	r26, r26
    152a:	64 9f       	mul	r22, r20
    152c:	66 27       	eor	r22, r22
    152e:	b0 0d       	add	r27, r0
    1530:	a1 1d       	adc	r26, r1
    1532:	66 1f       	adc	r22, r22
    1534:	82 9f       	mul	r24, r18
    1536:	22 27       	eor	r18, r18
    1538:	b0 0d       	add	r27, r0
    153a:	a1 1d       	adc	r26, r1
    153c:	62 1f       	adc	r22, r18
    153e:	73 9f       	mul	r23, r19
    1540:	b0 0d       	add	r27, r0
    1542:	a1 1d       	adc	r26, r1
    1544:	62 1f       	adc	r22, r18
    1546:	83 9f       	mul	r24, r19
    1548:	a0 0d       	add	r26, r0
    154a:	61 1d       	adc	r22, r1
    154c:	22 1f       	adc	r18, r18
    154e:	74 9f       	mul	r23, r20
    1550:	33 27       	eor	r19, r19
    1552:	a0 0d       	add	r26, r0
    1554:	61 1d       	adc	r22, r1
    1556:	23 1f       	adc	r18, r19
    1558:	84 9f       	mul	r24, r20
    155a:	60 0d       	add	r22, r0
    155c:	21 1d       	adc	r18, r1
    155e:	82 2f       	mov	r24, r18
    1560:	76 2f       	mov	r23, r22
    1562:	6a 2f       	mov	r22, r26
    1564:	11 24       	eor	r1, r1
    1566:	9f 57       	subi	r25, 0x7F	; 127
    1568:	50 40       	sbci	r21, 0x00	; 0
    156a:	9a f0       	brmi	.+38     	; 0x1592 <__mulsf3_pse+0x88>
    156c:	f1 f0       	breq	.+60     	; 0x15aa <__mulsf3_pse+0xa0>
    156e:	88 23       	and	r24, r24
    1570:	4a f0       	brmi	.+18     	; 0x1584 <__mulsf3_pse+0x7a>
    1572:	ee 0f       	add	r30, r30
    1574:	ff 1f       	adc	r31, r31
    1576:	bb 1f       	adc	r27, r27
    1578:	66 1f       	adc	r22, r22
    157a:	77 1f       	adc	r23, r23
    157c:	88 1f       	adc	r24, r24
    157e:	91 50       	subi	r25, 0x01	; 1
    1580:	50 40       	sbci	r21, 0x00	; 0
    1582:	a9 f7       	brne	.-22     	; 0x156e <__mulsf3_pse+0x64>
    1584:	9e 3f       	cpi	r25, 0xFE	; 254
    1586:	51 05       	cpc	r21, r1
    1588:	80 f0       	brcs	.+32     	; 0x15aa <__mulsf3_pse+0xa0>
    158a:	0c 94 1e 0a 	jmp	0x143c	; 0x143c <__fp_inf>
    158e:	0c 94 69 0a 	jmp	0x14d2	; 0x14d2 <__fp_szero>
    1592:	5f 3f       	cpi	r21, 0xFF	; 255
    1594:	e4 f3       	brlt	.-8      	; 0x158e <__mulsf3_pse+0x84>
    1596:	98 3e       	cpi	r25, 0xE8	; 232
    1598:	d4 f3       	brlt	.-12     	; 0x158e <__mulsf3_pse+0x84>
    159a:	86 95       	lsr	r24
    159c:	77 95       	ror	r23
    159e:	67 95       	ror	r22
    15a0:	b7 95       	ror	r27
    15a2:	f7 95       	ror	r31
    15a4:	e7 95       	ror	r30
    15a6:	9f 5f       	subi	r25, 0xFF	; 255
    15a8:	c1 f7       	brne	.-16     	; 0x159a <__mulsf3_pse+0x90>
    15aa:	fe 2b       	or	r31, r30
    15ac:	88 0f       	add	r24, r24
    15ae:	91 1d       	adc	r25, r1
    15b0:	96 95       	lsr	r25
    15b2:	87 95       	ror	r24
    15b4:	97 f9       	bld	r25, 7
    15b6:	08 95       	ret

000015b8 <__udivmodsi4>:
    15b8:	a1 e2       	ldi	r26, 0x21	; 33
    15ba:	1a 2e       	mov	r1, r26
    15bc:	aa 1b       	sub	r26, r26
    15be:	bb 1b       	sub	r27, r27
    15c0:	fd 01       	movw	r30, r26
    15c2:	0d c0       	rjmp	.+26     	; 0x15de <__udivmodsi4_ep>

000015c4 <__udivmodsi4_loop>:
    15c4:	aa 1f       	adc	r26, r26
    15c6:	bb 1f       	adc	r27, r27
    15c8:	ee 1f       	adc	r30, r30
    15ca:	ff 1f       	adc	r31, r31
    15cc:	a2 17       	cp	r26, r18
    15ce:	b3 07       	cpc	r27, r19
    15d0:	e4 07       	cpc	r30, r20
    15d2:	f5 07       	cpc	r31, r21
    15d4:	20 f0       	brcs	.+8      	; 0x15de <__udivmodsi4_ep>
    15d6:	a2 1b       	sub	r26, r18
    15d8:	b3 0b       	sbc	r27, r19
    15da:	e4 0b       	sbc	r30, r20
    15dc:	f5 0b       	sbc	r31, r21

000015de <__udivmodsi4_ep>:
    15de:	66 1f       	adc	r22, r22
    15e0:	77 1f       	adc	r23, r23
    15e2:	88 1f       	adc	r24, r24
    15e4:	99 1f       	adc	r25, r25
    15e6:	1a 94       	dec	r1
    15e8:	69 f7       	brne	.-38     	; 0x15c4 <__udivmodsi4_loop>
    15ea:	60 95       	com	r22
    15ec:	70 95       	com	r23
    15ee:	80 95       	com	r24
    15f0:	90 95       	com	r25
    15f2:	9b 01       	movw	r18, r22
    15f4:	ac 01       	movw	r20, r24
    15f6:	bd 01       	movw	r22, r26
    15f8:	cf 01       	movw	r24, r30
    15fa:	08 95       	ret

000015fc <__divmodsi4>:
    15fc:	05 2e       	mov	r0, r21
    15fe:	97 fb       	bst	r25, 7
    1600:	1e f4       	brtc	.+6      	; 0x1608 <__divmodsi4+0xc>
    1602:	00 94       	com	r0
    1604:	0e 94 15 0b 	call	0x162a	; 0x162a <__negsi2>
    1608:	57 fd       	sbrc	r21, 7
    160a:	07 d0       	rcall	.+14     	; 0x161a <__divmodsi4_neg2>
    160c:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <__udivmodsi4>
    1610:	07 fc       	sbrc	r0, 7
    1612:	03 d0       	rcall	.+6      	; 0x161a <__divmodsi4_neg2>
    1614:	4e f4       	brtc	.+18     	; 0x1628 <__divmodsi4_exit>
    1616:	0c 94 15 0b 	jmp	0x162a	; 0x162a <__negsi2>

0000161a <__divmodsi4_neg2>:
    161a:	50 95       	com	r21
    161c:	40 95       	com	r20
    161e:	30 95       	com	r19
    1620:	21 95       	neg	r18
    1622:	3f 4f       	sbci	r19, 0xFF	; 255
    1624:	4f 4f       	sbci	r20, 0xFF	; 255
    1626:	5f 4f       	sbci	r21, 0xFF	; 255

00001628 <__divmodsi4_exit>:
    1628:	08 95       	ret

0000162a <__negsi2>:
    162a:	90 95       	com	r25
    162c:	80 95       	com	r24
    162e:	70 95       	com	r23
    1630:	61 95       	neg	r22
    1632:	7f 4f       	sbci	r23, 0xFF	; 255
    1634:	8f 4f       	sbci	r24, 0xFF	; 255
    1636:	9f 4f       	sbci	r25, 0xFF	; 255
    1638:	08 95       	ret

0000163a <__tablejump2__>:
    163a:	ee 0f       	add	r30, r30
    163c:	ff 1f       	adc	r31, r31
    163e:	00 24       	eor	r0, r0
    1640:	00 1c       	adc	r0, r0
    1642:	0b be       	out	0x3b, r0	; 59
    1644:	07 90       	elpm	r0, Z+
    1646:	f6 91       	elpm	r31, Z
    1648:	e0 2d       	mov	r30, r0
    164a:	09 94       	ijmp

0000164c <atoi>:
    164c:	fc 01       	movw	r30, r24
    164e:	88 27       	eor	r24, r24
    1650:	99 27       	eor	r25, r25
    1652:	e8 94       	clt
    1654:	21 91       	ld	r18, Z+
    1656:	20 32       	cpi	r18, 0x20	; 32
    1658:	e9 f3       	breq	.-6      	; 0x1654 <atoi+0x8>
    165a:	29 30       	cpi	r18, 0x09	; 9
    165c:	10 f0       	brcs	.+4      	; 0x1662 <atoi+0x16>
    165e:	2e 30       	cpi	r18, 0x0E	; 14
    1660:	c8 f3       	brcs	.-14     	; 0x1654 <atoi+0x8>
    1662:	2b 32       	cpi	r18, 0x2B	; 43
    1664:	41 f0       	breq	.+16     	; 0x1676 <atoi+0x2a>
    1666:	2d 32       	cpi	r18, 0x2D	; 45
    1668:	39 f4       	brne	.+14     	; 0x1678 <atoi+0x2c>
    166a:	68 94       	set
    166c:	04 c0       	rjmp	.+8      	; 0x1676 <atoi+0x2a>
    166e:	0e 94 4d 0b 	call	0x169a	; 0x169a <__mulhi_const_10>
    1672:	82 0f       	add	r24, r18
    1674:	91 1d       	adc	r25, r1
    1676:	21 91       	ld	r18, Z+
    1678:	20 53       	subi	r18, 0x30	; 48
    167a:	2a 30       	cpi	r18, 0x0A	; 10
    167c:	c0 f3       	brcs	.-16     	; 0x166e <atoi+0x22>
    167e:	1e f4       	brtc	.+6      	; 0x1686 <atoi+0x3a>
    1680:	90 95       	com	r25
    1682:	81 95       	neg	r24
    1684:	9f 4f       	sbci	r25, 0xFF	; 255
    1686:	08 95       	ret

00001688 <strcmp>:
    1688:	fb 01       	movw	r30, r22
    168a:	dc 01       	movw	r26, r24
    168c:	8d 91       	ld	r24, X+
    168e:	01 90       	ld	r0, Z+
    1690:	80 19       	sub	r24, r0
    1692:	01 10       	cpse	r0, r1
    1694:	d9 f3       	breq	.-10     	; 0x168c <strcmp+0x4>
    1696:	99 0b       	sbc	r25, r25
    1698:	08 95       	ret

0000169a <__mulhi_const_10>:
    169a:	7a e0       	ldi	r23, 0x0A	; 10
    169c:	97 9f       	mul	r25, r23
    169e:	90 2d       	mov	r25, r0
    16a0:	87 9f       	mul	r24, r23
    16a2:	80 2d       	mov	r24, r0
    16a4:	91 0d       	add	r25, r1
    16a6:	11 24       	eor	r1, r1
    16a8:	08 95       	ret

000016aa <printf>:
    16aa:	cf 93       	push	r28
    16ac:	df 93       	push	r29
    16ae:	cd b7       	in	r28, 0x3d	; 61
    16b0:	de b7       	in	r29, 0x3e	; 62
    16b2:	ae 01       	movw	r20, r28
    16b4:	4b 5f       	subi	r20, 0xFB	; 251
    16b6:	5f 4f       	sbci	r21, 0xFF	; 255
    16b8:	fa 01       	movw	r30, r20
    16ba:	61 91       	ld	r22, Z+
    16bc:	71 91       	ld	r23, Z+
    16be:	af 01       	movw	r20, r30
    16c0:	80 91 65 4d 	lds	r24, 0x4D65	; 0x804d65 <__iob+0x2>
    16c4:	90 91 66 4d 	lds	r25, 0x4D66	; 0x804d66 <__iob+0x3>
    16c8:	0e 94 99 0b 	call	0x1732	; 0x1732 <vfprintf>
    16cc:	df 91       	pop	r29
    16ce:	cf 91       	pop	r28
    16d0:	08 95       	ret

000016d2 <puts>:
    16d2:	0f 93       	push	r16
    16d4:	1f 93       	push	r17
    16d6:	cf 93       	push	r28
    16d8:	df 93       	push	r29
    16da:	e0 91 65 4d 	lds	r30, 0x4D65	; 0x804d65 <__iob+0x2>
    16de:	f0 91 66 4d 	lds	r31, 0x4D66	; 0x804d66 <__iob+0x3>
    16e2:	23 81       	ldd	r18, Z+3	; 0x03
    16e4:	21 ff       	sbrs	r18, 1
    16e6:	1b c0       	rjmp	.+54     	; 0x171e <puts+0x4c>
    16e8:	8c 01       	movw	r16, r24
    16ea:	d0 e0       	ldi	r29, 0x00	; 0
    16ec:	c0 e0       	ldi	r28, 0x00	; 0
    16ee:	f8 01       	movw	r30, r16
    16f0:	81 91       	ld	r24, Z+
    16f2:	8f 01       	movw	r16, r30
    16f4:	60 91 65 4d 	lds	r22, 0x4D65	; 0x804d65 <__iob+0x2>
    16f8:	70 91 66 4d 	lds	r23, 0x4D66	; 0x804d66 <__iob+0x3>
    16fc:	db 01       	movw	r26, r22
    16fe:	18 96       	adiw	r26, 0x08	; 8
    1700:	ed 91       	ld	r30, X+
    1702:	fc 91       	ld	r31, X
    1704:	19 97       	sbiw	r26, 0x09	; 9
    1706:	88 23       	and	r24, r24
    1708:	31 f0       	breq	.+12     	; 0x1716 <puts+0x44>
    170a:	09 95       	icall
    170c:	89 2b       	or	r24, r25
    170e:	79 f3       	breq	.-34     	; 0x16ee <puts+0x1c>
    1710:	df ef       	ldi	r29, 0xFF	; 255
    1712:	cf ef       	ldi	r28, 0xFF	; 255
    1714:	ec cf       	rjmp	.-40     	; 0x16ee <puts+0x1c>
    1716:	8a e0       	ldi	r24, 0x0A	; 10
    1718:	09 95       	icall
    171a:	89 2b       	or	r24, r25
    171c:	19 f0       	breq	.+6      	; 0x1724 <puts+0x52>
    171e:	8f ef       	ldi	r24, 0xFF	; 255
    1720:	9f ef       	ldi	r25, 0xFF	; 255
    1722:	02 c0       	rjmp	.+4      	; 0x1728 <puts+0x56>
    1724:	8d 2f       	mov	r24, r29
    1726:	9c 2f       	mov	r25, r28
    1728:	df 91       	pop	r29
    172a:	cf 91       	pop	r28
    172c:	1f 91       	pop	r17
    172e:	0f 91       	pop	r16
    1730:	08 95       	ret

00001732 <vfprintf>:
    1732:	2f 92       	push	r2
    1734:	3f 92       	push	r3
    1736:	4f 92       	push	r4
    1738:	5f 92       	push	r5
    173a:	6f 92       	push	r6
    173c:	7f 92       	push	r7
    173e:	8f 92       	push	r8
    1740:	9f 92       	push	r9
    1742:	af 92       	push	r10
    1744:	bf 92       	push	r11
    1746:	cf 92       	push	r12
    1748:	df 92       	push	r13
    174a:	ef 92       	push	r14
    174c:	ff 92       	push	r15
    174e:	0f 93       	push	r16
    1750:	1f 93       	push	r17
    1752:	cf 93       	push	r28
    1754:	df 93       	push	r29
    1756:	cd b7       	in	r28, 0x3d	; 61
    1758:	de b7       	in	r29, 0x3e	; 62
    175a:	2b 97       	sbiw	r28, 0x0b	; 11
    175c:	cd bf       	out	0x3d, r28	; 61
    175e:	de bf       	out	0x3e, r29	; 62
    1760:	6c 01       	movw	r12, r24
    1762:	7b 01       	movw	r14, r22
    1764:	8a 01       	movw	r16, r20
    1766:	fc 01       	movw	r30, r24
    1768:	16 82       	std	Z+6, r1	; 0x06
    176a:	17 82       	std	Z+7, r1	; 0x07
    176c:	83 81       	ldd	r24, Z+3	; 0x03
    176e:	81 ff       	sbrs	r24, 1
    1770:	cc c1       	rjmp	.+920    	; 0x1b0a <vfprintf+0x3d8>
    1772:	ce 01       	movw	r24, r28
    1774:	01 96       	adiw	r24, 0x01	; 1
    1776:	3c 01       	movw	r6, r24
    1778:	f6 01       	movw	r30, r12
    177a:	93 81       	ldd	r25, Z+3	; 0x03
    177c:	f7 01       	movw	r30, r14
    177e:	93 fd       	sbrc	r25, 3
    1780:	85 91       	lpm	r24, Z+
    1782:	93 ff       	sbrs	r25, 3
    1784:	81 91       	ld	r24, Z+
    1786:	7f 01       	movw	r14, r30
    1788:	88 23       	and	r24, r24
    178a:	09 f4       	brne	.+2      	; 0x178e <vfprintf+0x5c>
    178c:	ba c1       	rjmp	.+884    	; 0x1b02 <vfprintf+0x3d0>
    178e:	85 32       	cpi	r24, 0x25	; 37
    1790:	39 f4       	brne	.+14     	; 0x17a0 <vfprintf+0x6e>
    1792:	93 fd       	sbrc	r25, 3
    1794:	85 91       	lpm	r24, Z+
    1796:	93 ff       	sbrs	r25, 3
    1798:	81 91       	ld	r24, Z+
    179a:	7f 01       	movw	r14, r30
    179c:	85 32       	cpi	r24, 0x25	; 37
    179e:	29 f4       	brne	.+10     	; 0x17aa <vfprintf+0x78>
    17a0:	b6 01       	movw	r22, r12
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <fputc>
    17a8:	e7 cf       	rjmp	.-50     	; 0x1778 <vfprintf+0x46>
    17aa:	91 2c       	mov	r9, r1
    17ac:	21 2c       	mov	r2, r1
    17ae:	31 2c       	mov	r3, r1
    17b0:	ff e1       	ldi	r31, 0x1F	; 31
    17b2:	f3 15       	cp	r31, r3
    17b4:	d8 f0       	brcs	.+54     	; 0x17ec <vfprintf+0xba>
    17b6:	8b 32       	cpi	r24, 0x2B	; 43
    17b8:	79 f0       	breq	.+30     	; 0x17d8 <vfprintf+0xa6>
    17ba:	38 f4       	brcc	.+14     	; 0x17ca <vfprintf+0x98>
    17bc:	80 32       	cpi	r24, 0x20	; 32
    17be:	79 f0       	breq	.+30     	; 0x17de <vfprintf+0xac>
    17c0:	83 32       	cpi	r24, 0x23	; 35
    17c2:	a1 f4       	brne	.+40     	; 0x17ec <vfprintf+0xba>
    17c4:	23 2d       	mov	r18, r3
    17c6:	20 61       	ori	r18, 0x10	; 16
    17c8:	1d c0       	rjmp	.+58     	; 0x1804 <vfprintf+0xd2>
    17ca:	8d 32       	cpi	r24, 0x2D	; 45
    17cc:	61 f0       	breq	.+24     	; 0x17e6 <vfprintf+0xb4>
    17ce:	80 33       	cpi	r24, 0x30	; 48
    17d0:	69 f4       	brne	.+26     	; 0x17ec <vfprintf+0xba>
    17d2:	23 2d       	mov	r18, r3
    17d4:	21 60       	ori	r18, 0x01	; 1
    17d6:	16 c0       	rjmp	.+44     	; 0x1804 <vfprintf+0xd2>
    17d8:	83 2d       	mov	r24, r3
    17da:	82 60       	ori	r24, 0x02	; 2
    17dc:	38 2e       	mov	r3, r24
    17de:	e3 2d       	mov	r30, r3
    17e0:	e4 60       	ori	r30, 0x04	; 4
    17e2:	3e 2e       	mov	r3, r30
    17e4:	2a c0       	rjmp	.+84     	; 0x183a <vfprintf+0x108>
    17e6:	f3 2d       	mov	r31, r3
    17e8:	f8 60       	ori	r31, 0x08	; 8
    17ea:	1d c0       	rjmp	.+58     	; 0x1826 <vfprintf+0xf4>
    17ec:	37 fc       	sbrc	r3, 7
    17ee:	2d c0       	rjmp	.+90     	; 0x184a <vfprintf+0x118>
    17f0:	20 ed       	ldi	r18, 0xD0	; 208
    17f2:	28 0f       	add	r18, r24
    17f4:	2a 30       	cpi	r18, 0x0A	; 10
    17f6:	40 f0       	brcs	.+16     	; 0x1808 <vfprintf+0xd6>
    17f8:	8e 32       	cpi	r24, 0x2E	; 46
    17fa:	b9 f4       	brne	.+46     	; 0x182a <vfprintf+0xf8>
    17fc:	36 fc       	sbrc	r3, 6
    17fe:	81 c1       	rjmp	.+770    	; 0x1b02 <vfprintf+0x3d0>
    1800:	23 2d       	mov	r18, r3
    1802:	20 64       	ori	r18, 0x40	; 64
    1804:	32 2e       	mov	r3, r18
    1806:	19 c0       	rjmp	.+50     	; 0x183a <vfprintf+0x108>
    1808:	36 fe       	sbrs	r3, 6
    180a:	06 c0       	rjmp	.+12     	; 0x1818 <vfprintf+0xe6>
    180c:	8a e0       	ldi	r24, 0x0A	; 10
    180e:	98 9e       	mul	r9, r24
    1810:	20 0d       	add	r18, r0
    1812:	11 24       	eor	r1, r1
    1814:	92 2e       	mov	r9, r18
    1816:	11 c0       	rjmp	.+34     	; 0x183a <vfprintf+0x108>
    1818:	ea e0       	ldi	r30, 0x0A	; 10
    181a:	2e 9e       	mul	r2, r30
    181c:	20 0d       	add	r18, r0
    181e:	11 24       	eor	r1, r1
    1820:	22 2e       	mov	r2, r18
    1822:	f3 2d       	mov	r31, r3
    1824:	f0 62       	ori	r31, 0x20	; 32
    1826:	3f 2e       	mov	r3, r31
    1828:	08 c0       	rjmp	.+16     	; 0x183a <vfprintf+0x108>
    182a:	8c 36       	cpi	r24, 0x6C	; 108
    182c:	21 f4       	brne	.+8      	; 0x1836 <vfprintf+0x104>
    182e:	83 2d       	mov	r24, r3
    1830:	80 68       	ori	r24, 0x80	; 128
    1832:	38 2e       	mov	r3, r24
    1834:	02 c0       	rjmp	.+4      	; 0x183a <vfprintf+0x108>
    1836:	88 36       	cpi	r24, 0x68	; 104
    1838:	41 f4       	brne	.+16     	; 0x184a <vfprintf+0x118>
    183a:	f7 01       	movw	r30, r14
    183c:	93 fd       	sbrc	r25, 3
    183e:	85 91       	lpm	r24, Z+
    1840:	93 ff       	sbrs	r25, 3
    1842:	81 91       	ld	r24, Z+
    1844:	7f 01       	movw	r14, r30
    1846:	81 11       	cpse	r24, r1
    1848:	b3 cf       	rjmp	.-154    	; 0x17b0 <vfprintf+0x7e>
    184a:	98 2f       	mov	r25, r24
    184c:	9f 7d       	andi	r25, 0xDF	; 223
    184e:	95 54       	subi	r25, 0x45	; 69
    1850:	93 30       	cpi	r25, 0x03	; 3
    1852:	28 f4       	brcc	.+10     	; 0x185e <vfprintf+0x12c>
    1854:	0c 5f       	subi	r16, 0xFC	; 252
    1856:	1f 4f       	sbci	r17, 0xFF	; 255
    1858:	9f e3       	ldi	r25, 0x3F	; 63
    185a:	99 83       	std	Y+1, r25	; 0x01
    185c:	0d c0       	rjmp	.+26     	; 0x1878 <vfprintf+0x146>
    185e:	83 36       	cpi	r24, 0x63	; 99
    1860:	31 f0       	breq	.+12     	; 0x186e <vfprintf+0x13c>
    1862:	83 37       	cpi	r24, 0x73	; 115
    1864:	71 f0       	breq	.+28     	; 0x1882 <vfprintf+0x150>
    1866:	83 35       	cpi	r24, 0x53	; 83
    1868:	09 f0       	breq	.+2      	; 0x186c <vfprintf+0x13a>
    186a:	59 c0       	rjmp	.+178    	; 0x191e <vfprintf+0x1ec>
    186c:	21 c0       	rjmp	.+66     	; 0x18b0 <vfprintf+0x17e>
    186e:	f8 01       	movw	r30, r16
    1870:	80 81       	ld	r24, Z
    1872:	89 83       	std	Y+1, r24	; 0x01
    1874:	0e 5f       	subi	r16, 0xFE	; 254
    1876:	1f 4f       	sbci	r17, 0xFF	; 255
    1878:	88 24       	eor	r8, r8
    187a:	83 94       	inc	r8
    187c:	91 2c       	mov	r9, r1
    187e:	53 01       	movw	r10, r6
    1880:	13 c0       	rjmp	.+38     	; 0x18a8 <vfprintf+0x176>
    1882:	28 01       	movw	r4, r16
    1884:	f2 e0       	ldi	r31, 0x02	; 2
    1886:	4f 0e       	add	r4, r31
    1888:	51 1c       	adc	r5, r1
    188a:	f8 01       	movw	r30, r16
    188c:	a0 80       	ld	r10, Z
    188e:	b1 80       	ldd	r11, Z+1	; 0x01
    1890:	36 fe       	sbrs	r3, 6
    1892:	03 c0       	rjmp	.+6      	; 0x189a <vfprintf+0x168>
    1894:	69 2d       	mov	r22, r9
    1896:	70 e0       	ldi	r23, 0x00	; 0
    1898:	02 c0       	rjmp	.+4      	; 0x189e <vfprintf+0x16c>
    189a:	6f ef       	ldi	r22, 0xFF	; 255
    189c:	7f ef       	ldi	r23, 0xFF	; 255
    189e:	c5 01       	movw	r24, r10
    18a0:	0e 94 a8 0d 	call	0x1b50	; 0x1b50 <strnlen>
    18a4:	4c 01       	movw	r8, r24
    18a6:	82 01       	movw	r16, r4
    18a8:	f3 2d       	mov	r31, r3
    18aa:	ff 77       	andi	r31, 0x7F	; 127
    18ac:	3f 2e       	mov	r3, r31
    18ae:	16 c0       	rjmp	.+44     	; 0x18dc <vfprintf+0x1aa>
    18b0:	28 01       	movw	r4, r16
    18b2:	22 e0       	ldi	r18, 0x02	; 2
    18b4:	42 0e       	add	r4, r18
    18b6:	51 1c       	adc	r5, r1
    18b8:	f8 01       	movw	r30, r16
    18ba:	a0 80       	ld	r10, Z
    18bc:	b1 80       	ldd	r11, Z+1	; 0x01
    18be:	36 fe       	sbrs	r3, 6
    18c0:	03 c0       	rjmp	.+6      	; 0x18c8 <vfprintf+0x196>
    18c2:	69 2d       	mov	r22, r9
    18c4:	70 e0       	ldi	r23, 0x00	; 0
    18c6:	02 c0       	rjmp	.+4      	; 0x18cc <vfprintf+0x19a>
    18c8:	6f ef       	ldi	r22, 0xFF	; 255
    18ca:	7f ef       	ldi	r23, 0xFF	; 255
    18cc:	c5 01       	movw	r24, r10
    18ce:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <strnlen_P>
    18d2:	4c 01       	movw	r8, r24
    18d4:	f3 2d       	mov	r31, r3
    18d6:	f0 68       	ori	r31, 0x80	; 128
    18d8:	3f 2e       	mov	r3, r31
    18da:	82 01       	movw	r16, r4
    18dc:	33 fc       	sbrc	r3, 3
    18de:	1b c0       	rjmp	.+54     	; 0x1916 <vfprintf+0x1e4>
    18e0:	82 2d       	mov	r24, r2
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	88 16       	cp	r8, r24
    18e6:	99 06       	cpc	r9, r25
    18e8:	b0 f4       	brcc	.+44     	; 0x1916 <vfprintf+0x1e4>
    18ea:	b6 01       	movw	r22, r12
    18ec:	80 e2       	ldi	r24, 0x20	; 32
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <fputc>
    18f4:	2a 94       	dec	r2
    18f6:	f4 cf       	rjmp	.-24     	; 0x18e0 <vfprintf+0x1ae>
    18f8:	f5 01       	movw	r30, r10
    18fa:	37 fc       	sbrc	r3, 7
    18fc:	85 91       	lpm	r24, Z+
    18fe:	37 fe       	sbrs	r3, 7
    1900:	81 91       	ld	r24, Z+
    1902:	5f 01       	movw	r10, r30
    1904:	b6 01       	movw	r22, r12
    1906:	90 e0       	ldi	r25, 0x00	; 0
    1908:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <fputc>
    190c:	21 10       	cpse	r2, r1
    190e:	2a 94       	dec	r2
    1910:	21 e0       	ldi	r18, 0x01	; 1
    1912:	82 1a       	sub	r8, r18
    1914:	91 08       	sbc	r9, r1
    1916:	81 14       	cp	r8, r1
    1918:	91 04       	cpc	r9, r1
    191a:	71 f7       	brne	.-36     	; 0x18f8 <vfprintf+0x1c6>
    191c:	e8 c0       	rjmp	.+464    	; 0x1aee <vfprintf+0x3bc>
    191e:	84 36       	cpi	r24, 0x64	; 100
    1920:	11 f0       	breq	.+4      	; 0x1926 <vfprintf+0x1f4>
    1922:	89 36       	cpi	r24, 0x69	; 105
    1924:	41 f5       	brne	.+80     	; 0x1976 <vfprintf+0x244>
    1926:	f8 01       	movw	r30, r16
    1928:	37 fe       	sbrs	r3, 7
    192a:	07 c0       	rjmp	.+14     	; 0x193a <vfprintf+0x208>
    192c:	60 81       	ld	r22, Z
    192e:	71 81       	ldd	r23, Z+1	; 0x01
    1930:	82 81       	ldd	r24, Z+2	; 0x02
    1932:	93 81       	ldd	r25, Z+3	; 0x03
    1934:	0c 5f       	subi	r16, 0xFC	; 252
    1936:	1f 4f       	sbci	r17, 0xFF	; 255
    1938:	08 c0       	rjmp	.+16     	; 0x194a <vfprintf+0x218>
    193a:	60 81       	ld	r22, Z
    193c:	71 81       	ldd	r23, Z+1	; 0x01
    193e:	07 2e       	mov	r0, r23
    1940:	00 0c       	add	r0, r0
    1942:	88 0b       	sbc	r24, r24
    1944:	99 0b       	sbc	r25, r25
    1946:	0e 5f       	subi	r16, 0xFE	; 254
    1948:	1f 4f       	sbci	r17, 0xFF	; 255
    194a:	f3 2d       	mov	r31, r3
    194c:	ff 76       	andi	r31, 0x6F	; 111
    194e:	3f 2e       	mov	r3, r31
    1950:	97 ff       	sbrs	r25, 7
    1952:	09 c0       	rjmp	.+18     	; 0x1966 <vfprintf+0x234>
    1954:	90 95       	com	r25
    1956:	80 95       	com	r24
    1958:	70 95       	com	r23
    195a:	61 95       	neg	r22
    195c:	7f 4f       	sbci	r23, 0xFF	; 255
    195e:	8f 4f       	sbci	r24, 0xFF	; 255
    1960:	9f 4f       	sbci	r25, 0xFF	; 255
    1962:	f0 68       	ori	r31, 0x80	; 128
    1964:	3f 2e       	mov	r3, r31
    1966:	2a e0       	ldi	r18, 0x0A	; 10
    1968:	30 e0       	ldi	r19, 0x00	; 0
    196a:	a3 01       	movw	r20, r6
    196c:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <__ultoa_invert>
    1970:	88 2e       	mov	r8, r24
    1972:	86 18       	sub	r8, r6
    1974:	45 c0       	rjmp	.+138    	; 0x1a00 <vfprintf+0x2ce>
    1976:	85 37       	cpi	r24, 0x75	; 117
    1978:	31 f4       	brne	.+12     	; 0x1986 <vfprintf+0x254>
    197a:	23 2d       	mov	r18, r3
    197c:	2f 7e       	andi	r18, 0xEF	; 239
    197e:	b2 2e       	mov	r11, r18
    1980:	2a e0       	ldi	r18, 0x0A	; 10
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	25 c0       	rjmp	.+74     	; 0x19d0 <vfprintf+0x29e>
    1986:	93 2d       	mov	r25, r3
    1988:	99 7f       	andi	r25, 0xF9	; 249
    198a:	b9 2e       	mov	r11, r25
    198c:	8f 36       	cpi	r24, 0x6F	; 111
    198e:	c1 f0       	breq	.+48     	; 0x19c0 <vfprintf+0x28e>
    1990:	18 f4       	brcc	.+6      	; 0x1998 <vfprintf+0x266>
    1992:	88 35       	cpi	r24, 0x58	; 88
    1994:	79 f0       	breq	.+30     	; 0x19b4 <vfprintf+0x282>
    1996:	b5 c0       	rjmp	.+362    	; 0x1b02 <vfprintf+0x3d0>
    1998:	80 37       	cpi	r24, 0x70	; 112
    199a:	19 f0       	breq	.+6      	; 0x19a2 <vfprintf+0x270>
    199c:	88 37       	cpi	r24, 0x78	; 120
    199e:	21 f0       	breq	.+8      	; 0x19a8 <vfprintf+0x276>
    19a0:	b0 c0       	rjmp	.+352    	; 0x1b02 <vfprintf+0x3d0>
    19a2:	e9 2f       	mov	r30, r25
    19a4:	e0 61       	ori	r30, 0x10	; 16
    19a6:	be 2e       	mov	r11, r30
    19a8:	b4 fe       	sbrs	r11, 4
    19aa:	0d c0       	rjmp	.+26     	; 0x19c6 <vfprintf+0x294>
    19ac:	fb 2d       	mov	r31, r11
    19ae:	f4 60       	ori	r31, 0x04	; 4
    19b0:	bf 2e       	mov	r11, r31
    19b2:	09 c0       	rjmp	.+18     	; 0x19c6 <vfprintf+0x294>
    19b4:	34 fe       	sbrs	r3, 4
    19b6:	0a c0       	rjmp	.+20     	; 0x19cc <vfprintf+0x29a>
    19b8:	29 2f       	mov	r18, r25
    19ba:	26 60       	ori	r18, 0x06	; 6
    19bc:	b2 2e       	mov	r11, r18
    19be:	06 c0       	rjmp	.+12     	; 0x19cc <vfprintf+0x29a>
    19c0:	28 e0       	ldi	r18, 0x08	; 8
    19c2:	30 e0       	ldi	r19, 0x00	; 0
    19c4:	05 c0       	rjmp	.+10     	; 0x19d0 <vfprintf+0x29e>
    19c6:	20 e1       	ldi	r18, 0x10	; 16
    19c8:	30 e0       	ldi	r19, 0x00	; 0
    19ca:	02 c0       	rjmp	.+4      	; 0x19d0 <vfprintf+0x29e>
    19cc:	20 e1       	ldi	r18, 0x10	; 16
    19ce:	32 e0       	ldi	r19, 0x02	; 2
    19d0:	f8 01       	movw	r30, r16
    19d2:	b7 fe       	sbrs	r11, 7
    19d4:	07 c0       	rjmp	.+14     	; 0x19e4 <vfprintf+0x2b2>
    19d6:	60 81       	ld	r22, Z
    19d8:	71 81       	ldd	r23, Z+1	; 0x01
    19da:	82 81       	ldd	r24, Z+2	; 0x02
    19dc:	93 81       	ldd	r25, Z+3	; 0x03
    19de:	0c 5f       	subi	r16, 0xFC	; 252
    19e0:	1f 4f       	sbci	r17, 0xFF	; 255
    19e2:	06 c0       	rjmp	.+12     	; 0x19f0 <vfprintf+0x2be>
    19e4:	60 81       	ld	r22, Z
    19e6:	71 81       	ldd	r23, Z+1	; 0x01
    19e8:	80 e0       	ldi	r24, 0x00	; 0
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	0e 5f       	subi	r16, 0xFE	; 254
    19ee:	1f 4f       	sbci	r17, 0xFF	; 255
    19f0:	a3 01       	movw	r20, r6
    19f2:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <__ultoa_invert>
    19f6:	88 2e       	mov	r8, r24
    19f8:	86 18       	sub	r8, r6
    19fa:	fb 2d       	mov	r31, r11
    19fc:	ff 77       	andi	r31, 0x7F	; 127
    19fe:	3f 2e       	mov	r3, r31
    1a00:	36 fe       	sbrs	r3, 6
    1a02:	0d c0       	rjmp	.+26     	; 0x1a1e <vfprintf+0x2ec>
    1a04:	23 2d       	mov	r18, r3
    1a06:	2e 7f       	andi	r18, 0xFE	; 254
    1a08:	a2 2e       	mov	r10, r18
    1a0a:	89 14       	cp	r8, r9
    1a0c:	58 f4       	brcc	.+22     	; 0x1a24 <vfprintf+0x2f2>
    1a0e:	34 fe       	sbrs	r3, 4
    1a10:	0b c0       	rjmp	.+22     	; 0x1a28 <vfprintf+0x2f6>
    1a12:	32 fc       	sbrc	r3, 2
    1a14:	09 c0       	rjmp	.+18     	; 0x1a28 <vfprintf+0x2f6>
    1a16:	83 2d       	mov	r24, r3
    1a18:	8e 7e       	andi	r24, 0xEE	; 238
    1a1a:	a8 2e       	mov	r10, r24
    1a1c:	05 c0       	rjmp	.+10     	; 0x1a28 <vfprintf+0x2f6>
    1a1e:	b8 2c       	mov	r11, r8
    1a20:	a3 2c       	mov	r10, r3
    1a22:	03 c0       	rjmp	.+6      	; 0x1a2a <vfprintf+0x2f8>
    1a24:	b8 2c       	mov	r11, r8
    1a26:	01 c0       	rjmp	.+2      	; 0x1a2a <vfprintf+0x2f8>
    1a28:	b9 2c       	mov	r11, r9
    1a2a:	a4 fe       	sbrs	r10, 4
    1a2c:	0f c0       	rjmp	.+30     	; 0x1a4c <vfprintf+0x31a>
    1a2e:	fe 01       	movw	r30, r28
    1a30:	e8 0d       	add	r30, r8
    1a32:	f1 1d       	adc	r31, r1
    1a34:	80 81       	ld	r24, Z
    1a36:	80 33       	cpi	r24, 0x30	; 48
    1a38:	21 f4       	brne	.+8      	; 0x1a42 <vfprintf+0x310>
    1a3a:	9a 2d       	mov	r25, r10
    1a3c:	99 7e       	andi	r25, 0xE9	; 233
    1a3e:	a9 2e       	mov	r10, r25
    1a40:	09 c0       	rjmp	.+18     	; 0x1a54 <vfprintf+0x322>
    1a42:	a2 fe       	sbrs	r10, 2
    1a44:	06 c0       	rjmp	.+12     	; 0x1a52 <vfprintf+0x320>
    1a46:	b3 94       	inc	r11
    1a48:	b3 94       	inc	r11
    1a4a:	04 c0       	rjmp	.+8      	; 0x1a54 <vfprintf+0x322>
    1a4c:	8a 2d       	mov	r24, r10
    1a4e:	86 78       	andi	r24, 0x86	; 134
    1a50:	09 f0       	breq	.+2      	; 0x1a54 <vfprintf+0x322>
    1a52:	b3 94       	inc	r11
    1a54:	a3 fc       	sbrc	r10, 3
    1a56:	11 c0       	rjmp	.+34     	; 0x1a7a <vfprintf+0x348>
    1a58:	a0 fe       	sbrs	r10, 0
    1a5a:	06 c0       	rjmp	.+12     	; 0x1a68 <vfprintf+0x336>
    1a5c:	b2 14       	cp	r11, r2
    1a5e:	88 f4       	brcc	.+34     	; 0x1a82 <vfprintf+0x350>
    1a60:	28 0c       	add	r2, r8
    1a62:	92 2c       	mov	r9, r2
    1a64:	9b 18       	sub	r9, r11
    1a66:	0e c0       	rjmp	.+28     	; 0x1a84 <vfprintf+0x352>
    1a68:	b2 14       	cp	r11, r2
    1a6a:	60 f4       	brcc	.+24     	; 0x1a84 <vfprintf+0x352>
    1a6c:	b6 01       	movw	r22, r12
    1a6e:	80 e2       	ldi	r24, 0x20	; 32
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <fputc>
    1a76:	b3 94       	inc	r11
    1a78:	f7 cf       	rjmp	.-18     	; 0x1a68 <vfprintf+0x336>
    1a7a:	b2 14       	cp	r11, r2
    1a7c:	18 f4       	brcc	.+6      	; 0x1a84 <vfprintf+0x352>
    1a7e:	2b 18       	sub	r2, r11
    1a80:	02 c0       	rjmp	.+4      	; 0x1a86 <vfprintf+0x354>
    1a82:	98 2c       	mov	r9, r8
    1a84:	21 2c       	mov	r2, r1
    1a86:	a4 fe       	sbrs	r10, 4
    1a88:	10 c0       	rjmp	.+32     	; 0x1aaa <vfprintf+0x378>
    1a8a:	b6 01       	movw	r22, r12
    1a8c:	80 e3       	ldi	r24, 0x30	; 48
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <fputc>
    1a94:	a2 fe       	sbrs	r10, 2
    1a96:	17 c0       	rjmp	.+46     	; 0x1ac6 <vfprintf+0x394>
    1a98:	a1 fc       	sbrc	r10, 1
    1a9a:	03 c0       	rjmp	.+6      	; 0x1aa2 <vfprintf+0x370>
    1a9c:	88 e7       	ldi	r24, 0x78	; 120
    1a9e:	90 e0       	ldi	r25, 0x00	; 0
    1aa0:	02 c0       	rjmp	.+4      	; 0x1aa6 <vfprintf+0x374>
    1aa2:	88 e5       	ldi	r24, 0x58	; 88
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	b6 01       	movw	r22, r12
    1aa8:	0c c0       	rjmp	.+24     	; 0x1ac2 <vfprintf+0x390>
    1aaa:	8a 2d       	mov	r24, r10
    1aac:	86 78       	andi	r24, 0x86	; 134
    1aae:	59 f0       	breq	.+22     	; 0x1ac6 <vfprintf+0x394>
    1ab0:	a1 fe       	sbrs	r10, 1
    1ab2:	02 c0       	rjmp	.+4      	; 0x1ab8 <vfprintf+0x386>
    1ab4:	8b e2       	ldi	r24, 0x2B	; 43
    1ab6:	01 c0       	rjmp	.+2      	; 0x1aba <vfprintf+0x388>
    1ab8:	80 e2       	ldi	r24, 0x20	; 32
    1aba:	a7 fc       	sbrc	r10, 7
    1abc:	8d e2       	ldi	r24, 0x2D	; 45
    1abe:	b6 01       	movw	r22, r12
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <fputc>
    1ac6:	89 14       	cp	r8, r9
    1ac8:	38 f4       	brcc	.+14     	; 0x1ad8 <vfprintf+0x3a6>
    1aca:	b6 01       	movw	r22, r12
    1acc:	80 e3       	ldi	r24, 0x30	; 48
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <fputc>
    1ad4:	9a 94       	dec	r9
    1ad6:	f7 cf       	rjmp	.-18     	; 0x1ac6 <vfprintf+0x394>
    1ad8:	8a 94       	dec	r8
    1ada:	f3 01       	movw	r30, r6
    1adc:	e8 0d       	add	r30, r8
    1ade:	f1 1d       	adc	r31, r1
    1ae0:	80 81       	ld	r24, Z
    1ae2:	b6 01       	movw	r22, r12
    1ae4:	90 e0       	ldi	r25, 0x00	; 0
    1ae6:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <fputc>
    1aea:	81 10       	cpse	r8, r1
    1aec:	f5 cf       	rjmp	.-22     	; 0x1ad8 <vfprintf+0x3a6>
    1aee:	22 20       	and	r2, r2
    1af0:	09 f4       	brne	.+2      	; 0x1af4 <vfprintf+0x3c2>
    1af2:	42 ce       	rjmp	.-892    	; 0x1778 <vfprintf+0x46>
    1af4:	b6 01       	movw	r22, r12
    1af6:	80 e2       	ldi	r24, 0x20	; 32
    1af8:	90 e0       	ldi	r25, 0x00	; 0
    1afa:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <fputc>
    1afe:	2a 94       	dec	r2
    1b00:	f6 cf       	rjmp	.-20     	; 0x1aee <vfprintf+0x3bc>
    1b02:	f6 01       	movw	r30, r12
    1b04:	86 81       	ldd	r24, Z+6	; 0x06
    1b06:	97 81       	ldd	r25, Z+7	; 0x07
    1b08:	02 c0       	rjmp	.+4      	; 0x1b0e <vfprintf+0x3dc>
    1b0a:	8f ef       	ldi	r24, 0xFF	; 255
    1b0c:	9f ef       	ldi	r25, 0xFF	; 255
    1b0e:	2b 96       	adiw	r28, 0x0b	; 11
    1b10:	cd bf       	out	0x3d, r28	; 61
    1b12:	de bf       	out	0x3e, r29	; 62
    1b14:	df 91       	pop	r29
    1b16:	cf 91       	pop	r28
    1b18:	1f 91       	pop	r17
    1b1a:	0f 91       	pop	r16
    1b1c:	ff 90       	pop	r15
    1b1e:	ef 90       	pop	r14
    1b20:	df 90       	pop	r13
    1b22:	cf 90       	pop	r12
    1b24:	bf 90       	pop	r11
    1b26:	af 90       	pop	r10
    1b28:	9f 90       	pop	r9
    1b2a:	8f 90       	pop	r8
    1b2c:	7f 90       	pop	r7
    1b2e:	6f 90       	pop	r6
    1b30:	5f 90       	pop	r5
    1b32:	4f 90       	pop	r4
    1b34:	3f 90       	pop	r3
    1b36:	2f 90       	pop	r2
    1b38:	08 95       	ret

00001b3a <strnlen_P>:
    1b3a:	fc 01       	movw	r30, r24
    1b3c:	05 90       	lpm	r0, Z+
    1b3e:	61 50       	subi	r22, 0x01	; 1
    1b40:	70 40       	sbci	r23, 0x00	; 0
    1b42:	01 10       	cpse	r0, r1
    1b44:	d8 f7       	brcc	.-10     	; 0x1b3c <strnlen_P+0x2>
    1b46:	80 95       	com	r24
    1b48:	90 95       	com	r25
    1b4a:	8e 0f       	add	r24, r30
    1b4c:	9f 1f       	adc	r25, r31
    1b4e:	08 95       	ret

00001b50 <strnlen>:
    1b50:	fc 01       	movw	r30, r24
    1b52:	61 50       	subi	r22, 0x01	; 1
    1b54:	70 40       	sbci	r23, 0x00	; 0
    1b56:	01 90       	ld	r0, Z+
    1b58:	01 10       	cpse	r0, r1
    1b5a:	d8 f7       	brcc	.-10     	; 0x1b52 <strnlen+0x2>
    1b5c:	80 95       	com	r24
    1b5e:	90 95       	com	r25
    1b60:	8e 0f       	add	r24, r30
    1b62:	9f 1f       	adc	r25, r31
    1b64:	08 95       	ret

00001b66 <fputc>:
    1b66:	0f 93       	push	r16
    1b68:	1f 93       	push	r17
    1b6a:	cf 93       	push	r28
    1b6c:	df 93       	push	r29
    1b6e:	fb 01       	movw	r30, r22
    1b70:	23 81       	ldd	r18, Z+3	; 0x03
    1b72:	21 fd       	sbrc	r18, 1
    1b74:	03 c0       	rjmp	.+6      	; 0x1b7c <fputc+0x16>
    1b76:	8f ef       	ldi	r24, 0xFF	; 255
    1b78:	9f ef       	ldi	r25, 0xFF	; 255
    1b7a:	2c c0       	rjmp	.+88     	; 0x1bd4 <fputc+0x6e>
    1b7c:	22 ff       	sbrs	r18, 2
    1b7e:	16 c0       	rjmp	.+44     	; 0x1bac <fputc+0x46>
    1b80:	46 81       	ldd	r20, Z+6	; 0x06
    1b82:	57 81       	ldd	r21, Z+7	; 0x07
    1b84:	24 81       	ldd	r18, Z+4	; 0x04
    1b86:	35 81       	ldd	r19, Z+5	; 0x05
    1b88:	42 17       	cp	r20, r18
    1b8a:	53 07       	cpc	r21, r19
    1b8c:	44 f4       	brge	.+16     	; 0x1b9e <fputc+0x38>
    1b8e:	a0 81       	ld	r26, Z
    1b90:	b1 81       	ldd	r27, Z+1	; 0x01
    1b92:	9d 01       	movw	r18, r26
    1b94:	2f 5f       	subi	r18, 0xFF	; 255
    1b96:	3f 4f       	sbci	r19, 0xFF	; 255
    1b98:	20 83       	st	Z, r18
    1b9a:	31 83       	std	Z+1, r19	; 0x01
    1b9c:	8c 93       	st	X, r24
    1b9e:	26 81       	ldd	r18, Z+6	; 0x06
    1ba0:	37 81       	ldd	r19, Z+7	; 0x07
    1ba2:	2f 5f       	subi	r18, 0xFF	; 255
    1ba4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ba6:	26 83       	std	Z+6, r18	; 0x06
    1ba8:	37 83       	std	Z+7, r19	; 0x07
    1baa:	14 c0       	rjmp	.+40     	; 0x1bd4 <fputc+0x6e>
    1bac:	8b 01       	movw	r16, r22
    1bae:	ec 01       	movw	r28, r24
    1bb0:	fb 01       	movw	r30, r22
    1bb2:	00 84       	ldd	r0, Z+8	; 0x08
    1bb4:	f1 85       	ldd	r31, Z+9	; 0x09
    1bb6:	e0 2d       	mov	r30, r0
    1bb8:	09 95       	icall
    1bba:	89 2b       	or	r24, r25
    1bbc:	e1 f6       	brne	.-72     	; 0x1b76 <fputc+0x10>
    1bbe:	d8 01       	movw	r26, r16
    1bc0:	16 96       	adiw	r26, 0x06	; 6
    1bc2:	8d 91       	ld	r24, X+
    1bc4:	9c 91       	ld	r25, X
    1bc6:	17 97       	sbiw	r26, 0x07	; 7
    1bc8:	01 96       	adiw	r24, 0x01	; 1
    1bca:	16 96       	adiw	r26, 0x06	; 6
    1bcc:	8d 93       	st	X+, r24
    1bce:	9c 93       	st	X, r25
    1bd0:	17 97       	sbiw	r26, 0x07	; 7
    1bd2:	ce 01       	movw	r24, r28
    1bd4:	df 91       	pop	r29
    1bd6:	cf 91       	pop	r28
    1bd8:	1f 91       	pop	r17
    1bda:	0f 91       	pop	r16
    1bdc:	08 95       	ret

00001bde <__ultoa_invert>:
    1bde:	fa 01       	movw	r30, r20
    1be0:	aa 27       	eor	r26, r26
    1be2:	28 30       	cpi	r18, 0x08	; 8
    1be4:	51 f1       	breq	.+84     	; 0x1c3a <__ultoa_invert+0x5c>
    1be6:	20 31       	cpi	r18, 0x10	; 16
    1be8:	81 f1       	breq	.+96     	; 0x1c4a <__ultoa_invert+0x6c>
    1bea:	e8 94       	clt
    1bec:	6f 93       	push	r22
    1bee:	6e 7f       	andi	r22, 0xFE	; 254
    1bf0:	6e 5f       	subi	r22, 0xFE	; 254
    1bf2:	7f 4f       	sbci	r23, 0xFF	; 255
    1bf4:	8f 4f       	sbci	r24, 0xFF	; 255
    1bf6:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf8:	af 4f       	sbci	r26, 0xFF	; 255
    1bfa:	b1 e0       	ldi	r27, 0x01	; 1
    1bfc:	3e d0       	rcall	.+124    	; 0x1c7a <__ultoa_invert+0x9c>
    1bfe:	b4 e0       	ldi	r27, 0x04	; 4
    1c00:	3c d0       	rcall	.+120    	; 0x1c7a <__ultoa_invert+0x9c>
    1c02:	67 0f       	add	r22, r23
    1c04:	78 1f       	adc	r23, r24
    1c06:	89 1f       	adc	r24, r25
    1c08:	9a 1f       	adc	r25, r26
    1c0a:	a1 1d       	adc	r26, r1
    1c0c:	68 0f       	add	r22, r24
    1c0e:	79 1f       	adc	r23, r25
    1c10:	8a 1f       	adc	r24, r26
    1c12:	91 1d       	adc	r25, r1
    1c14:	a1 1d       	adc	r26, r1
    1c16:	6a 0f       	add	r22, r26
    1c18:	71 1d       	adc	r23, r1
    1c1a:	81 1d       	adc	r24, r1
    1c1c:	91 1d       	adc	r25, r1
    1c1e:	a1 1d       	adc	r26, r1
    1c20:	20 d0       	rcall	.+64     	; 0x1c62 <__ultoa_invert+0x84>
    1c22:	09 f4       	brne	.+2      	; 0x1c26 <__ultoa_invert+0x48>
    1c24:	68 94       	set
    1c26:	3f 91       	pop	r19
    1c28:	2a e0       	ldi	r18, 0x0A	; 10
    1c2a:	26 9f       	mul	r18, r22
    1c2c:	11 24       	eor	r1, r1
    1c2e:	30 19       	sub	r19, r0
    1c30:	30 5d       	subi	r19, 0xD0	; 208
    1c32:	31 93       	st	Z+, r19
    1c34:	de f6       	brtc	.-74     	; 0x1bec <__ultoa_invert+0xe>
    1c36:	cf 01       	movw	r24, r30
    1c38:	08 95       	ret
    1c3a:	46 2f       	mov	r20, r22
    1c3c:	47 70       	andi	r20, 0x07	; 7
    1c3e:	40 5d       	subi	r20, 0xD0	; 208
    1c40:	41 93       	st	Z+, r20
    1c42:	b3 e0       	ldi	r27, 0x03	; 3
    1c44:	0f d0       	rcall	.+30     	; 0x1c64 <__ultoa_invert+0x86>
    1c46:	c9 f7       	brne	.-14     	; 0x1c3a <__ultoa_invert+0x5c>
    1c48:	f6 cf       	rjmp	.-20     	; 0x1c36 <__ultoa_invert+0x58>
    1c4a:	46 2f       	mov	r20, r22
    1c4c:	4f 70       	andi	r20, 0x0F	; 15
    1c4e:	40 5d       	subi	r20, 0xD0	; 208
    1c50:	4a 33       	cpi	r20, 0x3A	; 58
    1c52:	18 f0       	brcs	.+6      	; 0x1c5a <__ultoa_invert+0x7c>
    1c54:	49 5d       	subi	r20, 0xD9	; 217
    1c56:	31 fd       	sbrc	r19, 1
    1c58:	40 52       	subi	r20, 0x20	; 32
    1c5a:	41 93       	st	Z+, r20
    1c5c:	02 d0       	rcall	.+4      	; 0x1c62 <__ultoa_invert+0x84>
    1c5e:	a9 f7       	brne	.-22     	; 0x1c4a <__ultoa_invert+0x6c>
    1c60:	ea cf       	rjmp	.-44     	; 0x1c36 <__ultoa_invert+0x58>
    1c62:	b4 e0       	ldi	r27, 0x04	; 4
    1c64:	a6 95       	lsr	r26
    1c66:	97 95       	ror	r25
    1c68:	87 95       	ror	r24
    1c6a:	77 95       	ror	r23
    1c6c:	67 95       	ror	r22
    1c6e:	ba 95       	dec	r27
    1c70:	c9 f7       	brne	.-14     	; 0x1c64 <__ultoa_invert+0x86>
    1c72:	00 97       	sbiw	r24, 0x00	; 0
    1c74:	61 05       	cpc	r22, r1
    1c76:	71 05       	cpc	r23, r1
    1c78:	08 95       	ret
    1c7a:	9b 01       	movw	r18, r22
    1c7c:	ac 01       	movw	r20, r24
    1c7e:	0a 2e       	mov	r0, r26
    1c80:	06 94       	lsr	r0
    1c82:	57 95       	ror	r21
    1c84:	47 95       	ror	r20
    1c86:	37 95       	ror	r19
    1c88:	27 95       	ror	r18
    1c8a:	ba 95       	dec	r27
    1c8c:	c9 f7       	brne	.-14     	; 0x1c80 <__ultoa_invert+0xa2>
    1c8e:	62 0f       	add	r22, r18
    1c90:	73 1f       	adc	r23, r19
    1c92:	84 1f       	adc	r24, r20
    1c94:	95 1f       	adc	r25, r21
    1c96:	a0 1d       	adc	r26, r0
    1c98:	08 95       	ret

00001c9a <eeprom_read_word>:
    1c9a:	0e 94 56 0e 	call	0x1cac	; 0x1cac <eeprom_mapen>
    1c9e:	80 81       	ld	r24, Z
    1ca0:	91 81       	ldd	r25, Z+1	; 0x01
    1ca2:	08 95       	ret

00001ca4 <eeprom_read_byte>:
    1ca4:	03 d0       	rcall	.+6      	; 0x1cac <eeprom_mapen>
    1ca6:	80 81       	ld	r24, Z
    1ca8:	99 27       	eor	r25, r25
    1caa:	08 95       	ret

00001cac <eeprom_mapen>:
    1cac:	fc 01       	movw	r30, r24
    1cae:	e0 50       	subi	r30, 0x00	; 0
    1cb0:	fc 4e       	sbci	r31, 0xEC	; 236
    1cb2:	08 95       	ret

00001cb4 <_exit>:
    1cb4:	f8 94       	cli

00001cb6 <__stop_program>:
    1cb6:	ff cf       	rjmp	.-2      	; 0x1cb6 <__stop_program>
